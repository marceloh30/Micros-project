

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 10 18:49:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0088                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  0091                     	;# 
   491  0092                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0098                     	;# 
   495  0099                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  010F                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  000E                     	;# 
   522  000F                     	;# 
   523  0010                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0014                     	;# 
   528  0015                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  001D                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  0081                     	;# 
   542  0085                     	;# 
   543  0086                     	;# 
   544  0087                     	;# 
   545  0088                     	;# 
   546  0089                     	;# 
   547  008C                     	;# 
   548  008D                     	;# 
   549  008E                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0094                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009C                     	;# 
   557  009D                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  010C                     	;# 
   561  010D                     	;# 
   562  010E                     	;# 
   563  010F                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566                           
   567                           	psect	idataCOMMON
   568  07FC                     __pidataCOMMON:	
   569                           
   570                           ;initializer for _nroLote
   571  07FC  3401               	retlw	1
   572                           
   573                           	psect	stringtext
   574  0300                     __pstringtext:	
   575  0300                     stringtab:	
   576  0300                     __stringtab:	
   577                           
   578                           ;	String table - string pointers are 2 bytes each
   579  0300  1BFF               	btfsc	btemp+1,7
   580  0301  2B0A               	ljmp	stringcode
   581  0302  1383               	bcf	3,7
   582  0303  187F               	btfsc	btemp+1,0
   583  0304  1783               	bsf	3,7
   584  0305  0800               	movf	0,w
   585  0306  0A84               	incf	4,f
   586  0307  1903               	skipnz
   587  0308  0AFF               	incf	btemp+1,f
   588  0309  0008               	return
   589  030A                     stringcode:	
   590  030A  087F               	movf	btemp+1,w
   591  030B  397F               	andlw	127
   592  030C  008A               	movwf	10
   593  030D  0804               	movf	4,w
   594  030E  0A84               	incf	4,f
   595  030F  1903               	skipnz
   596  0310  0AFF               	incf	btemp+1,f
   597  0311  0082               	movwf	2
   598  0312                     __stringbase:	
   599  0312                     __end_of__stringtab:	
   600  0312                     _dpowers:	
   601  0312  3401               	retlw	1
   602  0313  3400               	retlw	0
   603  0314  340A               	retlw	10
   604  0315  3400               	retlw	0
   605  0316  3464               	retlw	100
   606  0317  3400               	retlw	0
   607  0318  34E8               	retlw	232
   608  0319  3403               	retlw	3
   609  031A  3410               	retlw	16
   610  031B  3427               	retlw	39
   611  031C                     __end_of_dpowers:	
   612  031C                     _BS:	
   613  031C  3400               	retlw	0
   614  031D  3410               	retlw	16
   615  031E  3420               	retlw	32
   616  031F  3430               	retlw	48
   617  0320  3440               	retlw	64
   618  0321  3450               	retlw	80
   619  0322  3460               	retlw	96
   620  0323  3470               	retlw	112
   621  0324  3480               	retlw	128
   622  0325  3490               	retlw	144
   623  0326                     __end_of_BS:	
   624  000E                     _TMR1	set	14
   625  000B                     _INTCONbits	set	11
   626  0003                     _STATUSbits	set	3
   627  0019                     _TXREG	set	25
   628  0008                     _PORTD	set	8
   629  0006                     _PORTB	set	6
   630  001E                     _ADRESH	set	30
   631  001A                     _RCREG	set	26
   632  0018                     _RCSTAbits	set	24
   633  0018                     _RCSTA	set	24
   634  000B                     _INTCON	set	11
   635  001F                     _ADCON0	set	31
   636  0010                     _T1CON	set	16
   637  0064                     _TXIF	set	100
   638  0065                     _RCIF	set	101
   639  0060                     _TMR1IF	set	96
   640  004A                     _RE2	set	74
   641  0049                     _RE1	set	73
   642  0048                     _RE0	set	72
   643  0066                     _ADIF	set	102
   644  00FA                     _GO_nDONE	set	250
   645  002B                     _RA3	set	43
   646  002D                     _RA5	set	45
   647  009E                     _ADRESL	set	158
   648  008C                     _PIE1bits	set	140
   649  0099                     _SPBRG	set	153
   650  0098                     _TXSTA	set	152
   651  0087                     _TRISC	set	135
   652  009F                     _ADCON1	set	159
   653  0088                     _TRISD	set	136
   654  0086                     _TRISB	set	134
   655  0089                     _TRISE	set	137
   656  0085                     _TRISA	set	133
   657  010C                     _EEDATA	set	268
   658  010D                     _EEADR	set	269
   659  018D                     _EECON2	set	397
   660  018C                     _EECON1	set	396
   661  018C                     _EECON1bits	set	396
   662  0326                     STR_6:	
   663  0326  344F               	retlw	79	;'O'
   664  0327  3463               	retlw	99	;'c'
   665  0328  3475               	retlw	117	;'u'
   666  0329  3472               	retlw	114	;'r'
   667  032A  3472               	retlw	114	;'r'
   668  032B  3469               	retlw	105	;'i'
   669  032C  346F               	retlw	111	;'o'
   670  032D  3420               	retlw	32	;' '
   671  032E  3475               	retlw	117	;'u'
   672  032F  346E               	retlw	110	;'n'
   673  0330  3420               	retlw	32	;' '
   674  0331  3465               	retlw	101	;'e'
   675  0332  3472               	retlw	114	;'r'
   676  0333  3472               	retlw	114	;'r'
   677  0334  346F               	retlw	111	;'o'
   678  0335  3472               	retlw	114	;'r'
   679  0336  3420               	retlw	32	;' '
   680  0337  3465               	retlw	101	;'e'
   681  0338  346E               	retlw	110	;'n'
   682  0339  3420               	retlw	32	;' '
   683  033A  346C               	retlw	108	;'l'
   684  033B  3461               	retlw	97	;'a'
   685  033C  3420               	retlw	32	;' '
   686  033D  3469               	retlw	105	;'i'
   687  033E  346E               	retlw	110	;'n'
   688  033F  3474               	retlw	116	;'t'
   689  0340  3465               	retlw	101	;'e'
   690  0341  3472               	retlw	114	;'r'
   691  0342  3470               	retlw	112	;'p'
   692  0343  3472               	retlw	114	;'r'
   693  0344  3465               	retlw	101	;'e'
   694  0345  3474               	retlw	116	;'t'
   695  0346  3461               	retlw	97	;'a'
   696  0347  3463               	retlw	99	;'c'
   697  0348  3469               	retlw	105	;'i'
   698  0349  346F               	retlw	111	;'o'
   699  034A  346E               	retlw	110	;'n'
   700  034B  342E               	retlw	46	;'.'
   701  034C  340A               	retlw	10
   702  034D  3400               	retlw	0
   703  034E                     STR_15:	
   704  034E  340A               	retlw	10
   705  034F  3443               	retlw	67	;'C'
   706  0350  3469               	retlw	105	;'i'
   707  0351  3465               	retlw	101	;'e'
   708  0352  3472               	retlw	114	;'r'
   709  0353  3472               	retlw	114	;'r'
   710  0354  3465               	retlw	101	;'e'
   711  0355  342C               	retlw	44	;','
   712  0356  3420               	retlw	32	;' '
   713  0357  344C               	retlw	76	;'L'
   714  0358  343A               	retlw	58	;':'
   715  0359  3425               	retlw	37	;'%'
   716  035A  3464               	retlw	100	;'d'
   717  035B  342C               	retlw	44	;','
   718  035C  344E               	retlw	78	;'N'
   719  035D  343A               	retlw	58	;':'
   720  035E  3425               	retlw	37	;'%'
   721  035F  3464               	retlw	100	;'d'
   722  0360  342C               	retlw	44	;','
   723  0361  3454               	retlw	84	;'T'
   724  0362  343A               	retlw	58	;':'
   725  0363  3425               	retlw	37	;'%'
   726  0364  3464               	retlw	100	;'d'
   727  0365  340A               	retlw	10
   728  0366  3400               	retlw	0
   729  0367                     STR_8:	
   730  0367  340A               	retlw	10
   731  0368  3450               	retlw	80	;'P'
   732  0369  3472               	retlw	114	;'r'
   733  036A  346F               	retlw	111	;'o'
   734  036B  3464               	retlw	100	;'d'
   735  036C  3475               	retlw	117	;'u'
   736  036D  3463               	retlw	99	;'c'
   737  036E  3474               	retlw	116	;'t'
   738  036F  346F               	retlw	111	;'o'
   739  0370  3420               	retlw	32	;' '
   740  0371  346E               	retlw	110	;'n'
   741  0372  346F               	retlw	111	;'o'
   742  0373  3420               	retlw	32	;' '
   743  0374  3465               	retlw	101	;'e'
   744  0375  346E               	retlw	110	;'n'
   745  0376  3463               	retlw	99	;'c'
   746  0377  346F               	retlw	111	;'o'
   747  0378  346E               	retlw	110	;'n'
   748  0379  3474               	retlw	116	;'t'
   749  037A  3472               	retlw	114	;'r'
   750  037B  3461               	retlw	97	;'a'
   751  037C  3464               	retlw	100	;'d'
   752  037D  346F               	retlw	111	;'o'
   753  037E  340A               	retlw	10
   754  037F  3400               	retlw	0
   755  0380                     STR_5:	
   756  0380  340A               	retlw	10
   757  0381  3443               	retlw	67	;'C'
   758  0382  3469               	retlw	105	;'i'
   759  0383  3465               	retlw	101	;'e'
   760  0384  3472               	retlw	114	;'r'
   761  0385  3472               	retlw	114	;'r'
   762  0386  3465               	retlw	101	;'e'
   763  0387  342C               	retlw	44	;','
   764  0388  344C               	retlw	76	;'L'
   765  0389  343A               	retlw	58	;':'
   766  038A  3425               	retlw	37	;'%'
   767  038B  3464               	retlw	100	;'d'
   768  038C  342C               	retlw	44	;','
   769  038D  344E               	retlw	78	;'N'
   770  038E  343A               	retlw	58	;':'
   771  038F  3425               	retlw	37	;'%'
   772  0390  3464               	retlw	100	;'d'
   773  0391  342C               	retlw	44	;','
   774  0392  3454               	retlw	84	;'T'
   775  0393  343A               	retlw	58	;':'
   776  0394  3425               	retlw	37	;'%'
   777  0395  3464               	retlw	100	;'d'
   778  0396  340A               	retlw	10
   779  0397  3400               	retlw	0
   780  0398                     STR_10:	
   781  0398  344E               	retlw	78	;'N'
   782  0399  346F               	retlw	111	;'o'
   783  039A  3420               	retlw	32	;' '
   784  039B  3465               	retlw	101	;'e'
   785  039C  3478               	retlw	120	;'x'
   786  039D  3469               	retlw	105	;'i'
   787  039E  3473               	retlw	115	;'s'
   788  039F  3474               	retlw	116	;'t'
   789  03A0  3465               	retlw	101	;'e'
   790  03A1  3420               	retlw	32	;' '
   791  03A2  3470               	retlw	112	;'p'
   792  03A3  3472               	retlw	114	;'r'
   793  03A4  346F               	retlw	111	;'o'
   794  03A5  3464               	retlw	100	;'d'
   795  03A6  3475               	retlw	117	;'u'
   796  03A7  3463               	retlw	99	;'c'
   797  03A8  3474               	retlw	116	;'t'
   798  03A9  346F               	retlw	111	;'o'
   799  03AA  3420               	retlw	32	;' '
   800  03AB  3430               	retlw	48	;'0'
   801  03AC  3430               	retlw	48	;'0'
   802  03AD  3400               	retlw	0
   803  03AE                     STR_9:	
   804  03AE  3454               	retlw	84	;'T'
   805  03AF  3450               	retlw	80	;'P'
   806  03B0  343A               	retlw	58	;':'
   807  03B1  3420               	retlw	32	;' '
   808  03B2  3425               	retlw	37	;'%'
   809  03B3  3464               	retlw	100	;'d'
   810  03B4  3420               	retlw	32	;' '
   811  03B5  3450               	retlw	80	;'P'
   812  03B6  343A               	retlw	58	;':'
   813  03B7  3420               	retlw	32	;' '
   814  03B8  3425               	retlw	37	;'%'
   815  03B9  3464               	retlw	100	;'d'
   816  03BA  342C               	retlw	44	;','
   817  03BB  3425               	retlw	37	;'%'
   818  03BC  3464               	retlw	100	;'d'
   819  03BD  3420               	retlw	32	;' '
   820  03BE  3445               	retlw	69	;'E'
   821  03BF  3475               	retlw	117	;'u'
   822  03C0  3472               	retlw	114	;'r'
   823  03C1  346F               	retlw	111	;'o'
   824  03C2  3473               	retlw	115	;'s'
   825  03C3  3400               	retlw	0
   826  03C4                     STR_12:	
   827  03C4  340A               	retlw	10
   828  03C5  3445               	retlw	69	;'E'
   829  03C6  3473               	retlw	115	;'s'
   830  03C7  3474               	retlw	116	;'t'
   831  03C8  3461               	retlw	97	;'a'
   832  03C9  3464               	retlw	100	;'d'
   833  03CA  346F               	retlw	111	;'o'
   834  03CB  343A               	retlw	58	;':'
   835  03CC  3420               	retlw	32	;' '
   836  03CD  3445               	retlw	69	;'E'
   837  03CE  346E               	retlw	110	;'n'
   838  03CF  3420               	retlw	32	;' '
   839  03D0  3465               	retlw	101	;'e'
   840  03D1  3473               	retlw	115	;'s'
   841  03D2  3470               	retlw	112	;'p'
   842  03D3  3465               	retlw	101	;'e'
   843  03D4  3472               	retlw	114	;'r'
   844  03D5  3461               	retlw	97	;'a'
   845  03D6  340A               	retlw	10
   846  03D7  3400               	retlw	0
   847  03D8                     STR_4:	
   848  03D8  3450               	retlw	80	;'P'
   849  03D9  3472               	retlw	114	;'r'
   850  03DA  346F               	retlw	111	;'o'
   851  03DB  3464               	retlw	100	;'d'
   852  03DC  3475               	retlw	117	;'u'
   853  03DD  3463               	retlw	99	;'c'
   854  03DE  3474               	retlw	116	;'t'
   855  03DF  346F               	retlw	111	;'o'
   856  03E0  3420               	retlw	32	;' '
   857  03E1  3469               	retlw	105	;'i'
   858  03E2  346E               	retlw	110	;'n'
   859  03E3  3467               	retlw	103	;'g'
   860  03E4  3472               	retlw	114	;'r'
   861  03E5  3465               	retlw	101	;'e'
   862  03E6  3473               	retlw	115	;'s'
   863  03E7  3461               	retlw	97	;'a'
   864  03E8  3464               	retlw	100	;'d'
   865  03E9  346F               	retlw	111	;'o'
   866  03EA  340A               	retlw	10
   867  03EB  3400               	retlw	0
   868  03EC                     STR_18:	
   869  03EC  344E               	retlw	78	;'N'
   870  03ED  346F               	retlw	111	;'o'
   871  03EE  3420               	retlw	32	;' '
   872  03EF  3468               	retlw	104	;'h'
   873  03F0  3461               	retlw	97	;'a'
   874  03F1  3479               	retlw	121	;'y'
   875  03F2  3420               	retlw	32	;' '
   876  03F3  3470               	retlw	112	;'p'
   877  03F4  3472               	retlw	114	;'r'
   878  03F5  346F               	retlw	111	;'o'
   879  03F6  3464               	retlw	100	;'d'
   880  03F7  3475               	retlw	117	;'u'
   881  03F8  3463               	retlw	99	;'c'
   882  03F9  3474               	retlw	116	;'t'
   883  03FA  346F               	retlw	111	;'o'
   884  03FB  3420               	retlw	32	;' '
   885  03FC  3430               	retlw	48	;'0'
   886  03FD  3430               	retlw	48	;'0'
   887  03FE  3400               	retlw	0
   888  03FF                     STR_2:	
   889  03FF  3450               	retlw	80	;'P'
   890  0400  3472               	retlw	114	;'r'
   891  0401  346F               	retlw	111	;'o'
   892  0402  3464               	retlw	100	;'d'
   893  0403  3475               	retlw	117	;'u'
   894  0404  3463               	retlw	99	;'c'
   895  0405  3474               	retlw	116	;'t'
   896  0406  346F               	retlw	111	;'o'
   897  0407  3420               	retlw	32	;' '
   898  0408  3463               	retlw	99	;'c'
   899  0409  3461               	retlw	97	;'a'
   900  040A  346E               	retlw	110	;'n'
   901  040B  3463               	retlw	99	;'c'
   902  040C  3465               	retlw	101	;'e'
   903  040D  346C               	retlw	108	;'l'
   904  040E  3461               	retlw	97	;'a'
   905  040F  3464               	retlw	100	;'d'
   906  0410  346F               	retlw	111	;'o'
   907  0411  3400               	retlw	0
   908  0412                     STR_11:	
   909  0412  340A               	retlw	10
   910  0413  3445               	retlw	69	;'E'
   911  0414  3473               	retlw	115	;'s'
   912  0415  3474               	retlw	116	;'t'
   913  0416  3461               	retlw	97	;'a'
   914  0417  3464               	retlw	100	;'d'
   915  0418  346F               	retlw	111	;'o'
   916  0419  343A               	retlw	58	;':'
   917  041A  3420               	retlw	32	;' '
   918  041B  3441               	retlw	65	;'A'
   919  041C  3463               	retlw	99	;'c'
   920  041D  3474               	retlw	116	;'t'
   921  041E  3469               	retlw	105	;'i'
   922  041F  3476               	retlw	118	;'v'
   923  0420  346F               	retlw	111	;'o'
   924  0421  340A               	retlw	10
   925  0422  3400               	retlw	0
   926  0423                     STR_1:	
   927  0423  340A               	retlw	10
   928  0424  344C               	retlw	76	;'L'
   929  0425  343A               	retlw	58	;':'
   930  0426  3425               	retlw	37	;'%'
   931  0427  3464               	retlw	100	;'d'
   932  0428  342C               	retlw	44	;','
   933  0429  344E               	retlw	78	;'N'
   934  042A  343A               	retlw	58	;':'
   935  042B  3425               	retlw	37	;'%'
   936  042C  3464               	retlw	100	;'d'
   937  042D  342C               	retlw	44	;','
   938  042E  3454               	retlw	84	;'T'
   939  042F  343A               	retlw	58	;':'
   940  0430  3425               	retlw	37	;'%'
   941  0431  3464               	retlw	100	;'d'
   942  0432  340A               	retlw	10
   943  0433  3400               	retlw	0
   944  0434                     STR_16:	
   945  0434  3456               	retlw	86	;'V'
   946  0435  343D               	retlw	61	;'='
   947  0436  3425               	retlw	37	;'%'
   948  0437  3464               	retlw	100	;'d'
   949  0438  342E               	retlw	46	;'.'
   950  0439  3425               	retlw	37	;'%'
   951  043A  3464               	retlw	100	;'d'
   952  043B  3456               	retlw	86	;'V'
   953  043C  340A               	retlw	10
   954  043D  3400               	retlw	0
   955  043E                     STR_17:	
   956  043E  340A               	retlw	10
   957  043F  3450               	retlw	80	;'P'
   958  0440  3425               	retlw	37	;'%'
   959  0441  3464               	retlw	100	;'d'
   960  0442  343D               	retlw	61	;'='
   961  0443  3425               	retlw	37	;'%'
   962  0444  3464               	retlw	100	;'d'
   963  0445  340A               	retlw	10
   964  0446  3400               	retlw	0
   965  0447                     STR_19:	
   966  0447  3428               	retlw	40	;'('
   967  0448  346E               	retlw	110	;'n'
   968  0449  3475               	retlw	117	;'u'
   969  044A  346C               	retlw	108	;'l'
   970  044B  346C               	retlw	108	;'l'
   971  044C  3429               	retlw	41	;')'
   972  044D  3400               	retlw	0
   973  044E                     STR_3:	
   974  044E  3445               	retlw	69	;'E'
   975  044F  343A               	retlw	58	;':'
   976  0450  3425               	retlw	37	;'%'
   977  0451  3473               	retlw	115	;'s'
   978  0452  3400               	retlw	0
   979  0326                     
   980                           ; #config settings
   981  0000                     
   982                           	psect	cinit
   983  0011                     start_initialization:	
   984  0011                     __initialization:	
   985                           
   986                           ; Initialize objects allocated to COMMON
   987  0011  120A  118A  27FC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   988  0016  00F8               	movwf	__pdataCOMMON& (0+127)
   989                           
   990                           ; Clear objects allocated to BANK3
   991  0017  1783               	bsf	3,7	;select IRP bank2
   992  0018  30D2               	movlw	low __pbssBANK3
   993  0019  0084               	movwf	4
   994  001A  30DA               	movlw	low (__pbssBANK3+8)
   995  001B  120A  118A  27F4  120A  118A  	fcall	clear_ram0
   996                           
   997                           ; Clear objects allocated to BANK1
   998  0020  1383               	bcf	3,7	;select IRP bank0
   999  0021  30CD               	movlw	low __pbssBANK1
  1000  0022  0084               	movwf	4
  1001  0023  30EA               	movlw	low (__pbssBANK1+29)
  1002  0024  120A  118A  27F4  120A  118A  	fcall	clear_ram0
  1003                           
  1004                           ; Clear objects allocated to BANK0
  1005  0029  01EE               	clrf	__pbssBANK0& (0+127)
  1006                           
  1007                           ; Clear objects allocated to COMMON
  1008  002A  01F0               	clrf	__pbssCOMMON& (0+127)
  1009  002B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1010  002C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1011  002D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1012  002E                     end_of_initialization:	
  1013                           ;End of C runtime variable initialization code
  1014                           
  1015  002E                     __end_of__initialization:	
  1016  002E  0183               	clrf	3
  1017  002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
  1018                           
  1019                           	psect	bssCOMMON
  1020  0070                     __pbssCOMMON:	
  1021  0070                     _cuenta:	
  1022  0070                     	ds	2
  1023  0072                     _modoDebug:	
  1024  0072                     	ds	1
  1025  0073                     _serial:	
  1026  0073                     	ds	1
  1027                           
  1028                           	psect	dataCOMMON
  1029  0078                     __pdataCOMMON:	
  1030  0078                     _nroLote:	
  1031  0078                     	ds	1
  1032                           
  1033                           	psect	bssBANK0
  1034  006E                     __pbssBANK0:	
  1035  006E                     _ventasLote:	
  1036  006E                     	ds	1
  1037                           
  1038                           	psect	bssBANK1
  1039  00CD                     __pbssBANK1:	
  1040  00CD                     _prodIngresados:	
  1041  00CD                     	ds	13
  1042  00DA                     _montosLote:	
  1043  00DA                     	ds	2
  1044  00DC                     _numProd:	
  1045  00DC                     	ds	2
  1046  00DE                     _productoIngresado:	
  1047  00DE                     	ds	2
  1048  00E0                     _codigoEntrada:	
  1049  00E0                     	ds	10
  1050                           
  1051                           	psect	bssBANK3
  1052  01D2                     __pbssBANK3:	
  1053  01D2                     _huboInt:	
  1054  01D2                     	ds	2
  1055  01D4                     _auxCuenta:	
  1056  01D4                     	ds	2
  1057  01D6                     _pedidoVoltaje:	
  1058  01D6                     	ds	1
  1059  01D7                     _cierreLotePedido:	
  1060  01D7                     	ds	1
  1061  01D8                     _adresult:	
  1062  01D8                     	ds	2
  1063                           
  1064                           	psect	clrtext
  1065  07F4                     clear_ram0:	
  1066                           ;	Called with FSR containing the base address, and
  1067                           ;	W with the last address+1
  1068                           
  1069  07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1070  07F5                     clrloop0:	
  1071  07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1072  07F6  0A84               	incf	4,f	;increment pointer
  1073  07F7  0604               	xorwf	4,w	;XOR with final address
  1074  07F8  1903               	btfsc	3,2	;have we reached the end yet?
  1075  07F9  3400               	retlw	0	;all done for this memory range, return
  1076  07FA  0604               	xorwf	4,w	;XOR again to restore value
  1077  07FB  2FF5               	goto	clrloop0	;do the next byte
  1078                           
  1079                           	psect	cstackBANK3
  1080  0190                     __pcstackBANK3:	
  1081  0190                     accionesPuertoSerial@mensaje:	
  1082                           
  1083                           ; 12 bytes @ 0x0
  1084  0190                     	ds	12
  1085  019C                     main@strLote:	
  1086                           
  1087                           ; 32 bytes @ 0xC
  1088  019C                     	ds	32
  1089  01BC                     main@bufferMsj:	
  1090                           
  1091                           ; 16 bytes @ 0x2C
  1092  01BC                     	ds	16
  1093  01CC                     _main$1094:	
  1094                           
  1095                           ; 2 bytes @ 0x3C
  1096  01CC                     	ds	2
  1097  01CE                     _main$1095:	
  1098                           
  1099                           ; 2 bytes @ 0x3E
  1100  01CE                     	ds	2
  1101  01D0                     main@i:	
  1102                           
  1103                           ; 1 bytes @ 0x40
  1104  01D0                     	ds	1
  1105  01D1                     main@i_304:	
  1106                           
  1107                           ; 1 bytes @ 0x41
  1108  01D1                     	ds	1
  1109                           
  1110                           	psect	cstackBANK1
  1111  00A0                     __pcstackBANK1:	
  1112  00A0                     ??_lecturaConsulta:	
  1113  00A0                     accionesAceptar@strLote:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116                           
  1117                           ; 32 bytes @ 0x0
  1118  00A0                     	ds	4
  1119  00A4                     lecturaConsulta@strLote:	
  1120                           
  1121                           ; 32 bytes @ 0x4
  1122  00A4                     	ds	28
  1123  00C0                     accionesAceptar@i:	
  1124                           
  1125                           ; 2 bytes @ 0x20
  1126  00C0                     	ds	4
  1127  00C4                     lecturaConsulta@articulo:	
  1128                           
  1129                           ; 2 bytes @ 0x24
  1130  00C4                     	ds	2
  1131  00C6                     ??_accionesPuertoSerial:	
  1132                           
  1133                           ; 1 bytes @ 0x26
  1134  00C6                     	ds	3
  1135  00C9                     ??_main:	
  1136                           
  1137                           ; 1 bytes @ 0x29
  1138  00C9                     	ds	4
  1139                           
  1140                           	psect	cstackCOMMON
  1141  0074                     __pcstackCOMMON:	
  1142  0074                     ?_bailenLeds:	
  1143  0074                     ?_lecturaComando:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0074                     ?_lecturaEtiqueta:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0074                     ?_eeprom_read:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0074                     ?_agregarModificarPrecio:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0074                     ?_accionesAceptar:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0074                     ?_accionesDeshacer:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0074                     ?_accionesPuertoSerial:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0074                     ?_escrituraDeCierre:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0074                     ?_verificacionEntrada:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0074                     ?_cierreDeLote:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0074                     ?_lecturaMas:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0074                     ?_lecturaMenos:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0074                     ?_lecturaConsulta:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0074                     ?_main:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0074                     ?_int_usart:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0074                     ??_int_usart:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191                           
  1192                           ; 1 bytes @ 0x0
  1193  0074                     	ds	4
  1194                           
  1195                           	psect	cstackBANK0
  1196  0020                     __pcstackBANK0:	
  1197  0020                     ?_envioTX:	
  1198  0020                     ??_bailenLeds:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0020                     ?_eeprom_write:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0020                     ??_eeprom_read:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0020                     ??_verificacionEntrada:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0020                     ?___bmul:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0020                     ?___wmul:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0020                     ?___awdiv:	
  1217                           ; 2 bytes @ 0x0
  1218                           
  1219  0020                     ?___awmod:	
  1220                           ; 2 bytes @ 0x0
  1221                           
  1222  0020                     eeprom_write@value:	
  1223                           ; 2 bytes @ 0x0
  1224                           
  1225  0020                     ___bmul@multiplicand:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0020                     envioTX@mensaje:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0020                     ___wmul@multiplier:	
  1232                           ; 2 bytes @ 0x0
  1233                           
  1234  0020                     ___awdiv@divisor:	
  1235                           ; 2 bytes @ 0x0
  1236                           
  1237  0020                     ___awmod@divisor:	
  1238                           ; 2 bytes @ 0x0
  1239                           
  1240                           
  1241                           ; 2 bytes @ 0x0
  1242  0020                     	ds	1
  1243  0021                     ??_eeprom_write:	
  1244  0021                     ??___bmul:	
  1245                           ; 1 bytes @ 0x1
  1246                           
  1247  0021                     verificacionEntrada@ret:	
  1248                           ; 1 bytes @ 0x1
  1249                           
  1250  0021                     eeprom_read@addr:	
  1251                           ; 1 bytes @ 0x1
  1252                           
  1253                           
  1254                           ; 1 bytes @ 0x1
  1255  0021                     	ds	1
  1256  0022                     ??_envioTX:	
  1257  0022                     verificacionEntrada@i:	
  1258                           ; 1 bytes @ 0x2
  1259                           
  1260  0022                     eeprom_write@addr:	
  1261                           ; 1 bytes @ 0x2
  1262                           
  1263  0022                     ___bmul@product:	
  1264                           ; 1 bytes @ 0x2
  1265                           
  1266  0022                     ___wmul@multiplicand:	
  1267                           ; 1 bytes @ 0x2
  1268                           
  1269  0022                     ___awdiv@dividend:	
  1270                           ; 2 bytes @ 0x2
  1271                           
  1272  0022                     ___awmod@dividend:	
  1273                           ; 2 bytes @ 0x2
  1274                           
  1275                           
  1276                           ; 2 bytes @ 0x2
  1277  0022                     	ds	1
  1278  0023                     ??_escrituraDeCierre:	
  1279  0023                     ___bmul@multiplier:	
  1280                           ; 1 bytes @ 0x3
  1281                           
  1282  0023                     bailenLeds@i:	
  1283                           ; 1 bytes @ 0x3
  1284                           
  1285                           
  1286                           ; 2 bytes @ 0x3
  1287  0023                     	ds	1
  1288  0024                     ??___wmul:	
  1289  0024                     ??___awdiv:	
  1290                           ; 1 bytes @ 0x4
  1291                           
  1292  0024                     ??___awmod:	
  1293                           ; 1 bytes @ 0x4
  1294                           
  1295  0024                     escrituraDeCierre@lower_8bits:	
  1296                           ; 1 bytes @ 0x4
  1297                           
  1298  0024                     ___wmul@product:	
  1299                           ; 1 bytes @ 0x4
  1300                           
  1301                           
  1302                           ; 2 bytes @ 0x4
  1303  0024                     	ds	1
  1304  0025                     escrituraDeCierre@upper_8bits:	
  1305  0025                     ___awdiv@counter:	
  1306                           ; 1 bytes @ 0x5
  1307                           
  1308  0025                     ___awmod@counter:	
  1309                           ; 1 bytes @ 0x5
  1310                           
  1311  0025                     envioTX@i:	
  1312                           ; 1 bytes @ 0x5
  1313                           
  1314                           
  1315                           ; 2 bytes @ 0x5
  1316  0025                     	ds	1
  1317  0026                     ?_pow:	
  1318  0026                     ?___lwdiv:	
  1319                           ; 2 bytes @ 0x6
  1320                           
  1321  0026                     ___awdiv@sign:	
  1322                           ; 2 bytes @ 0x6
  1323                           
  1324  0026                     ___awmod@sign:	
  1325                           ; 1 bytes @ 0x6
  1326                           
  1327  0026                     pow@numero:	
  1328                           ; 1 bytes @ 0x6
  1329                           
  1330  0026                     ___lwdiv@divisor:	
  1331                           ; 2 bytes @ 0x6
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x6
  1335  0026                     	ds	1
  1336  0027                     envioTX@transmitir:	
  1337  0027                     ___awdiv@quotient:	
  1338                           ; 1 bytes @ 0x7
  1339                           
  1340                           
  1341                           ; 2 bytes @ 0x7
  1342  0027                     	ds	1
  1343  0028                     ??_lecturaMenos:	
  1344  0028                     pow@potencia:	
  1345                           ; 1 bytes @ 0x8
  1346                           
  1347  0028                     ___lwdiv@dividend:	
  1348                           ; 2 bytes @ 0x8
  1349                           
  1350                           
  1351                           ; 2 bytes @ 0x8
  1352  0028                     	ds	2
  1353  002A                     ??_pow:	
  1354  002A                     ??___lwdiv:	
  1355                           ; 1 bytes @ 0xA
  1356                           
  1357  002A                     pow@i:	
  1358                           ; 1 bytes @ 0xA
  1359                           
  1360                           
  1361                           ; 2 bytes @ 0xA
  1362  002A                     	ds	1
  1363  002B                     ___lwdiv@counter:	
  1364                           
  1365                           ; 1 bytes @ 0xB
  1366  002B                     	ds	1
  1367  002C                     pow@resultado:	
  1368  002C                     ___lwdiv@quotient:	
  1369                           ; 2 bytes @ 0xC
  1370                           
  1371                           
  1372                           ; 2 bytes @ 0xC
  1373  002C                     	ds	2
  1374  002E                     ?_eliminarProd:	
  1375  002E                     ?_verificarProd:	
  1376                           ; 1 bytes @ 0xE
  1377                           
  1378  002E                     ?_ingresoProd:	
  1379                           ; 1 bytes @ 0xE
  1380                           
  1381  002E                     ?___lwmod:	
  1382                           ; 1 bytes @ 0xE
  1383                           
  1384  002E                     ingresoProd@tp:	
  1385                           ; 2 bytes @ 0xE
  1386                           
  1387  002E                     verificarProd@tp:	
  1388                           ; 2 bytes @ 0xE
  1389                           
  1390  002E                     eliminarProd@tp:	
  1391                           ; 2 bytes @ 0xE
  1392                           
  1393  002E                     ___lwmod@divisor:	
  1394                           ; 2 bytes @ 0xE
  1395                           
  1396                           
  1397                           ; 2 bytes @ 0xE
  1398  002E                     	ds	2
  1399  0030                     ??_eliminarProd:	
  1400  0030                     ??_verificarProd:	
  1401                           ; 1 bytes @ 0x10
  1402                           
  1403  0030                     ??_ingresoProd:	
  1404                           ; 1 bytes @ 0x10
  1405                           
  1406  0030                     ___lwmod@dividend:	
  1407                           ; 1 bytes @ 0x10
  1408                           
  1409                           
  1410                           ; 2 bytes @ 0x10
  1411  0030                     	ds	2
  1412  0032                     ??___lwmod:	
  1413                           
  1414                           ; 1 bytes @ 0x12
  1415  0032                     	ds	1
  1416  0033                     verificarProd@ret:	
  1417  0033                     ___lwmod@counter:	
  1418                           ; 1 bytes @ 0x13
  1419                           
  1420  0033                     ingresoProd@i:	
  1421                           ; 1 bytes @ 0x13
  1422                           
  1423  0033                     eliminarProd@i:	
  1424                           ; 2 bytes @ 0x13
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x13
  1428  0033                     	ds	1
  1429  0034                     ?_mostrarDigitos:	
  1430  0034                     ?_sprintf:	
  1431                           ; 1 bytes @ 0x14
  1432                           
  1433  0034                     verificarProd@i:	
  1434                           ; 2 bytes @ 0x14
  1435                           
  1436  0034                     mostrarDigitos@num:	
  1437                           ; 2 bytes @ 0x14
  1438                           
  1439  0034                     sprintf@sp:	
  1440                           ; 2 bytes @ 0x14
  1441                           
  1442                           
  1443                           ; 2 bytes @ 0x14
  1444  0034                     	ds	2
  1445  0036                     ??_mostrarDigitos:	
  1446  0036                     ?_EEPROM_search:	
  1447                           ; 1 bytes @ 0x16
  1448                           
  1449  0036                     sprintf@f:	
  1450                           ; 2 bytes @ 0x16
  1451                           
  1452  0036                     _mostrarDigitos$1096:	
  1453                           ; 2 bytes @ 0x16
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x16
  1457  0036                     	ds	2
  1458  0038                     ??_accionesDeshacer:	
  1459  0038                     ??_EEPROM_search:	
  1460                           ; 1 bytes @ 0x18
  1461                           
  1462                           
  1463                           ; 1 bytes @ 0x18
  1464  0038                     	ds	4
  1465  003C                     EEPROM_search@precio:	
  1466                           
  1467                           ; 2 bytes @ 0x1C
  1468  003C                     	ds	2
  1469  003E                     ??_sprintf:	
  1470  003E                     EEPROM_search@tp:	
  1471                           ; 1 bytes @ 0x1E
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x1E
  1475  003E                     	ds	1
  1476  003F                     ??_lecturaEtiqueta:	
  1477                           
  1478                           ; 1 bytes @ 0x1F
  1479  003F                     	ds	3
  1480  0042                     sprintf@flag:	
  1481  0042                     lecturaEtiqueta@i:	
  1482                           ; 1 bytes @ 0x22
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x22
  1486  0042                     	ds	1
  1487  0043                     sprintf@prec:	
  1488                           
  1489                           ; 1 bytes @ 0x23
  1490  0043                     	ds	1
  1491  0044                     lecturaEtiqueta@tp:	
  1492  0044                     sprintf@ap:	
  1493                           ; 1 bytes @ 0x24
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x24
  1497  0044                     	ds	1
  1498  0045                     lecturaEtiqueta@Aux:	
  1499  0045                     sprintf@cp:	
  1500                           ; 2 bytes @ 0x25
  1501                           
  1502                           
  1503                           ; 2 bytes @ 0x25
  1504  0045                     	ds	2
  1505  0047                     sprintf@val:	
  1506                           
  1507                           ; 2 bytes @ 0x27
  1508  0047                     	ds	2
  1509  0049                     sprintf@c:	
  1510                           
  1511                           ; 1 bytes @ 0x29
  1512  0049                     	ds	1
  1513  004A                     ??_agregarModificarPrecio:	
  1514  004A                     ??_accionesAceptar:	
  1515                           ; 1 bytes @ 0x2A
  1516                           
  1517  004A                     ??_cierreDeLote:	
  1518                           ; 1 bytes @ 0x2A
  1519                           
  1520  004A                     ?_consultaPrecio:	
  1521                           ; 1 bytes @ 0x2A
  1522                           
  1523  004A                     consultaPrecio@articulo:	
  1524                           ; 1 bytes @ 0x2A
  1525                           
  1526                           
  1527                           ; 2 bytes @ 0x2A
  1528  004A                     	ds	2
  1529  004C                     ??_consultaPrecio:	
  1530                           
  1531                           ; 1 bytes @ 0x2C
  1532  004C                     	ds	2
  1533  004E                     cierreDeLote@strLote:	
  1534                           
  1535                           ; 32 bytes @ 0x2E
  1536  004E                     	ds	2
  1537  0050                     consultaPrecio@mensaje:	
  1538                           
  1539                           ; 26 bytes @ 0x30
  1540  0050                     	ds	4
  1541  0054                     agregarModificarPrecio@mensaje:	
  1542                           
  1543                           ; 10 bytes @ 0x34
  1544  0054                     	ds	10
  1545  005E                     agregarModificarPrecio@lower_8bits:	
  1546                           
  1547                           ; 1 bytes @ 0x3E
  1548  005E                     	ds	1
  1549  005F                     agregarModificarPrecio@upper_8bits:	
  1550                           
  1551                           ; 1 bytes @ 0x3F
  1552  005F                     	ds	1
  1553  0060                     agregarModificarPrecio@precio:	
  1554                           
  1555                           ; 2 bytes @ 0x40
  1556  0060                     	ds	2
  1557  0062                     agregarModificarPrecio@tp:	
  1558                           
  1559                           ; 1 bytes @ 0x42
  1560  0062                     	ds	8
  1561  006A                     consultaPrecio@precio:	
  1562                           
  1563                           ; 2 bytes @ 0x4A
  1564  006A                     	ds	4
  1565  006E                     ??_lecturaComando:	
  1566  006E                     ??_lecturaMas:	
  1567                           ; 1 bytes @ 0x4E
  1568                           
  1569                           
  1570                           	psect	maintext
  1571  0032                     __pmaintext:	
  1572                           ; 1 bytes @ 0x4E
  1573 ;;
  1574 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1575 ;;
  1576 ;; *************** function _main *****************
  1577 ;; Defined at:
  1578 ;;		line 8 in file "main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  i               1   64[BANK3 ] unsigned char 
  1583 ;;  bufferMsj      16   44[BANK3 ] unsigned char [16]
  1584 ;;  i               1   65[BANK3 ] unsigned char 
  1585 ;;  strLote        32   12[BANK3 ] unsigned char [32]
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : B00/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         0       0       0      54       0
  1597 ;;      Temps:          0       0       4       0       0
  1598 ;;      Totals:         0       0       4      54       0
  1599 ;;Total ram usage:       58 bytes
  1600 ;; Hardware stack levels required when called:    7
  1601 ;; This function calls:
  1602 ;;		___lwdiv
  1603 ;;		___lwmod
  1604 ;;		___wmul
  1605 ;;		_accionesAceptar
  1606 ;;		_accionesDeshacer
  1607 ;;		_accionesPuertoSerial
  1608 ;;		_eeprom_read
  1609 ;;		_envioTX
  1610 ;;		_escrituraDeCierre
  1611 ;;		_mostrarDigitos
  1612 ;;		_sprintf
  1613 ;; This function is called by:
  1614 ;;		Startup code after reset
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _main
  1620  0032                     _main:	
  1621  0032                     l3328:	
  1622                           ;incstack = 0
  1623                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1624                           
  1625                           
  1626                           ;main.c: 11:     if(eeprom_read(255) != 0xFF){
  1627  0032  30FF               	movlw	255
  1628  0033  120A  158A  208F  120A  118A  	fcall	_eeprom_read
  1629  0038  3AFF               	xorlw	255
  1630  0039  1903               	skipnz
  1631  003A  283C               	goto	u3691
  1632  003B  283D               	goto	u3690
  1633  003C                     u3691:	
  1634  003C  2872               	goto	l3336
  1635  003D                     u3690:	
  1636  003D                     l3330:	
  1637                           
  1638                           ;main.c: 12:         montosLote = (eeprom_read(252) << 8) | (eeprom_read(253));
  1639  003D  30FD               	movlw	253
  1640  003E  120A  158A  208F  120A  118A  	fcall	_eeprom_read
  1641  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1643  0045  00C9               	movwf	??_main^(0+128)
  1644  0046  01CA               	clrf	(??_main^(0+128)+1)
  1645  0047  30FC               	movlw	252
  1646  0048  120A  158A  208F  120A  118A  	fcall	_eeprom_read
  1647  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1648  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1649  004F  00CB               	movwf	(??_main+2)^(0+128)
  1650  0050  01CC               	clrf	((??_main+2)^(0+128)+1)
  1651  0051  084B               	movf	(??_main+2)^(0+128),w
  1652  0052  00CC               	movwf	((??_main+2)^(0+128)+1)
  1653  0053  01CB               	clrf	(??_main+2)^(0+128)
  1654  0054  0849               	movf	??_main^(0+128),w
  1655  0055  044B               	iorwf	(??_main+2)^(0+128),w
  1656  0056  00DA               	movwf	_montosLote^(0+128)
  1657  0057  084A               	movf	(??_main+1)^(0+128),w
  1658  0058  044C               	iorwf	(??_main+3)^(0+128),w
  1659  0059  00DB               	movwf	(_montosLote+1)^(0+128)
  1660  005A                     l3332:	
  1661                           
  1662                           ;main.c: 13:         ventasLote = eeprom_read(254);
  1663  005A  30FE               	movlw	254
  1664  005B  120A  158A  208F  120A  118A  	fcall	_eeprom_read
  1665  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1666  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1667  0062  00C9               	movwf	??_main^(0+128)
  1668  0063  0849               	movf	??_main^(0+128),w
  1669  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0066  00EE               	movwf	_ventasLote
  1672  0067                     l3334:	
  1673                           
  1674                           ;main.c: 14:         nroLote = eeprom_read(255);
  1675  0067  30FF               	movlw	255
  1676  0068  120A  158A  208F  120A  118A  	fcall	_eeprom_read
  1677  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1678  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1679  006F  00C9               	movwf	??_main^(0+128)
  1680  0070  0849               	movf	??_main^(0+128),w
  1681  0071  00F8               	movwf	_nroLote
  1682  0072                     l3336:	
  1683                           
  1684                           ;main.c: 18:     TRISA = 0x01;
  1685  0072  3001               	movlw	1
  1686  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1688  0075  0085               	movwf	5	;volatile
  1689  0076                     l3338:	
  1690                           
  1691                           ;main.c: 19:     TRISE = 0x07;
  1692  0076  3007               	movlw	7
  1693  0077  0089               	movwf	9	;volatile
  1694  0078                     l3340:	
  1695                           
  1696                           ;main.c: 20:     TRISB = 0x00;
  1697  0078  0186               	clrf	6	;volatile
  1698  0079                     l3342:	
  1699                           
  1700                           ;main.c: 21:     TRISD = 0x00;
  1701  0079  0188               	clrf	8	;volatile
  1702  007A                     l3344:	
  1703                           
  1704                           ;main.c: 22:     T1CON = 0b00010001;
  1705  007A  3011               	movlw	17
  1706  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1707  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1708  007D  0090               	movwf	16	;volatile
  1709  007E                     l3346:	
  1710                           
  1711                           ;main.c: 23:     TMR1 = 15536;
  1712  007E  303C               	movlw	60
  1713  007F  008F               	movwf	15	;volatile
  1714  0080  30B0               	movlw	176
  1715  0081  008E               	movwf	14	;volatile
  1716  0082                     l3348:	
  1717                           
  1718                           ;main.c: 25:     ADCON0 = 0b01000001;
  1719  0082  3041               	movlw	65
  1720  0083  009F               	movwf	31	;volatile
  1721  0084                     l3350:	
  1722                           
  1723                           ;main.c: 26:     ADCON1 = 0b10001110;
  1724  0084  308E               	movlw	142
  1725  0085  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0086  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0087  009F               	movwf	31	;volatile
  1728  0088                     l3352:	
  1729                           
  1730                           ;main.c: 27:     INTCON = 0b11000000;
  1731  0088  30C0               	movlw	192
  1732  0089  008B               	movwf	11	;volatile
  1733  008A                     l3354:	
  1734                           
  1735                           ;main.c: 30:     TRISC = 0b10000000;
  1736  008A  3080               	movlw	128
  1737  008B  0087               	movwf	7	;volatile
  1738  008C                     l3356:	
  1739                           
  1740                           ;main.c: 31:     TXSTA = 0b00100110;
  1741  008C  3026               	movlw	38
  1742  008D  0098               	movwf	24	;volatile
  1743  008E                     l3358:	
  1744                           
  1745                           ;main.c: 32:     RCSTA = 0b10010000;
  1746  008E  3090               	movlw	144
  1747  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0091  0098               	movwf	24	;volatile
  1750  0092                     l3360:	
  1751                           
  1752                           ;main.c: 33:     SPBRG = 25;
  1753  0092  3019               	movlw	25
  1754  0093  1683               	bsf	3,5	;RP0=1, select bank1
  1755  0094  1303               	bcf	3,6	;RP1=0, select bank1
  1756  0095  0099               	movwf	25	;volatile
  1757  0096                     l3362:	
  1758                           
  1759                           ;main.c: 36:     ADIF = 0;
  1760  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0098  130C               	bcf	12,6	;volatile
  1763  0099                     l3364:	
  1764                           
  1765                           ;main.c: 37:     PIE1bits.ADIE = 1;
  1766  0099  1683               	bsf	3,5	;RP0=1, select bank1
  1767  009A  1303               	bcf	3,6	;RP1=0, select bank1
  1768  009B  170C               	bsf	12,6	;volatile
  1769  009C                     l3366:	
  1770                           
  1771                           ;main.c: 38:     PIE1bits.RCIE = 1;
  1772  009C  168C               	bsf	12,5	;volatile
  1773  009D                     l3368:	
  1774                           
  1775                           ;main.c: 39:     PIE1bits.TMR1IE = 0;
  1776  009D  100C               	bcf	12,0	;volatile
  1777  009E                     l3370:	
  1778                           
  1779                           ;main.c: 40:     cuenta = 0;
  1780  009E  01F0               	clrf	_cuenta
  1781  009F  01F1               	clrf	_cuenta+1
  1782  00A0                     l3372:	
  1783                           
  1784                           ;main.c: 41:     auxCuenta = 0;
  1785  00A0  1683               	bsf	3,5	;RP0=1, select bank3
  1786  00A1  1703               	bsf	3,6	;RP1=1, select bank3
  1787  00A2  01D4               	clrf	_auxCuenta^(0+384)
  1788  00A3  01D5               	clrf	(_auxCuenta+1)^(0+384)
  1789  00A4                     l3374:	
  1790                           
  1791                           ;main.c: 42:     mostrarDigitos(cuenta);
  1792  00A4  0871               	movf	_cuenta+1,w
  1793  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1794  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1795  00A7  00B5               	movwf	mostrarDigitos@num+1
  1796  00A8  0870               	movf	_cuenta,w
  1797  00A9  00B4               	movwf	mostrarDigitos@num
  1798  00AA  120A  118A  2785  120A  118A  	fcall	_mostrarDigitos
  1799  00AF                     l3376:	
  1800                           
  1801                           ;main.c: 48:         if(RE0) {
  1802  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1803  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1804  00B1  1C09               	btfss	9,0	;volatile
  1805  00B2  28B4               	goto	u3701
  1806  00B3  28B5               	goto	u3700
  1807  00B4                     u3701:	
  1808  00B4  28BF               	goto	l299
  1809  00B5                     u3700:	
  1810  00B5                     l300:	
  1811  00B5  1809               	btfsc	9,0	;volatile
  1812  00B6  28B8               	goto	u3711
  1813  00B7  28B9               	goto	u3710
  1814  00B8                     u3711:	
  1815  00B8  28B5               	goto	l300
  1816  00B9                     u3710:	
  1817  00B9                     l3380:	
  1818                           
  1819                           ;main.c: 50:             accionesAceptar();
  1820  00B9  120A  158A  26B2  120A  118A  	fcall	_accionesAceptar
  1821                           
  1822                           ;main.c: 51:         }
  1823  00BE  28AF               	goto	l3376
  1824  00BF                     l299:	
  1825                           ;main.c: 52:         else if(RE1) {
  1826                           
  1827  00BF  1C89               	btfss	9,1	;volatile
  1828  00C0  28C2               	goto	u3721
  1829  00C1  28C3               	goto	u3720
  1830  00C2                     u3721:	
  1831  00C2  28CD               	goto	l304
  1832  00C3                     u3720:	
  1833  00C3                     l305:	
  1834  00C3  1889               	btfsc	9,1	;volatile
  1835  00C4  28C6               	goto	u3731
  1836  00C5  28C7               	goto	u3730
  1837  00C6                     u3731:	
  1838  00C6  28C3               	goto	l305
  1839  00C7                     u3730:	
  1840  00C7                     l3384:	
  1841                           
  1842                           ;main.c: 54:             accionesDeshacer();
  1843  00C7  120A  158A  2245  120A  118A  	fcall	_accionesDeshacer
  1844                           
  1845                           ;main.c: 55:         }
  1846  00CC  28AF               	goto	l3376
  1847  00CD                     l304:	
  1848                           ;main.c: 56:         else if(RE2) {
  1849                           
  1850  00CD  1D09               	btfss	9,2	;volatile
  1851  00CE  28D0               	goto	u3741
  1852  00CF  28D1               	goto	u3740
  1853  00D0                     u3741:	
  1854  00D0  293F               	goto	l3406
  1855  00D1                     u3740:	
  1856  00D1                     l310:	
  1857  00D1  1909               	btfsc	9,2	;volatile
  1858  00D2  28D4               	goto	u3751
  1859  00D3  28D5               	goto	u3750
  1860  00D4                     u3751:	
  1861  00D4  28D1               	goto	l310
  1862  00D5                     u3750:	
  1863  00D5                     l3388:	
  1864                           
  1865                           ;main.c: 58:             if (cuenta == 0){
  1866  00D5  0870               	movf	_cuenta,w
  1867  00D6  0471               	iorwf	_cuenta+1,w
  1868  00D7  1D03               	btfss	3,2
  1869  00D8  28DA               	goto	u3761
  1870  00D9  28DB               	goto	u3760
  1871  00DA                     u3761:	
  1872  00DA  28AF               	goto	l3376
  1873  00DB                     u3760:	
  1874  00DB                     l3390:	
  1875                           
  1876                           ;main.c: 59:                 cierreLotePedido = 1;
  1877  00DB  1683               	bsf	3,5	;RP0=1, select bank3
  1878  00DC  1703               	bsf	3,6	;RP1=1, select bank3
  1879  00DD  01D7               	clrf	_cierreLotePedido^(0+384)
  1880  00DE  0AD7               	incf	_cierreLotePedido^(0+384),f
  1881  00DF                     l3392:	
  1882                           
  1883                           ;main.c: 60:                 char strLote[32];;main.c: 61:                 sprintf(strLo
      +                          te,"\nCierre, L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  1884  00DF  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1885  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1886  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1887  00E2  00B4               	movwf	sprintf@sp
  1888  00E3  3001               	movlw	1
  1889  00E4  00B5               	movwf	sprintf@sp+1
  1890  00E5  304E               	movlw	low (STR_15| (0+32768))
  1891  00E6  00B6               	movwf	sprintf@f
  1892  00E7  3083               	movlw	high (STR_15| (0+32768))
  1893  00E8  00B7               	movwf	sprintf@f+1
  1894  00E9  0878               	movf	_nroLote,w
  1895  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1896  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1897  00EC  00C9               	movwf	??_main^(0+128)
  1898  00ED  01CA               	clrf	(??_main^(0+128)+1)
  1899  00EE  0849               	movf	??_main^(0+128),w
  1900  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1901  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1902  00F1  00B8               	movwf	?_sprintf+4
  1903  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1904  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1905  00F4  084A               	movf	(??_main+1)^(0+128),w
  1906  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1907  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1908  00F7  00B9               	movwf	?_sprintf+5
  1909  00F8  086E               	movf	_ventasLote,w
  1910  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1911  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1912  00FB  00CB               	movwf	(??_main+2)^(0+128)
  1913  00FC  01CC               	clrf	((??_main+2)^(0+128)+1)
  1914  00FD  084B               	movf	(??_main+2)^(0+128),w
  1915  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1916  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0100  00BA               	movwf	?_sprintf+6
  1918  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1920  0103  084C               	movf	(??_main+3)^(0+128),w
  1921  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0106  00BB               	movwf	?_sprintf+7
  1924  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1926  0109  085B               	movf	(_montosLote+1)^(0+128),w
  1927  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1928  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1929  010C  00BD               	movwf	?_sprintf+9
  1930  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1931  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1932  010F  085A               	movf	_montosLote^(0+128),w
  1933  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0112  00BC               	movwf	?_sprintf+8
  1936  0113  120A  118A  2453  120A  118A  	fcall	_sprintf
  1937                           
  1938                           ;main.c: 62:                 envioTX(strLote);
  1939  0118  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1940  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1941  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1942  011B  00A0               	movwf	envioTX@mensaje
  1943  011C  3001               	movlw	1
  1944  011D  00A1               	movwf	envioTX@mensaje+1
  1945  011E  120A  158A  21CD  120A  118A  	fcall	_envioTX
  1946  0123                     l3394:	
  1947                           
  1948                           ;main.c: 63:                 for(char i = 0; i<10; i++){
  1949  0123  1683               	bsf	3,5	;RP0=1, select bank3
  1950  0124  1703               	bsf	3,6	;RP1=1, select bank3
  1951  0125  01D0               	clrf	main@i^(0+384)
  1952  0126                     l3400:	
  1953                           
  1954                           ;main.c: 64:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  1955  0126  3082               	movlw	130
  1956  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0129  00CA               	movwf	(??_main^(0+128)+1)
  1959  012A  30DD               	movlw	221
  1960  012B  00C9               	movwf	??_main^(0+128)
  1961  012C                     u3837:	
  1962  012C  0BC9               	decfsz	??_main^(0+128),f
  1963  012D  292C               	goto	u3837
  1964  012E  0BCA               	decfsz	(??_main^(0+128)+1),f
  1965  012F  292C               	goto	u3837
  1966  0130                     l3402:	
  1967                           
  1968                           ;main.c: 65:                 }
  1969  0130  3001               	movlw	1
  1970  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0133  00C9               	movwf	??_main^(0+128)
  1973  0134  0849               	movf	??_main^(0+128),w
  1974  0135  1683               	bsf	3,5	;RP0=1, select bank3
  1975  0136  1703               	bsf	3,6	;RP1=1, select bank3
  1976  0137  07D0               	addwf	main@i^(0+384),f
  1977  0138                     l3404:	
  1978  0138  300A               	movlw	10
  1979  0139  0250               	subwf	main@i^(0+384),w
  1980  013A  1C03               	skipc
  1981  013B  293D               	goto	u3771
  1982  013C  293E               	goto	u3770
  1983  013D                     u3771:	
  1984  013D  2926               	goto	l3400
  1985  013E                     u3770:	
  1986  013E  28AF               	goto	l3376
  1987  013F                     l3406:	
  1988  013F  1683               	bsf	3,5	;RP0=1, select bank3
  1989  0140  1703               	bsf	3,6	;RP1=1, select bank3
  1990  0141  0852               	movf	_huboInt^(0+384),w
  1991  0142  0453               	iorwf	(_huboInt+1)^(0+384),w
  1992  0143  1903               	btfsc	3,2
  1993  0144  2946               	goto	u3781
  1994  0145  2947               	goto	u3780
  1995  0146                     u3781:	
  1996  0146  2965               	goto	l3424
  1997  0147                     u3780:	
  1998  0147                     l3408:	
  1999                           
  2000                           ;main.c: 69:             huboInt = 0;
  2001  0147  01D2               	clrf	_huboInt^(0+384)
  2002  0148  01D3               	clrf	(_huboInt+1)^(0+384)
  2003  0149                     l3410:	
  2004                           
  2005                           ;main.c: 70:             accionesPuertoSerial();
  2006  0149  120A  158A  257C  120A  118A  	fcall	_accionesPuertoSerial
  2007  014E                     l3412:	
  2008                           
  2009                           ;main.c: 71:             for(char i = 0; i < 10; i++){
  2010  014E  1683               	bsf	3,5	;RP0=1, select bank3
  2011  014F  1703               	bsf	3,6	;RP1=1, select bank3
  2012  0150  01D1               	clrf	main@i_304^(0+384)
  2013  0151                     l3418:	
  2014                           
  2015                           ;main.c: 72:                 codigoEntrada[i] = 0;
  2016  0151  0851               	movf	main@i_304^(0+384),w
  2017  0152  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2018  0153  0084               	movwf	4
  2019  0154  1383               	bcf	3,7	;select IRP bank1
  2020  0155  0180               	clrf	0
  2021  0156                     l3420:	
  2022                           
  2023                           ;main.c: 73:             }
  2024  0156  3001               	movlw	1
  2025  0157  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0158  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0159  00C9               	movwf	??_main^(0+128)
  2028  015A  0849               	movf	??_main^(0+128),w
  2029  015B  1683               	bsf	3,5	;RP0=1, select bank3
  2030  015C  1703               	bsf	3,6	;RP1=1, select bank3
  2031  015D  07D1               	addwf	main@i_304^(0+384),f
  2032  015E                     l3422:	
  2033  015E  300A               	movlw	10
  2034  015F  0251               	subwf	main@i_304^(0+384),w
  2035  0160  1C03               	skipc
  2036  0161  2963               	goto	u3791
  2037  0162  2964               	goto	u3790
  2038  0163                     u3791:	
  2039  0163  2951               	goto	l3418
  2040  0164                     u3790:	
  2041  0164  28AF               	goto	l3376
  2042  0165                     l3424:	
  2043  0165  0858               	movf	_adresult^(0+384),w
  2044  0166  0459               	iorwf	(_adresult+1)^(0+384),w
  2045  0167  1903               	btfsc	3,2
  2046  0168  296A               	goto	u3801
  2047  0169  296B               	goto	u3800
  2048  016A                     u3801:	
  2049  016A  2A31               	goto	l308
  2050  016B                     u3800:	
  2051  016B                     l3426:	
  2052                           
  2053                           ;main.c: 76:             adresult = 2*(adresult*10*5/1023);
  2054  016B  30FF               	movlw	255
  2055  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2056  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2057  016E  00A6               	movwf	___lwdiv@divisor
  2058  016F  3003               	movlw	3
  2059  0170  00A7               	movwf	___lwdiv@divisor+1
  2060  0171  1683               	bsf	3,5	;RP0=1, select bank3
  2061  0172  1703               	bsf	3,6	;RP1=1, select bank3
  2062  0173  0859               	movf	(_adresult+1)^(0+384),w
  2063  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0176  00A1               	movwf	___wmul@multiplier+1
  2066  0177  1683               	bsf	3,5	;RP0=1, select bank3
  2067  0178  1703               	bsf	3,6	;RP1=1, select bank3
  2068  0179  0858               	movf	_adresult^(0+384),w
  2069  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2070  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2071  017C  00A0               	movwf	___wmul@multiplier
  2072  017D  3032               	movlw	50
  2073  017E  00A2               	movwf	___wmul@multiplicand
  2074  017F  3000               	movlw	0
  2075  0180  00A3               	movwf	___wmul@multiplicand+1
  2076  0181  120A  158A  20CE  120A  118A  	fcall	___wmul
  2077  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0188  0821               	movf	?___wmul+1,w
  2080  0189  00A9               	movwf	___lwdiv@dividend+1
  2081  018A  0820               	movf	?___wmul,w
  2082  018B  00A8               	movwf	___lwdiv@dividend
  2083  018C  120A  158A  22C1  120A  118A  	fcall	___lwdiv
  2084  0191  1003               	clrc
  2085  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0194  0D26               	rlf	?___lwdiv,w
  2088  0195  1683               	bsf	3,5	;RP0=1, select bank3
  2089  0196  1703               	bsf	3,6	;RP1=1, select bank3
  2090  0197  00D8               	movwf	_adresult^(0+384)
  2091  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0199  1303               	bcf	3,6	;RP1=0, select bank0
  2093  019A  0D27               	rlf	?___lwdiv+1,w
  2094  019B  1683               	bsf	3,5	;RP0=1, select bank3
  2095  019C  1703               	bsf	3,6	;RP1=1, select bank3
  2096  019D  00D9               	movwf	(_adresult+1)^(0+384)
  2097  019E                     l3428:	
  2098                           
  2099                           ;main.c: 77:             if(adresult < 75){
  2100  019E  3000               	movlw	0
  2101  019F  0259               	subwf	(_adresult+1)^(0+384),w
  2102  01A0  304B               	movlw	75
  2103  01A1  1903               	skipnz
  2104  01A2  0258               	subwf	_adresult^(0+384),w
  2105  01A3  1803               	skipnc
  2106  01A4  29A6               	goto	u3811
  2107  01A5  29A7               	goto	u3810
  2108  01A6                     u3811:	
  2109  01A6  29AC               	goto	l3432
  2110  01A7                     u3810:	
  2111  01A7                     l3430:	
  2112                           
  2113                           ;main.c: 78:                 escrituraDeCierre();
  2114  01A7  120A  158A  2282  120A  118A  	fcall	_escrituraDeCierre
  2115  01AC                     l3432:	
  2116                           
  2117                           ;main.c: 80:             if(pedidoVoltaje){
  2118  01AC  1683               	bsf	3,5	;RP0=1, select bank3
  2119  01AD  1703               	bsf	3,6	;RP1=1, select bank3
  2120  01AE  0856               	movf	_pedidoVoltaje^(0+384),w
  2121  01AF  1903               	btfsc	3,2
  2122  01B0  29B2               	goto	u3821
  2123  01B1  29B3               	goto	u3820
  2124  01B2                     u3821:	
  2125  01B2  2A31               	goto	l308
  2126  01B3                     u3820:	
  2127  01B3                     l3434:	
  2128                           
  2129                           ;main.c: 81:                 char bufferMsj[16];;main.c: 82:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2130  01B3  300A               	movlw	10
  2131  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2132  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2133  01B6  00A6               	movwf	___lwdiv@divisor
  2134  01B7  3000               	movlw	0
  2135  01B8  00A7               	movwf	___lwdiv@divisor+1
  2136  01B9  1683               	bsf	3,5	;RP0=1, select bank3
  2137  01BA  1703               	bsf	3,6	;RP1=1, select bank3
  2138  01BB  0859               	movf	(_adresult+1)^(0+384),w
  2139  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2140  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2141  01BE  00A9               	movwf	___lwdiv@dividend+1
  2142  01BF  1683               	bsf	3,5	;RP0=1, select bank3
  2143  01C0  1703               	bsf	3,6	;RP1=1, select bank3
  2144  01C1  0858               	movf	_adresult^(0+384),w
  2145  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2146  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2147  01C4  00A8               	movwf	___lwdiv@dividend
  2148  01C5  120A  158A  22C1  120A  118A  	fcall	___lwdiv
  2149  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2150  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2151  01CC  0827               	movf	?___lwdiv+1,w
  2152  01CD  1683               	bsf	3,5	;RP0=1, select bank3
  2153  01CE  1703               	bsf	3,6	;RP1=1, select bank3
  2154  01CF  00CD               	movwf	(_main$1094+1)^(0+384)
  2155  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2156  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2157  01D2  0826               	movf	?___lwdiv,w
  2158  01D3  1683               	bsf	3,5	;RP0=1, select bank3
  2159  01D4  1703               	bsf	3,6	;RP1=1, select bank3
  2160  01D5  00CC               	movwf	_main$1094^(0+384)
  2161                           
  2162                           ;main.c: 81:                 char bufferMsj[16];;main.c: 82:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2163  01D6  300A               	movlw	10
  2164  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2165  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2166  01D9  00AE               	movwf	___lwmod@divisor
  2167  01DA  3000               	movlw	0
  2168  01DB  00AF               	movwf	___lwmod@divisor+1
  2169  01DC  1683               	bsf	3,5	;RP0=1, select bank3
  2170  01DD  1703               	bsf	3,6	;RP1=1, select bank3
  2171  01DE  0859               	movf	(_adresult+1)^(0+384),w
  2172  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2173  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2174  01E1  00B1               	movwf	___lwmod@dividend+1
  2175  01E2  1683               	bsf	3,5	;RP0=1, select bank3
  2176  01E3  1703               	bsf	3,6	;RP1=1, select bank3
  2177  01E4  0858               	movf	_adresult^(0+384),w
  2178  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2179  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2180  01E7  00B0               	movwf	___lwmod@dividend
  2181  01E8  120A  158A  2209  120A  118A  	fcall	___lwmod
  2182  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2183  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2184  01EF  082F               	movf	?___lwmod+1,w
  2185  01F0  1683               	bsf	3,5	;RP0=1, select bank3
  2186  01F1  1703               	bsf	3,6	;RP1=1, select bank3
  2187  01F2  00CF               	movwf	(_main$1095+1)^(0+384)
  2188  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2189  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2190  01F5  082E               	movf	?___lwmod,w
  2191  01F6  1683               	bsf	3,5	;RP0=1, select bank3
  2192  01F7  1703               	bsf	3,6	;RP1=1, select bank3
  2193  01F8  00CE               	movwf	_main$1095^(0+384)
  2194  01F9                     l3436:	
  2195                           
  2196                           ;main.c: 81:                 char bufferMsj[16];;main.c: 82:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2197  01F9  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2198  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2199  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2200  01FC  00B4               	movwf	sprintf@sp
  2201  01FD  3001               	movlw	1
  2202  01FE  00B5               	movwf	sprintf@sp+1
  2203  01FF  3034               	movlw	low (STR_16| (0+32768))
  2204  0200  00B6               	movwf	sprintf@f
  2205  0201  3084               	movlw	high (STR_16| (0+32768))
  2206  0202  00B7               	movwf	sprintf@f+1
  2207  0203  1683               	bsf	3,5	;RP0=1, select bank3
  2208  0204  1703               	bsf	3,6	;RP1=1, select bank3
  2209  0205  084D               	movf	(_main$1094+1)^(0+384),w
  2210  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0208  00B9               	movwf	?_sprintf+5
  2213  0209  1683               	bsf	3,5	;RP0=1, select bank3
  2214  020A  1703               	bsf	3,6	;RP1=1, select bank3
  2215  020B  084C               	movf	_main$1094^(0+384),w
  2216  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2217  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2218  020E  00B8               	movwf	?_sprintf+4
  2219  020F  1683               	bsf	3,5	;RP0=1, select bank3
  2220  0210  1703               	bsf	3,6	;RP1=1, select bank3
  2221  0211  084F               	movf	(_main$1095+1)^(0+384),w
  2222  0212  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0213  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0214  00BB               	movwf	?_sprintf+7
  2225  0215  1683               	bsf	3,5	;RP0=1, select bank3
  2226  0216  1703               	bsf	3,6	;RP1=1, select bank3
  2227  0217  084E               	movf	_main$1095^(0+384),w
  2228  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2230  021A  00BA               	movwf	?_sprintf+6
  2231  021B  120A  118A  2453  120A  118A  	fcall	_sprintf
  2232  0220                     l3438:	
  2233                           
  2234                           ;main.c: 83:                 envioTX(bufferMsj);
  2235  0220  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2236  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0223  00A0               	movwf	envioTX@mensaje
  2239  0224  3001               	movlw	1
  2240  0225  00A1               	movwf	envioTX@mensaje+1
  2241  0226  120A  158A  21CD  120A  118A  	fcall	_envioTX
  2242  022B                     l3440:	
  2243                           
  2244                           ;main.c: 84:                 adresult = 0;
  2245  022B  1683               	bsf	3,5	;RP0=1, select bank3
  2246  022C  1703               	bsf	3,6	;RP1=1, select bank3
  2247  022D  01D8               	clrf	_adresult^(0+384)
  2248  022E  01D9               	clrf	(_adresult+1)^(0+384)
  2249  022F                     l3442:	
  2250                           
  2251                           ;main.c: 85:                 pedidoVoltaje = 0;
  2252  022F  01D6               	clrf	_pedidoVoltaje^(0+384)
  2253  0230  28AF               	goto	l3376
  2254  0231                     l308:	
  2255  0231  28AF               	goto	l3376
  2256  0232  120A  118A  280E   	ljmp	start
  2257  0235                     __end_of_main:	
  2258                           
  2259                           	psect	text1
  2260  0A82                     __ptext1:	
  2261 ;; *************** function _escrituraDeCierre *****************
  2262 ;; Defined at:
  2263 ;;		line 56 in file "acciones.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  upper_8bits     1    5[BANK0 ] unsigned char 
  2268 ;;  lower_8bits     1    4[BANK0 ] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0, pclath, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         0       0       0       0       0
  2279 ;;      Locals:         0       2       0       0       0
  2280 ;;      Temps:          0       1       0       0       0
  2281 ;;      Totals:         0       3       0       0       0
  2282 ;;Total ram usage:        3 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    2
  2285 ;; This function calls:
  2286 ;;		_eeprom_write
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _escrituraDeCierre
  2294  0A82                     _escrituraDeCierre:	
  2295  0A82                     l3316:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _escrituraDeCierre: [wreg+status,2+status,0+pclath+cstack]
  2298                           
  2299                           
  2300                           ;acciones.c: 58:     char lower_8bits;;acciones.c: 59:     char upper_8bits;;acciones.c:
      +                           60:     lower_8bits = montosLote & 0xff;
  2301  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0A84  085A               	movf	_montosLote^(0+128),w
  2304  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0A87  00A3               	movwf	??_escrituraDeCierre
  2307  0A88  0823               	movf	??_escrituraDeCierre,w
  2308  0A89  00A4               	movwf	escrituraDeCierre@lower_8bits
  2309  0A8A                     l3318:	
  2310                           
  2311                           ;acciones.c: 61:     upper_8bits = (montosLote >> 8) & 0xff;
  2312  0A8A  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0A8B  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0A8C  085B               	movf	(_montosLote+1)^(0+128),w
  2315  0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0A8E  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0A8F  00A3               	movwf	??_escrituraDeCierre
  2318  0A90  0823               	movf	??_escrituraDeCierre,w
  2319  0A91  00A5               	movwf	escrituraDeCierre@upper_8bits
  2320  0A92                     l3320:	
  2321                           
  2322                           ;acciones.c: 62:     eeprom_write(252, upper_8bits);
  2323  0A92  0825               	movf	escrituraDeCierre@upper_8bits,w
  2324  0A93  00A3               	movwf	??_escrituraDeCierre
  2325  0A94  0823               	movf	??_escrituraDeCierre,w
  2326  0A95  00A0               	movwf	eeprom_write@value
  2327  0A96  30FC               	movlw	252
  2328  0A97  120A  158A  215C  120A  158A  	fcall	_eeprom_write
  2329  0A9C                     l3322:	
  2330                           
  2331                           ;acciones.c: 63:     eeprom_write(253, lower_8bits);
  2332  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0A9E  0824               	movf	escrituraDeCierre@lower_8bits,w
  2335  0A9F  00A3               	movwf	??_escrituraDeCierre
  2336  0AA0  0823               	movf	??_escrituraDeCierre,w
  2337  0AA1  00A0               	movwf	eeprom_write@value
  2338  0AA2  30FD               	movlw	253
  2339  0AA3  120A  158A  215C  120A  158A  	fcall	_eeprom_write
  2340  0AA8                     l3324:	
  2341                           
  2342                           ;acciones.c: 64:     eeprom_write(254, ventasLote);
  2343  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0AAA  086E               	movf	_ventasLote,w
  2346  0AAB  00A3               	movwf	??_escrituraDeCierre
  2347  0AAC  0823               	movf	??_escrituraDeCierre,w
  2348  0AAD  00A0               	movwf	eeprom_write@value
  2349  0AAE  30FE               	movlw	254
  2350  0AAF  120A  158A  215C  120A  158A  	fcall	_eeprom_write
  2351  0AB4                     l3326:	
  2352                           
  2353                           ;acciones.c: 65:     eeprom_write(255, nroLote);
  2354  0AB4  0878               	movf	_nroLote,w
  2355  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0AB7  00A3               	movwf	??_escrituraDeCierre
  2358  0AB8  0823               	movf	??_escrituraDeCierre,w
  2359  0AB9  00A0               	movwf	eeprom_write@value
  2360  0ABA  30FF               	movlw	255
  2361  0ABB  120A  158A  215C  120A  158A  	fcall	_eeprom_write
  2362  0AC0                     l74:	
  2363  0AC0  0008               	return
  2364  0AC1                     __end_of_escrituraDeCierre:	
  2365                           
  2366                           	psect	text2
  2367  0D7C                     __ptext2:	
  2368 ;; *************** function _accionesPuertoSerial *****************
  2369 ;; Defined at:
  2370 ;;		line 35 in file "acciones.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  mensaje        12    0[BANK3 ] unsigned char [12]
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         0       0       0      12       0
  2386 ;;      Temps:          0       0       3       0       0
  2387 ;;      Totals:         0       0       3      12       0
  2388 ;;Total ram usage:       15 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    6
  2391 ;; This function calls:
  2392 ;;		_envioTX
  2393 ;;		_lecturaComando
  2394 ;;		_lecturaEtiqueta
  2395 ;;		_sprintf
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _accionesPuertoSerial
  2403  0D7C                     _accionesPuertoSerial:	
  2404  0D7C                     l3296:	
  2405                           ;incstack = 0
  2406                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2407                           
  2408                           
  2409                           ;acciones.c: 36:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codi
      +                          goEntrada[0] == '-')) {
  2410  0D7C  303F               	movlw	63
  2411  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  2412  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  2413  0D7F  0660               	xorwf	_codigoEntrada^(0+128),w
  2414  0D80  1903               	btfsc	3,2
  2415  0D81  2D83               	goto	u3631
  2416  0D82  2D84               	goto	u3630
  2417  0D83                     u3631:	
  2418  0D83  2D90               	goto	l3302
  2419  0D84                     u3630:	
  2420  0D84                     l3298:	
  2421  0D84  302B               	movlw	43
  2422  0D85  0660               	xorwf	_codigoEntrada^(0+128),w
  2423  0D86  1903               	btfsc	3,2
  2424  0D87  2D89               	goto	u3641
  2425  0D88  2D8A               	goto	u3640
  2426  0D89                     u3641:	
  2427  0D89  2D90               	goto	l3302
  2428  0D8A                     u3640:	
  2429  0D8A                     l3300:	
  2430  0D8A  302D               	movlw	45
  2431  0D8B  0660               	xorwf	_codigoEntrada^(0+128),w
  2432  0D8C  1D03               	btfss	3,2
  2433  0D8D  2D8F               	goto	u3651
  2434  0D8E  2D90               	goto	u3650
  2435  0D8F                     u3651:	
  2436  0D8F  2D96               	goto	l3304
  2437  0D90                     u3650:	
  2438  0D90                     l3302:	
  2439                           
  2440                           ;acciones.c: 37:         lecturaComando();
  2441  0D90  120A  158A  20AE  120A  158A  	fcall	_lecturaComando
  2442                           
  2443                           ;acciones.c: 38:     }
  2444  0D95  2DDF               	goto	l71
  2445  0D96                     l3304:	
  2446  0D96  303A               	movlw	58
  2447  0D97  0260               	subwf	_codigoEntrada^(0+128),w
  2448  0D98  1803               	skipnc
  2449  0D99  2D9B               	goto	u3661
  2450  0D9A  2D9C               	goto	u3660
  2451  0D9B                     u3661:	
  2452  0D9B  2DCB               	goto	l68
  2453  0D9C                     u3660:	
  2454  0D9C                     l3306:	
  2455  0D9C  3030               	movlw	48
  2456  0D9D  0260               	subwf	_codigoEntrada^(0+128),w
  2457  0D9E  1C03               	skipc
  2458  0D9F  2DA1               	goto	u3671
  2459  0DA0  2DA2               	goto	u3670
  2460  0DA1                     u3671:	
  2461  0DA1  2DCB               	goto	l68
  2462  0DA2                     u3670:	
  2463  0DA2                     l3308:	
  2464                           
  2465                           ;acciones.c: 40:         if (modoDebug){
  2466  0DA2  0872               	movf	_modoDebug,w
  2467  0DA3  1903               	btfsc	3,2
  2468  0DA4  2DA6               	goto	u3681
  2469  0DA5  2DA7               	goto	u3680
  2470  0DA6                     u3681:	
  2471  0DA6  2DC5               	goto	l69
  2472  0DA7                     u3680:	
  2473  0DA7                     l3310:	
  2474                           
  2475                           ;acciones.c: 41:             char mensaje[12];;acciones.c: 42:             sprintf(mensa
      +                          je,"E:%s", codigoEntrada);
  2476  0DA7  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2477  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0DAA  00B4               	movwf	sprintf@sp
  2480  0DAB  3001               	movlw	1
  2481  0DAC  00B5               	movwf	sprintf@sp+1
  2482  0DAD  304E               	movlw	low (STR_3| (0+32768))
  2483  0DAE  00B6               	movwf	sprintf@f
  2484  0DAF  3084               	movlw	high (STR_3| (0+32768))
  2485  0DB0  00B7               	movwf	sprintf@f+1
  2486  0DB1  30E0               	movlw	(low (_codigoEntrada| 0))& (0+255)
  2487  0DB2  00B8               	movwf	low ((?_sprintf| 0+4))
  2488  0DB3  3000               	movlw	0
  2489  0DB4  00B9               	movwf	(low ((?_sprintf| 0+4))+1)
  2490  0DB5  120A  118A  2453  120A  158A  	fcall	_sprintf
  2491                           
  2492                           ;acciones.c: 43:             envioTX(mensaje);
  2493  0DBA  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2494  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0DBD  00A0               	movwf	envioTX@mensaje
  2497  0DBE  3001               	movlw	1
  2498  0DBF  00A1               	movwf	envioTX@mensaje+1
  2499  0DC0  120A  158A  21CD  120A  158A  	fcall	_envioTX
  2500  0DC5                     l69:	
  2501                           ;acciones.c: 44:         }
  2502                           
  2503                           
  2504                           ;acciones.c: 45:         lecturaEtiqueta();
  2505  0DC5  120A  118A  25A6  120A  158A  	fcall	_lecturaEtiqueta
  2506                           
  2507                           ;acciones.c: 46:     }
  2508  0DCA  2DDF               	goto	l71
  2509  0DCB                     l68:	
  2510                           ;acciones.c: 47:     else{
  2511                           
  2512                           
  2513                           ;acciones.c: 49:         RA5 = 1;
  2514  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0DCD  1685               	bsf	5,5	;volatile
  2517  0DCE                     l3312:	
  2518                           
  2519                           ;acciones.c: 50:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2520  0DCE  3006               	movlw	6
  2521  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  2522  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  2523  0DD1  00C8               	movwf	(??_accionesPuertoSerial^(0+128)+2)
  2524  0DD2  3013               	movlw	19
  2525  0DD3  00C7               	movwf	(??_accionesPuertoSerial^(0+128)+1)
  2526  0DD4  30AD               	movlw	173
  2527  0DD5  00C6               	movwf	??_accionesPuertoSerial^(0+128)
  2528  0DD6                     u3847:	
  2529  0DD6  0BC6               	decfsz	??_accionesPuertoSerial^(0+128),f
  2530  0DD7  2DD6               	goto	u3847
  2531  0DD8  0BC7               	decfsz	(??_accionesPuertoSerial^(0+128)+1),f
  2532  0DD9  2DD6               	goto	u3847
  2533  0DDA  0BC8               	decfsz	(??_accionesPuertoSerial^(0+128)+2),f
  2534  0DDB  2DD6               	goto	u3847
  2535  0DDC                     l3314:	
  2536                           
  2537                           ;acciones.c: 51:         RA5 = 0;
  2538  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0DDE  1285               	bcf	5,5	;volatile
  2541  0DDF                     l71:	
  2542  0DDF  0008               	return
  2543  0DE0                     __end_of_accionesPuertoSerial:	
  2544                           
  2545                           	psect	text3
  2546  05A6                     __ptext3:	
  2547 ;; *************** function _lecturaEtiqueta *****************
  2548 ;; Defined at:
  2549 ;;		line 17 in file "lectura.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  tp              1   36[BANK0 ] unsigned char 
  2554 ;;  i               2   34[BANK0 ] int 
  2555 ;;  Aux             2   37[BANK0 ] short 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       5       0       0       0
  2567 ;;      Temps:          0       3       0       0       0
  2568 ;;      Totals:         0       8       0       0       0
  2569 ;;Total ram usage:        8 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    5
  2572 ;; This function calls:
  2573 ;;		_EEPROM_search
  2574 ;;		___awmod
  2575 ;;		___bmul
  2576 ;;		_envioTX
  2577 ;;		_ingresoProd
  2578 ;;		_mostrarDigitos
  2579 ;; This function is called by:
  2580 ;;		_accionesPuertoSerial
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _lecturaEtiqueta
  2586  05A6                     _lecturaEtiqueta:	
  2587  05A6                     l3206:	
  2588                           ;incstack = 0
  2589                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2590                           
  2591                           
  2592                           ;lectura.c: 18:     short int Aux = 0;
  2593  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2594  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2595  05A8  01C5               	clrf	lecturaEtiqueta@Aux
  2596  05A9  01C6               	clrf	lecturaEtiqueta@Aux+1
  2597                           
  2598                           ;lectura.c: 21:     for (int i = 0; i < 8; i++ ) {
  2599  05AA  01C2               	clrf	lecturaEtiqueta@i
  2600  05AB  01C3               	clrf	lecturaEtiqueta@i+1
  2601  05AC                     l3212:	
  2602                           
  2603                           ;lectura.c: 22:         Aux += (codigoEntrada[i] - '0');
  2604  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2605  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2606  05AE  0842               	movf	lecturaEtiqueta@i,w
  2607  05AF  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2608  05B0  0084               	movwf	4
  2609  05B1  1383               	bcf	3,7	;select IRP bank1
  2610  05B2  0800               	movf	0,w
  2611  05B3  3ED0               	addlw	208
  2612  05B4  00BF               	movwf	??_lecturaEtiqueta
  2613  05B5  30FF               	movlw	255
  2614  05B6  1803               	skipnc
  2615  05B7  3000               	movlw	0
  2616  05B8  00C0               	movwf	??_lecturaEtiqueta+1
  2617  05B9  083F               	movf	??_lecturaEtiqueta,w
  2618  05BA  07C5               	addwf	lecturaEtiqueta@Aux,f
  2619  05BB  1803               	skipnc
  2620  05BC  0AC6               	incf	lecturaEtiqueta@Aux+1,f
  2621  05BD  0840               	movf	??_lecturaEtiqueta+1,w
  2622  05BE  07C6               	addwf	lecturaEtiqueta@Aux+1,f
  2623  05BF                     l3214:	
  2624                           
  2625                           ;lectura.c: 23:     }
  2626  05BF  3001               	movlw	1
  2627  05C0  07C2               	addwf	lecturaEtiqueta@i,f
  2628  05C1  1803               	skipnc
  2629  05C2  0AC3               	incf	lecturaEtiqueta@i+1,f
  2630  05C3  3000               	movlw	0
  2631  05C4  07C3               	addwf	lecturaEtiqueta@i+1,f
  2632  05C5                     l3216:	
  2633  05C5  0843               	movf	lecturaEtiqueta@i+1,w
  2634  05C6  3A80               	xorlw	128
  2635  05C7  00FF               	movwf	btemp+1
  2636  05C8  3080               	movlw	128
  2637  05C9  027F               	subwf	btemp+1,w
  2638  05CA  1D03               	skipz
  2639  05CB  2DCE               	goto	u3545
  2640  05CC  3008               	movlw	8
  2641  05CD  0242               	subwf	lecturaEtiqueta@i,w
  2642  05CE                     u3545:	
  2643  05CE  1C03               	skipc
  2644  05CF  2DD1               	goto	u3541
  2645  05D0  2DD2               	goto	u3540
  2646  05D1                     u3541:	
  2647  05D1  2DAC               	goto	l3212
  2648  05D2                     u3540:	
  2649  05D2                     l3218:	
  2650                           
  2651                           ;lectura.c: 25:     if ( (Aux%10) == (codigoEntrada[8] - '0')) {
  2652  05D2  300A               	movlw	10
  2653  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2654  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2655  05D5  00A0               	movwf	___awmod@divisor
  2656  05D6  3000               	movlw	0
  2657  05D7  00A1               	movwf	___awmod@divisor+1
  2658  05D8  0846               	movf	lecturaEtiqueta@Aux+1,w
  2659  05D9  00A3               	movwf	___awmod@dividend+1
  2660  05DA  0845               	movf	lecturaEtiqueta@Aux,w
  2661  05DB  00A2               	movwf	___awmod@dividend
  2662  05DC  120A  158A  239B  120A  118A  	fcall	___awmod
  2663  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2664  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2665  05E3  0868               	movf	(_codigoEntrada^(0+128)+8),w
  2666  05E4  3ED0               	addlw	208
  2667  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2668  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2669  05E7  00BF               	movwf	??_lecturaEtiqueta
  2670  05E8  30FF               	movlw	255
  2671  05E9  1803               	skipnc
  2672  05EA  3000               	movlw	0
  2673  05EB  00C0               	movwf	??_lecturaEtiqueta+1
  2674  05EC  0821               	movf	?___awmod+1,w
  2675  05ED  0640               	xorwf	??_lecturaEtiqueta+1,w
  2676  05EE  1D03               	skipz
  2677  05EF  2DF2               	goto	u3555
  2678  05F0  0820               	movf	?___awmod,w
  2679  05F1  063F               	xorwf	??_lecturaEtiqueta,w
  2680  05F2                     u3555:	
  2681  05F2  1D03               	skipz
  2682  05F3  2DF5               	goto	u3551
  2683  05F4  2DF6               	goto	u3550
  2684  05F5                     u3551:	
  2685  05F5  2E89               	goto	l128
  2686  05F6                     u3550:	
  2687  05F6                     l3220:	
  2688                           
  2689                           ;lectura.c: 27:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1]
      +                           - '0');
  2690  05F6  300A               	movlw	10
  2691  05F7  00BF               	movwf	??_lecturaEtiqueta
  2692  05F8  083F               	movf	??_lecturaEtiqueta,w
  2693  05F9  00A0               	movwf	___bmul@multiplicand
  2694  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2695  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  2696  05FC  0860               	movf	_codigoEntrada^(0+128),w
  2697  05FD  120A  158A  2078  120A  118A  	fcall	___bmul
  2698  0602  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0603  1303               	bcf	3,6	;RP1=0, select bank1
  2700  0604  0761               	addwf	(_codigoEntrada^(0+128)+1),w
  2701  0605  3EF0               	addlw	240
  2702  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0608  00C0               	movwf	??_lecturaEtiqueta+1
  2705  0609  0840               	movf	??_lecturaEtiqueta+1,w
  2706  060A  00C4               	movwf	lecturaEtiqueta@tp
  2707  060B                     l3222:	
  2708                           
  2709                           ;lectura.c: 28:         Aux = EEPROM_search(tp);
  2710  060B  0844               	movf	lecturaEtiqueta@tp,w
  2711  060C  120A  158A  2649  120A  118A  	fcall	_EEPROM_search
  2712  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0613  0837               	movf	?_EEPROM_search+1,w
  2715  0614  00C6               	movwf	lecturaEtiqueta@Aux+1
  2716  0615  0836               	movf	?_EEPROM_search,w
  2717  0616  00C5               	movwf	lecturaEtiqueta@Aux
  2718  0617                     l3224:	
  2719                           
  2720                           ;lectura.c: 30:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  2721  0617  0870               	movf	_cuenta,w
  2722  0618  0745               	addwf	lecturaEtiqueta@Aux,w
  2723  0619  00BF               	movwf	??_lecturaEtiqueta
  2724  061A  0871               	movf	_cuenta+1,w
  2725  061B  1803               	skipnc
  2726  061C  0A71               	incf	_cuenta+1,w
  2727  061D  0746               	addwf	lecturaEtiqueta@Aux+1,w
  2728  061E  00C0               	movwf	??_lecturaEtiqueta+1
  2729  061F  3003               	movlw	3
  2730  0620  0240               	subwf	??_lecturaEtiqueta+1,w
  2731  0621  30E8               	movlw	232
  2732  0622  1903               	skipnz
  2733  0623  023F               	subwf	??_lecturaEtiqueta,w
  2734  0624  1803               	skipnc
  2735  0625  2E27               	goto	u3561
  2736  0626  2E28               	goto	u3560
  2737  0627                     u3561:	
  2738  0627  2E89               	goto	l128
  2739  0628                     u3560:	
  2740  0628                     l3226:	
  2741  0628  0A45               	incf	lecturaEtiqueta@Aux,w
  2742  0629  1D03               	skipz
  2743  062A  2E30               	goto	u3570
  2744  062B  0A46               	incf	lecturaEtiqueta@Aux+1,w
  2745  062C  1903               	btfsc	3,2
  2746  062D  2E2F               	goto	u3571
  2747  062E  2E30               	goto	u3570
  2748  062F                     u3571:	
  2749  062F  2E89               	goto	l128
  2750  0630                     u3570:	
  2751  0630                     l3228:	
  2752                           
  2753                           ;lectura.c: 31:             if(modoDebug){
  2754  0630  0872               	movf	_modoDebug,w
  2755  0631  1903               	btfsc	3,2
  2756  0632  2E34               	goto	u3581
  2757  0633  2E35               	goto	u3580
  2758  0634                     u3581:	
  2759  0634  2E3E               	goto	l3232
  2760  0635                     u3580:	
  2761  0635                     l3230:	
  2762                           
  2763                           ;lectura.c: 32:                 envioTX("Producto ingresado\n");
  2764  0635  30D8               	movlw	low (STR_4| (0+32768))
  2765  0636  00A0               	movwf	envioTX@mensaje
  2766  0637  3083               	movlw	high (STR_4| (0+32768))
  2767  0638  00A1               	movwf	envioTX@mensaje+1
  2768  0639  120A  158A  21CD  120A  118A  	fcall	_envioTX
  2769  063E                     l3232:	
  2770                           
  2771                           ;lectura.c: 34:             tp--;
  2772  063E  3001               	movlw	1
  2773  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0641  02C4               	subwf	lecturaEtiqueta@tp,f
  2776  0642                     l3234:	
  2777                           
  2778                           ;lectura.c: 35:             ingresoProd(tp);
  2779  0642  0844               	movf	lecturaEtiqueta@tp,w
  2780  0643  00BF               	movwf	??_lecturaEtiqueta
  2781  0644  01C0               	clrf	??_lecturaEtiqueta+1
  2782  0645  083F               	movf	??_lecturaEtiqueta,w
  2783  0646  00AE               	movwf	ingresoProd@tp
  2784  0647  0840               	movf	??_lecturaEtiqueta+1,w
  2785  0648  00AF               	movwf	ingresoProd@tp+1
  2786  0649  120A  158A  24B6  120A  118A  	fcall	_ingresoProd
  2787  064E                     l3236:	
  2788                           
  2789                           ;lectura.c: 36:             productoIngresado = tp;
  2790  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2791  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0650  0844               	movf	lecturaEtiqueta@tp,w
  2793  0651  00BF               	movwf	??_lecturaEtiqueta
  2794  0652  01C0               	clrf	??_lecturaEtiqueta+1
  2795  0653  083F               	movf	??_lecturaEtiqueta,w
  2796  0654  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0655  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0656  00DE               	movwf	_productoIngresado^(0+128)
  2799  0657  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0658  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0659  0840               	movf	??_lecturaEtiqueta+1,w
  2802  065A  1683               	bsf	3,5	;RP0=1, select bank1
  2803  065B  1303               	bcf	3,6	;RP1=0, select bank1
  2804  065C  00DF               	movwf	(_productoIngresado+1)^(0+128)
  2805  065D                     l3238:	
  2806                           
  2807                           ;lectura.c: 37:             auxCuenta = cuenta;
  2808  065D  0871               	movf	_cuenta+1,w
  2809  065E  1683               	bsf	3,5	;RP0=1, select bank3
  2810  065F  1703               	bsf	3,6	;RP1=1, select bank3
  2811  0660  00D5               	movwf	(_auxCuenta+1)^(0+384)
  2812  0661  0870               	movf	_cuenta,w
  2813  0662  00D4               	movwf	_auxCuenta^(0+384)
  2814  0663                     l3240:	
  2815                           
  2816                           ;lectura.c: 38:             cuenta += Aux;
  2817  0663  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0664  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0665  0845               	movf	lecturaEtiqueta@Aux,w
  2820  0666  07F0               	addwf	_cuenta,f
  2821  0667  1803               	skipnc
  2822  0668  0AF1               	incf	_cuenta+1,f
  2823  0669  0846               	movf	lecturaEtiqueta@Aux+1,w
  2824  066A  07F1               	addwf	_cuenta+1,f
  2825  066B                     l3242:	
  2826                           
  2827                           ;lectura.c: 39:             mostrarDigitos(cuenta);
  2828  066B  0871               	movf	_cuenta+1,w
  2829  066C  00B5               	movwf	mostrarDigitos@num+1
  2830  066D  0870               	movf	_cuenta,w
  2831  066E  00B4               	movwf	mostrarDigitos@num
  2832  066F  120A  118A  2785  120A  118A  	fcall	_mostrarDigitos
  2833  0674                     l3244:	
  2834                           
  2835                           ;lectura.c: 40:             RA3 = 1;
  2836  0674  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0675  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0676  1585               	bsf	5,3	;volatile
  2839  0677                     l3246:	
  2840                           
  2841                           ;lectura.c: 41:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2842  0677  3006               	movlw	6
  2843  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2845  067A  00C1               	movwf	??_lecturaEtiqueta+2
  2846  067B  3013               	movlw	19
  2847  067C  00C0               	movwf	??_lecturaEtiqueta+1
  2848  067D  30AD               	movlw	173
  2849  067E  00BF               	movwf	??_lecturaEtiqueta
  2850  067F                     u3857:	
  2851  067F  0BBF               	decfsz	??_lecturaEtiqueta,f
  2852  0680  2E7F               	goto	u3857
  2853  0681  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2854  0682  2E7F               	goto	u3857
  2855  0683  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2856  0684  2E7F               	goto	u3857
  2857  0685                     l3248:	
  2858                           
  2859                           ;lectura.c: 42:             RA3 = 0;
  2860  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0687  1185               	bcf	5,3	;volatile
  2863                           
  2864                           ;lectura.c: 44:         }
  2865  0688  2E9B               	goto	l132
  2866  0689                     l128:	
  2867                           ;lectura.c: 45:         else {
  2868                           
  2869                           
  2870                           ;lectura.c: 47:             RA5 = 1;
  2871  0689  1685               	bsf	5,5	;volatile
  2872  068A                     l3250:	
  2873                           
  2874                           ;lectura.c: 48:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2875  068A  3006               	movlw	6
  2876  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2877  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2878  068D  00C1               	movwf	??_lecturaEtiqueta+2
  2879  068E  3013               	movlw	19
  2880  068F  00C0               	movwf	??_lecturaEtiqueta+1
  2881  0690  30AD               	movlw	173
  2882  0691  00BF               	movwf	??_lecturaEtiqueta
  2883  0692                     u3867:	
  2884  0692  0BBF               	decfsz	??_lecturaEtiqueta,f
  2885  0693  2E92               	goto	u3867
  2886  0694  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2887  0695  2E92               	goto	u3867
  2888  0696  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2889  0697  2E92               	goto	u3867
  2890  0698                     l3252:	
  2891                           
  2892                           ;lectura.c: 49:             RA5 = 0;
  2893  0698  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0699  1303               	bcf	3,6	;RP1=0, select bank0
  2895  069A  1285               	bcf	5,5	;volatile
  2896  069B                     l132:	
  2897  069B  0008               	return
  2898  069C                     __end_of_lecturaEtiqueta:	
  2899                           
  2900                           	psect	text4
  2901  0CB6                     __ptext4:	
  2902 ;; *************** function _ingresoProd *****************
  2903 ;; Defined at:
  2904 ;;		line 17 in file "manejoProductos.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  tp              2   14[BANK0 ] short 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  i               2   19[BANK0 ] short 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2918 ;;      Params:         0       2       0       0       0
  2919 ;;      Locals:         0       2       0       0       0
  2920 ;;      Temps:          0       3       0       0       0
  2921 ;;      Totals:         0       7       0       0       0
  2922 ;;Total ram usage:        7 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    3
  2925 ;; This function calls:
  2926 ;;		_pow
  2927 ;; This function is called by:
  2928 ;;		_lecturaEtiqueta
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _ingresoProd
  2934  0CB6                     _ingresoProd:	
  2935  0CB6                     l3094:	
  2936                           ;incstack = 0
  2937                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2938                           
  2939                           
  2940                           ;manejoProductos.c: 19:     for(short int i = 12; i>=0; i--) {
  2941  0CB6  300C               	movlw	12
  2942  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0CB9  00B3               	movwf	ingresoProd@i
  2945  0CBA  3000               	movlw	0
  2946  0CBB  00B4               	movwf	ingresoProd@i+1
  2947  0CBC                     l3100:	
  2948                           
  2949                           ;manejoProductos.c: 20:         if( tp >= 8*i) {
  2950  0CBC  0834               	movf	ingresoProd@i+1,w
  2951  0CBD  00B1               	movwf	??_ingresoProd+1
  2952  0CBE  0833               	movf	ingresoProd@i,w
  2953  0CBF  00B0               	movwf	??_ingresoProd
  2954  0CC0  1003               	clrc
  2955  0CC1  0DB0               	rlf	??_ingresoProd,f
  2956  0CC2  0DB1               	rlf	??_ingresoProd+1,f
  2957  0CC3  1003               	clrc
  2958  0CC4  0DB0               	rlf	??_ingresoProd,f
  2959  0CC5  0DB1               	rlf	??_ingresoProd+1,f
  2960  0CC6  1003               	clrc
  2961  0CC7  0DB0               	rlf	??_ingresoProd,f
  2962  0CC8  0DB1               	rlf	??_ingresoProd+1,f
  2963  0CC9  082F               	movf	ingresoProd@tp+1,w
  2964  0CCA  3A80               	xorlw	128
  2965  0CCB  00B2               	movwf	??_ingresoProd+2
  2966  0CCC  0831               	movf	??_ingresoProd+1,w
  2967  0CCD  3A80               	xorlw	128
  2968  0CCE  0232               	subwf	??_ingresoProd+2,w
  2969  0CCF  1D03               	skipz
  2970  0CD0  2CD3               	goto	u3345
  2971  0CD1  0830               	movf	??_ingresoProd,w
  2972  0CD2  022E               	subwf	ingresoProd@tp,w
  2973  0CD3                     u3345:	
  2974  0CD3  1C03               	skipc
  2975  0CD4  2CD6               	goto	u3341
  2976  0CD5  2CD7               	goto	u3340
  2977  0CD6                     u3341:	
  2978  0CD6  2D0B               	goto	l3108
  2979  0CD7                     u3340:	
  2980  0CD7                     l3102:	
  2981                           
  2982                           ;manejoProductos.c: 22:             tp = tp - 8*i;
  2983  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0CD9  0834               	movf	ingresoProd@i+1,w
  2986  0CDA  00B1               	movwf	??_ingresoProd+1
  2987  0CDB  0833               	movf	ingresoProd@i,w
  2988  0CDC  00B0               	movwf	??_ingresoProd
  2989  0CDD  1003               	clrc
  2990  0CDE  0DB0               	rlf	??_ingresoProd,f
  2991  0CDF  0DB1               	rlf	??_ingresoProd+1,f
  2992  0CE0  1003               	clrc
  2993  0CE1  0DB0               	rlf	??_ingresoProd,f
  2994  0CE2  0DB1               	rlf	??_ingresoProd+1,f
  2995  0CE3  1003               	clrc
  2996  0CE4  0DB0               	rlf	??_ingresoProd,f
  2997  0CE5  0DB1               	rlf	??_ingresoProd+1,f
  2998  0CE6  0830               	movf	??_ingresoProd,w
  2999  0CE7  022E               	subwf	ingresoProd@tp,w
  3000  0CE8  00AE               	movwf	ingresoProd@tp
  3001  0CE9  0831               	movf	??_ingresoProd+1,w
  3002  0CEA  1C03               	skipc
  3003  0CEB  0A31               	incf	??_ingresoProd+1,w
  3004  0CEC  022F               	subwf	ingresoProd@tp+1,w
  3005  0CED  00AF               	movwf	ingresoProd@tp+1
  3006  0CEE                     l3104:	
  3007                           
  3008                           ;manejoProductos.c: 23:             prodIngresados[i] = prodIngresados[i] | pow(2,tp);
  3009  0CEE  0833               	movf	ingresoProd@i,w
  3010  0CEF  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3011  0CF0  0084               	movwf	4
  3012  0CF1  3002               	movlw	2
  3013  0CF2  00A6               	movwf	pow@numero
  3014  0CF3  3000               	movlw	0
  3015  0CF4  00A7               	movwf	pow@numero+1
  3016  0CF5  082F               	movf	ingresoProd@tp+1,w
  3017  0CF6  00A9               	movwf	pow@potencia+1
  3018  0CF7  082E               	movf	ingresoProd@tp,w
  3019  0CF8  00A8               	movwf	pow@potencia
  3020  0CF9  120A  158A  2193  120A  158A  	fcall	_pow
  3021  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0D00  0826               	movf	?_pow,w
  3024  0D01  1383               	bcf	3,7	;select IRP bank1
  3025  0D02  0400               	iorwf	0,w
  3026  0D03  00B0               	movwf	??_ingresoProd
  3027  0D04  0833               	movf	ingresoProd@i,w
  3028  0D05  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3029  0D06  0084               	movwf	4
  3030  0D07  0830               	movf	??_ingresoProd,w
  3031  0D08  0080               	movwf	0
  3032  0D09                     l3106:	
  3033                           
  3034                           ;manejoProductos.c: 24:             i = 0;
  3035  0D09  01B3               	clrf	ingresoProd@i
  3036  0D0A  01B4               	clrf	ingresoProd@i+1
  3037  0D0B                     l3108:	
  3038                           
  3039                           ;manejoProductos.c: 27:     }
  3040  0D0B  30FF               	movlw	255
  3041  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0D0E  07B3               	addwf	ingresoProd@i,f
  3044  0D0F  1803               	skipnc
  3045  0D10  0AB4               	incf	ingresoProd@i+1,f
  3046  0D11  30FF               	movlw	255
  3047  0D12  07B4               	addwf	ingresoProd@i+1,f
  3048  0D13                     l3110:	
  3049  0D13  1FB4               	btfss	ingresoProd@i+1,7
  3050  0D14  2D16               	goto	u3351
  3051  0D15  2D17               	goto	u3350
  3052  0D16                     u3351:	
  3053  0D16  2CBC               	goto	l3100
  3054  0D17                     u3350:	
  3055  0D17                     l362:	
  3056  0D17  0008               	return
  3057  0D18                     __end_of_ingresoProd:	
  3058                           
  3059                           	psect	text5
  3060  0E49                     __ptext5:	
  3061 ;; *************** function _EEPROM_search *****************
  3062 ;; Defined at:
  3063 ;;		line 3 in file "lectura.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  tp              1    wreg     unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  tp              1   30[BANK0 ] unsigned char 
  3068 ;;  precio          2   28[BANK0 ] short 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2   22[BANK0 ] short 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       2       0       0       0
  3079 ;;      Locals:         0       3       0       0       0
  3080 ;;      Temps:          0       4       0       0       0
  3081 ;;      Totals:         0       9       0       0       0
  3082 ;;Total ram usage:        9 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    4
  3085 ;; This function calls:
  3086 ;;		___awdiv
  3087 ;;		_eeprom_read
  3088 ;;		_verificarProd
  3089 ;; This function is called by:
  3090 ;;		_lecturaEtiqueta
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function _EEPROM_search
  3096  0E49                     _EEPROM_search:	
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3100                           ;EEPROM_search@tp stored from wreg
  3101  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0E4B  00BE               	movwf	EEPROM_search@tp
  3104  0E4C                     l3078:	
  3105                           
  3106                           ;lectura.c: 5:     short int precio;;lectura.c: 6:     tp--;
  3107  0E4C  3001               	movlw	1
  3108  0E4D  02BE               	subwf	EEPROM_search@tp,f
  3109  0E4E                     l3080:	
  3110                           
  3111                           ;lectura.c: 7:     tp = tp*2;
  3112  0E4E  083E               	movf	EEPROM_search@tp,w
  3113  0E4F  00B8               	movwf	??_EEPROM_search
  3114  0E50  0738               	addwf	??_EEPROM_search,w
  3115  0E51  00B9               	movwf	??_EEPROM_search+1
  3116  0E52  0839               	movf	??_EEPROM_search+1,w
  3117  0E53  00BE               	movwf	EEPROM_search@tp
  3118  0E54                     l3082:	
  3119                           
  3120                           ;lectura.c: 8:     precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  3121  0E54  083E               	movf	EEPROM_search@tp,w
  3122  0E55  3E01               	addlw	1
  3123  0E56  120A  158A  208F  120A  158A  	fcall	_eeprom_read
  3124  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0E5D  00B8               	movwf	??_EEPROM_search
  3127  0E5E  01B9               	clrf	??_EEPROM_search+1
  3128  0E5F  083E               	movf	EEPROM_search@tp,w
  3129  0E60  120A  158A  208F  120A  158A  	fcall	_eeprom_read
  3130  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0E67  00BA               	movwf	??_EEPROM_search+2
  3133  0E68  01BB               	clrf	??_EEPROM_search+3
  3134  0E69  083A               	movf	??_EEPROM_search+2,w
  3135  0E6A  00BB               	movwf	??_EEPROM_search+3
  3136  0E6B  01BA               	clrf	??_EEPROM_search+2
  3137  0E6C  0838               	movf	??_EEPROM_search,w
  3138  0E6D  043A               	iorwf	??_EEPROM_search+2,w
  3139  0E6E  00BC               	movwf	EEPROM_search@precio
  3140  0E6F  0839               	movf	??_EEPROM_search+1,w
  3141  0E70  043B               	iorwf	??_EEPROM_search+3,w
  3142  0E71  00BD               	movwf	EEPROM_search@precio+1
  3143  0E72                     l3084:	
  3144                           
  3145                           ;lectura.c: 10:     if( (precio < 0 || precio > 999) || verificarProd(tp/2)) {
  3146  0E72  1BBD               	btfsc	EEPROM_search@precio+1,7
  3147  0E73  2E75               	goto	u3311
  3148  0E74  2E76               	goto	u3310
  3149  0E75                     u3311:	
  3150  0E75  2EA5               	goto	l3090
  3151  0E76                     u3310:	
  3152  0E76                     l3086:	
  3153  0E76  083D               	movf	EEPROM_search@precio+1,w
  3154  0E77  3A80               	xorlw	128
  3155  0E78  00FF               	movwf	btemp+1
  3156  0E79  3083               	movlw	131
  3157  0E7A  027F               	subwf	btemp+1,w
  3158  0E7B  1D03               	skipz
  3159  0E7C  2E7F               	goto	u3325
  3160  0E7D  30E8               	movlw	232
  3161  0E7E  023C               	subwf	EEPROM_search@precio,w
  3162  0E7F                     u3325:	
  3163  0E7F  1803               	skipnc
  3164  0E80  2E82               	goto	u3321
  3165  0E81  2E83               	goto	u3320
  3166  0E82                     u3321:	
  3167  0E82  2EA5               	goto	l3090
  3168  0E83                     u3320:	
  3169  0E83                     l3088:	
  3170  0E83  3002               	movlw	2
  3171  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0E86  00A0               	movwf	___awdiv@divisor
  3174  0E87  3000               	movlw	0
  3175  0E88  00A1               	movwf	___awdiv@divisor+1
  3176  0E89  083E               	movf	EEPROM_search@tp,w
  3177  0E8A  00B8               	movwf	??_EEPROM_search
  3178  0E8B  01B9               	clrf	??_EEPROM_search+1
  3179  0E8C  0838               	movf	??_EEPROM_search,w
  3180  0E8D  00A2               	movwf	___awdiv@dividend
  3181  0E8E  0839               	movf	??_EEPROM_search+1,w
  3182  0E8F  00A3               	movwf	___awdiv@dividend+1
  3183  0E90  120A  158A  25E0  120A  158A  	fcall	___awdiv
  3184  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0E97  0821               	movf	?___awdiv+1,w
  3187  0E98  00AF               	movwf	verificarProd@tp+1
  3188  0E99  0820               	movf	?___awdiv,w
  3189  0E9A  00AE               	movwf	verificarProd@tp
  3190  0E9B  120A  158A  2518  120A  158A  	fcall	_verificarProd
  3191  0EA0  3A00               	xorlw	0
  3192  0EA1  1903               	skipnz
  3193  0EA2  2EA4               	goto	u3331
  3194  0EA3  2EA5               	goto	u3330
  3195  0EA4                     u3331:	
  3196  0EA4  2EAB               	goto	l119
  3197  0EA5                     u3330:	
  3198  0EA5                     l3090:	
  3199                           
  3200                           ;lectura.c: 11:         precio = -1;
  3201  0EA5  30FF               	movlw	255
  3202  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0EA8  00BC               	movwf	EEPROM_search@precio
  3205  0EA9  30FF               	movlw	255
  3206  0EAA  00BD               	movwf	EEPROM_search@precio+1
  3207  0EAB                     l119:	
  3208                           ;lectura.c: 12:     }
  3209                           
  3210                           
  3211                           ;lectura.c: 14:     return precio;
  3212  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0EAD  083D               	movf	EEPROM_search@precio+1,w
  3215  0EAE  00B7               	movwf	?_EEPROM_search+1
  3216  0EAF  083C               	movf	EEPROM_search@precio,w
  3217  0EB0  00B6               	movwf	?_EEPROM_search
  3218  0EB1                     l122:	
  3219  0EB1  0008               	return
  3220  0EB2                     __end_of_EEPROM_search:	
  3221                           
  3222                           	psect	text6
  3223  0D18                     __ptext6:	
  3224 ;; *************** function _verificarProd *****************
  3225 ;; Defined at:
  3226 ;;		line 30 in file "manejoProductos.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  tp              2   14[BANK0 ] short 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  i               2   20[BANK0 ] short 
  3231 ;;  ret             1   19[BANK0 ] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      unsigned char 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       2       0       0       0
  3242 ;;      Locals:         0       3       0       0       0
  3243 ;;      Temps:          0       3       0       0       0
  3244 ;;      Totals:         0       8       0       0       0
  3245 ;;Total ram usage:        8 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    3
  3248 ;; This function calls:
  3249 ;;		_pow
  3250 ;; This function is called by:
  3251 ;;		_EEPROM_search
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _verificarProd
  3257  0D18                     _verificarProd:	
  3258  0D18                     l2978:	
  3259                           ;incstack = 0
  3260                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3261                           
  3262                           
  3263                           ;manejoProductos.c: 31:     char ret = 0;
  3264  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0D1A  01B3               	clrf	verificarProd@ret
  3267  0D1B                     l2980:	
  3268                           
  3269                           ;manejoProductos.c: 32:     for(short int i = 12; i>=0; i--) {
  3270  0D1B  300C               	movlw	12
  3271  0D1C  00B4               	movwf	verificarProd@i
  3272  0D1D  3000               	movlw	0
  3273  0D1E  00B5               	movwf	verificarProd@i+1
  3274  0D1F                     l2986:	
  3275                           
  3276                           ;manejoProductos.c: 33:         if( tp >= 8*i) {
  3277  0D1F  0835               	movf	verificarProd@i+1,w
  3278  0D20  00B1               	movwf	??_verificarProd+1
  3279  0D21  0834               	movf	verificarProd@i,w
  3280  0D22  00B0               	movwf	??_verificarProd
  3281  0D23  1003               	clrc
  3282  0D24  0DB0               	rlf	??_verificarProd,f
  3283  0D25  0DB1               	rlf	??_verificarProd+1,f
  3284  0D26  1003               	clrc
  3285  0D27  0DB0               	rlf	??_verificarProd,f
  3286  0D28  0DB1               	rlf	??_verificarProd+1,f
  3287  0D29  1003               	clrc
  3288  0D2A  0DB0               	rlf	??_verificarProd,f
  3289  0D2B  0DB1               	rlf	??_verificarProd+1,f
  3290  0D2C  082F               	movf	verificarProd@tp+1,w
  3291  0D2D  3A80               	xorlw	128
  3292  0D2E  00B2               	movwf	??_verificarProd+2
  3293  0D2F  0831               	movf	??_verificarProd+1,w
  3294  0D30  3A80               	xorlw	128
  3295  0D31  0232               	subwf	??_verificarProd+2,w
  3296  0D32  1D03               	skipz
  3297  0D33  2D36               	goto	u3195
  3298  0D34  0830               	movf	??_verificarProd,w
  3299  0D35  022E               	subwf	verificarProd@tp,w
  3300  0D36                     u3195:	
  3301  0D36  1C03               	skipc
  3302  0D37  2D39               	goto	u3191
  3303  0D38  2D3A               	goto	u3190
  3304  0D39                     u3191:	
  3305  0D39  2D6E               	goto	l2996
  3306  0D3A                     u3190:	
  3307  0D3A                     l2988:	
  3308                           
  3309                           ;manejoProductos.c: 35:             tp = tp - 8*i;
  3310  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  3312  0D3C  0835               	movf	verificarProd@i+1,w
  3313  0D3D  00B1               	movwf	??_verificarProd+1
  3314  0D3E  0834               	movf	verificarProd@i,w
  3315  0D3F  00B0               	movwf	??_verificarProd
  3316  0D40  1003               	clrc
  3317  0D41  0DB0               	rlf	??_verificarProd,f
  3318  0D42  0DB1               	rlf	??_verificarProd+1,f
  3319  0D43  1003               	clrc
  3320  0D44  0DB0               	rlf	??_verificarProd,f
  3321  0D45  0DB1               	rlf	??_verificarProd+1,f
  3322  0D46  1003               	clrc
  3323  0D47  0DB0               	rlf	??_verificarProd,f
  3324  0D48  0DB1               	rlf	??_verificarProd+1,f
  3325  0D49  0830               	movf	??_verificarProd,w
  3326  0D4A  022E               	subwf	verificarProd@tp,w
  3327  0D4B  00AE               	movwf	verificarProd@tp
  3328  0D4C  0831               	movf	??_verificarProd+1,w
  3329  0D4D  1C03               	skipc
  3330  0D4E  0A31               	incf	??_verificarProd+1,w
  3331  0D4F  022F               	subwf	verificarProd@tp+1,w
  3332  0D50  00AF               	movwf	verificarProd@tp+1
  3333  0D51                     l2990:	
  3334                           
  3335                           ;manejoProductos.c: 36:             if(prodIngresados[i] & pow(2,tp)) {
  3336  0D51  0834               	movf	verificarProd@i,w
  3337  0D52  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3338  0D53  0084               	movwf	4
  3339  0D54  3002               	movlw	2
  3340  0D55  00A6               	movwf	pow@numero
  3341  0D56  3000               	movlw	0
  3342  0D57  00A7               	movwf	pow@numero+1
  3343  0D58  082F               	movf	verificarProd@tp+1,w
  3344  0D59  00A9               	movwf	pow@potencia+1
  3345  0D5A  082E               	movf	verificarProd@tp,w
  3346  0D5B  00A8               	movwf	pow@potencia
  3347  0D5C  120A  158A  2193  120A  158A  	fcall	_pow
  3348  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0D63  0826               	movf	?_pow,w
  3351  0D64  1383               	bcf	3,7	;select IRP bank1
  3352  0D65  0500               	andwf	0,w
  3353  0D66  1903               	btfsc	3,2
  3354  0D67  2D69               	goto	u3201
  3355  0D68  2D6A               	goto	u3200
  3356  0D69                     u3201:	
  3357  0D69  2D6C               	goto	l2994
  3358  0D6A                     u3200:	
  3359  0D6A                     l2992:	
  3360                           
  3361                           ;manejoProductos.c: 37:                 ret = 1;
  3362  0D6A  01B3               	clrf	verificarProd@ret
  3363  0D6B  0AB3               	incf	verificarProd@ret,f
  3364  0D6C                     l2994:	
  3365                           
  3366                           ;manejoProductos.c: 39:             i = 0;
  3367  0D6C  01B4               	clrf	verificarProd@i
  3368  0D6D  01B5               	clrf	verificarProd@i+1
  3369  0D6E                     l2996:	
  3370                           
  3371                           ;manejoProductos.c: 42:     }
  3372  0D6E  30FF               	movlw	255
  3373  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0D71  07B4               	addwf	verificarProd@i,f
  3376  0D72  1803               	skipnc
  3377  0D73  0AB5               	incf	verificarProd@i+1,f
  3378  0D74  30FF               	movlw	255
  3379  0D75  07B5               	addwf	verificarProd@i+1,f
  3380  0D76                     l2998:	
  3381  0D76  1FB5               	btfss	verificarProd@i+1,7
  3382  0D77  2D79               	goto	u3211
  3383  0D78  2D7A               	goto	u3210
  3384  0D79                     u3211:	
  3385  0D79  2D1F               	goto	l2986
  3386  0D7A                     u3210:	
  3387  0D7A                     l3000:	
  3388                           
  3389                           ;manejoProductos.c: 44:     return ret;
  3390  0D7A  0833               	movf	verificarProd@ret,w
  3391  0D7B                     l369:	
  3392  0D7B  0008               	return
  3393  0D7C                     __end_of_verificarProd:	
  3394                           
  3395                           	psect	text7
  3396  08AE                     __ptext7:	
  3397 ;; *************** function _lecturaComando *****************
  3398 ;; Defined at:
  3399 ;;		line 174 in file "lectura.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    5
  3420 ;; This function calls:
  3421 ;;		_lecturaConsulta
  3422 ;;		_lecturaMas
  3423 ;;		_lecturaMenos
  3424 ;; This function is called by:
  3425 ;;		_accionesPuertoSerial
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _lecturaComando
  3431  08AE                     _lecturaComando:	
  3432  08AE                     l3196:	
  3433                           ;incstack = 0
  3434                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3435                           
  3436                           
  3437                           ;lectura.c: 175:     if(codigoEntrada[0] == '?') {
  3438  08AE  303F               	movlw	63
  3439  08AF  1683               	bsf	3,5	;RP0=1, select bank1
  3440  08B0  1303               	bcf	3,6	;RP1=0, select bank1
  3441  08B1  0660               	xorwf	_codigoEntrada^(0+128),w
  3442  08B2  1D03               	btfss	3,2
  3443  08B3  28B5               	goto	u3521
  3444  08B4  28B6               	goto	u3520
  3445  08B5                     u3521:	
  3446  08B5  28BC               	goto	l3200
  3447  08B6                     u3520:	
  3448  08B6                     l3198:	
  3449                           
  3450                           ;lectura.c: 176:         lecturaConsulta();
  3451  08B6  120A  118A  269C  120A  158A  	fcall	_lecturaConsulta
  3452                           
  3453                           ;lectura.c: 177:     }
  3454  08BB  28CD               	goto	l194
  3455  08BC                     l3200:	
  3456  08BC  302B               	movlw	43
  3457  08BD  0660               	xorwf	_codigoEntrada^(0+128),w
  3458  08BE  1D03               	btfss	3,2
  3459  08BF  28C1               	goto	u3531
  3460  08C0  28C2               	goto	u3530
  3461  08C1                     u3531:	
  3462  08C1  28C8               	goto	l3204
  3463  08C2                     u3530:	
  3464  08C2                     l3202:	
  3465                           
  3466                           ;lectura.c: 179:         lecturaMas();
  3467  08C2  120A  158A  2127  120A  158A  	fcall	_lecturaMas
  3468                           
  3469                           ;lectura.c: 180:     }
  3470  08C7  28CD               	goto	l194
  3471  08C8                     l3204:	
  3472                           
  3473                           ;lectura.c: 182:         lecturaMenos();
  3474  08C8  120A  158A  2062  120A  158A  	fcall	_lecturaMenos
  3475  08CD                     l194:	
  3476  08CD  0008               	return
  3477  08CE                     __end_of_lecturaComando:	
  3478                           
  3479                           	psect	text8
  3480  0862                     __ptext8:	
  3481 ;; *************** function _lecturaMenos *****************
  3482 ;; Defined at:
  3483 ;;		line 104 in file "lectura.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    3
  3504 ;; This function calls:
  3505 ;;		_envioTX
  3506 ;; This function is called by:
  3507 ;;		_lecturaComando
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _lecturaMenos
  3513  0862                     _lecturaMenos:	
  3514  0862                     l3126:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _lecturaMenos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3517                           
  3518                           
  3519                           ;lectura.c: 105:     if(codigoEntrada[1] == 'D') {
  3520  0862  3044               	movlw	68
  3521  0863  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0864  1303               	bcf	3,6	;RP1=0, select bank1
  3523  0865  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3524  0866  1D03               	btfss	3,2
  3525  0867  2869               	goto	u3391
  3526  0868  286A               	goto	u3390
  3527  0869                     u3391:	
  3528  0869  286C               	goto	l3130
  3529  086A                     u3390:	
  3530  086A                     l3128:	
  3531                           
  3532                           ;lectura.c: 106:         modoDebug = 0;
  3533  086A  01F2               	clrf	_modoDebug
  3534                           
  3535                           ;lectura.c: 108:     }
  3536  086B  2877               	goto	l163
  3537  086C                     l3130:	
  3538                           
  3539                           ;lectura.c: 110:         envioTX("Ocurrio un error en la interpretacion.\n");
  3540  086C  3026               	movlw	low (STR_6| (0+32768))
  3541  086D  1283               	bcf	3,5	;RP0=0, select bank0
  3542  086E  1303               	bcf	3,6	;RP1=0, select bank0
  3543  086F  00A0               	movwf	envioTX@mensaje
  3544  0870  3083               	movlw	high (STR_6| (0+32768))
  3545  0871  00A1               	movwf	envioTX@mensaje+1
  3546  0872  120A  158A  21CD  120A  158A  	fcall	_envioTX
  3547  0877                     l163:	
  3548  0877  0008               	return
  3549  0878                     __end_of_lecturaMenos:	
  3550                           
  3551                           	psect	text9
  3552  0927                     __ptext9:	
  3553 ;; *************** function _lecturaMas *****************
  3554 ;; Defined at:
  3555 ;;		line 89 in file "lectura.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0
  3572 ;;      Totals:         0       0       0       0       0
  3573 ;;Total ram usage:        0 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    4
  3576 ;; This function calls:
  3577 ;;		_agregarModificarPrecio
  3578 ;;		_cierreDeLote
  3579 ;;		_envioTX
  3580 ;;		_verificacionEntrada
  3581 ;; This function is called by:
  3582 ;;		_lecturaComando
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _lecturaMas
  3588  0927                     _lecturaMas:	
  3589  0927                     l3112:	
  3590                           ;incstack = 0
  3591                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3592                           
  3593                           
  3594                           ;lectura.c: 90:     if (codigoEntrada[1] == 'L') {
  3595  0927  304C               	movlw	76
  3596  0928  1683               	bsf	3,5	;RP0=1, select bank1
  3597  0929  1303               	bcf	3,6	;RP1=0, select bank1
  3598  092A  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3599  092B  1D03               	btfss	3,2
  3600  092C  292E               	goto	u3361
  3601  092D  292F               	goto	u3360
  3602  092E                     u3361:	
  3603  092E  2935               	goto	l3116
  3604  092F                     u3360:	
  3605  092F                     l3114:	
  3606                           
  3607                           ;lectura.c: 91:         cierreDeLote();
  3608  092F  120A  158A  2307  120A  158A  	fcall	_cierreDeLote
  3609                           
  3610                           ;lectura.c: 92:     }
  3611  0934  295B               	goto	l158
  3612  0935                     l3116:	
  3613  0935  120A  158A  20F5  120A  158A  	fcall	_verificacionEntrada
  3614  093A  3A06               	xorlw	6
  3615  093B  1D03               	skipz
  3616  093C  293E               	goto	u3371
  3617  093D  293F               	goto	u3370
  3618  093E                     u3371:	
  3619  093E  2945               	goto	l3120
  3620  093F                     u3370:	
  3621  093F                     l3118:	
  3622                           
  3623                           ;lectura.c: 94:         agregarModificarPrecio();
  3624  093F  120A  158A  272E  120A  158A  	fcall	_agregarModificarPrecio
  3625                           
  3626                           ;lectura.c: 95:     }
  3627  0944  295B               	goto	l158
  3628  0945                     l3120:	
  3629  0945  3044               	movlw	68
  3630  0946  1683               	bsf	3,5	;RP0=1, select bank1
  3631  0947  1303               	bcf	3,6	;RP1=0, select bank1
  3632  0948  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3633  0949  1D03               	btfss	3,2
  3634  094A  294C               	goto	u3381
  3635  094B  294D               	goto	u3380
  3636  094C                     u3381:	
  3637  094C  2950               	goto	l3124
  3638  094D                     u3380:	
  3639  094D                     l3122:	
  3640                           
  3641                           ;lectura.c: 97:         modoDebug = 1;
  3642  094D  01F2               	clrf	_modoDebug
  3643  094E  0AF2               	incf	_modoDebug,f
  3644                           
  3645                           ;lectura.c: 98:     }
  3646  094F  295B               	goto	l158
  3647  0950                     l3124:	
  3648                           
  3649                           ;lectura.c: 100:         envioTX("Ocurrio un error en la interpretacion.\n");
  3650  0950  3026               	movlw	low (STR_6| (0+32768))
  3651  0951  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0952  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0953  00A0               	movwf	envioTX@mensaje
  3654  0954  3083               	movlw	high (STR_6| (0+32768))
  3655  0955  00A1               	movwf	envioTX@mensaje+1
  3656  0956  120A  158A  21CD  120A  158A  	fcall	_envioTX
  3657  095B                     l158:	
  3658  095B  0008               	return
  3659  095C                     __end_of_lecturaMas:	
  3660                           
  3661                           	psect	text10
  3662  08F5                     __ptext10:	
  3663 ;; *************** function _verificacionEntrada *****************
  3664 ;; Defined at:
  3665 ;;		line 62 in file "lectura.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  i               1    2[BANK0 ] unsigned char 
  3670 ;;  ret             1    1[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      unsigned char 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         0       0       0       0       0
  3681 ;;      Locals:         0       2       0       0       0
  3682 ;;      Temps:          0       1       0       0       0
  3683 ;;      Totals:         0       3       0       0       0
  3684 ;;Total ram usage:        3 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_lecturaMas
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function _verificacionEntrada
  3696  08F5                     _verificacionEntrada:	
  3697  08F5                     l3004:	
  3698                           ;incstack = 0
  3699                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  3700                           
  3701                           
  3702                           ;lectura.c: 63:     char i = 1;
  3703  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  3704  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  3705  08F7  01A2               	clrf	verificacionEntrada@i
  3706  08F8  0AA2               	incf	verificacionEntrada@i,f
  3707  08F9                     l3006:	
  3708                           
  3709                           ;lectura.c: 64:     char ret = 0;
  3710  08F9  01A1               	clrf	verificacionEntrada@ret
  3711                           
  3712                           ;lectura.c: 65:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3713  08FA  2903               	goto	l3010
  3714  08FB                     l3008:	
  3715                           
  3716                           ;lectura.c: 66:         i++;
  3717  08FB  3001               	movlw	1
  3718  08FC  00A0               	movwf	??_verificacionEntrada
  3719  08FD  0820               	movf	??_verificacionEntrada,w
  3720  08FE  07A2               	addwf	verificacionEntrada@i,f
  3721                           
  3722                           ;lectura.c: 67:         ret++;
  3723  08FF  3001               	movlw	1
  3724  0900  00A0               	movwf	??_verificacionEntrada
  3725  0901  0820               	movf	??_verificacionEntrada,w
  3726  0902  07A1               	addwf	verificacionEntrada@ret,f
  3727  0903                     l3010:	
  3728                           
  3729                           ;lectura.c: 65:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3730  0903  0822               	movf	verificacionEntrada@i,w
  3731  0904  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3732  0905  0084               	movwf	4
  3733  0906  303A               	movlw	58
  3734  0907  1383               	bcf	3,7	;select IRP bank1
  3735  0908  0200               	subwf	0,w
  3736  0909  1803               	skipnc
  3737  090A  290C               	goto	u3221
  3738  090B  290D               	goto	u3220
  3739  090C                     u3221:	
  3740  090C  2916               	goto	l3014
  3741  090D                     u3220:	
  3742  090D                     l3012:	
  3743  090D  0822               	movf	verificacionEntrada@i,w
  3744  090E  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3745  090F  0084               	movwf	4
  3746  0910  3030               	movlw	48
  3747  0911  0200               	subwf	0,w
  3748  0912  1803               	skipnc
  3749  0913  2915               	goto	u3231
  3750  0914  2916               	goto	u3230
  3751  0915                     u3231:	
  3752  0915  291F               	goto	l3016
  3753  0916                     u3230:	
  3754  0916                     l3014:	
  3755  0916  0822               	movf	verificacionEntrada@i,w
  3756  0917  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3757  0918  0084               	movwf	4
  3758  0919  303D               	movlw	61
  3759  091A  0600               	xorwf	0,w
  3760  091B  1D03               	btfss	3,2
  3761  091C  291E               	goto	u3241
  3762  091D  291F               	goto	u3240
  3763  091E                     u3241:	
  3764  091E  2925               	goto	l3018
  3765  091F                     u3240:	
  3766  091F                     l3016:	
  3767  091F  3007               	movlw	7
  3768  0920  0222               	subwf	verificacionEntrada@i,w
  3769  0921  1C03               	skipc
  3770  0922  2924               	goto	u3251
  3771  0923  2925               	goto	u3250
  3772  0924                     u3251:	
  3773  0924  28FB               	goto	l3008
  3774  0925                     u3250:	
  3775  0925                     l3018:	
  3776                           
  3777                           ;lectura.c: 69:     return ret;
  3778  0925  0821               	movf	verificacionEntrada@ret,w
  3779  0926                     l144:	
  3780  0926  0008               	return
  3781  0927                     __end_of_verificacionEntrada:	
  3782                           
  3783                           	psect	text11
  3784  0B07                     __ptext11:	
  3785 ;; *************** function _cierreDeLote *****************
  3786 ;; Defined at:
  3787 ;;		line 72 in file "lectura.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  strLote        32   46[BANK0 ] unsigned char [32]
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         0      32       0       0       0
  3803 ;;      Temps:          0       4       0       0       0
  3804 ;;      Totals:         0      36       0       0       0
  3805 ;;Total ram usage:       36 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    3
  3808 ;; This function calls:
  3809 ;;		_envioTX
  3810 ;;		_sprintf
  3811 ;; This function is called by:
  3812 ;;		_lecturaMas
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _cierreDeLote
  3818  0B07                     _cierreDeLote:	
  3819  0B07                     l3022:	
  3820                           ;incstack = 0
  3821                           ; Regs used in _cierreDeLote: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3822                           
  3823                           
  3824                           ;lectura.c: 74:     if (cierreLotePedido == 0) {
  3825  0B07  1683               	bsf	3,5	;RP0=1, select bank3
  3826  0B08  1703               	bsf	3,6	;RP1=1, select bank3
  3827  0B09  0857               	movf	_cierreLotePedido^(0+384),w
  3828  0B0A  1D03               	btfss	3,2
  3829  0B0B  2B0D               	goto	u3261
  3830  0B0C  2B0E               	goto	u3260
  3831  0B0D                     u3261:	
  3832  0B0D  2B43               	goto	l3026
  3833  0B0E                     u3260:	
  3834  0B0E                     l3024:	
  3835                           
  3836                           ;lectura.c: 75:         char strLote[32];;lectura.c: 77:         sprintf(strLote,"\nCier
      +                          re,L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  3837  0B0E  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3838  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  3839  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  3840  0B11  00B4               	movwf	sprintf@sp
  3841  0B12  3000               	movlw	0
  3842  0B13  00B5               	movwf	sprintf@sp+1
  3843  0B14  3080               	movlw	low (STR_5| (0+32768))
  3844  0B15  00B6               	movwf	sprintf@f
  3845  0B16  3083               	movlw	high (STR_5| (0+32768))
  3846  0B17  00B7               	movwf	sprintf@f+1
  3847  0B18  0878               	movf	_nroLote,w
  3848  0B19  00CA               	movwf	??_cierreDeLote
  3849  0B1A  01CB               	clrf	??_cierreDeLote+1
  3850  0B1B  084A               	movf	??_cierreDeLote,w
  3851  0B1C  00B8               	movwf	?_sprintf+4
  3852  0B1D  084B               	movf	??_cierreDeLote+1,w
  3853  0B1E  00B9               	movwf	?_sprintf+5
  3854  0B1F  086E               	movf	_ventasLote,w
  3855  0B20  00CC               	movwf	??_cierreDeLote+2
  3856  0B21  01CD               	clrf	??_cierreDeLote+3
  3857  0B22  084C               	movf	??_cierreDeLote+2,w
  3858  0B23  00BA               	movwf	?_sprintf+6
  3859  0B24  084D               	movf	??_cierreDeLote+3,w
  3860  0B25  00BB               	movwf	?_sprintf+7
  3861  0B26  1683               	bsf	3,5	;RP0=1, select bank1
  3862  0B27  1303               	bcf	3,6	;RP1=0, select bank1
  3863  0B28  085B               	movf	(_montosLote+1)^(0+128),w
  3864  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0B2B  00BD               	movwf	?_sprintf+9
  3867  0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  3868  0B2D  1303               	bcf	3,6	;RP1=0, select bank1
  3869  0B2E  085A               	movf	_montosLote^(0+128),w
  3870  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0B31  00BC               	movwf	?_sprintf+8
  3873  0B32  120A  118A  2453  120A  158A  	fcall	_sprintf
  3874                           
  3875                           ;lectura.c: 78:         envioTX(strLote);
  3876  0B37  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3877  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0B3A  00A0               	movwf	envioTX@mensaje
  3880  0B3B  3000               	movlw	0
  3881  0B3C  00A1               	movwf	envioTX@mensaje+1
  3882  0B3D  120A  158A  21CD  120A  158A  	fcall	_envioTX
  3883                           
  3884                           ;lectura.c: 79:     }
  3885  0B42  2B44               	goto	l3028
  3886  0B43                     l3026:	
  3887                           
  3888                           ;lectura.c: 81:         cierreLotePedido = 0;
  3889  0B43  01D7               	clrf	_cierreLotePedido^(0+384)
  3890  0B44                     l3028:	
  3891                           
  3892                           ;lectura.c: 84:     nroLote++;
  3893  0B44  3001               	movlw	1
  3894  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0B47  00CA               	movwf	??_cierreDeLote
  3897  0B48  084A               	movf	??_cierreDeLote,w
  3898  0B49  07F8               	addwf	_nroLote,f
  3899  0B4A                     l3030:	
  3900                           
  3901                           ;lectura.c: 85:     ventasLote=0;
  3902  0B4A  01EE               	clrf	_ventasLote
  3903  0B4B                     l3032:	
  3904                           
  3905                           ;lectura.c: 86:     montosLote=0;
  3906  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  3907  0B4C  1303               	bcf	3,6	;RP1=0, select bank1
  3908  0B4D  01DA               	clrf	_montosLote^(0+128)
  3909  0B4E  01DB               	clrf	(_montosLote+1)^(0+128)
  3910  0B4F                     l149:	
  3911  0B4F  0008               	return
  3912  0B50                     __end_of_cierreDeLote:	
  3913                           
  3914                           	psect	text12
  3915  0F2E                     __ptext12:	
  3916 ;; *************** function _agregarModificarPrecio *****************
  3917 ;; Defined at:
  3918 ;;		line 61 in file "manejoProductos.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  mensaje        10   52[BANK0 ] unsigned char [10]
  3923 ;;  precio          2   64[BANK0 ] short 
  3924 ;;  upper_8bits     1   63[BANK0 ] unsigned char 
  3925 ;;  lower_8bits     1   62[BANK0 ] unsigned char 
  3926 ;;  tp              1   66[BANK0 ] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3936 ;;      Params:         0       0       0       0       0
  3937 ;;      Locals:         0      15       0       0       0
  3938 ;;      Temps:          0      10       0       0       0
  3939 ;;      Totals:         0      25       0       0       0
  3940 ;;Total ram usage:       25 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    3
  3943 ;; This function calls:
  3944 ;;		___awdiv
  3945 ;;		___bmul
  3946 ;;		___wmul
  3947 ;;		_eeprom_write
  3948 ;;		_envioTX
  3949 ;;		_sprintf
  3950 ;; This function is called by:
  3951 ;;		_lecturaMas
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _agregarModificarPrecio
  3957  0F2E                     _agregarModificarPrecio:	
  3958  0F2E                     l3034:	
  3959                           ;incstack = 0
  3960                           ; Regs used in _agregarModificarPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3961                           
  3962                           
  3963                           ;manejoProductos.c: 62:     unsigned char tp = 10*(codigoEntrada[1]-'0') + (codigoEntrad
      +                          a[2] - '0');
  3964  0F2E  300A               	movlw	10
  3965  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0F31  00CA               	movwf	??_agregarModificarPrecio
  3968  0F32  084A               	movf	??_agregarModificarPrecio,w
  3969  0F33  00A0               	movwf	___bmul@multiplicand
  3970  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  3971  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  3972  0F36  0861               	movf	(_codigoEntrada^(0+128)+1),w
  3973  0F37  120A  158A  2078  120A  158A  	fcall	___bmul
  3974  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  3976  0F3E  0762               	addwf	(_codigoEntrada^(0+128)+2),w
  3977  0F3F  3EF0               	addlw	240
  3978  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0F42  00CB               	movwf	??_agregarModificarPrecio+1
  3981  0F43  084B               	movf	??_agregarModificarPrecio+1,w
  3982  0F44  00E2               	movwf	agregarModificarPrecio@tp
  3983  0F45                     l3036:	
  3984                           
  3985                           ;manejoProductos.c: 63:     if (tp > 0){
  3986  0F45  0862               	movf	agregarModificarPrecio@tp,w
  3987  0F46  1903               	btfsc	3,2
  3988  0F47  2F49               	goto	u3271
  3989  0F48  2F4A               	goto	u3270
  3990  0F49                     u3271:	
  3991  0F49  2FF6               	goto	l3054
  3992  0F4A                     u3270:	
  3993  0F4A                     l3038:	
  3994                           
  3995                           ;manejoProductos.c: 64:         char lower_8bits;;manejoProductos.c: 65:         char up
      +                          per_8bits;;manejoProductos.c: 66:         char mensaje[10];;manejoProductos.c: 67:      
      +                             tp--;
  3996  0F4A  3001               	movlw	1
  3997  0F4B  02E2               	subwf	agregarModificarPrecio@tp,f
  3998                           
  3999                           ;manejoProductos.c: 68:         tp = tp * 2;
  4000  0F4C  0862               	movf	agregarModificarPrecio@tp,w
  4001  0F4D  00CA               	movwf	??_agregarModificarPrecio
  4002  0F4E  074A               	addwf	??_agregarModificarPrecio,w
  4003  0F4F  00CB               	movwf	??_agregarModificarPrecio+1
  4004  0F50  084B               	movf	??_agregarModificarPrecio+1,w
  4005  0F51  00E2               	movwf	agregarModificarPrecio@tp
  4006  0F52                     l3040:	
  4007                           
  4008                           ;manejoProductos.c: 69:         short int precio;;manejoProductos.c: 72:         precio 
      +                          = 100 * (codigoEntrada[4] - '0')+ 10 * (codigoEntrada[5] - '0') + (codigoEntrada[6] - '0
      +                          ');
  4009  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  4010  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  4011  0F54  0864               	movf	(_codigoEntrada^(0+128)+4),w
  4012  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0F57  00CA               	movwf	??_agregarModificarPrecio
  4015  0F58  01CB               	clrf	??_agregarModificarPrecio+1
  4016  0F59  084A               	movf	??_agregarModificarPrecio,w
  4017  0F5A  00A0               	movwf	___wmul@multiplier
  4018  0F5B  084B               	movf	??_agregarModificarPrecio+1,w
  4019  0F5C  00A1               	movwf	___wmul@multiplier+1
  4020  0F5D  3064               	movlw	100
  4021  0F5E  00A2               	movwf	___wmul@multiplicand
  4022  0F5F  3000               	movlw	0
  4023  0F60  00A3               	movwf	___wmul@multiplicand+1
  4024  0F61  120A  158A  20CE  120A  158A  	fcall	___wmul
  4025  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0F68  0820               	movf	?___wmul,w
  4028  0F69  00CC               	movwf	??_agregarModificarPrecio+2
  4029  0F6A  0821               	movf	?___wmul+1,w
  4030  0F6B  00CD               	movwf	??_agregarModificarPrecio+3
  4031  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  4032  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  4033  0F6E  0865               	movf	(_codigoEntrada^(0+128)+5),w
  4034  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0F71  00CE               	movwf	??_agregarModificarPrecio+4
  4037  0F72  01CF               	clrf	??_agregarModificarPrecio+5
  4038  0F73  084E               	movf	??_agregarModificarPrecio+4,w
  4039  0F74  00A0               	movwf	___wmul@multiplier
  4040  0F75  084F               	movf	??_agregarModificarPrecio+5,w
  4041  0F76  00A1               	movwf	___wmul@multiplier+1
  4042  0F77  300A               	movlw	10
  4043  0F78  00A2               	movwf	___wmul@multiplicand
  4044  0F79  3000               	movlw	0
  4045  0F7A  00A3               	movwf	___wmul@multiplicand+1
  4046  0F7B  120A  158A  20CE  120A  158A  	fcall	___wmul
  4047  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0F82  0820               	movf	?___wmul,w
  4050  0F83  074C               	addwf	??_agregarModificarPrecio+2,w
  4051  0F84  00D0               	movwf	??_agregarModificarPrecio+6
  4052  0F85  0821               	movf	?___wmul+1,w
  4053  0F86  1803               	skipnc
  4054  0F87  0A21               	incf	?___wmul+1,w
  4055  0F88  074D               	addwf	??_agregarModificarPrecio+3,w
  4056  0F89  00D1               	movwf	??_agregarModificarPrecio+7
  4057  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  4058  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  4059  0F8C  0866               	movf	(_codigoEntrada^(0+128)+6),w
  4060  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0F8F  0750               	addwf	??_agregarModificarPrecio+6,w
  4063  0F90  00D2               	movwf	??_agregarModificarPrecio+8
  4064  0F91  3000               	movlw	0
  4065  0F92  1803               	skipnc
  4066  0F93  3001               	movlw	1
  4067  0F94  0751               	addwf	??_agregarModificarPrecio+7,w
  4068  0F95  00D3               	movwf	??_agregarModificarPrecio+9
  4069  0F96  0852               	movf	??_agregarModificarPrecio+8,w
  4070  0F97  3E30               	addlw	48
  4071  0F98  00E0               	movwf	agregarModificarPrecio@precio
  4072  0F99  0853               	movf	??_agregarModificarPrecio+9,w
  4073  0F9A  1803               	skipnc
  4074  0F9B  3E01               	addlw	1
  4075  0F9C  3EEB               	addlw	235
  4076  0F9D  00E1               	movwf	agregarModificarPrecio@precio+1
  4077  0F9E                     l3042:	
  4078                           
  4079                           ;manejoProductos.c: 73:         lower_8bits = precio & 0xff;
  4080  0F9E  0860               	movf	agregarModificarPrecio@precio,w
  4081  0F9F  00CA               	movwf	??_agregarModificarPrecio
  4082  0FA0  084A               	movf	??_agregarModificarPrecio,w
  4083  0FA1  00DE               	movwf	agregarModificarPrecio@lower_8bits
  4084  0FA2                     l3044:	
  4085                           
  4086                           ;manejoProductos.c: 74:         upper_8bits = (precio >> 8) & 0xff;
  4087  0FA2  0861               	movf	agregarModificarPrecio@precio+1,w
  4088  0FA3  00CA               	movwf	??_agregarModificarPrecio
  4089  0FA4  084A               	movf	??_agregarModificarPrecio,w
  4090  0FA5  00DF               	movwf	agregarModificarPrecio@upper_8bits
  4091  0FA6                     l3046:	
  4092                           
  4093                           ;manejoProductos.c: 75:         eeprom_write(tp ,upper_8bits);
  4094  0FA6  085F               	movf	agregarModificarPrecio@upper_8bits,w
  4095  0FA7  00CA               	movwf	??_agregarModificarPrecio
  4096  0FA8  084A               	movf	??_agregarModificarPrecio,w
  4097  0FA9  00A0               	movwf	eeprom_write@value
  4098  0FAA  0862               	movf	agregarModificarPrecio@tp,w
  4099  0FAB  120A  158A  215C  120A  158A  	fcall	_eeprom_write
  4100  0FB0                     l3048:	
  4101                           
  4102                           ;manejoProductos.c: 76:         eeprom_write(tp + 1,lower_8bits);
  4103  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0FB2  085E               	movf	agregarModificarPrecio@lower_8bits,w
  4106  0FB3  00CA               	movwf	??_agregarModificarPrecio
  4107  0FB4  084A               	movf	??_agregarModificarPrecio,w
  4108  0FB5  00A0               	movwf	eeprom_write@value
  4109  0FB6  0862               	movf	agregarModificarPrecio@tp,w
  4110  0FB7  3E01               	addlw	1
  4111  0FB8  120A  158A  215C  120A  158A  	fcall	_eeprom_write
  4112  0FBD                     l3050:	
  4113                           
  4114                           ;manejoProductos.c: 77:         sprintf(mensaje, "\nP%d=%d\n", tp/2 + 1, precio);
  4115  0FBD  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4116  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0FC0  00B4               	movwf	sprintf@sp
  4119  0FC1  3000               	movlw	0
  4120  0FC2  00B5               	movwf	sprintf@sp+1
  4121  0FC3  303E               	movlw	low (STR_17| (0+32768))
  4122  0FC4  00B6               	movwf	sprintf@f
  4123  0FC5  3084               	movlw	high (STR_17| (0+32768))
  4124  0FC6  00B7               	movwf	sprintf@f+1
  4125  0FC7  3002               	movlw	2
  4126  0FC8  00A0               	movwf	___awdiv@divisor
  4127  0FC9  3000               	movlw	0
  4128  0FCA  00A1               	movwf	___awdiv@divisor+1
  4129  0FCB  0862               	movf	agregarModificarPrecio@tp,w
  4130  0FCC  00CA               	movwf	??_agregarModificarPrecio
  4131  0FCD  01CB               	clrf	??_agregarModificarPrecio+1
  4132  0FCE  084A               	movf	??_agregarModificarPrecio,w
  4133  0FCF  00A2               	movwf	___awdiv@dividend
  4134  0FD0  084B               	movf	??_agregarModificarPrecio+1,w
  4135  0FD1  00A3               	movwf	___awdiv@dividend+1
  4136  0FD2  120A  158A  25E0  120A  158A  	fcall	___awdiv
  4137  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4138  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4139  0FD9  0820               	movf	?___awdiv,w
  4140  0FDA  3E01               	addlw	1
  4141  0FDB  00B8               	movwf	?_sprintf+4
  4142  0FDC  0821               	movf	?___awdiv+1,w
  4143  0FDD  1803               	skipnc
  4144  0FDE  3E01               	addlw	1
  4145  0FDF  3E00               	addlw	0
  4146  0FE0  00B9               	movwf	?_sprintf+5
  4147  0FE1  0861               	movf	agregarModificarPrecio@precio+1,w
  4148  0FE2  00BB               	movwf	?_sprintf+7
  4149  0FE3  0860               	movf	agregarModificarPrecio@precio,w
  4150  0FE4  00BA               	movwf	?_sprintf+6
  4151  0FE5  120A  118A  2453  120A  158A  	fcall	_sprintf
  4152  0FEA                     l3052:	
  4153                           
  4154                           ;manejoProductos.c: 78:         envioTX(mensaje);
  4155  0FEA  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4156  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  4158  0FED  00A0               	movwf	envioTX@mensaje
  4159  0FEE  3000               	movlw	0
  4160  0FEF  00A1               	movwf	envioTX@mensaje+1
  4161  0FF0  120A  158A  21CD  120A  158A  	fcall	_envioTX
  4162                           
  4163                           ;manejoProductos.c: 79:     }
  4164  0FF5  2FFF               	goto	l380
  4165  0FF6                     l3054:	
  4166                           
  4167                           ;manejoProductos.c: 81:         envioTX("No hay producto 00");
  4168  0FF6  30EC               	movlw	low (STR_18| (0+32768))
  4169  0FF7  00A0               	movwf	envioTX@mensaje
  4170  0FF8  3083               	movlw	high (STR_18| (0+32768))
  4171  0FF9  00A1               	movwf	envioTX@mensaje+1
  4172  0FFA  120A  158A  21CD  120A  158A  	fcall	_envioTX
  4173  0FFF                     l380:	
  4174  0FFF  0008               	return
  4175  1000                     __end_of_agregarModificarPrecio:	
  4176                           
  4177                           	psect	text13
  4178  095C                     __ptext13:	
  4179 ;; *************** function _eeprom_write *****************
  4180 ;; Defined at:
  4181 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  addr            1    wreg     unsigned char 
  4184 ;;  value           1    0[BANK0 ] unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  addr            1    2[BANK0 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       1       0       0       0
  4197 ;;      Locals:         0       1       0       0       0
  4198 ;;      Temps:          0       1       0       0       0
  4199 ;;      Totals:         0       3       0       0       0
  4200 ;;Total ram usage:        3 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    1
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_escrituraDeCierre
  4207 ;;		_agregarModificarPrecio
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _eeprom_write
  4213  095C                     _eeprom_write:	
  4214                           
  4215                           ;incstack = 0
  4216                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4217                           ;eeprom_write@addr stored from wreg
  4218  095C  1283               	bcf	3,5	;RP0=0, select bank0
  4219  095D  1303               	bcf	3,6	;RP1=0, select bank0
  4220  095E  00A2               	movwf	eeprom_write@addr
  4221  095F                     l530:	
  4222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.10
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  4223                           
  4224  095F                     l531:	
  4225  095F  1683               	bsf	3,5	;RP0=1, select bank3
  4226  0960  1703               	bsf	3,6	;RP1=1, select bank3
  4227  0961  188C               	btfsc	12,1	;volsfr
  4228  0962  2964               	goto	u2921
  4229  0963  2965               	goto	u2920
  4230  0964                     u2921:	
  4231  0964  295F               	goto	l531
  4232  0965                     u2920:	
  4233  0965                     l2842:	
  4234  0965  1283               	bcf	3,5	;RP0=0, select bank0
  4235  0966  1303               	bcf	3,6	;RP1=0, select bank0
  4236  0967  0822               	movf	eeprom_write@addr,w
  4237  0968  1283               	bcf	3,5	;RP0=0, select bank2
  4238  0969  1703               	bsf	3,6	;RP1=1, select bank2
  4239  096A  008D               	movwf	13	;volatile
  4240  096B  1283               	bcf	3,5	;RP0=0, select bank0
  4241  096C  1303               	bcf	3,6	;RP1=0, select bank0
  4242  096D  0820               	movf	eeprom_write@value,w
  4243  096E  1283               	bcf	3,5	;RP0=0, select bank2
  4244  096F  1703               	bsf	3,6	;RP1=1, select bank2
  4245  0970  008C               	movwf	12	;volatile
  4246  0971                     l2844:	
  4247  0971  303F               	movlw	63
  4248  0972  1283               	bcf	3,5	;RP0=0, select bank0
  4249  0973  1303               	bcf	3,6	;RP1=0, select bank0
  4250  0974  00A1               	movwf	??_eeprom_write
  4251  0975  0821               	movf	??_eeprom_write,w
  4252  0976  1683               	bsf	3,5	;RP0=1, select bank3
  4253  0977  1703               	bsf	3,6	;RP1=1, select bank3
  4254  0978  058C               	andwf	12,f	;volsfr
  4255  0979                     l2846:	
  4256  0979  1283               	bcf	3,5	;RP0=0, select bank0
  4257  097A  1303               	bcf	3,6	;RP1=0, select bank0
  4258  097B  1003               	bcf	3,0	;volatile
  4259  097C                     l2848:	
  4260  097C  1F8B               	btfss	11,7	;volatile
  4261  097D  297F               	goto	u2931
  4262  097E  2980               	goto	u2930
  4263  097F                     u2931:	
  4264  097F  2981               	goto	l534
  4265  0980                     u2930:	
  4266  0980                     l2850:	
  4267  0980  1403               	bsf	3,0	;volatile
  4268  0981                     l534:	
  4269  0981  138B               	bcf	11,7	;volatile
  4270  0982  1683               	bsf	3,5	;RP0=1, select bank3
  4271  0983  1703               	bsf	3,6	;RP1=1, select bank3
  4272  0984  150C               	bsf	12,2	;volsfr
  4273  0985                     l2852:	
  4274  0985  3055               	movlw	85
  4275  0986  008D               	movwf	13	;volsfr
  4276  0987  30AA               	movlw	170
  4277  0988  008D               	movwf	13	;volsfr
  4278  0989                     l2854:	
  4279  0989  148C               	bsf	12,1	;volsfr
  4280  098A                     l2856:	
  4281  098A  110C               	bcf	12,2	;volsfr
  4282  098B                     l2858:	
  4283  098B  1283               	bcf	3,5	;RP0=0, select bank0
  4284  098C  1303               	bcf	3,6	;RP1=0, select bank0
  4285  098D  1C03               	btfss	3,0	;volatile
  4286  098E  2990               	goto	u2941
  4287  098F  2991               	goto	u2940
  4288  0990                     u2941:	
  4289  0990  2992               	goto	l537
  4290  0991                     u2940:	
  4291  0991                     l2860:	
  4292  0991  178B               	bsf	11,7	;volatile
  4293  0992                     l537:	
  4294  0992  0008               	return
  4295  0993                     __end_of_eeprom_write:	
  4296                           
  4297                           	psect	text14
  4298  0878                     __ptext14:	
  4299 ;; *************** function ___bmul *****************
  4300 ;; Defined at:
  4301 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  multiplier      1    wreg     unsigned char 
  4304 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4307 ;;  product         1    2[BANK0 ] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      unsigned char 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       1       0       0       0
  4318 ;;      Locals:         0       2       0       0       0
  4319 ;;      Temps:          0       1       0       0       0
  4320 ;;      Totals:         0       4       0       0       0
  4321 ;;Total ram usage:        4 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_lecturaEtiqueta
  4328 ;;		_agregarModificarPrecio
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function ___bmul
  4334  0878                     ___bmul:	
  4335                           
  4336                           ;incstack = 0
  4337                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4338                           ;___bmul@multiplier stored from wreg
  4339  0878  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0879  1303               	bcf	3,6	;RP1=0, select bank0
  4341  087A  00A3               	movwf	___bmul@multiplier
  4342  087B                     l2882:	
  4343  087B  01A2               	clrf	___bmul@product
  4344  087C                     l2884:	
  4345  087C  1C23               	btfss	___bmul@multiplier,0
  4346  087D  287F               	goto	u2981
  4347  087E  2880               	goto	u2980
  4348  087F                     u2981:	
  4349  087F  2884               	goto	l2888
  4350  0880                     u2980:	
  4351  0880                     l2886:	
  4352  0880  0820               	movf	___bmul@multiplicand,w
  4353  0881  00A1               	movwf	??___bmul
  4354  0882  0821               	movf	??___bmul,w
  4355  0883  07A2               	addwf	___bmul@product,f
  4356  0884                     l2888:	
  4357  0884  1003               	clrc
  4358  0885  0DA0               	rlf	___bmul@multiplicand,f
  4359  0886                     l2890:	
  4360  0886  1003               	clrc
  4361  0887  0CA3               	rrf	___bmul@multiplier,f
  4362  0888  0823               	movf	___bmul@multiplier,w
  4363  0889  1D03               	btfss	3,2
  4364  088A  288C               	goto	u2991
  4365  088B  288D               	goto	u2990
  4366  088C                     u2991:	
  4367  088C  287C               	goto	l2884
  4368  088D                     u2990:	
  4369  088D                     l2892:	
  4370  088D  0822               	movf	___bmul@product,w
  4371  088E                     l600:	
  4372  088E  0008               	return
  4373  088F                     __end_of___bmul:	
  4374                           
  4375                           	psect	text15
  4376  069C                     __ptext15:	
  4377 ;; *************** function _lecturaConsulta *****************
  4378 ;; Defined at:
  4379 ;;		line 136 in file "lectura.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  articulo        2   36[BANK1 ] unsigned short 
  4384 ;;  strLote        32    4[BANK1 ] unsigned char [32]
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       0       0       0       0
  4395 ;;      Locals:         0       0      34       0       0
  4396 ;;      Temps:          0       0       4       0       0
  4397 ;;      Totals:         0       0      38       0       0
  4398 ;;Total ram usage:       38 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    4
  4401 ;; This function calls:
  4402 ;;		___wmul
  4403 ;;		_consultaPrecio
  4404 ;;		_envioTX
  4405 ;;		_sprintf
  4406 ;; This function is called by:
  4407 ;;		_lecturaComando
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _lecturaConsulta
  4413  069C                     _lecturaConsulta:	
  4414  069C                     l3132:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _lecturaConsulta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4417                           
  4418                           
  4419                           ;lectura.c: 138:     if (codigoEntrada[1] == 0x0D || codigoEntrada[1] == 0x0A) {
  4420  069C  300D               	movlw	13
  4421  069D  1683               	bsf	3,5	;RP0=1, select bank1
  4422  069E  1303               	bcf	3,6	;RP1=0, select bank1
  4423  069F  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4424  06A0  1903               	btfsc	3,2
  4425  06A1  2EA3               	goto	u3401
  4426  06A2  2EA4               	goto	u3400
  4427  06A3                     u3401:	
  4428  06A3  2EAA               	goto	l3136
  4429  06A4                     u3400:	
  4430  06A4                     l3134:	
  4431  06A4  300A               	movlw	10
  4432  06A5  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4433  06A6  1D03               	btfss	3,2
  4434  06A7  2EA9               	goto	u3411
  4435  06A8  2EAA               	goto	u3410
  4436  06A9                     u3411:	
  4437  06A9  2EC8               	goto	l3142
  4438  06AA                     u3410:	
  4439  06AA                     l3136:	
  4440                           
  4441                           ;lectura.c: 140:         if (cuenta != 0) {
  4442  06AA  0870               	movf	_cuenta,w
  4443  06AB  0471               	iorwf	_cuenta+1,w
  4444  06AC  1903               	btfsc	3,2
  4445  06AD  2EAF               	goto	u3421
  4446  06AE  2EB0               	goto	u3420
  4447  06AF                     u3421:	
  4448  06AF  2EBC               	goto	l3140
  4449  06B0                     u3420:	
  4450  06B0                     l3138:	
  4451                           
  4452                           ;lectura.c: 141:             envioTX("\nEstado: Activo\n");
  4453  06B0  3012               	movlw	low (STR_11| (0+32768))
  4454  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  4455  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  4456  06B3  00A0               	movwf	envioTX@mensaje
  4457  06B4  3084               	movlw	high (STR_11| (0+32768))
  4458  06B5  00A1               	movwf	envioTX@mensaje+1
  4459  06B6  120A  158A  21CD  120A  118A  	fcall	_envioTX
  4460                           
  4461                           ;lectura.c: 142:         }
  4462  06BB  2F84               	goto	l187
  4463  06BC                     l3140:	
  4464                           
  4465                           ;lectura.c: 144:             envioTX("\nEstado: En espera\n");
  4466  06BC  30C4               	movlw	low (STR_12| (0+32768))
  4467  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  4468  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  4469  06BF  00A0               	movwf	envioTX@mensaje
  4470  06C0  3083               	movlw	high (STR_12| (0+32768))
  4471  06C1  00A1               	movwf	envioTX@mensaje+1
  4472  06C2  120A  158A  21CD  120A  118A  	fcall	_envioTX
  4473  06C7  2F84               	goto	l187
  4474  06C8                     l3142:	
  4475  06C8  304C               	movlw	76
  4476  06C9  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4477  06CA  1D03               	btfss	3,2
  4478  06CB  2ECD               	goto	u3431
  4479  06CC  2ECE               	goto	u3430
  4480  06CD                     u3431:	
  4481  06CD  2F13               	goto	l3146
  4482  06CE                     u3430:	
  4483  06CE                     l3144:	
  4484                           
  4485                           ;lectura.c: 148:         char strLote[32];;lectura.c: 150:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  4486  06CE  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4487  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  4488  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  4489  06D1  00B4               	movwf	sprintf@sp
  4490  06D2  3000               	movlw	0
  4491  06D3  00B5               	movwf	sprintf@sp+1
  4492  06D4  3023               	movlw	low (STR_1| (0+32768))
  4493  06D5  00B6               	movwf	sprintf@f
  4494  06D6  3084               	movlw	high (STR_1| (0+32768))
  4495  06D7  00B7               	movwf	sprintf@f+1
  4496  06D8  0878               	movf	_nroLote,w
  4497  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  4498  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  4499  06DB  00A0               	movwf	??_lecturaConsulta^(0+128)
  4500  06DC  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4501  06DD  0820               	movf	??_lecturaConsulta^(0+128),w
  4502  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  4503  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  4504  06E0  00B8               	movwf	?_sprintf+4
  4505  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  4506  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  4507  06E3  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4508  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4509  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4510  06E6  00B9               	movwf	?_sprintf+5
  4511  06E7  086E               	movf	_ventasLote,w
  4512  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  4513  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  4514  06EA  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4515  06EB  01A3               	clrf	((??_lecturaConsulta+2)^(0+128)+1)
  4516  06EC  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4517  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  4518  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  4519  06EF  00BA               	movwf	?_sprintf+6
  4520  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  4521  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  4522  06F2  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4523  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4524  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4525  06F5  00BB               	movwf	?_sprintf+7
  4526  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  4527  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  4528  06F8  085B               	movf	(_montosLote+1)^(0+128),w
  4529  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  4530  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  4531  06FB  00BD               	movwf	?_sprintf+9
  4532  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  4533  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  4534  06FE  085A               	movf	_montosLote^(0+128),w
  4535  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4536  0700  1303               	bcf	3,6	;RP1=0, select bank0
  4537  0701  00BC               	movwf	?_sprintf+8
  4538  0702  120A  118A  2453  120A  118A  	fcall	_sprintf
  4539                           
  4540                           ;lectura.c: 151:         envioTX(strLote);
  4541  0707  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4542  0708  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0709  1303               	bcf	3,6	;RP1=0, select bank0
  4544  070A  00A0               	movwf	envioTX@mensaje
  4545  070B  3000               	movlw	0
  4546  070C  00A1               	movwf	envioTX@mensaje+1
  4547  070D  120A  158A  21CD  120A  118A  	fcall	_envioTX
  4548                           
  4549                           ;lectura.c: 153:     }
  4550  0712  2F84               	goto	l187
  4551  0713                     l3146:	
  4552  0713  3056               	movlw	86
  4553  0714  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4554  0715  1D03               	btfss	3,2
  4555  0716  2F18               	goto	u3441
  4556  0717  2F19               	goto	u3440
  4557  0718                     u3441:	
  4558  0718  2F21               	goto	l3150
  4559  0719                     u3440:	
  4560  0719                     l3148:	
  4561                           
  4562                           ;lectura.c: 156:         GO_nDONE = 1;
  4563  0719  1283               	bcf	3,5	;RP0=0, select bank0
  4564  071A  1303               	bcf	3,6	;RP1=0, select bank0
  4565  071B  151F               	bsf	31,2	;volatile
  4566                           
  4567                           ;lectura.c: 157:         pedidoVoltaje = 1;
  4568  071C  1683               	bsf	3,5	;RP0=1, select bank3
  4569  071D  1703               	bsf	3,6	;RP1=1, select bank3
  4570  071E  01D6               	clrf	_pedidoVoltaje^(0+384)
  4571  071F  0AD6               	incf	_pedidoVoltaje^(0+384),f
  4572                           
  4573                           ;lectura.c: 158:     }
  4574  0720  2F84               	goto	l187
  4575  0721                     l3150:	
  4576  0721  303A               	movlw	58
  4577  0722  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4578  0723  1803               	skipnc
  4579  0724  2F26               	goto	u3451
  4580  0725  2F27               	goto	u3450
  4581  0726                     u3451:	
  4582  0726  2F79               	goto	l3162
  4583  0727                     u3450:	
  4584  0727                     l3152:	
  4585  0727  3030               	movlw	48
  4586  0728  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4587  0729  1C03               	skipc
  4588  072A  2F2C               	goto	u3461
  4589  072B  2F2D               	goto	u3460
  4590  072C                     u3461:	
  4591  072C  2F79               	goto	l3162
  4592  072D                     u3460:	
  4593  072D                     l3154:	
  4594  072D  303A               	movlw	58
  4595  072E  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4596  072F  1803               	skipnc
  4597  0730  2F32               	goto	u3471
  4598  0731  2F33               	goto	u3470
  4599  0732                     u3471:	
  4600  0732  2F79               	goto	l3162
  4601  0733                     u3470:	
  4602  0733                     l3156:	
  4603  0733  3030               	movlw	48
  4604  0734  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4605  0735  1C03               	skipc
  4606  0736  2F38               	goto	u3481
  4607  0737  2F39               	goto	u3480
  4608  0738                     u3481:	
  4609  0738  2F79               	goto	l3162
  4610  0739                     u3480:	
  4611  0739                     l3158:	
  4612                           
  4613                           ;lectura.c: 162:         unsigned short int articulo = 10*(codigoEntrada[1] - '0') + (co
      +                          digoEntrada[2] - '0');
  4614  0739  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4615  073A  00A0               	movwf	??_lecturaConsulta^(0+128)
  4616  073B  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4617  073C  0820               	movf	??_lecturaConsulta^(0+128),w
  4618  073D  1283               	bcf	3,5	;RP0=0, select bank0
  4619  073E  1303               	bcf	3,6	;RP1=0, select bank0
  4620  073F  00A0               	movwf	___wmul@multiplier
  4621  0740  1683               	bsf	3,5	;RP0=1, select bank1
  4622  0741  1303               	bcf	3,6	;RP1=0, select bank1
  4623  0742  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4624  0743  1283               	bcf	3,5	;RP0=0, select bank0
  4625  0744  1303               	bcf	3,6	;RP1=0, select bank0
  4626  0745  00A1               	movwf	___wmul@multiplier+1
  4627  0746  300A               	movlw	10
  4628  0747  00A2               	movwf	___wmul@multiplicand
  4629  0748  3000               	movlw	0
  4630  0749  00A3               	movwf	___wmul@multiplicand+1
  4631  074A  120A  158A  20CE  120A  118A  	fcall	___wmul
  4632  074F  1683               	bsf	3,5	;RP0=1, select bank1
  4633  0750  1303               	bcf	3,6	;RP1=0, select bank1
  4634  0751  0862               	movf	(_codigoEntrada^(0+128)+2),w
  4635  0752  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0753  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0754  0720               	addwf	?___wmul,w
  4638  0755  1683               	bsf	3,5	;RP0=1, select bank1
  4639  0756  1303               	bcf	3,6	;RP1=0, select bank1
  4640  0757  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4641  0758  3000               	movlw	0
  4642  0759  1803               	skipnc
  4643  075A  3001               	movlw	1
  4644  075B  1283               	bcf	3,5	;RP0=0, select bank0
  4645  075C  1303               	bcf	3,6	;RP1=0, select bank0
  4646  075D  0721               	addwf	?___wmul+1,w
  4647  075E  1683               	bsf	3,5	;RP0=1, select bank1
  4648  075F  1303               	bcf	3,6	;RP1=0, select bank1
  4649  0760  00A3               	movwf	(??_lecturaConsulta+3)^(0+128)
  4650  0761  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4651  0762  3EF0               	addlw	240
  4652  0763  00C4               	movwf	lecturaConsulta@articulo^(0+128)
  4653  0764  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4654  0765  1803               	skipnc
  4655  0766  3E01               	addlw	1
  4656  0767  3EFD               	addlw	253
  4657  0768  00C5               	movwf	(lecturaConsulta@articulo+1)^(0+128)
  4658  0769                     l3160:	
  4659                           
  4660                           ;lectura.c: 164:         consultaPrecio(articulo);
  4661  0769  0845               	movf	(lecturaConsulta@articulo+1)^(0+128),w
  4662  076A  1283               	bcf	3,5	;RP0=0, select bank0
  4663  076B  1303               	bcf	3,6	;RP1=0, select bank0
  4664  076C  00CB               	movwf	consultaPrecio@articulo+1
  4665  076D  1683               	bsf	3,5	;RP0=1, select bank1
  4666  076E  1303               	bcf	3,6	;RP1=0, select bank1
  4667  076F  0844               	movf	lecturaConsulta@articulo^(0+128),w
  4668  0770  1283               	bcf	3,5	;RP0=0, select bank0
  4669  0771  1303               	bcf	3,6	;RP1=0, select bank0
  4670  0772  00CA               	movwf	consultaPrecio@articulo
  4671  0773  120A  118A  2235  120A  118A  	fcall	_consultaPrecio
  4672                           
  4673                           ;lectura.c: 166:     }
  4674  0778  2F84               	goto	l187
  4675  0779                     l3162:	
  4676                           
  4677                           ;lectura.c: 168:         envioTX("Ocurrio un error en la interpretacion.\n");
  4678  0779  3026               	movlw	low (STR_6| (0+32768))
  4679  077A  1283               	bcf	3,5	;RP0=0, select bank0
  4680  077B  1303               	bcf	3,6	;RP1=0, select bank0
  4681  077C  00A0               	movwf	envioTX@mensaje
  4682  077D  3083               	movlw	high (STR_6| (0+32768))
  4683  077E  00A1               	movwf	envioTX@mensaje+1
  4684  077F  120A  158A  21CD  120A  118A  	fcall	_envioTX
  4685  0784                     l187:	
  4686  0784  0008               	return
  4687  0785                     __end_of_lecturaConsulta:	
  4688                           
  4689                           	psect	text16
  4690  0235                     __ptext16:	
  4691 ;; *************** function _consultaPrecio *****************
  4692 ;; Defined at:
  4693 ;;		line 114 in file "lectura.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  articulo        2   42[BANK0 ] short 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  precio          2   74[BANK0 ] short 
  4698 ;;  mensaje        26   48[BANK0 ] unsigned char [26]
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4708 ;;      Params:         0       2       0       0       0
  4709 ;;      Locals:         0      28       0       0       0
  4710 ;;      Temps:          0       4       0       0       0
  4711 ;;      Totals:         0      34       0       0       0
  4712 ;;Total ram usage:       34 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    3
  4715 ;; This function calls:
  4716 ;;		___awdiv
  4717 ;;		___awmod
  4718 ;;		_eeprom_read
  4719 ;;		_envioTX
  4720 ;;		_sprintf
  4721 ;; This function is called by:
  4722 ;;		_lecturaConsulta
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _consultaPrecio
  4728  0235                     _consultaPrecio:	
  4729  0235                     l3056:	
  4730                           ;incstack = 0
  4731                           ; Regs used in _consultaPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4732                           
  4733                           
  4734                           ;lectura.c: 115:     char mensaje[26];;lectura.c: 116:     if(articulo > 0){
  4735  0235  1283               	bcf	3,5	;RP0=0, select bank0
  4736  0236  1303               	bcf	3,6	;RP1=0, select bank0
  4737  0237  084B               	movf	consultaPrecio@articulo+1,w
  4738  0238  3A80               	xorlw	128
  4739  0239  00FF               	movwf	btemp+1
  4740  023A  3080               	movlw	128
  4741  023B  027F               	subwf	btemp+1,w
  4742  023C  1D03               	skipz
  4743  023D  2A40               	goto	u3285
  4744  023E  3001               	movlw	1
  4745  023F  024A               	subwf	consultaPrecio@articulo,w
  4746  0240                     u3285:	
  4747  0240  1C03               	skipc
  4748  0241  2A43               	goto	u3281
  4749  0242  2A44               	goto	u3280
  4750  0243                     u3281:	
  4751  0243  2AF3               	goto	l3070
  4752  0244                     u3280:	
  4753  0244                     l3058:	
  4754                           
  4755                           ;lectura.c: 117:         articulo--;
  4756  0244  30FF               	movlw	255
  4757  0245  1283               	bcf	3,5	;RP0=0, select bank0
  4758  0246  1303               	bcf	3,6	;RP1=0, select bank0
  4759  0247  07CA               	addwf	consultaPrecio@articulo,f
  4760  0248  1803               	skipnc
  4761  0249  0ACB               	incf	consultaPrecio@articulo+1,f
  4762  024A  30FF               	movlw	255
  4763  024B  07CB               	addwf	consultaPrecio@articulo+1,f
  4764                           
  4765                           ;lectura.c: 118:         articulo = articulo * 2;
  4766  024C  1003               	clrc
  4767  024D  0D4A               	rlf	consultaPrecio@articulo,w
  4768  024E  00CA               	movwf	consultaPrecio@articulo
  4769  024F  0D4B               	rlf	consultaPrecio@articulo+1,w
  4770  0250  00CB               	movwf	consultaPrecio@articulo+1
  4771  0251                     l3060:	
  4772                           
  4773                           ;lectura.c: 119:         short int precio = (eeprom_read(articulo) << 8) | (eeprom_read(
      +                          articulo+1));
  4774  0251  084A               	movf	consultaPrecio@articulo,w
  4775  0252  3E01               	addlw	1
  4776  0253  120A  158A  208F  120A  118A  	fcall	_eeprom_read
  4777  0258  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0259  1303               	bcf	3,6	;RP1=0, select bank0
  4779  025A  00CC               	movwf	??_consultaPrecio
  4780  025B  01CD               	clrf	??_consultaPrecio+1
  4781  025C  084A               	movf	consultaPrecio@articulo,w
  4782  025D  120A  158A  208F  120A  118A  	fcall	_eeprom_read
  4783  0262  1283               	bcf	3,5	;RP0=0, select bank0
  4784  0263  1303               	bcf	3,6	;RP1=0, select bank0
  4785  0264  00CE               	movwf	??_consultaPrecio+2
  4786  0265  01CF               	clrf	??_consultaPrecio+3
  4787  0266  084E               	movf	??_consultaPrecio+2,w
  4788  0267  00CF               	movwf	??_consultaPrecio+3
  4789  0268  01CE               	clrf	??_consultaPrecio+2
  4790  0269  084C               	movf	??_consultaPrecio,w
  4791  026A  044E               	iorwf	??_consultaPrecio+2,w
  4792  026B  00EA               	movwf	consultaPrecio@precio
  4793  026C  084D               	movf	??_consultaPrecio+1,w
  4794  026D  044F               	iorwf	??_consultaPrecio+3,w
  4795  026E  00EB               	movwf	consultaPrecio@precio+1
  4796  026F                     l3062:	
  4797                           
  4798                           ;lectura.c: 121:         if (precio > 999 || precio < 0) {
  4799  026F  086B               	movf	consultaPrecio@precio+1,w
  4800  0270  3A80               	xorlw	128
  4801  0271  00FF               	movwf	btemp+1
  4802  0272  3083               	movlw	131
  4803  0273  027F               	subwf	btemp+1,w
  4804  0274  1D03               	skipz
  4805  0275  2A78               	goto	u3295
  4806  0276  30E8               	movlw	232
  4807  0277  026A               	subwf	consultaPrecio@precio,w
  4808  0278                     u3295:	
  4809  0278  1803               	skipnc
  4810  0279  2A7B               	goto	u3291
  4811  027A  2A7C               	goto	u3290
  4812  027B                     u3291:	
  4813  027B  2A82               	goto	l3066
  4814  027C                     u3290:	
  4815  027C                     l3064:	
  4816  027C  1283               	bcf	3,5	;RP0=0, select bank0
  4817  027D  1303               	bcf	3,6	;RP1=0, select bank0
  4818  027E  1FEB               	btfss	consultaPrecio@precio+1,7
  4819  027F  2A81               	goto	u3301
  4820  0280  2A82               	goto	u3300
  4821  0281                     u3301:	
  4822  0281  2A9D               	goto	l3068
  4823  0282                     u3300:	
  4824  0282                     l3066:	
  4825                           
  4826                           ;lectura.c: 122:             sprintf(mensaje, "\nProducto no encontrado\n");
  4827  0282  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4828  0283  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0284  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0285  00B4               	movwf	sprintf@sp
  4831  0286  3000               	movlw	0
  4832  0287  00B5               	movwf	sprintf@sp+1
  4833  0288  3067               	movlw	low (STR_8| (0+32768))
  4834  0289  00B6               	movwf	sprintf@f
  4835  028A  3083               	movlw	high (STR_8| (0+32768))
  4836  028B  00B7               	movwf	sprintf@f+1
  4837  028C  120A  118A  2453  120A  118A  	fcall	_sprintf
  4838                           
  4839                           ;lectura.c: 123:             envioTX(mensaje);
  4840  0291  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4841  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4842  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4843  0294  00A0               	movwf	envioTX@mensaje
  4844  0295  3000               	movlw	0
  4845  0296  00A1               	movwf	envioTX@mensaje+1
  4846  0297  120A  158A  21CD  120A  118A  	fcall	_envioTX
  4847                           
  4848                           ;lectura.c: 124:         }
  4849  029C  2AFE               	goto	l172
  4850  029D                     l3068:	
  4851                           
  4852                           ;lectura.c: 126:             sprintf(mensaje, "TP: %d P: %d,%d Euros", articulo/2 + 1, p
      +                          recio/10, precio%10);
  4853  029D  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4854  029E  00B4               	movwf	sprintf@sp
  4855  029F  3000               	movlw	0
  4856  02A0  00B5               	movwf	sprintf@sp+1
  4857  02A1  30AE               	movlw	low (STR_9| (0+32768))
  4858  02A2  00B6               	movwf	sprintf@f
  4859  02A3  3083               	movlw	high (STR_9| (0+32768))
  4860  02A4  00B7               	movwf	sprintf@f+1
  4861  02A5  3002               	movlw	2
  4862  02A6  00A0               	movwf	___awdiv@divisor
  4863  02A7  3000               	movlw	0
  4864  02A8  00A1               	movwf	___awdiv@divisor+1
  4865  02A9  084B               	movf	consultaPrecio@articulo+1,w
  4866  02AA  00A3               	movwf	___awdiv@dividend+1
  4867  02AB  084A               	movf	consultaPrecio@articulo,w
  4868  02AC  00A2               	movwf	___awdiv@dividend
  4869  02AD  120A  158A  25E0  120A  118A  	fcall	___awdiv
  4870  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  4871  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  4872  02B4  0820               	movf	?___awdiv,w
  4873  02B5  3E01               	addlw	1
  4874  02B6  00B8               	movwf	?_sprintf+4
  4875  02B7  0821               	movf	?___awdiv+1,w
  4876  02B8  1803               	skipnc
  4877  02B9  3E01               	addlw	1
  4878  02BA  3E00               	addlw	0
  4879  02BB  00B9               	movwf	?_sprintf+5
  4880  02BC  300A               	movlw	10
  4881  02BD  00A0               	movwf	___awdiv@divisor
  4882  02BE  3000               	movlw	0
  4883  02BF  00A1               	movwf	___awdiv@divisor+1
  4884  02C0  086B               	movf	consultaPrecio@precio+1,w
  4885  02C1  00A3               	movwf	___awdiv@dividend+1
  4886  02C2  086A               	movf	consultaPrecio@precio,w
  4887  02C3  00A2               	movwf	___awdiv@dividend
  4888  02C4  120A  158A  25E0  120A  118A  	fcall	___awdiv
  4889  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4890  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4891  02CB  0821               	movf	?___awdiv+1,w
  4892  02CC  00BB               	movwf	?_sprintf+7
  4893  02CD  0820               	movf	?___awdiv,w
  4894  02CE  00BA               	movwf	?_sprintf+6
  4895  02CF  300A               	movlw	10
  4896  02D0  00A0               	movwf	___awmod@divisor
  4897  02D1  3000               	movlw	0
  4898  02D2  00A1               	movwf	___awmod@divisor+1
  4899  02D3  086B               	movf	consultaPrecio@precio+1,w
  4900  02D4  00A3               	movwf	___awmod@dividend+1
  4901  02D5  086A               	movf	consultaPrecio@precio,w
  4902  02D6  00A2               	movwf	___awmod@dividend
  4903  02D7  120A  158A  239B  120A  118A  	fcall	___awmod
  4904  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  4905  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  4906  02DE  0821               	movf	?___awmod+1,w
  4907  02DF  00BD               	movwf	?_sprintf+9
  4908  02E0  0820               	movf	?___awmod,w
  4909  02E1  00BC               	movwf	?_sprintf+8
  4910  02E2  120A  118A  2453  120A  118A  	fcall	_sprintf
  4911                           
  4912                           ;lectura.c: 127:             envioTX(mensaje);
  4913  02E7  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4914  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  4915  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  4916  02EA  00A0               	movwf	envioTX@mensaje
  4917  02EB  3000               	movlw	0
  4918  02EC  00A1               	movwf	envioTX@mensaje+1
  4919  02ED  120A  158A  21CD  120A  118A  	fcall	_envioTX
  4920  02F2  2AFE               	goto	l172
  4921  02F3                     l3070:	
  4922                           
  4923                           ;lectura.c: 131:         envioTX("No existe producto 00");
  4924  02F3  3098               	movlw	low (STR_10| (0+32768))
  4925  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  4926  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  4927  02F6  00A0               	movwf	envioTX@mensaje
  4928  02F7  3083               	movlw	high (STR_10| (0+32768))
  4929  02F8  00A1               	movwf	envioTX@mensaje+1
  4930  02F9  120A  158A  21CD  120A  118A  	fcall	_envioTX
  4931  02FE                     l172:	
  4932  02FE  0008               	return
  4933  02FF                     __end_of_consultaPrecio:	
  4934                           
  4935                           	psect	text17
  4936  088F                     __ptext17:	
  4937 ;; *************** function _eeprom_read *****************
  4938 ;; Defined at:
  4939 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  addr            1    wreg     unsigned char 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  addr            1    1[BANK0 ] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      unsigned char 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4953 ;;      Params:         0       0       0       0       0
  4954 ;;      Locals:         0       1       0       0       0
  4955 ;;      Temps:          0       1       0       0       0
  4956 ;;      Totals:         0       2       0       0       0
  4957 ;;Total ram usage:        2 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    1
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_EEPROM_search
  4964 ;;		_consultaPrecio
  4965 ;;		_main
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function _eeprom_read
  4971  088F                     _eeprom_read:	
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4975                           ;eeprom_read@addr stored from wreg
  4976  088F  1283               	bcf	3,5	;RP0=0, select bank0
  4977  0890  1303               	bcf	3,6	;RP1=0, select bank0
  4978  0891  00A1               	movwf	eeprom_read@addr
  4979  0892                     l511:	
  4980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  4981                           
  4982  0892  0064               	clrwdt	;# 
  4983  0893  1683               	bsf	3,5	;RP0=1, select bank3
  4984  0894  1703               	bsf	3,6	;RP1=1, select bank3
  4985  0895  188C               	btfsc	12,1	;volsfr
  4986  0896  2898               	goto	u2951
  4987  0897  289B               	goto	u2950
  4988  0898                     u2951:	
  4989  0898  1283               	bcf	3,5	;RP0=0, select bank0
  4990  0899  1303               	bcf	3,6	;RP1=0, select bank0
  4991  089A  2892               	goto	l511
  4992  089B                     u2950:	
  4993  089B                     l2862:	
  4994                           
  4995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4996  089B  1283               	bcf	3,5	;RP0=0, select bank0
  4997  089C  1303               	bcf	3,6	;RP1=0, select bank0
  4998  089D  0821               	movf	eeprom_read@addr,w
  4999  089E  1283               	bcf	3,5	;RP0=0, select bank2
  5000  089F  1703               	bsf	3,6	;RP1=1, select bank2
  5001  08A0  008D               	movwf	13	;volatile
  5002  08A1  303F               	movlw	63
  5003  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  5004  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  5005  08A4  00A0               	movwf	??_eeprom_read
  5006  08A5  0820               	movf	??_eeprom_read,w
  5007  08A6  1683               	bsf	3,5	;RP0=1, select bank3
  5008  08A7  1703               	bsf	3,6	;RP1=1, select bank3
  5009  08A8  058C               	andwf	12,f	;volsfr
  5010  08A9  140C               	bsf	12,0	;volsfr
  5011  08AA  1283               	bcf	3,5	;RP0=0, select bank2
  5012  08AB  1703               	bsf	3,6	;RP1=1, select bank2
  5013  08AC  080C               	movf	12,w	;volatile
  5014  08AD                     l513:	
  5015  08AD  0008               	return
  5016  08AE                     __end_of_eeprom_read:	
  5017                           
  5018                           	psect	text18
  5019  0B9B                     __ptext18:	
  5020 ;; *************** function ___awmod *****************
  5021 ;; Defined at:
  5022 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  divisor         2    0[BANK0 ] int 
  5025 ;;  dividend        2    2[BANK0 ] int 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  sign            1    6[BANK0 ] unsigned char 
  5028 ;;  counter         1    5[BANK0 ] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2    0[BANK0 ] int 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5038 ;;      Params:         0       4       0       0       0
  5039 ;;      Locals:         0       2       0       0       0
  5040 ;;      Temps:          0       1       0       0       0
  5041 ;;      Totals:         0       7       0       0       0
  5042 ;;Total ram usage:        7 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    1
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_lecturaEtiqueta
  5049 ;;		_consultaPrecio
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function ___awmod
  5055  0B9B                     ___awmod:	
  5056  0B9B                     l2940:	
  5057                           ;incstack = 0
  5058                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5059                           
  5060  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  5061  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  5062  0B9D  01A6               	clrf	___awmod@sign
  5063  0B9E                     l2942:	
  5064  0B9E  1FA3               	btfss	___awmod@dividend+1,7
  5065  0B9F  2BA1               	goto	u3101
  5066  0BA0  2BA2               	goto	u3100
  5067  0BA1                     u3101:	
  5068  0BA1  2BA9               	goto	l2948
  5069  0BA2                     u3100:	
  5070  0BA2                     l2944:	
  5071  0BA2  09A2               	comf	___awmod@dividend,f
  5072  0BA3  09A3               	comf	___awmod@dividend+1,f
  5073  0BA4  0AA2               	incf	___awmod@dividend,f
  5074  0BA5  1903               	skipnz
  5075  0BA6  0AA3               	incf	___awmod@dividend+1,f
  5076  0BA7                     l2946:	
  5077  0BA7  01A6               	clrf	___awmod@sign
  5078  0BA8  0AA6               	incf	___awmod@sign,f
  5079  0BA9                     l2948:	
  5080  0BA9  1FA1               	btfss	___awmod@divisor+1,7
  5081  0BAA  2BAC               	goto	u3111
  5082  0BAB  2BAD               	goto	u3110
  5083  0BAC                     u3111:	
  5084  0BAC  2BB2               	goto	l2952
  5085  0BAD                     u3110:	
  5086  0BAD                     l2950:	
  5087  0BAD  09A0               	comf	___awmod@divisor,f
  5088  0BAE  09A1               	comf	___awmod@divisor+1,f
  5089  0BAF  0AA0               	incf	___awmod@divisor,f
  5090  0BB0  1903               	skipnz
  5091  0BB1  0AA1               	incf	___awmod@divisor+1,f
  5092  0BB2                     l2952:	
  5093  0BB2  0820               	movf	___awmod@divisor,w
  5094  0BB3  0421               	iorwf	___awmod@divisor+1,w
  5095  0BB4  1903               	btfsc	3,2
  5096  0BB5  2BB7               	goto	u3121
  5097  0BB6  2BB8               	goto	u3120
  5098  0BB7                     u3121:	
  5099  0BB7  2BE7               	goto	l2970
  5100  0BB8                     u3120:	
  5101  0BB8                     l2954:	
  5102  0BB8  01A5               	clrf	___awmod@counter
  5103  0BB9  0AA5               	incf	___awmod@counter,f
  5104  0BBA  2BC6               	goto	l2960
  5105  0BBB                     l2956:	
  5106  0BBB  3001               	movlw	1
  5107  0BBC                     u3135:	
  5108  0BBC  1003               	clrc
  5109  0BBD  0DA0               	rlf	___awmod@divisor,f
  5110  0BBE  0DA1               	rlf	___awmod@divisor+1,f
  5111  0BBF  3EFF               	addlw	-1
  5112  0BC0  1D03               	skipz
  5113  0BC1  2BBC               	goto	u3135
  5114  0BC2                     l2958:	
  5115  0BC2  3001               	movlw	1
  5116  0BC3  00A4               	movwf	??___awmod
  5117  0BC4  0824               	movf	??___awmod,w
  5118  0BC5  07A5               	addwf	___awmod@counter,f
  5119  0BC6                     l2960:	
  5120  0BC6  1FA1               	btfss	___awmod@divisor+1,7
  5121  0BC7  2BC9               	goto	u3141
  5122  0BC8  2BCA               	goto	u3140
  5123  0BC9                     u3141:	
  5124  0BC9  2BBB               	goto	l2956
  5125  0BCA                     u3140:	
  5126  0BCA                     l2962:	
  5127  0BCA  0821               	movf	___awmod@divisor+1,w
  5128  0BCB  0223               	subwf	___awmod@dividend+1,w
  5129  0BCC  1D03               	skipz
  5130  0BCD  2BD0               	goto	u3155
  5131  0BCE  0820               	movf	___awmod@divisor,w
  5132  0BCF  0222               	subwf	___awmod@dividend,w
  5133  0BD0                     u3155:	
  5134  0BD0  1C03               	skipc
  5135  0BD1  2BD3               	goto	u3151
  5136  0BD2  2BD4               	goto	u3150
  5137  0BD3                     u3151:	
  5138  0BD3  2BDA               	goto	l2966
  5139  0BD4                     u3150:	
  5140  0BD4                     l2964:	
  5141  0BD4  0820               	movf	___awmod@divisor,w
  5142  0BD5  02A2               	subwf	___awmod@dividend,f
  5143  0BD6  0821               	movf	___awmod@divisor+1,w
  5144  0BD7  1C03               	skipc
  5145  0BD8  03A3               	decf	___awmod@dividend+1,f
  5146  0BD9  02A3               	subwf	___awmod@dividend+1,f
  5147  0BDA                     l2966:	
  5148  0BDA  3001               	movlw	1
  5149  0BDB                     u3165:	
  5150  0BDB  1003               	clrc
  5151  0BDC  0CA1               	rrf	___awmod@divisor+1,f
  5152  0BDD  0CA0               	rrf	___awmod@divisor,f
  5153  0BDE  3EFF               	addlw	-1
  5154  0BDF  1D03               	skipz
  5155  0BE0  2BDB               	goto	u3165
  5156  0BE1                     l2968:	
  5157  0BE1  3001               	movlw	1
  5158  0BE2  02A5               	subwf	___awmod@counter,f
  5159  0BE3  1D03               	btfss	3,2
  5160  0BE4  2BE6               	goto	u3171
  5161  0BE5  2BE7               	goto	u3170
  5162  0BE6                     u3171:	
  5163  0BE6  2BCA               	goto	l2962
  5164  0BE7                     u3170:	
  5165  0BE7                     l2970:	
  5166  0BE7  0826               	movf	___awmod@sign,w
  5167  0BE8  1903               	btfsc	3,2
  5168  0BE9  2BEB               	goto	u3181
  5169  0BEA  2BEC               	goto	u3180
  5170  0BEB                     u3181:	
  5171  0BEB  2BF1               	goto	l2974
  5172  0BEC                     u3180:	
  5173  0BEC                     l2972:	
  5174  0BEC  09A2               	comf	___awmod@dividend,f
  5175  0BED  09A3               	comf	___awmod@dividend+1,f
  5176  0BEE  0AA2               	incf	___awmod@dividend,f
  5177  0BEF  1903               	skipnz
  5178  0BF0  0AA3               	incf	___awmod@dividend+1,f
  5179  0BF1                     l2974:	
  5180  0BF1  0823               	movf	___awmod@dividend+1,w
  5181  0BF2  00A1               	movwf	?___awmod+1
  5182  0BF3  0822               	movf	___awmod@dividend,w
  5183  0BF4  00A0               	movwf	?___awmod
  5184  0BF5                     l740:	
  5185  0BF5  0008               	return
  5186  0BF6                     __end_of___awmod:	
  5187                           
  5188                           	psect	text19
  5189  0DE0                     __ptext19:	
  5190 ;; *************** function ___awdiv *****************
  5191 ;; Defined at:
  5192 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  divisor         2    0[BANK0 ] int 
  5195 ;;  dividend        2    2[BANK0 ] int 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  quotient        2    7[BANK0 ] int 
  5198 ;;  sign            1    6[BANK0 ] unsigned char 
  5199 ;;  counter         1    5[BANK0 ] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  2    0[BANK0 ] int 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5209 ;;      Params:         0       4       0       0       0
  5210 ;;      Locals:         0       4       0       0       0
  5211 ;;      Temps:          0       1       0       0       0
  5212 ;;      Totals:         0       9       0       0       0
  5213 ;;Total ram usage:        9 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    1
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_EEPROM_search
  5220 ;;		_consultaPrecio
  5221 ;;		_agregarModificarPrecio
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function ___awdiv
  5227  0DE0                     ___awdiv:	
  5228  0DE0                     l2896:	
  5229                           ;incstack = 0
  5230                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5231                           
  5232  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  5233  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  5234  0DE2  01A6               	clrf	___awdiv@sign
  5235  0DE3                     l2898:	
  5236  0DE3  1FA1               	btfss	___awdiv@divisor+1,7
  5237  0DE4  2DE6               	goto	u3001
  5238  0DE5  2DE7               	goto	u3000
  5239  0DE6                     u3001:	
  5240  0DE6  2DEE               	goto	l2904
  5241  0DE7                     u3000:	
  5242  0DE7                     l2900:	
  5243  0DE7  09A0               	comf	___awdiv@divisor,f
  5244  0DE8  09A1               	comf	___awdiv@divisor+1,f
  5245  0DE9  0AA0               	incf	___awdiv@divisor,f
  5246  0DEA  1903               	skipnz
  5247  0DEB  0AA1               	incf	___awdiv@divisor+1,f
  5248  0DEC                     l2902:	
  5249  0DEC  01A6               	clrf	___awdiv@sign
  5250  0DED  0AA6               	incf	___awdiv@sign,f
  5251  0DEE                     l2904:	
  5252  0DEE  1FA3               	btfss	___awdiv@dividend+1,7
  5253  0DEF  2DF1               	goto	u3011
  5254  0DF0  2DF2               	goto	u3010
  5255  0DF1                     u3011:	
  5256  0DF1  2DFB               	goto	l2910
  5257  0DF2                     u3010:	
  5258  0DF2                     l2906:	
  5259  0DF2  09A2               	comf	___awdiv@dividend,f
  5260  0DF3  09A3               	comf	___awdiv@dividend+1,f
  5261  0DF4  0AA2               	incf	___awdiv@dividend,f
  5262  0DF5  1903               	skipnz
  5263  0DF6  0AA3               	incf	___awdiv@dividend+1,f
  5264  0DF7                     l2908:	
  5265  0DF7  3001               	movlw	1
  5266  0DF8  00A4               	movwf	??___awdiv
  5267  0DF9  0824               	movf	??___awdiv,w
  5268  0DFA  06A6               	xorwf	___awdiv@sign,f
  5269  0DFB                     l2910:	
  5270  0DFB  01A7               	clrf	___awdiv@quotient
  5271  0DFC  01A8               	clrf	___awdiv@quotient+1
  5272  0DFD                     l2912:	
  5273  0DFD  0820               	movf	___awdiv@divisor,w
  5274  0DFE  0421               	iorwf	___awdiv@divisor+1,w
  5275  0DFF  1903               	btfsc	3,2
  5276  0E00  2E02               	goto	u3021
  5277  0E01  2E03               	goto	u3020
  5278  0E02                     u3021:	
  5279  0E02  2E3A               	goto	l2932
  5280  0E03                     u3020:	
  5281  0E03                     l2914:	
  5282  0E03  01A5               	clrf	___awdiv@counter
  5283  0E04  0AA5               	incf	___awdiv@counter,f
  5284  0E05  2E11               	goto	l2920
  5285  0E06                     l2916:	
  5286  0E06  3001               	movlw	1
  5287  0E07                     u3035:	
  5288  0E07  1003               	clrc
  5289  0E08  0DA0               	rlf	___awdiv@divisor,f
  5290  0E09  0DA1               	rlf	___awdiv@divisor+1,f
  5291  0E0A  3EFF               	addlw	-1
  5292  0E0B  1D03               	skipz
  5293  0E0C  2E07               	goto	u3035
  5294  0E0D                     l2918:	
  5295  0E0D  3001               	movlw	1
  5296  0E0E  00A4               	movwf	??___awdiv
  5297  0E0F  0824               	movf	??___awdiv,w
  5298  0E10  07A5               	addwf	___awdiv@counter,f
  5299  0E11                     l2920:	
  5300  0E11  1FA1               	btfss	___awdiv@divisor+1,7
  5301  0E12  2E14               	goto	u3041
  5302  0E13  2E15               	goto	u3040
  5303  0E14                     u3041:	
  5304  0E14  2E06               	goto	l2916
  5305  0E15                     u3040:	
  5306  0E15                     l2922:	
  5307  0E15  3001               	movlw	1
  5308  0E16                     u3055:	
  5309  0E16  1003               	clrc
  5310  0E17  0DA7               	rlf	___awdiv@quotient,f
  5311  0E18  0DA8               	rlf	___awdiv@quotient+1,f
  5312  0E19  3EFF               	addlw	-1
  5313  0E1A  1D03               	skipz
  5314  0E1B  2E16               	goto	u3055
  5315  0E1C  0821               	movf	___awdiv@divisor+1,w
  5316  0E1D  0223               	subwf	___awdiv@dividend+1,w
  5317  0E1E  1D03               	skipz
  5318  0E1F  2E22               	goto	u3065
  5319  0E20  0820               	movf	___awdiv@divisor,w
  5320  0E21  0222               	subwf	___awdiv@dividend,w
  5321  0E22                     u3065:	
  5322  0E22  1C03               	skipc
  5323  0E23  2E25               	goto	u3061
  5324  0E24  2E26               	goto	u3060
  5325  0E25                     u3061:	
  5326  0E25  2E2D               	goto	l2928
  5327  0E26                     u3060:	
  5328  0E26                     l2924:	
  5329  0E26  0820               	movf	___awdiv@divisor,w
  5330  0E27  02A2               	subwf	___awdiv@dividend,f
  5331  0E28  0821               	movf	___awdiv@divisor+1,w
  5332  0E29  1C03               	skipc
  5333  0E2A  03A3               	decf	___awdiv@dividend+1,f
  5334  0E2B  02A3               	subwf	___awdiv@dividend+1,f
  5335  0E2C                     l2926:	
  5336  0E2C  1427               	bsf	___awdiv@quotient,0
  5337  0E2D                     l2928:	
  5338  0E2D  3001               	movlw	1
  5339  0E2E                     u3075:	
  5340  0E2E  1003               	clrc
  5341  0E2F  0CA1               	rrf	___awdiv@divisor+1,f
  5342  0E30  0CA0               	rrf	___awdiv@divisor,f
  5343  0E31  3EFF               	addlw	-1
  5344  0E32  1D03               	skipz
  5345  0E33  2E2E               	goto	u3075
  5346  0E34                     l2930:	
  5347  0E34  3001               	movlw	1
  5348  0E35  02A5               	subwf	___awdiv@counter,f
  5349  0E36  1D03               	btfss	3,2
  5350  0E37  2E39               	goto	u3081
  5351  0E38  2E3A               	goto	u3080
  5352  0E39                     u3081:	
  5353  0E39  2E15               	goto	l2922
  5354  0E3A                     u3080:	
  5355  0E3A                     l2932:	
  5356  0E3A  0826               	movf	___awdiv@sign,w
  5357  0E3B  1903               	btfsc	3,2
  5358  0E3C  2E3E               	goto	u3091
  5359  0E3D  2E3F               	goto	u3090
  5360  0E3E                     u3091:	
  5361  0E3E  2E44               	goto	l2936
  5362  0E3F                     u3090:	
  5363  0E3F                     l2934:	
  5364  0E3F  09A7               	comf	___awdiv@quotient,f
  5365  0E40  09A8               	comf	___awdiv@quotient+1,f
  5366  0E41  0AA7               	incf	___awdiv@quotient,f
  5367  0E42  1903               	skipnz
  5368  0E43  0AA8               	incf	___awdiv@quotient+1,f
  5369  0E44                     l2936:	
  5370  0E44  0828               	movf	___awdiv@quotient+1,w
  5371  0E45  00A1               	movwf	?___awdiv+1
  5372  0E46  0827               	movf	___awdiv@quotient,w
  5373  0E47  00A0               	movwf	?___awdiv
  5374  0E48                     l727:	
  5375  0E48  0008               	return
  5376  0E49                     __end_of___awdiv:	
  5377                           
  5378                           	psect	text20
  5379  0A45                     __ptext20:	
  5380 ;; *************** function _accionesDeshacer *****************
  5381 ;; Defined at:
  5382 ;;		line 23 in file "acciones.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5396 ;;      Params:         0       0       0       0       0
  5397 ;;      Locals:         0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0
  5399 ;;      Totals:         0       0       0       0       0
  5400 ;;Total ram usage:        0 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    4
  5403 ;; This function calls:
  5404 ;;		_eliminarProd
  5405 ;;		_envioTX
  5406 ;;		_mostrarDigitos
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           
  5413                           ;psect for function _accionesDeshacer
  5414  0A45                     _accionesDeshacer:	
  5415  0A45                     l3284:	
  5416                           ;incstack = 0
  5417                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5418                           
  5419                           
  5420                           ;acciones.c: 24:     if (cuenta != auxCuenta) {
  5421  0A45  1683               	bsf	3,5	;RP0=1, select bank3
  5422  0A46  1703               	bsf	3,6	;RP1=1, select bank3
  5423  0A47  0855               	movf	(_auxCuenta+1)^(0+384),w
  5424  0A48  0671               	xorwf	_cuenta+1,w
  5425  0A49  1D03               	skipz
  5426  0A4A  2A4D               	goto	u3615
  5427  0A4B  0854               	movf	_auxCuenta^(0+384),w
  5428  0A4C  0670               	xorwf	_cuenta,w
  5429  0A4D                     u3615:	
  5430  0A4D  1903               	skipnz
  5431  0A4E  2A50               	goto	u3611
  5432  0A4F  2A51               	goto	u3610
  5433  0A50                     u3611:	
  5434  0A50  2A71               	goto	l3292
  5435  0A51                     u3610:	
  5436  0A51                     l3286:	
  5437                           
  5438                           ;acciones.c: 25:         cuenta = auxCuenta;
  5439  0A51  0855               	movf	(_auxCuenta+1)^(0+384),w
  5440  0A52  00F1               	movwf	_cuenta+1
  5441  0A53  0854               	movf	_auxCuenta^(0+384),w
  5442  0A54  00F0               	movwf	_cuenta
  5443  0A55                     l3288:	
  5444                           
  5445                           ;acciones.c: 27:         eliminarProd(productoIngresado);
  5446  0A55  1683               	bsf	3,5	;RP0=1, select bank1
  5447  0A56  1303               	bcf	3,6	;RP1=0, select bank1
  5448  0A57  085F               	movf	(_productoIngresado+1)^(0+128),w
  5449  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  5451  0A5A  00AF               	movwf	eliminarProd@tp+1
  5452  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  5453  0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  5454  0A5D  085E               	movf	_productoIngresado^(0+128),w
  5455  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0A60  00AE               	movwf	eliminarProd@tp
  5458  0A61  120A  158A  2454  120A  158A  	fcall	_eliminarProd
  5459  0A66                     l3290:	
  5460                           
  5461                           ;acciones.c: 28:         mostrarDigitos(cuenta);
  5462  0A66  0871               	movf	_cuenta+1,w
  5463  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  5464  0A68  1303               	bcf	3,6	;RP1=0, select bank0
  5465  0A69  00B5               	movwf	mostrarDigitos@num+1
  5466  0A6A  0870               	movf	_cuenta,w
  5467  0A6B  00B4               	movwf	mostrarDigitos@num
  5468  0A6C  120A  118A  2785  120A  158A  	fcall	_mostrarDigitos
  5469  0A71                     l3292:	
  5470                           
  5471                           ;acciones.c: 30:     if (modoDebug){
  5472  0A71  0872               	movf	_modoDebug,w
  5473  0A72  1903               	btfsc	3,2
  5474  0A73  2A75               	goto	u3621
  5475  0A74  2A76               	goto	u3620
  5476  0A75                     u3621:	
  5477  0A75  2A81               	goto	l61
  5478  0A76                     u3620:	
  5479  0A76                     l3294:	
  5480                           
  5481                           ;acciones.c: 31:         envioTX("Producto cancelado");
  5482  0A76  30FF               	movlw	low (STR_2| (0+32768))
  5483  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0A79  00A0               	movwf	envioTX@mensaje
  5486  0A7A  3083               	movlw	high (STR_2| (0+32768))
  5487  0A7B  00A1               	movwf	envioTX@mensaje+1
  5488  0A7C  120A  158A  21CD  120A  158A  	fcall	_envioTX
  5489  0A81                     l61:	
  5490  0A81  0008               	return
  5491  0A82                     __end_of_accionesDeshacer:	
  5492                           
  5493                           	psect	text21
  5494  0C54                     __ptext21:	
  5495 ;; *************** function _eliminarProd *****************
  5496 ;; Defined at:
  5497 ;;		line 47 in file "manejoProductos.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  tp              2   14[BANK0 ] short 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  i               2   19[BANK0 ] short 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5511 ;;      Params:         0       2       0       0       0
  5512 ;;      Locals:         0       2       0       0       0
  5513 ;;      Temps:          0       3       0       0       0
  5514 ;;      Totals:         0       7       0       0       0
  5515 ;;Total ram usage:        7 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    3
  5518 ;; This function calls:
  5519 ;;		_pow
  5520 ;; This function is called by:
  5521 ;;		_accionesDeshacer
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function _eliminarProd
  5527  0C54                     _eliminarProd:	
  5528  0C54                     l3178:	
  5529                           ;incstack = 0
  5530                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5531                           
  5532                           
  5533                           ;manejoProductos.c: 48:         for(short int i = 12; i>=0; i--) {
  5534  0C54  300C               	movlw	12
  5535  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  5536  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  5537  0C57  00B3               	movwf	eliminarProd@i
  5538  0C58  3000               	movlw	0
  5539  0C59  00B4               	movwf	eliminarProd@i+1
  5540  0C5A                     l3184:	
  5541                           
  5542                           ;manejoProductos.c: 49:         if( tp >= 8*i) {
  5543  0C5A  0834               	movf	eliminarProd@i+1,w
  5544  0C5B  00B1               	movwf	??_eliminarProd+1
  5545  0C5C  0833               	movf	eliminarProd@i,w
  5546  0C5D  00B0               	movwf	??_eliminarProd
  5547  0C5E  1003               	clrc
  5548  0C5F  0DB0               	rlf	??_eliminarProd,f
  5549  0C60  0DB1               	rlf	??_eliminarProd+1,f
  5550  0C61  1003               	clrc
  5551  0C62  0DB0               	rlf	??_eliminarProd,f
  5552  0C63  0DB1               	rlf	??_eliminarProd+1,f
  5553  0C64  1003               	clrc
  5554  0C65  0DB0               	rlf	??_eliminarProd,f
  5555  0C66  0DB1               	rlf	??_eliminarProd+1,f
  5556  0C67  082F               	movf	eliminarProd@tp+1,w
  5557  0C68  3A80               	xorlw	128
  5558  0C69  00B2               	movwf	??_eliminarProd+2
  5559  0C6A  0831               	movf	??_eliminarProd+1,w
  5560  0C6B  3A80               	xorlw	128
  5561  0C6C  0232               	subwf	??_eliminarProd+2,w
  5562  0C6D  1D03               	skipz
  5563  0C6E  2C71               	goto	u3505
  5564  0C6F  0830               	movf	??_eliminarProd,w
  5565  0C70  022E               	subwf	eliminarProd@tp,w
  5566  0C71                     u3505:	
  5567  0C71  1C03               	skipc
  5568  0C72  2C74               	goto	u3501
  5569  0C73  2C75               	goto	u3500
  5570  0C74                     u3501:	
  5571  0C74  2CA9               	goto	l3192
  5572  0C75                     u3500:	
  5573  0C75                     l3186:	
  5574                           
  5575                           ;manejoProductos.c: 51:             tp = tp - 8*i;
  5576  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0C77  0834               	movf	eliminarProd@i+1,w
  5579  0C78  00B1               	movwf	??_eliminarProd+1
  5580  0C79  0833               	movf	eliminarProd@i,w
  5581  0C7A  00B0               	movwf	??_eliminarProd
  5582  0C7B  1003               	clrc
  5583  0C7C  0DB0               	rlf	??_eliminarProd,f
  5584  0C7D  0DB1               	rlf	??_eliminarProd+1,f
  5585  0C7E  1003               	clrc
  5586  0C7F  0DB0               	rlf	??_eliminarProd,f
  5587  0C80  0DB1               	rlf	??_eliminarProd+1,f
  5588  0C81  1003               	clrc
  5589  0C82  0DB0               	rlf	??_eliminarProd,f
  5590  0C83  0DB1               	rlf	??_eliminarProd+1,f
  5591  0C84  0830               	movf	??_eliminarProd,w
  5592  0C85  022E               	subwf	eliminarProd@tp,w
  5593  0C86  00AE               	movwf	eliminarProd@tp
  5594  0C87  0831               	movf	??_eliminarProd+1,w
  5595  0C88  1C03               	skipc
  5596  0C89  0A31               	incf	??_eliminarProd+1,w
  5597  0C8A  022F               	subwf	eliminarProd@tp+1,w
  5598  0C8B  00AF               	movwf	eliminarProd@tp+1
  5599  0C8C                     l3188:	
  5600                           
  5601                           ;manejoProductos.c: 52:             prodIngresados[i] = prodIngresados[i] ^ pow(2,tp);
  5602  0C8C  0833               	movf	eliminarProd@i,w
  5603  0C8D  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5604  0C8E  0084               	movwf	4
  5605  0C8F  3002               	movlw	2
  5606  0C90  00A6               	movwf	pow@numero
  5607  0C91  3000               	movlw	0
  5608  0C92  00A7               	movwf	pow@numero+1
  5609  0C93  082F               	movf	eliminarProd@tp+1,w
  5610  0C94  00A9               	movwf	pow@potencia+1
  5611  0C95  082E               	movf	eliminarProd@tp,w
  5612  0C96  00A8               	movwf	pow@potencia
  5613  0C97  120A  158A  2193  120A  158A  	fcall	_pow
  5614  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0C9E  0826               	movf	?_pow,w
  5617  0C9F  1383               	bcf	3,7	;select IRP bank1
  5618  0CA0  0600               	xorwf	0,w
  5619  0CA1  00B0               	movwf	??_eliminarProd
  5620  0CA2  0833               	movf	eliminarProd@i,w
  5621  0CA3  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5622  0CA4  0084               	movwf	4
  5623  0CA5  0830               	movf	??_eliminarProd,w
  5624  0CA6  0080               	movwf	0
  5625  0CA7                     l3190:	
  5626                           
  5627                           ;manejoProductos.c: 53:             i = 0;
  5628  0CA7  01B3               	clrf	eliminarProd@i
  5629  0CA8  01B4               	clrf	eliminarProd@i+1
  5630  0CA9                     l3192:	
  5631                           
  5632                           ;manejoProductos.c: 56:     }
  5633  0CA9  30FF               	movlw	255
  5634  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  5635  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  5636  0CAC  07B3               	addwf	eliminarProd@i,f
  5637  0CAD  1803               	skipnc
  5638  0CAE  0AB4               	incf	eliminarProd@i+1,f
  5639  0CAF  30FF               	movlw	255
  5640  0CB0  07B4               	addwf	eliminarProd@i+1,f
  5641  0CB1                     l3194:	
  5642  0CB1  1FB4               	btfss	eliminarProd@i+1,7
  5643  0CB2  2CB4               	goto	u3511
  5644  0CB3  2CB5               	goto	u3510
  5645  0CB4                     u3511:	
  5646  0CB4  2C5A               	goto	l3184
  5647  0CB5                     u3510:	
  5648  0CB5                     l375:	
  5649  0CB5  0008               	return
  5650  0CB6                     __end_of_eliminarProd:	
  5651                           
  5652                           	psect	text22
  5653  0993                     __ptext22:	
  5654 ;; *************** function _pow *****************
  5655 ;; Defined at:
  5656 ;;		line 3 in file "manejoProductos.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  numero          2    6[BANK0 ] unsigned int 
  5659 ;;  potencia        2    8[BANK0 ] unsigned int 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  i               2   10[BANK0 ] int 
  5662 ;;  resultado       2   12[BANK0 ] unsigned int 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  2    6[BANK0 ] unsigned int 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, pclath, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5672 ;;      Params:         0       4       0       0       0
  5673 ;;      Locals:         0       4       0       0       0
  5674 ;;      Temps:          0       0       0       0       0
  5675 ;;      Totals:         0       8       0       0       0
  5676 ;;Total ram usage:        8 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    2
  5679 ;; This function calls:
  5680 ;;		___wmul
  5681 ;; This function is called by:
  5682 ;;		_ingresoProd
  5683 ;;		_verificarProd
  5684 ;;		_eliminarProd
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function _pow
  5690  0993                     _pow:	
  5691  0993                     l2866:	
  5692                           ;incstack = 0
  5693                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  5694                           
  5695                           
  5696                           ;manejoProductos.c: 4:     unsigned int resultado = 0;
  5697  0993  1283               	bcf	3,5	;RP0=0, select bank0
  5698  0994  1303               	bcf	3,6	;RP1=0, select bank0
  5699  0995  01AC               	clrf	pow@resultado
  5700  0996  01AD               	clrf	pow@resultado+1
  5701                           
  5702                           ;manejoProductos.c: 6:     for (int i = 0; i <= potencia; i++){
  5703  0997  01AA               	clrf	pow@i
  5704  0998  01AB               	clrf	pow@i+1
  5705  0999  29BE               	goto	l2876
  5706  099A                     l2868:	
  5707                           
  5708                           ;manejoProductos.c: 7:         if (i == 0){
  5709  099A  082A               	movf	pow@i,w
  5710  099B  042B               	iorwf	pow@i+1,w
  5711  099C  1D03               	btfss	3,2
  5712  099D  299F               	goto	u2961
  5713  099E  29A0               	goto	u2960
  5714  099F                     u2961:	
  5715  099F  29A5               	goto	l2872
  5716  09A0                     u2960:	
  5717  09A0                     l2870:	
  5718                           
  5719                           ;manejoProductos.c: 8:         resultado = 1;
  5720  09A0  3001               	movlw	1
  5721  09A1  00AC               	movwf	pow@resultado
  5722  09A2  3000               	movlw	0
  5723  09A3  00AD               	movwf	pow@resultado+1
  5724                           
  5725                           ;manejoProductos.c: 9:         }
  5726  09A4  29B8               	goto	l2874
  5727  09A5                     l2872:	
  5728                           
  5729                           ;manejoProductos.c: 11:             resultado = resultado * numero;
  5730  09A5  082D               	movf	pow@resultado+1,w
  5731  09A6  00A1               	movwf	___wmul@multiplier+1
  5732  09A7  082C               	movf	pow@resultado,w
  5733  09A8  00A0               	movwf	___wmul@multiplier
  5734  09A9  0827               	movf	pow@numero+1,w
  5735  09AA  00A3               	movwf	___wmul@multiplicand+1
  5736  09AB  0826               	movf	pow@numero,w
  5737  09AC  00A2               	movwf	___wmul@multiplicand
  5738  09AD  120A  158A  20CE  120A  158A  	fcall	___wmul
  5739  09B2  1283               	bcf	3,5	;RP0=0, select bank0
  5740  09B3  1303               	bcf	3,6	;RP1=0, select bank0
  5741  09B4  0821               	movf	?___wmul+1,w
  5742  09B5  00AD               	movwf	pow@resultado+1
  5743  09B6  0820               	movf	?___wmul,w
  5744  09B7  00AC               	movwf	pow@resultado
  5745  09B8                     l2874:	
  5746                           
  5747                           ;manejoProductos.c: 13:     }
  5748  09B8  3001               	movlw	1
  5749  09B9  07AA               	addwf	pow@i,f
  5750  09BA  1803               	skipnc
  5751  09BB  0AAB               	incf	pow@i+1,f
  5752  09BC  3000               	movlw	0
  5753  09BD  07AB               	addwf	pow@i+1,f
  5754  09BE                     l2876:	
  5755  09BE  082B               	movf	pow@i+1,w
  5756  09BF  0229               	subwf	pow@potencia+1,w
  5757  09C0  1D03               	skipz
  5758  09C1  29C4               	goto	u2975
  5759  09C2  082A               	movf	pow@i,w
  5760  09C3  0228               	subwf	pow@potencia,w
  5761  09C4                     u2975:	
  5762  09C4  1803               	skipnc
  5763  09C5  29C7               	goto	u2971
  5764  09C6  29C8               	goto	u2970
  5765  09C7                     u2971:	
  5766  09C7  299A               	goto	l2868
  5767  09C8                     u2970:	
  5768  09C8                     l2878:	
  5769                           
  5770                           ;manejoProductos.c: 14:     return resultado;
  5771  09C8  082D               	movf	pow@resultado+1,w
  5772  09C9  00A7               	movwf	?_pow+1
  5773  09CA  082C               	movf	pow@resultado,w
  5774  09CB  00A6               	movwf	?_pow
  5775  09CC                     l356:	
  5776  09CC  0008               	return
  5777  09CD                     __end_of_pow:	
  5778                           
  5779                           	psect	text23
  5780  08CE                     __ptext23:	
  5781 ;; *************** function ___wmul *****************
  5782 ;; Defined at:
  5783 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5786 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  product         2    4[BANK0 ] unsigned int 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  2    0[BANK0 ] unsigned int 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5798 ;;      Params:         0       4       0       0       0
  5799 ;;      Locals:         0       2       0       0       0
  5800 ;;      Temps:          0       0       0       0       0
  5801 ;;      Totals:         0       6       0       0       0
  5802 ;;Total ram usage:        6 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_lecturaConsulta
  5809 ;;		_main
  5810 ;;		_pow
  5811 ;;		_agregarModificarPrecio
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function ___wmul
  5817  08CE                     ___wmul:	
  5818  08CE                     l2688:	
  5819                           ;incstack = 0
  5820                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5821                           
  5822  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  5823  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  5824  08D0  01A4               	clrf	___wmul@product
  5825  08D1  01A5               	clrf	___wmul@product+1
  5826  08D2                     l2690:	
  5827  08D2  1C20               	btfss	___wmul@multiplier,0
  5828  08D3  28D5               	goto	u2611
  5829  08D4  28D6               	goto	u2610
  5830  08D5                     u2611:	
  5831  08D5  28DC               	goto	l574
  5832  08D6                     u2610:	
  5833  08D6                     l2692:	
  5834  08D6  0822               	movf	___wmul@multiplicand,w
  5835  08D7  07A4               	addwf	___wmul@product,f
  5836  08D8  1803               	skipnc
  5837  08D9  0AA5               	incf	___wmul@product+1,f
  5838  08DA  0823               	movf	___wmul@multiplicand+1,w
  5839  08DB  07A5               	addwf	___wmul@product+1,f
  5840  08DC                     l574:	
  5841  08DC  3001               	movlw	1
  5842  08DD                     u2625:	
  5843  08DD  1003               	clrc
  5844  08DE  0DA2               	rlf	___wmul@multiplicand,f
  5845  08DF  0DA3               	rlf	___wmul@multiplicand+1,f
  5846  08E0  3EFF               	addlw	-1
  5847  08E1  1D03               	skipz
  5848  08E2  28DD               	goto	u2625
  5849  08E3                     l2694:	
  5850  08E3  3001               	movlw	1
  5851  08E4                     u2635:	
  5852  08E4  1003               	clrc
  5853  08E5  0CA1               	rrf	___wmul@multiplier+1,f
  5854  08E6  0CA0               	rrf	___wmul@multiplier,f
  5855  08E7  3EFF               	addlw	-1
  5856  08E8  1D03               	skipz
  5857  08E9  28E4               	goto	u2635
  5858  08EA                     l2696:	
  5859  08EA  0820               	movf	___wmul@multiplier,w
  5860  08EB  0421               	iorwf	___wmul@multiplier+1,w
  5861  08EC  1D03               	btfss	3,2
  5862  08ED  28EF               	goto	u2641
  5863  08EE  28F0               	goto	u2640
  5864  08EF                     u2641:	
  5865  08EF  28D2               	goto	l2690
  5866  08F0                     u2640:	
  5867  08F0                     l2698:	
  5868  08F0  0825               	movf	___wmul@product+1,w
  5869  08F1  00A1               	movwf	?___wmul+1
  5870  08F2  0824               	movf	___wmul@product,w
  5871  08F3  00A0               	movwf	?___wmul
  5872  08F4                     l576:	
  5873  08F4  0008               	return
  5874  08F5                     __end_of___wmul:	
  5875                           
  5876                           	psect	text24
  5877  0EB2                     __ptext24:	
  5878 ;; *************** function _accionesAceptar *****************
  5879 ;; Defined at:
  5880 ;;		line 4 in file "acciones.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  strLote        32    0[BANK1 ] unsigned char [32]
  5885 ;;  i               2   32[BANK1 ] short 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5895 ;;      Params:         0       0       0       0       0
  5896 ;;      Locals:         0       0      34       0       0
  5897 ;;      Temps:          0       4       0       0       0
  5898 ;;      Totals:         0       4      34       0       0
  5899 ;;Total ram usage:       38 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    3
  5902 ;; This function calls:
  5903 ;;		_bailenLeds
  5904 ;;		_envioTX
  5905 ;;		_mostrarDigitos
  5906 ;;		_sprintf
  5907 ;; This function is called by:
  5908 ;;		_main
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function _accionesAceptar
  5914  0EB2                     _accionesAceptar:	
  5915  0EB2                     l3258:	
  5916                           ;incstack = 0
  5917                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5918                           
  5919                           
  5920                           ;acciones.c: 6:     ventasLote++;
  5921  0EB2  3001               	movlw	1
  5922  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5923  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5924  0EB5  00CA               	movwf	??_accionesAceptar
  5925  0EB6  084A               	movf	??_accionesAceptar,w
  5926  0EB7  07EE               	addwf	_ventasLote,f
  5927  0EB8                     l3260:	
  5928                           
  5929                           ;acciones.c: 7:     montosLote+=cuenta;
  5930  0EB8  0870               	movf	_cuenta,w
  5931  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  5932  0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  5933  0EBB  07DA               	addwf	_montosLote^(0+128),f
  5934  0EBC  1803               	skipnc
  5935  0EBD  0ADB               	incf	(_montosLote+1)^(0+128),f
  5936  0EBE  0871               	movf	_cuenta+1,w
  5937  0EBF  07DB               	addwf	(_montosLote+1)^(0+128),f
  5938  0EC0                     l3262:	
  5939                           
  5940                           ;acciones.c: 8:     cuenta = 0;
  5941  0EC0  01F0               	clrf	_cuenta
  5942  0EC1  01F1               	clrf	_cuenta+1
  5943  0EC2                     l3264:	
  5944                           
  5945                           ;acciones.c: 9:     auxCuenta = 0;
  5946  0EC2  1683               	bsf	3,5	;RP0=1, select bank3
  5947  0EC3  1703               	bsf	3,6	;RP1=1, select bank3
  5948  0EC4  01D4               	clrf	_auxCuenta^(0+384)
  5949  0EC5  01D5               	clrf	(_auxCuenta+1)^(0+384)
  5950  0EC6                     l3266:	
  5951                           
  5952                           ;acciones.c: 10:     for(short int i = 0; i < 13; i++){
  5953  0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  5954  0EC7  1303               	bcf	3,6	;RP1=0, select bank1
  5955  0EC8  01C0               	clrf	accionesAceptar@i^(0+128)
  5956  0EC9  01C1               	clrf	(accionesAceptar@i+1)^(0+128)
  5957  0ECA                     l3272:	
  5958                           
  5959                           ;acciones.c: 11:         prodIngresados[i] = 0;
  5960  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  5961  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  5962  0ECC  0840               	movf	accionesAceptar@i^(0+128),w
  5963  0ECD  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5964  0ECE  0084               	movwf	4
  5965  0ECF  1383               	bcf	3,7	;select IRP bank1
  5966  0ED0  0180               	clrf	0
  5967  0ED1                     l3274:	
  5968                           
  5969                           ;acciones.c: 12:     }
  5970  0ED1  3001               	movlw	1
  5971  0ED2  07C0               	addwf	accionesAceptar@i^(0+128),f
  5972  0ED3  1803               	skipnc
  5973  0ED4  0AC1               	incf	(accionesAceptar@i+1)^(0+128),f
  5974  0ED5  3000               	movlw	0
  5975  0ED6  07C1               	addwf	(accionesAceptar@i+1)^(0+128),f
  5976  0ED7                     l3276:	
  5977  0ED7  0841               	movf	(accionesAceptar@i+1)^(0+128),w
  5978  0ED8  3A80               	xorlw	128
  5979  0ED9  00FF               	movwf	btemp+1
  5980  0EDA  3080               	movlw	128
  5981  0EDB  027F               	subwf	btemp+1,w
  5982  0EDC  1D03               	skipz
  5983  0EDD  2EE0               	goto	u3595
  5984  0EDE  300D               	movlw	13
  5985  0EDF  0240               	subwf	accionesAceptar@i^(0+128),w
  5986  0EE0                     u3595:	
  5987  0EE0  1C03               	skipc
  5988  0EE1  2EE3               	goto	u3591
  5989  0EE2  2EE4               	goto	u3590
  5990  0EE3                     u3591:	
  5991  0EE3  2ECA               	goto	l3272
  5992  0EE4                     u3590:	
  5993  0EE4                     l3278:	
  5994                           
  5995                           ;acciones.c: 13:     if(modoDebug){
  5996  0EE4  0872               	movf	_modoDebug,w
  5997  0EE5  1903               	btfsc	3,2
  5998  0EE6  2EE8               	goto	u3601
  5999  0EE7  2EE9               	goto	u3600
  6000  0EE8                     u3601:	
  6001  0EE8  2F1D               	goto	l55
  6002  0EE9                     u3600:	
  6003  0EE9                     l3280:	
  6004                           
  6005                           ;acciones.c: 14:         char strLote[32];;acciones.c: 16:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  6006  0EE9  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6007  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  6008  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0EEC  00B4               	movwf	sprintf@sp
  6010  0EED  3000               	movlw	0
  6011  0EEE  00B5               	movwf	sprintf@sp+1
  6012  0EEF  3023               	movlw	low (STR_1| (0+32768))
  6013  0EF0  00B6               	movwf	sprintf@f
  6014  0EF1  3084               	movlw	high (STR_1| (0+32768))
  6015  0EF2  00B7               	movwf	sprintf@f+1
  6016  0EF3  0878               	movf	_nroLote,w
  6017  0EF4  00CA               	movwf	??_accionesAceptar
  6018  0EF5  01CB               	clrf	??_accionesAceptar+1
  6019  0EF6  084A               	movf	??_accionesAceptar,w
  6020  0EF7  00B8               	movwf	?_sprintf+4
  6021  0EF8  084B               	movf	??_accionesAceptar+1,w
  6022  0EF9  00B9               	movwf	?_sprintf+5
  6023  0EFA  086E               	movf	_ventasLote,w
  6024  0EFB  00CC               	movwf	??_accionesAceptar+2
  6025  0EFC  01CD               	clrf	??_accionesAceptar+3
  6026  0EFD  084C               	movf	??_accionesAceptar+2,w
  6027  0EFE  00BA               	movwf	?_sprintf+6
  6028  0EFF  084D               	movf	??_accionesAceptar+3,w
  6029  0F00  00BB               	movwf	?_sprintf+7
  6030  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  6031  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  6032  0F03  085B               	movf	(_montosLote+1)^(0+128),w
  6033  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  6035  0F06  00BD               	movwf	?_sprintf+9
  6036  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  6037  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  6038  0F09  085A               	movf	_montosLote^(0+128),w
  6039  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  6040  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  6041  0F0C  00BC               	movwf	?_sprintf+8
  6042  0F0D  120A  118A  2453  120A  158A  	fcall	_sprintf
  6043                           
  6044                           ;acciones.c: 17:         envioTX(strLote);
  6045  0F12  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6046  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  6047  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  6048  0F15  00A0               	movwf	envioTX@mensaje
  6049  0F16  3000               	movlw	0
  6050  0F17  00A1               	movwf	envioTX@mensaje+1
  6051  0F18  120A  158A  21CD  120A  158A  	fcall	_envioTX
  6052  0F1D                     l55:	
  6053                           ;acciones.c: 18:     }
  6054                           
  6055                           
  6056                           ;acciones.c: 19:     mostrarDigitos(cuenta);
  6057  0F1D  0871               	movf	_cuenta+1,w
  6058  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  6059  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  6060  0F20  00B5               	movwf	mostrarDigitos@num+1
  6061  0F21  0870               	movf	_cuenta,w
  6062  0F22  00B4               	movwf	mostrarDigitos@num
  6063  0F23  120A  118A  2785  120A  158A  	fcall	_mostrarDigitos
  6064  0F28                     l3282:	
  6065                           
  6066                           ;acciones.c: 20:     bailenLeds();
  6067  0F28  120A  158A  2350  120A  158A  	fcall	_bailenLeds
  6068  0F2D                     l56:	
  6069  0F2D  0008               	return
  6070  0F2E                     __end_of_accionesAceptar:	
  6071                           
  6072                           	psect	text25
  6073  0453                     __ptext25:	
  6074 ;; *************** function _sprintf *****************
  6075 ;; Defined at:
  6076 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  sp              2   20[BANK0 ] PTR unsigned char 
  6079 ;;		 -> agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), lecturaConsulta@strLote(32), 
  6080 ;;		 -> consultaPrecio@mensaje(26), cierreDeLote@strLote(32), accionesPuertoSerial@mensaje(12), accionesAceptar@strLote(
      +32), 
  6081 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  6082 ;;		 -> STR_17(9), STR_16(10), STR_15(25), STR_13(17), 
  6083 ;;		 -> STR_9(22), STR_8(25), STR_5(24), STR_3(5), 
  6084 ;;		 -> STR_1(17), 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  tmpval          4    0        struct .
  6087 ;;  val             2   39[BANK0 ] unsigned int 
  6088 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  6089 ;;		 -> STR_19(7), ?_sprintf(2), adresult(2), codigoEntrada(10), 
  6090 ;;  len             2    0        unsigned int 
  6091 ;;  c               1   41[BANK0 ] unsigned char 
  6092 ;;  ap              1   36[BANK0 ] PTR void [1]
  6093 ;;		 -> ?_sprintf(2), 
  6094 ;;  prec            1   35[BANK0 ] char 
  6095 ;;  flag            1   34[BANK0 ] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  2   20[BANK0 ] int 
  6098 ;; Registers used:
  6099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6105 ;;      Params:         0      10       0       0       0
  6106 ;;      Locals:         0       8       0       0       0
  6107 ;;      Temps:          0       4       0       0       0
  6108 ;;      Totals:         0      22       0       0       0
  6109 ;;Total ram usage:       22 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    2
  6112 ;; This function calls:
  6113 ;;		___lwdiv
  6114 ;;		___lwmod
  6115 ;; This function is called by:
  6116 ;;		_accionesAceptar
  6117 ;;		_accionesPuertoSerial
  6118 ;;		_cierreDeLote
  6119 ;;		_consultaPrecio
  6120 ;;		_lecturaConsulta
  6121 ;;		_main
  6122 ;;		_agregarModificarPrecio
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           
  6127                           ;psect for function _sprintf
  6128  0453                     _sprintf:	
  6129  0453                     l2750:	
  6130                           ;incstack = 0
  6131                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6132                           
  6133                           
  6134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  6135  0453  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6136  0454  1283               	bcf	3,5	;RP0=0, select bank0
  6137  0455  1303               	bcf	3,6	;RP1=0, select bank0
  6138  0456  00BE               	movwf	??_sprintf
  6139  0457  083E               	movf	??_sprintf,w
  6140  0458  00C4               	movwf	sprintf@ap
  6141                           
  6142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6143  0459  2D87               	goto	l2816
  6144  045A                     l2752:	
  6145                           
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  6147  045A  3025               	movlw	37
  6148  045B  0649               	xorwf	sprintf@c,w
  6149  045C  1903               	btfsc	3,2
  6150  045D  2C5F               	goto	u2781
  6151  045E  2C60               	goto	u2780
  6152  045F                     u2781:	
  6153  045F  2C70               	goto	l2758
  6154  0460                     u2780:	
  6155  0460                     l2754:	
  6156                           
  6157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  6158  0460  0849               	movf	sprintf@c,w
  6159  0461  00BE               	movwf	??_sprintf
  6160  0462  0834               	movf	sprintf@sp,w
  6161  0463  0084               	movwf	4
  6162  0464  1783               	bsf	3,7
  6163  0465  1C35               	btfss	sprintf@sp+1,0
  6164  0466  1383               	bcf	3,7
  6165  0467  083E               	movf	??_sprintf,w
  6166  0468  0080               	movwf	0
  6167  0469                     l2756:	
  6168  0469  3001               	movlw	1
  6169  046A  07B4               	addwf	sprintf@sp,f
  6170  046B  1803               	skipnc
  6171  046C  0AB5               	incf	sprintf@sp+1,f
  6172  046D  3000               	movlw	0
  6173  046E  07B5               	addwf	sprintf@sp+1,f
  6174                           
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  6176  046F  2D87               	goto	l2816
  6177  0470                     l2758:	
  6178                           
  6179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  6180  0470  01C2               	clrf	sprintf@flag
  6181                           
  6182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  6183  0471  2CB6               	goto	l2776
  6184  0472                     l2760:	
  6185                           
  6186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 760:     cp
      +                           = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  6187  0472  0844               	movf	sprintf@ap,w
  6188  0473  0084               	movwf	4
  6189  0474  1383               	bcf	3,7	;select IRP bank0
  6190  0475  0800               	movf	0,w
  6191  0476  00C5               	movwf	sprintf@cp
  6192  0477  0A84               	incf	4,f
  6193  0478  0800               	movf	0,w
  6194  0479  0384               	decf	4,f
  6195  047A  00C6               	movwf	sprintf@cp+1
  6196  047B                     l2762:	
  6197  047B  3002               	movlw	2
  6198  047C  00BE               	movwf	??_sprintf
  6199  047D  083E               	movf	??_sprintf,w
  6200  047E  07C4               	addwf	sprintf@ap,f
  6201  047F                     l2764:	
  6202                           
  6203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 766:    if(
      +                          !cp)
  6204  047F  0845               	movf	sprintf@cp,w
  6205  0480  0446               	iorwf	sprintf@cp+1,w
  6206  0481  1D03               	btfss	3,2
  6207  0482  2C84               	goto	u2791
  6208  0483  2C85               	goto	u2790
  6209  0484                     u2791:	
  6210  0484  2CA7               	goto	l557
  6211  0485                     u2790:	
  6212  0485                     l2766:	
  6213                           
  6214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 767:     cp
      +                           = "(null)";
  6215  0485  3047               	movlw	low (STR_19| (0+32768))
  6216  0486  00C5               	movwf	sprintf@cp
  6217  0487  3084               	movlw	high (STR_19| (0+32768))
  6218  0488  00C6               	movwf	sprintf@cp+1
  6219  0489  2CA7               	goto	l557
  6220  048A                     l2768:	
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 804:     ((
      +                          *sp++ = (*cp++)));
  6223  048A  0846               	movf	sprintf@cp+1,w
  6224  048B  00FF               	movwf	btemp+1
  6225  048C  0845               	movf	sprintf@cp,w
  6226  048D  0084               	movwf	4
  6227  048E  120A  118A  2300  120A  118A  	fcall	stringtab
  6228  0493  00BE               	movwf	??_sprintf
  6229  0494  0834               	movf	sprintf@sp,w
  6230  0495  0084               	movwf	4
  6231  0496  1783               	bsf	3,7
  6232  0497  1C35               	btfss	sprintf@sp+1,0
  6233  0498  1383               	bcf	3,7
  6234  0499  083E               	movf	??_sprintf,w
  6235  049A  0080               	movwf	0
  6236  049B                     l2770:	
  6237  049B  3001               	movlw	1
  6238  049C  07C5               	addwf	sprintf@cp,f
  6239  049D  1803               	skipnc
  6240  049E  0AC6               	incf	sprintf@cp+1,f
  6241  049F  3000               	movlw	0
  6242  04A0  07C6               	addwf	sprintf@cp+1,f
  6243  04A1                     l2772:	
  6244  04A1  3001               	movlw	1
  6245  04A2  07B4               	addwf	sprintf@sp,f
  6246  04A3  1803               	skipnc
  6247  04A4  0AB5               	incf	sprintf@sp+1,f
  6248  04A5  3000               	movlw	0
  6249  04A6  07B5               	addwf	sprintf@sp+1,f
  6250  04A7                     l557:	
  6251                           
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 803:    whi
      +                          le(*cp)
  6253  04A7  0846               	movf	sprintf@cp+1,w
  6254  04A8  00FF               	movwf	btemp+1
  6255  04A9  0845               	movf	sprintf@cp,w
  6256  04AA  0084               	movwf	4
  6257  04AB  120A  118A  2300  120A  118A  	fcall	stringtab
  6258  04B0  3A00               	xorlw	0
  6259  04B1  1D03               	skipz
  6260  04B2  2CB4               	goto	u2801
  6261  04B3  2CB5               	goto	u2800
  6262  04B4                     u2801:	
  6263  04B4  2C8A               	goto	l2768
  6264  04B5                     u2800:	
  6265  04B5  2D87               	goto	l2816
  6266  04B6                     l2776:	
  6267  04B6  0837               	movf	sprintf@f+1,w
  6268  04B7  00BF               	movwf	??_sprintf+1
  6269  04B8  0836               	movf	sprintf@f,w
  6270  04B9  00BE               	movwf	??_sprintf
  6271  04BA  0AB6               	incf	sprintf@f,f
  6272  04BB  1903               	skipnz
  6273  04BC  0AB7               	incf	sprintf@f+1,f
  6274  04BD  083F               	movf	??_sprintf+1,w
  6275  04BE  00FF               	movwf	btemp+1
  6276  04BF  083E               	movf	??_sprintf,w
  6277  04C0  0084               	movwf	4
  6278  04C1  120A  118A  2300  120A  118A  	fcall	stringtab
  6279  04C6  00C9               	movwf	sprintf@c
  6280  04C7  00C0               	movwf	??_sprintf+2
  6281  04C8  01C1               	clrf	??_sprintf+3
  6282                           
  6283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6284                           ; Switch size 1, requested type "simple"
  6285                           ; Number of cases is 1, Range of values is 0 to 0
  6286                           ; switch strategies available:
  6287                           ; Name         Instructions Cycles
  6288                           ; simple_byte            4     3 (average)
  6289                           ; direct_byte           11     8 (fixed)
  6290                           ; jumptable            260     6 (fixed)
  6291                           ;	Chosen strategy is simple_byte
  6292  04C9  0841               	movf	??_sprintf+3,w
  6293  04CA  3A00               	xorlw	0	; case 0
  6294  04CB  1903               	skipnz
  6295  04CC  2CCE               	goto	l3464
  6296  04CD  2D87               	goto	l2816
  6297  04CE                     l3464:	
  6298                           
  6299                           ; Switch size 1, requested type "simple"
  6300                           ; Number of cases is 4, Range of values is 0 to 115
  6301                           ; switch strategies available:
  6302                           ; Name         Instructions Cycles
  6303                           ; simple_byte           13     7 (average)
  6304                           ; jumptable            260     6 (fixed)
  6305                           ;	Chosen strategy is simple_byte
  6306  04CE  0840               	movf	??_sprintf+2,w
  6307  04CF  3A00               	xorlw	0	; case 0
  6308  04D0  1903               	skipnz
  6309  04D1  2D9F               	goto	l2818
  6310  04D2  3A64               	xorlw	100	; case 100
  6311  04D3  1903               	skipnz
  6312  04D4  2CDC               	goto	l2778
  6313  04D5  3A0D               	xorlw	13	; case 105
  6314  04D6  1903               	skipnz
  6315  04D7  2CDC               	goto	l2778
  6316  04D8  3A1A               	xorlw	26	; case 115
  6317  04D9  1903               	skipnz
  6318  04DA  2C72               	goto	l2760
  6319  04DB  2D87               	goto	l2816
  6320  04DC                     l2778:	
  6321                           
  6322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6323  04DC  0844               	movf	sprintf@ap,w
  6324  04DD  0084               	movwf	4
  6325  04DE  1383               	bcf	3,7	;select IRP bank0
  6326  04DF  0800               	movf	0,w
  6327  04E0  00C7               	movwf	sprintf@val
  6328  04E1  0A84               	incf	4,f
  6329  04E2  0800               	movf	0,w
  6330  04E3  00C8               	movwf	sprintf@val+1
  6331  04E4                     l2780:	
  6332  04E4  3002               	movlw	2
  6333  04E5  00BE               	movwf	??_sprintf
  6334  04E6  083E               	movf	??_sprintf,w
  6335  04E7  07C4               	addwf	sprintf@ap,f
  6336  04E8                     l2782:	
  6337                           
  6338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  6339  04E8  1FC8               	btfss	sprintf@val+1,7
  6340  04E9  2CEB               	goto	u2811
  6341  04EA  2CEC               	goto	u2810
  6342  04EB                     u2811:	
  6343  04EB  2CF5               	goto	l2788
  6344  04EC                     u2810:	
  6345  04EC                     l2784:	
  6346                           
  6347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  6348  04EC  3003               	movlw	3
  6349  04ED  00BE               	movwf	??_sprintf
  6350  04EE  083E               	movf	??_sprintf,w
  6351  04EF  04C2               	iorwf	sprintf@flag,f
  6352  04F0                     l2786:	
  6353                           
  6354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  6355  04F0  09C7               	comf	sprintf@val,f
  6356  04F1  09C8               	comf	sprintf@val+1,f
  6357  04F2  0AC7               	incf	sprintf@val,f
  6358  04F3  1903               	skipnz
  6359  04F4  0AC8               	incf	sprintf@val+1,f
  6360  04F5                     l2788:	
  6361                           
  6362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6363  04F5  01C9               	clrf	sprintf@c
  6364  04F6  0AC9               	incf	sprintf@c,f
  6365  04F7                     l2794:	
  6366                           
  6367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  6368  04F7  0849               	movf	sprintf@c,w
  6369  04F8  00BE               	movwf	??_sprintf
  6370  04F9  073E               	addwf	??_sprintf,w
  6371  04FA  3E12               	addlw	low (_dpowers| (0+32768))
  6372  04FB  0084               	movwf	4
  6373  04FC  3083               	movlw	high (_dpowers| (0+32768))
  6374  04FD  1803               	skipnc
  6375  04FE  3E01               	addlw	1
  6376  04FF  00FF               	movwf	btemp+1
  6377  0500  120A  118A  2300  120A  118A  	fcall	stringtab
  6378  0505  00BF               	movwf	??_sprintf+1
  6379  0506  120A  118A  2300  120A  118A  	fcall	stringtab
  6380  050B  00C0               	movwf	??_sprintf+2
  6381  050C  0840               	movf	??_sprintf+2,w
  6382  050D  0248               	subwf	sprintf@val+1,w
  6383  050E  1D03               	skipz
  6384  050F  2D12               	goto	u2825
  6385  0510  083F               	movf	??_sprintf+1,w
  6386  0511  0247               	subwf	sprintf@val,w
  6387  0512                     u2825:	
  6388  0512  1803               	skipnc
  6389  0513  2D15               	goto	u2821
  6390  0514  2D16               	goto	u2820
  6391  0515                     u2821:	
  6392  0515  2D17               	goto	l2798
  6393  0516                     u2820:	
  6394  0516  2D21               	goto	l2800
  6395  0517                     l2798:	
  6396  0517  3001               	movlw	1
  6397  0518  00BE               	movwf	??_sprintf
  6398  0519  083E               	movf	??_sprintf,w
  6399  051A  07C9               	addwf	sprintf@c,f
  6400  051B  3005               	movlw	5
  6401  051C  0649               	xorwf	sprintf@c,w
  6402  051D  1D03               	btfss	3,2
  6403  051E  2D20               	goto	u2831
  6404  051F  2D21               	goto	u2830
  6405  0520                     u2831:	
  6406  0520  2CF7               	goto	l2794
  6407  0521                     u2830:	
  6408  0521                     l2800:	
  6409                           
  6410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  6411  0521  0842               	movf	sprintf@flag,w
  6412  0522  3903               	andlw	3
  6413  0523  1903               	btfsc	3,2
  6414  0524  2D26               	goto	u2841
  6415  0525  2D27               	goto	u2840
  6416  0526                     u2841:	
  6417  0526  2D36               	goto	l2806
  6418  0527                     u2840:	
  6419  0527                     l2802:	
  6420                           
  6421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  6422  0527  302D               	movlw	45
  6423  0528  00BE               	movwf	??_sprintf
  6424  0529  0834               	movf	sprintf@sp,w
  6425  052A  0084               	movwf	4
  6426  052B  1783               	bsf	3,7
  6427  052C  1C35               	btfss	sprintf@sp+1,0
  6428  052D  1383               	bcf	3,7
  6429  052E  083E               	movf	??_sprintf,w
  6430  052F  0080               	movwf	0
  6431  0530                     l2804:	
  6432  0530  3001               	movlw	1
  6433  0531  07B4               	addwf	sprintf@sp,f
  6434  0532  1803               	skipnc
  6435  0533  0AB5               	incf	sprintf@sp+1,f
  6436  0534  3000               	movlw	0
  6437  0535  07B5               	addwf	sprintf@sp+1,f
  6438  0536                     l2806:	
  6439                           
  6440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  6441  0536  0849               	movf	sprintf@c,w
  6442  0537  00BE               	movwf	??_sprintf
  6443  0538  083E               	movf	??_sprintf,w
  6444  0539  00C3               	movwf	sprintf@prec
  6445                           
  6446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6447  053A  2D7E               	goto	l2814
  6448  053B                     l2808:	
  6449                           
  6450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  6451  053B  300A               	movlw	10
  6452  053C  00AE               	movwf	___lwmod@divisor
  6453  053D  3000               	movlw	0
  6454  053E  00AF               	movwf	___lwmod@divisor+1
  6455  053F  0843               	movf	sprintf@prec,w
  6456  0540  00BE               	movwf	??_sprintf
  6457  0541  073E               	addwf	??_sprintf,w
  6458  0542  3E12               	addlw	low (_dpowers| (0+32768))
  6459  0543  0084               	movwf	4
  6460  0544  3083               	movlw	high (_dpowers| (0+32768))
  6461  0545  1803               	skipnc
  6462  0546  3E01               	addlw	1
  6463  0547  00FF               	movwf	btemp+1
  6464  0548  120A  118A  2300  120A  118A  	fcall	stringtab
  6465  054D  00A6               	movwf	___lwdiv@divisor
  6466  054E  120A  118A  2300  120A  118A  	fcall	stringtab
  6467  0553  00A7               	movwf	___lwdiv@divisor+1
  6468  0554  0848               	movf	sprintf@val+1,w
  6469  0555  00A9               	movwf	___lwdiv@dividend+1
  6470  0556  0847               	movf	sprintf@val,w
  6471  0557  00A8               	movwf	___lwdiv@dividend
  6472  0558  120A  158A  22C1  120A  118A  	fcall	___lwdiv
  6473  055D  1283               	bcf	3,5	;RP0=0, select bank0
  6474  055E  1303               	bcf	3,6	;RP1=0, select bank0
  6475  055F  0827               	movf	?___lwdiv+1,w
  6476  0560  00B1               	movwf	___lwmod@dividend+1
  6477  0561  0826               	movf	?___lwdiv,w
  6478  0562  00B0               	movwf	___lwmod@dividend
  6479  0563  120A  158A  2209  120A  118A  	fcall	___lwmod
  6480  0568  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0569  1303               	bcf	3,6	;RP1=0, select bank0
  6482  056A  082E               	movf	?___lwmod,w
  6483  056B  3E30               	addlw	48
  6484  056C  00BF               	movwf	??_sprintf+1
  6485  056D  083F               	movf	??_sprintf+1,w
  6486  056E  00C9               	movwf	sprintf@c
  6487  056F                     l2810:	
  6488                           
  6489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  6490  056F  0849               	movf	sprintf@c,w
  6491  0570  00BE               	movwf	??_sprintf
  6492  0571  0834               	movf	sprintf@sp,w
  6493  0572  0084               	movwf	4
  6494  0573  1783               	bsf	3,7
  6495  0574  1C35               	btfss	sprintf@sp+1,0
  6496  0575  1383               	bcf	3,7
  6497  0576  083E               	movf	??_sprintf,w
  6498  0577  0080               	movwf	0
  6499  0578                     l2812:	
  6500  0578  3001               	movlw	1
  6501  0579  07B4               	addwf	sprintf@sp,f
  6502  057A  1803               	skipnc
  6503  057B  0AB5               	incf	sprintf@sp+1,f
  6504  057C  3000               	movlw	0
  6505  057D  07B5               	addwf	sprintf@sp+1,f
  6506  057E                     l2814:	
  6507                           
  6508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6509  057E  30FF               	movlw	255
  6510  057F  00BE               	movwf	??_sprintf
  6511  0580  083E               	movf	??_sprintf,w
  6512  0581  07C3               	addwf	sprintf@prec,f
  6513  0582  0A43               	incf	sprintf@prec,w
  6514  0583  1D03               	btfss	3,2
  6515  0584  2D86               	goto	u2851
  6516  0585  2D87               	goto	u2850
  6517  0586                     u2851:	
  6518  0586  2D3B               	goto	l2808
  6519  0587                     u2850:	
  6520  0587                     l2816:	
  6521                           
  6522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6523  0587  0837               	movf	sprintf@f+1,w
  6524  0588  00BF               	movwf	??_sprintf+1
  6525  0589  0836               	movf	sprintf@f,w
  6526  058A  00BE               	movwf	??_sprintf
  6527  058B  0AB6               	incf	sprintf@f,f
  6528  058C  1903               	skipnz
  6529  058D  0AB7               	incf	sprintf@f+1,f
  6530  058E  083F               	movf	??_sprintf+1,w
  6531  058F  00FF               	movwf	btemp+1
  6532  0590  083E               	movf	??_sprintf,w
  6533  0591  0084               	movwf	4
  6534  0592  120A  118A  2300  120A  118A  	fcall	stringtab
  6535  0597  00C0               	movwf	??_sprintf+2
  6536  0598  0840               	movf	??_sprintf+2,w
  6537  0599  00C9               	movwf	sprintf@c
  6538  059A  0849               	movf	sprintf@c,w
  6539  059B  1D03               	btfss	3,2
  6540  059C  2D9E               	goto	u2861
  6541  059D  2D9F               	goto	u2860
  6542  059E                     u2861:	
  6543  059E  2C5A               	goto	l2752
  6544  059F                     u2860:	
  6545  059F                     l2818:	
  6546                           
  6547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  6548  059F  0834               	movf	sprintf@sp,w
  6549  05A0  0084               	movwf	4
  6550  05A1  1783               	bsf	3,7
  6551  05A2  1C35               	btfss	sprintf@sp+1,0
  6552  05A3  1383               	bcf	3,7
  6553  05A4  0180               	clrf	0
  6554  05A5                     l570:	
  6555  05A5  0008               	return
  6556  05A6                     __end_of_sprintf:	
  6557                           
  6558                           	psect	text26
  6559  0785                     __ptext26:	
  6560 ;; *************** function _mostrarDigitos *****************
  6561 ;; Defined at:
  6562 ;;		line 17 in file "mostrarInicializar.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  num             2   20[BANK0 ] unsigned int 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6576 ;;      Params:         0       2       0       0       0
  6577 ;;      Locals:         0       2       0       0       0
  6578 ;;      Temps:          0       0       0       0       0
  6579 ;;      Totals:         0       4       0       0       0
  6580 ;;Total ram usage:        4 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    2
  6583 ;; This function calls:
  6584 ;;		___lwdiv
  6585 ;;		___lwmod
  6586 ;; This function is called by:
  6587 ;;		_accionesAceptar
  6588 ;;		_accionesDeshacer
  6589 ;;		_lecturaEtiqueta
  6590 ;;		_main
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           
  6595                           ;psect for function _mostrarDigitos
  6596  0785                     _mostrarDigitos:	
  6597  0785                     l3072:	
  6598                           ;incstack = 0
  6599                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6600                           
  6601                           
  6602                           ;mostrarInicializar.c: 19:     PORTB = BS[num/100];
  6603  0785  3064               	movlw	100
  6604  0786  1283               	bcf	3,5	;RP0=0, select bank0
  6605  0787  1303               	bcf	3,6	;RP1=0, select bank0
  6606  0788  00A6               	movwf	___lwdiv@divisor
  6607  0789  3000               	movlw	0
  6608  078A  00A7               	movwf	___lwdiv@divisor+1
  6609  078B  0835               	movf	mostrarDigitos@num+1,w
  6610  078C  00A9               	movwf	___lwdiv@dividend+1
  6611  078D  0834               	movf	mostrarDigitos@num,w
  6612  078E  00A8               	movwf	___lwdiv@dividend
  6613  078F  120A  158A  22C1  120A  118A  	fcall	___lwdiv
  6614  0794  1283               	bcf	3,5	;RP0=0, select bank0
  6615  0795  1303               	bcf	3,6	;RP1=0, select bank0
  6616  0796  0826               	movf	?___lwdiv,w
  6617  0797  3E1C               	addlw	low (_BS| (0+32768))
  6618  0798  0084               	movwf	4
  6619  0799  3083               	movlw	high (_BS| (0+32768))
  6620  079A  1803               	skipnc
  6621  079B  3E01               	addlw	1
  6622  079C  00FF               	movwf	btemp+1
  6623  079D  120A  118A  2300  120A  118A  	fcall	stringtab
  6624  07A2  0086               	movwf	6	;volatile
  6625  07A3                     l3074:	
  6626                           
  6627                           ;mostrarInicializar.c: 20:     PORTB = PORTB | ((num%100)/10);
  6628  07A3  300A               	movlw	10
  6629  07A4  00A6               	movwf	___lwdiv@divisor
  6630  07A5  3000               	movlw	0
  6631  07A6  00A7               	movwf	___lwdiv@divisor+1
  6632  07A7  0835               	movf	mostrarDigitos@num+1,w
  6633  07A8  00B1               	movwf	___lwmod@dividend+1
  6634  07A9  0834               	movf	mostrarDigitos@num,w
  6635  07AA  00B0               	movwf	___lwmod@dividend
  6636  07AB  3064               	movlw	100
  6637  07AC  00AE               	movwf	___lwmod@divisor
  6638  07AD  3000               	movlw	0
  6639  07AE  00AF               	movwf	___lwmod@divisor+1
  6640  07AF  120A  158A  2209  120A  118A  	fcall	___lwmod
  6641  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  6642  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  6643  07B6  082F               	movf	?___lwmod+1,w
  6644  07B7  00A9               	movwf	___lwdiv@dividend+1
  6645  07B8  082E               	movf	?___lwmod,w
  6646  07B9  00A8               	movwf	___lwdiv@dividend
  6647  07BA  120A  158A  22C1  120A  118A  	fcall	___lwdiv
  6648  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  6649  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  6650  07C1  0826               	movf	?___lwdiv,w
  6651  07C2  0406               	iorwf	6,w
  6652  07C3  0086               	movwf	6	;volatile
  6653  07C4                     l3076:	
  6654                           
  6655                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6656  07C4  0835               	movf	mostrarDigitos@num+1,w
  6657  07C5  00B1               	movwf	___lwmod@dividend+1
  6658  07C6  0834               	movf	mostrarDigitos@num,w
  6659  07C7  00B0               	movwf	___lwmod@dividend
  6660  07C8  3064               	movlw	100
  6661  07C9  00AE               	movwf	___lwmod@divisor
  6662  07CA  3000               	movlw	0
  6663  07CB  00AF               	movwf	___lwmod@divisor+1
  6664  07CC  120A  158A  2209  120A  118A  	fcall	___lwmod
  6665  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  6666  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  6667  07D3  082F               	movf	?___lwmod+1,w
  6668  07D4  00B7               	movwf	_mostrarDigitos$1096+1
  6669  07D5  082E               	movf	?___lwmod,w
  6670  07D6  00B6               	movwf	_mostrarDigitos$1096
  6671                           
  6672                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6673  07D7  300A               	movlw	10
  6674  07D8  00AE               	movwf	___lwmod@divisor
  6675  07D9  3000               	movlw	0
  6676  07DA  00AF               	movwf	___lwmod@divisor+1
  6677  07DB  0837               	movf	_mostrarDigitos$1096+1,w
  6678  07DC  00B1               	movwf	___lwmod@dividend+1
  6679  07DD  0836               	movf	_mostrarDigitos$1096,w
  6680  07DE  00B0               	movwf	___lwmod@dividend
  6681  07DF  120A  158A  2209  120A  118A  	fcall	___lwmod
  6682  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  6683  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  6684  07E6  082E               	movf	?___lwmod,w
  6685  07E7  3E1C               	addlw	low (_BS| (0+32768))
  6686  07E8  0084               	movwf	4
  6687  07E9  3083               	movlw	high (_BS| (0+32768))
  6688  07EA  1803               	skipnc
  6689  07EB  3E01               	addlw	1
  6690  07EC  00FF               	movwf	btemp+1
  6691  07ED  120A  118A  2300  120A  118A  	fcall	stringtab
  6692  07F2  0088               	movwf	8	;volatile
  6693  07F3                     l399:	
  6694  07F3  0008               	return
  6695  07F4                     __end_of_mostrarDigitos:	
  6696                           
  6697                           	psect	text27
  6698  0A09                     __ptext27:	
  6699 ;; *************** function ___lwmod *****************
  6700 ;; Defined at:
  6701 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  divisor         2   14[BANK0 ] unsigned int 
  6704 ;;  dividend        2   16[BANK0 ] unsigned int 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  counter         1   19[BANK0 ] unsigned char 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  2   14[BANK0 ] unsigned int 
  6709 ;; Registers used:
  6710 ;;		wreg, status,2, status,0
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6716 ;;      Params:         0       4       0       0       0
  6717 ;;      Locals:         0       1       0       0       0
  6718 ;;      Temps:          0       1       0       0       0
  6719 ;;      Totals:         0       6       0       0       0
  6720 ;;Total ram usage:        6 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:    1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_main
  6727 ;;		_mostrarDigitos
  6728 ;;		_sprintf
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           
  6733                           ;psect for function ___lwmod
  6734  0A09                     ___lwmod:	
  6735  0A09                     l2728:	
  6736                           ;incstack = 0
  6737                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6738                           
  6739  0A09  1283               	bcf	3,5	;RP0=0, select bank0
  6740  0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  6741  0A0B  082E               	movf	___lwmod@divisor,w
  6742  0A0C  042F               	iorwf	___lwmod@divisor+1,w
  6743  0A0D  1903               	btfsc	3,2
  6744  0A0E  2A10               	goto	u2721
  6745  0A0F  2A11               	goto	u2720
  6746  0A10                     u2721:	
  6747  0A10  2A40               	goto	l2746
  6748  0A11                     u2720:	
  6749  0A11                     l2730:	
  6750  0A11  01B3               	clrf	___lwmod@counter
  6751  0A12  0AB3               	incf	___lwmod@counter,f
  6752  0A13  2A1F               	goto	l2736
  6753  0A14                     l2732:	
  6754  0A14  3001               	movlw	1
  6755  0A15                     u2735:	
  6756  0A15  1003               	clrc
  6757  0A16  0DAE               	rlf	___lwmod@divisor,f
  6758  0A17  0DAF               	rlf	___lwmod@divisor+1,f
  6759  0A18  3EFF               	addlw	-1
  6760  0A19  1D03               	skipz
  6761  0A1A  2A15               	goto	u2735
  6762  0A1B                     l2734:	
  6763  0A1B  3001               	movlw	1
  6764  0A1C  00B2               	movwf	??___lwmod
  6765  0A1D  0832               	movf	??___lwmod,w
  6766  0A1E  07B3               	addwf	___lwmod@counter,f
  6767  0A1F                     l2736:	
  6768  0A1F  1FAF               	btfss	___lwmod@divisor+1,7
  6769  0A20  2A22               	goto	u2741
  6770  0A21  2A23               	goto	u2740
  6771  0A22                     u2741:	
  6772  0A22  2A14               	goto	l2732
  6773  0A23                     u2740:	
  6774  0A23                     l2738:	
  6775  0A23  082F               	movf	___lwmod@divisor+1,w
  6776  0A24  0231               	subwf	___lwmod@dividend+1,w
  6777  0A25  1D03               	skipz
  6778  0A26  2A29               	goto	u2755
  6779  0A27  082E               	movf	___lwmod@divisor,w
  6780  0A28  0230               	subwf	___lwmod@dividend,w
  6781  0A29                     u2755:	
  6782  0A29  1C03               	skipc
  6783  0A2A  2A2C               	goto	u2751
  6784  0A2B  2A2D               	goto	u2750
  6785  0A2C                     u2751:	
  6786  0A2C  2A33               	goto	l2742
  6787  0A2D                     u2750:	
  6788  0A2D                     l2740:	
  6789  0A2D  082E               	movf	___lwmod@divisor,w
  6790  0A2E  02B0               	subwf	___lwmod@dividend,f
  6791  0A2F  082F               	movf	___lwmod@divisor+1,w
  6792  0A30  1C03               	skipc
  6793  0A31  03B1               	decf	___lwmod@dividend+1,f
  6794  0A32  02B1               	subwf	___lwmod@dividend+1,f
  6795  0A33                     l2742:	
  6796  0A33  3001               	movlw	1
  6797  0A34                     u2765:	
  6798  0A34  1003               	clrc
  6799  0A35  0CAF               	rrf	___lwmod@divisor+1,f
  6800  0A36  0CAE               	rrf	___lwmod@divisor,f
  6801  0A37  3EFF               	addlw	-1
  6802  0A38  1D03               	skipz
  6803  0A39  2A34               	goto	u2765
  6804  0A3A                     l2744:	
  6805  0A3A  3001               	movlw	1
  6806  0A3B  02B3               	subwf	___lwmod@counter,f
  6807  0A3C  1D03               	btfss	3,2
  6808  0A3D  2A3F               	goto	u2771
  6809  0A3E  2A40               	goto	u2770
  6810  0A3F                     u2771:	
  6811  0A3F  2A23               	goto	l2738
  6812  0A40                     u2770:	
  6813  0A40                     l2746:	
  6814  0A40  0831               	movf	___lwmod@dividend+1,w
  6815  0A41  00AF               	movwf	?___lwmod+1
  6816  0A42  0830               	movf	___lwmod@dividend,w
  6817  0A43  00AE               	movwf	?___lwmod
  6818  0A44                     l856:	
  6819  0A44  0008               	return
  6820  0A45                     __end_of___lwmod:	
  6821                           
  6822                           	psect	text28
  6823  0AC1                     __ptext28:	
  6824 ;; *************** function ___lwdiv *****************
  6825 ;; Defined at:
  6826 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;  divisor         2    6[BANK0 ] unsigned int 
  6829 ;;  dividend        2    8[BANK0 ] unsigned int 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  quotient        2   12[BANK0 ] unsigned int 
  6832 ;;  counter         1   11[BANK0 ] unsigned char 
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  2    6[BANK0 ] unsigned int 
  6835 ;; Registers used:
  6836 ;;		wreg, status,2, status,0
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6842 ;;      Params:         0       4       0       0       0
  6843 ;;      Locals:         0       3       0       0       0
  6844 ;;      Temps:          0       1       0       0       0
  6845 ;;      Totals:         0       8       0       0       0
  6846 ;;Total ram usage:        8 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    1
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		_main
  6853 ;;		_mostrarDigitos
  6854 ;;		_sprintf
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           
  6859                           ;psect for function ___lwdiv
  6860  0AC1                     ___lwdiv:	
  6861  0AC1                     l2702:	
  6862                           ;incstack = 0
  6863                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6864                           
  6865  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  6866  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  6867  0AC3  01AC               	clrf	___lwdiv@quotient
  6868  0AC4  01AD               	clrf	___lwdiv@quotient+1
  6869  0AC5                     l2704:	
  6870  0AC5  0826               	movf	___lwdiv@divisor,w
  6871  0AC6  0427               	iorwf	___lwdiv@divisor+1,w
  6872  0AC7  1903               	btfsc	3,2
  6873  0AC8  2ACA               	goto	u2651
  6874  0AC9  2ACB               	goto	u2650
  6875  0ACA                     u2651:	
  6876  0ACA  2B02               	goto	l2724
  6877  0ACB                     u2650:	
  6878  0ACB                     l2706:	
  6879  0ACB  01AB               	clrf	___lwdiv@counter
  6880  0ACC  0AAB               	incf	___lwdiv@counter,f
  6881  0ACD  2AD9               	goto	l2712
  6882  0ACE                     l2708:	
  6883  0ACE  3001               	movlw	1
  6884  0ACF                     u2665:	
  6885  0ACF  1003               	clrc
  6886  0AD0  0DA6               	rlf	___lwdiv@divisor,f
  6887  0AD1  0DA7               	rlf	___lwdiv@divisor+1,f
  6888  0AD2  3EFF               	addlw	-1
  6889  0AD3  1D03               	skipz
  6890  0AD4  2ACF               	goto	u2665
  6891  0AD5                     l2710:	
  6892  0AD5  3001               	movlw	1
  6893  0AD6  00AA               	movwf	??___lwdiv
  6894  0AD7  082A               	movf	??___lwdiv,w
  6895  0AD8  07AB               	addwf	___lwdiv@counter,f
  6896  0AD9                     l2712:	
  6897  0AD9  1FA7               	btfss	___lwdiv@divisor+1,7
  6898  0ADA  2ADC               	goto	u2671
  6899  0ADB  2ADD               	goto	u2670
  6900  0ADC                     u2671:	
  6901  0ADC  2ACE               	goto	l2708
  6902  0ADD                     u2670:	
  6903  0ADD                     l2714:	
  6904  0ADD  3001               	movlw	1
  6905  0ADE                     u2685:	
  6906  0ADE  1003               	clrc
  6907  0ADF  0DAC               	rlf	___lwdiv@quotient,f
  6908  0AE0  0DAD               	rlf	___lwdiv@quotient+1,f
  6909  0AE1  3EFF               	addlw	-1
  6910  0AE2  1D03               	skipz
  6911  0AE3  2ADE               	goto	u2685
  6912  0AE4  0827               	movf	___lwdiv@divisor+1,w
  6913  0AE5  0229               	subwf	___lwdiv@dividend+1,w
  6914  0AE6  1D03               	skipz
  6915  0AE7  2AEA               	goto	u2695
  6916  0AE8  0826               	movf	___lwdiv@divisor,w
  6917  0AE9  0228               	subwf	___lwdiv@dividend,w
  6918  0AEA                     u2695:	
  6919  0AEA  1C03               	skipc
  6920  0AEB  2AED               	goto	u2691
  6921  0AEC  2AEE               	goto	u2690
  6922  0AED                     u2691:	
  6923  0AED  2AF5               	goto	l2720
  6924  0AEE                     u2690:	
  6925  0AEE                     l2716:	
  6926  0AEE  0826               	movf	___lwdiv@divisor,w
  6927  0AEF  02A8               	subwf	___lwdiv@dividend,f
  6928  0AF0  0827               	movf	___lwdiv@divisor+1,w
  6929  0AF1  1C03               	skipc
  6930  0AF2  03A9               	decf	___lwdiv@dividend+1,f
  6931  0AF3  02A9               	subwf	___lwdiv@dividend+1,f
  6932  0AF4                     l2718:	
  6933  0AF4  142C               	bsf	___lwdiv@quotient,0
  6934  0AF5                     l2720:	
  6935  0AF5  3001               	movlw	1
  6936  0AF6                     u2705:	
  6937  0AF6  1003               	clrc
  6938  0AF7  0CA7               	rrf	___lwdiv@divisor+1,f
  6939  0AF8  0CA6               	rrf	___lwdiv@divisor,f
  6940  0AF9  3EFF               	addlw	-1
  6941  0AFA  1D03               	skipz
  6942  0AFB  2AF6               	goto	u2705
  6943  0AFC                     l2722:	
  6944  0AFC  3001               	movlw	1
  6945  0AFD  02AB               	subwf	___lwdiv@counter,f
  6946  0AFE  1D03               	btfss	3,2
  6947  0AFF  2B01               	goto	u2711
  6948  0B00  2B02               	goto	u2710
  6949  0B01                     u2711:	
  6950  0B01  2ADD               	goto	l2714
  6951  0B02                     u2710:	
  6952  0B02                     l2724:	
  6953  0B02  082D               	movf	___lwdiv@quotient+1,w
  6954  0B03  00A7               	movwf	?___lwdiv+1
  6955  0B04  082C               	movf	___lwdiv@quotient,w
  6956  0B05  00A6               	movwf	?___lwdiv
  6957  0B06                     l846:	
  6958  0B06  0008               	return
  6959  0B07                     __end_of___lwdiv:	
  6960                           
  6961                           	psect	text29
  6962  09CD                     __ptext29:	
  6963 ;; *************** function _envioTX *****************
  6964 ;; Defined at:
  6965 ;;		line 39 in file "mostrarInicializar.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  mensaje         2    0[BANK0 ] PTR unsigned char 
  6968 ;;		 -> STR_18(19), agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), 
  6969 ;;		 -> STR_14(40), lecturaConsulta@strLote(32), STR_12(20), STR_11(17), 
  6970 ;;		 -> STR_10(22), consultaPrecio@mensaje(26), STR_7(40), STR_6(40), 
  6971 ;;		 -> cierreDeLote@strLote(32), STR_4(20), accionesPuertoSerial@mensaje(12), STR_2(19), 
  6972 ;;		 -> accionesAceptar@strLote(32), 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  i               2    5[BANK0 ] int 
  6975 ;;  transmitir      1    7[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6985 ;;      Params:         0       2       0       0       0
  6986 ;;      Locals:         0       3       0       0       0
  6987 ;;      Temps:          0       3       0       0       0
  6988 ;;      Totals:         0       8       0       0       0
  6989 ;;Total ram usage:        8 bytes
  6990 ;; Hardware stack levels used:    2
  6991 ;; Hardware stack levels required when called:    1
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_accionesAceptar
  6996 ;;		_accionesDeshacer
  6997 ;;		_accionesPuertoSerial
  6998 ;;		_lecturaEtiqueta
  6999 ;;		_cierreDeLote
  7000 ;;		_lecturaMas
  7001 ;;		_lecturaMenos
  7002 ;;		_consultaPrecio
  7003 ;;		_lecturaConsulta
  7004 ;;		_main
  7005 ;;		_agregarModificarPrecio
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           
  7010                           ;psect for function _envioTX
  7011  09CD                     _envioTX:	
  7012  09CD                     l2826:	
  7013                           ;incstack = 0
  7014                           ; Regs used in _envioTX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7015                           
  7016                           
  7017                           ;mostrarInicializar.c: 40:     int i = 0;
  7018  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  7019  09CE  1303               	bcf	3,6	;RP1=0, select bank0
  7020  09CF  01A5               	clrf	envioTX@i
  7021  09D0  01A6               	clrf	envioTX@i+1
  7022  09D1                     l2828:	
  7023                           
  7024                           ;mostrarInicializar.c: 41:     char transmitir=1;
  7025  09D1  01A7               	clrf	envioTX@transmitir
  7026  09D2  0AA7               	incf	envioTX@transmitir,f
  7027                           
  7028                           ;mostrarInicializar.c: 42:  while(transmitir){
  7029  09D3  29FD               	goto	l2838
  7030  09D4                     l2830:	
  7031                           
  7032                           ;mostrarInicializar.c: 43:   TXREG = mensaje[i];
  7033  09D4  0825               	movf	envioTX@i,w
  7034  09D5  0720               	addwf	envioTX@mensaje,w
  7035  09D6  00A3               	movwf	??_envioTX+1
  7036  09D7  0821               	movf	envioTX@mensaje+1,w
  7037  09D8  00A2               	movwf	??_envioTX
  7038  09D9  1803               	skipnc
  7039  09DA  0AA2               	incf	??_envioTX,f
  7040  09DB  1FA5               	btfss	envioTX@i,7
  7041  09DC  29DE               	goto	u2870
  7042  09DD  03A2               	decf	??_envioTX,f
  7043  09DE                     u2870:	
  7044  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7045  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7046  09E0  0822               	movf	??_envioTX,w
  7047  09E1  00A4               	movwf	??_envioTX+2
  7048  09E2  0824               	movf	??_envioTX+2,w
  7049  09E3  00FF               	movwf	btemp+1
  7050  09E4  0823               	movf	??_envioTX+1,w
  7051  09E5  0084               	movwf	4
  7052  09E6  120A  118A  2300  120A  158A  	fcall	stringtab
  7053  09EB  0099               	movwf	25	;volatile
  7054  09EC                     l2832:	
  7055                           
  7056                           ;mostrarInicializar.c: 44:   if (TXREG==0){
  7057  09EC  0819               	movf	25,w	;volatile
  7058  09ED  1D03               	btfss	3,2
  7059  09EE  29F0               	goto	u2881
  7060  09EF  29F1               	goto	u2880
  7061  09F0                     u2881:	
  7062  09F0  29F3               	goto	l2836
  7063  09F1                     u2880:	
  7064  09F1                     l2834:	
  7065                           
  7066                           ;mostrarInicializar.c: 45:    transmitir=0;
  7067  09F1  01A7               	clrf	envioTX@transmitir
  7068                           
  7069                           ;mostrarInicializar.c: 46:         }
  7070  09F2  29F9               	goto	l411
  7071  09F3                     l2836:	
  7072                           
  7073                           ;mostrarInicializar.c: 48:    i++;
  7074  09F3  3001               	movlw	1
  7075  09F4  07A5               	addwf	envioTX@i,f
  7076  09F5  1803               	skipnc
  7077  09F6  0AA6               	incf	envioTX@i+1,f
  7078  09F7  3000               	movlw	0
  7079  09F8  07A6               	addwf	envioTX@i+1,f
  7080  09F9                     l411:	
  7081  09F9  1E0C               	btfss	12,4	;volatile
  7082  09FA  29FC               	goto	u2891
  7083  09FB  29FD               	goto	u2890
  7084  09FC                     u2891:	
  7085  09FC  29F9               	goto	l411
  7086  09FD                     u2890:	
  7087  09FD                     l2838:	
  7088                           
  7089                           ;mostrarInicializar.c: 42:  while(transmitir){
  7090  09FD  0827               	movf	envioTX@transmitir,w
  7091  09FE  1D03               	btfss	3,2
  7092  09FF  2A01               	goto	u2901
  7093  0A00  2A02               	goto	u2900
  7094  0A01                     u2901:	
  7095  0A01  29D4               	goto	l2830
  7096  0A02                     u2900:	
  7097  0A02                     l2840:	
  7098                           
  7099                           ;mostrarInicializar.c: 53:     TXREG = 13;
  7100  0A02  300D               	movlw	13
  7101  0A03  0099               	movwf	25	;volatile
  7102  0A04                     l415:	
  7103                           ;mostrarInicializar.c: 54:     while(TXIF == 0);
  7104                           
  7105  0A04  1E0C               	btfss	12,4	;volatile
  7106  0A05  2A07               	goto	u2911
  7107  0A06  2A08               	goto	u2910
  7108  0A07                     u2911:	
  7109  0A07  2A04               	goto	l415
  7110  0A08                     u2910:	
  7111  0A08                     l418:	
  7112  0A08  0008               	return
  7113  0A09                     __end_of_envioTX:	
  7114                           
  7115                           	psect	text30
  7116  0B50                     __ptext30:	
  7117 ;; *************** function _bailenLeds *****************
  7118 ;; Defined at:
  7119 ;;		line 25 in file "mostrarInicializar.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  i               2    3[BANK0 ] unsigned short 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7133 ;;      Params:         0       0       0       0       0
  7134 ;;      Locals:         0       2       0       0       0
  7135 ;;      Temps:          0       3       0       0       0
  7136 ;;      Totals:         0       5       0       0       0
  7137 ;;Total ram usage:        5 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    1
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_accionesAceptar
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _bailenLeds
  7149  0B50                     _bailenLeds:	
  7150  0B50                     l3164:	
  7151                           ;incstack = 0
  7152                           ; Regs used in _bailenLeds: [wreg+status,2]
  7153                           
  7154                           
  7155                           ;mostrarInicializar.c: 27:     unsigned short int i;;mostrarInicializar.c: 28:     for (
      +                          i = 0; i < 3; i++) {
  7156  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  7157  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  7158  0B52  01A3               	clrf	bailenLeds@i
  7159  0B53  01A4               	clrf	bailenLeds@i+1
  7160  0B54                     l402:	
  7161                           
  7162                           ;mostrarInicializar.c: 29:         RA3 = 1;
  7163  0B54  1585               	bsf	5,3	;volatile
  7164  0B55                     l3170:	
  7165                           
  7166                           ;mostrarInicializar.c: 30:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7167  0B55  3002               	movlw	2
  7168  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  7169  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  7170  0B58  00A2               	movwf	??_bailenLeds+2
  7171  0B59  3004               	movlw	4
  7172  0B5A  00A1               	movwf	??_bailenLeds+1
  7173  0B5B  30B9               	movlw	185
  7174  0B5C  00A0               	movwf	??_bailenLeds
  7175  0B5D                     u3877:	
  7176  0B5D  0BA0               	decfsz	??_bailenLeds,f
  7177  0B5E  2B5D               	goto	u3877
  7178  0B5F  0BA1               	decfsz	??_bailenLeds+1,f
  7179  0B60  2B5D               	goto	u3877
  7180  0B61  0BA2               	decfsz	??_bailenLeds+2,f
  7181  0B62  2B5D               	goto	u3877
  7182  0B63  2B64               	nop2
  7183  0B64                     l3172:	
  7184                           
  7185                           ;mostrarInicializar.c: 31:         RA5 = 1;
  7186  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  7187  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  7188  0B66  1685               	bsf	5,5	;volatile
  7189                           
  7190                           ;mostrarInicializar.c: 32:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7191  0B67  3002               	movlw	2
  7192  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  7193  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  7194  0B6A  00A2               	movwf	??_bailenLeds+2
  7195  0B6B  3004               	movlw	4
  7196  0B6C  00A1               	movwf	??_bailenLeds+1
  7197  0B6D  30B9               	movlw	185
  7198  0B6E  00A0               	movwf	??_bailenLeds
  7199  0B6F                     u3887:	
  7200  0B6F  0BA0               	decfsz	??_bailenLeds,f
  7201  0B70  2B6F               	goto	u3887
  7202  0B71  0BA1               	decfsz	??_bailenLeds+1,f
  7203  0B72  2B6F               	goto	u3887
  7204  0B73  0BA2               	decfsz	??_bailenLeds+2,f
  7205  0B74  2B6F               	goto	u3887
  7206  0B75  2B76               	nop2
  7207  0B76                     l3174:	
  7208                           
  7209                           ;mostrarInicializar.c: 33:         RA3 = 0;
  7210  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  7211  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  7212  0B78  1185               	bcf	5,3	;volatile
  7213                           
  7214                           ;mostrarInicializar.c: 34:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7215  0B79  3002               	movlw	2
  7216  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  7218  0B7C  00A2               	movwf	??_bailenLeds+2
  7219  0B7D  3004               	movlw	4
  7220  0B7E  00A1               	movwf	??_bailenLeds+1
  7221  0B7F  30B9               	movlw	185
  7222  0B80  00A0               	movwf	??_bailenLeds
  7223  0B81                     u3897:	
  7224  0B81  0BA0               	decfsz	??_bailenLeds,f
  7225  0B82  2B81               	goto	u3897
  7226  0B83  0BA1               	decfsz	??_bailenLeds+1,f
  7227  0B84  2B81               	goto	u3897
  7228  0B85  0BA2               	decfsz	??_bailenLeds+2,f
  7229  0B86  2B81               	goto	u3897
  7230  0B87  2B88               	nop2
  7231  0B88                     l3176:	
  7232                           
  7233                           ;mostrarInicializar.c: 35:         RA5 = 0;
  7234  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  7235  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  7236  0B8A  1285               	bcf	5,5	;volatile
  7237                           
  7238                           ;mostrarInicializar.c: 36:     }
  7239  0B8B  3001               	movlw	1
  7240  0B8C  07A3               	addwf	bailenLeds@i,f
  7241  0B8D  1803               	skipnc
  7242  0B8E  0AA4               	incf	bailenLeds@i+1,f
  7243  0B8F  3000               	movlw	0
  7244  0B90  07A4               	addwf	bailenLeds@i+1,f
  7245  0B91  3000               	movlw	0
  7246  0B92  0224               	subwf	bailenLeds@i+1,w
  7247  0B93  3003               	movlw	3
  7248  0B94  1903               	skipnz
  7249  0B95  0223               	subwf	bailenLeds@i,w
  7250  0B96  1C03               	skipc
  7251  0B97  2B99               	goto	u3491
  7252  0B98  2B9A               	goto	u3490
  7253  0B99                     u3491:	
  7254  0B99  2B54               	goto	l402
  7255  0B9A                     u3490:	
  7256  0B9A                     l404:	
  7257  0B9A  0008               	return
  7258  0B9B                     __end_of_bailenLeds:	
  7259                           
  7260                           	psect	text31
  7261  0BF6                     __ptext31:	
  7262 ;; *************** function _int_usart *****************
  7263 ;; Defined at:
  7264 ;;		line 93 in file "main.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  basura          1    0        unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7278 ;;      Params:         0       0       0       0       0
  7279 ;;      Locals:         1       0       0       0       0
  7280 ;;      Temps:          4       0       0       0       0
  7281 ;;      Totals:         5       0       0       0       0
  7282 ;;Total ram usage:        5 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		Interrupt level 1
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function _int_usart
  7293  0BF6                     _int_usart:	
  7294  0BF6                     i1l2640:	
  7295                           
  7296                           ;main.c: 95:     if(TMR1IF){
  7297  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  7298  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  7299  0BF8  1C0C               	btfss	12,0	;volatile
  7300  0BF9  2BFB               	goto	u253_21
  7301  0BFA  2BFC               	goto	u253_20
  7302  0BFB                     u253_21:	
  7303  0BFB  2C02               	goto	i1l331
  7304  0BFC                     u253_20:	
  7305  0BFC                     i1l2642:	
  7306                           
  7307                           ;main.c: 96:         GO_nDONE = 1;
  7308  0BFC  151F               	bsf	31,2	;volatile
  7309                           
  7310                           ;main.c: 97:         TMR1 = 15536;
  7311  0BFD  303C               	movlw	60
  7312  0BFE  008F               	movwf	15	;volatile
  7313  0BFF  30B0               	movlw	176
  7314  0C00  008E               	movwf	14	;volatile
  7315                           
  7316                           ;main.c: 98:         TMR1IF = 0;
  7317  0C01  100C               	bcf	12,0	;volatile
  7318  0C02                     i1l331:	
  7319                           ;main.c: 99:     }
  7320                           
  7321                           
  7322                           ;main.c: 100:     if(RCSTAbits.FERR){
  7323  0C02  1D18               	btfss	24,2	;volatile
  7324  0C03  2C05               	goto	u254_21
  7325  0C04  2C06               	goto	u254_20
  7326  0C05                     u254_21:	
  7327  0C05  2C07               	goto	i1l2646
  7328  0C06                     u254_20:	
  7329  0C06                     i1l2644:	
  7330  0C06  081A               	movf	26,w	;volatile
  7331  0C07                     i1l2646:	
  7332                           
  7333                           ;main.c: 103:     if (RCSTAbits.OERR){
  7334  0C07  1C98               	btfss	24,1	;volatile
  7335  0C08  2C0A               	goto	u255_21
  7336  0C09  2C0B               	goto	u255_20
  7337  0C0A                     u255_21:	
  7338  0C0A  2C0D               	goto	i1l333
  7339  0C0B                     u255_20:	
  7340  0C0B                     i1l2648:	
  7341                           
  7342                           ;main.c: 104:         RCSTAbits.CREN=0;
  7343  0C0B  1218               	bcf	24,4	;volatile
  7344                           
  7345                           ;main.c: 105:         RCSTAbits.CREN=1;
  7346  0C0C  1618               	bsf	24,4	;volatile
  7347  0C0D                     i1l333:	
  7348                           ;main.c: 106:     }
  7349                           
  7350                           
  7351                           ;main.c: 107:     if(RCIF) {
  7352  0C0D  1E8C               	btfss	12,5	;volatile
  7353  0C0E  2C10               	goto	u256_21
  7354  0C0F  2C11               	goto	u256_20
  7355  0C10                     u256_21:	
  7356  0C10  2C3A               	goto	i1l2662
  7357  0C11                     u256_20:	
  7358  0C11                     i1l2650:	
  7359                           
  7360                           ;main.c: 108:         if((codigoEntrada[serial] = RCREG) != 0x0D && (codigoEntrada[seria
      +                          l]) != 0x0A && serial < (10 -1)) {
  7361  0C11  081A               	movf	26,w	;volatile
  7362  0C12  00F4               	movwf	??_int_usart
  7363  0C13  0873               	movf	_serial,w
  7364  0C14  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7365  0C15  0084               	movwf	4
  7366  0C16  0874               	movf	??_int_usart,w
  7367  0C17  1383               	bcf	3,7	;select IRP bank1
  7368  0C18  0080               	movwf	0
  7369  0C19  300D               	movlw	13
  7370  0C1A  0600               	xorwf	0,w
  7371  0C1B  1903               	btfsc	3,2
  7372  0C1C  2C1E               	goto	u257_21
  7373  0C1D  2C1F               	goto	u257_20
  7374  0C1E                     u257_21:	
  7375  0C1E  2C33               	goto	i1l2658
  7376  0C1F                     u257_20:	
  7377  0C1F                     i1l2652:	
  7378  0C1F  0873               	movf	_serial,w
  7379  0C20  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7380  0C21  0084               	movwf	4
  7381  0C22  300A               	movlw	10
  7382  0C23  0600               	xorwf	0,w
  7383  0C24  1903               	btfsc	3,2
  7384  0C25  2C27               	goto	u258_21
  7385  0C26  2C28               	goto	u258_20
  7386  0C27                     u258_21:	
  7387  0C27  2C33               	goto	i1l2658
  7388  0C28                     u258_20:	
  7389  0C28                     i1l2654:	
  7390  0C28  3009               	movlw	9
  7391  0C29  0273               	subwf	_serial,w
  7392  0C2A  1803               	skipnc
  7393  0C2B  2C2D               	goto	u259_21
  7394  0C2C  2C2E               	goto	u259_20
  7395  0C2D                     u259_21:	
  7396  0C2D  2C33               	goto	i1l2658
  7397  0C2E                     u259_20:	
  7398  0C2E                     i1l2656:	
  7399                           
  7400                           ;main.c: 109:             serial++;
  7401  0C2E  3001               	movlw	1
  7402  0C2F  00F4               	movwf	??_int_usart
  7403  0C30  0874               	movf	??_int_usart,w
  7404  0C31  07F3               	addwf	_serial,f
  7405                           
  7406                           ;main.c: 110:         }
  7407  0C32  2C3A               	goto	i1l2662
  7408  0C33                     i1l2658:	
  7409                           
  7410                           ;main.c: 112:             serial = 0;
  7411  0C33  01F3               	clrf	_serial
  7412  0C34                     i1l2660:	
  7413                           
  7414                           ;main.c: 113:             huboInt = 1;
  7415  0C34  3001               	movlw	1
  7416  0C35  1683               	bsf	3,5	;RP0=1, select bank3
  7417  0C36  1703               	bsf	3,6	;RP1=1, select bank3
  7418  0C37  00D2               	movwf	_huboInt^(0+384)
  7419  0C38  3000               	movlw	0
  7420  0C39  00D3               	movwf	(_huboInt^(0+384)+1)
  7421  0C3A                     i1l2662:	
  7422                           
  7423                           ;main.c: 116:     if(ADIF) {
  7424  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  7425  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  7426  0C3C  1F0C               	btfss	12,6	;volatile
  7427  0C3D  2C3F               	goto	u260_21
  7428  0C3E  2C40               	goto	u260_20
  7429  0C3F                     u260_21:	
  7430  0C3F  2C4B               	goto	i1l338
  7431  0C40                     u260_20:	
  7432  0C40                     i1l2664:	
  7433                           
  7434                           ;main.c: 117:         ADIF = 0;
  7435  0C40  130C               	bcf	12,6	;volatile
  7436  0C41                     i1l2666:	
  7437                           
  7438                           ;main.c: 118:         adresult = (ADRESH<<8)+ADRESL;
  7439  0C41  081E               	movf	30,w	;volatile
  7440  0C42  1683               	bsf	3,5	;RP0=1, select bank3
  7441  0C43  1703               	bsf	3,6	;RP1=1, select bank3
  7442  0C44  00D9               	movwf	(_adresult+1)^(0+384)
  7443  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  7444  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  7445  0C47  081E               	movf	30,w	;volatile
  7446  0C48  1683               	bsf	3,5	;RP0=1, select bank3
  7447  0C49  1703               	bsf	3,6	;RP1=1, select bank3
  7448  0C4A  00D8               	movwf	_adresult^(0+384)
  7449  0C4B                     i1l338:	
  7450  0C4B  0877               	movf	??_int_usart+3,w
  7451  0C4C  008A               	movwf	10
  7452  0C4D  0876               	movf	??_int_usart+2,w
  7453  0C4E  0084               	movwf	4
  7454  0C4F  0E75               	swapf	(??_int_usart+1)^(0+4294967168),w
  7455  0C50  0083               	movwf	3
  7456  0C51  0EFE               	swapf	btemp,f
  7457  0C52  0E7E               	swapf	btemp,w
  7458  0C53  0009               	retfie
  7459  0C54                     __end_of_int_usart:	
  7460  007E                     btemp	set	126	;btemp
  7461  007E                     wtemp0	set	126
  7462                           
  7463                           	psect	intentry
  7464  0004                     __pintentry:	
  7465                           ;incstack = 0
  7466                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  7467                           
  7468  0004                     interrupt_function:	
  7469  007E                     saved_w	set	btemp
  7470  0004  00FE               	movwf	btemp
  7471  0005  0E03               	swapf	3,w
  7472  0006  00F5               	movwf	??_int_usart+1
  7473  0007  0804               	movf	4,w
  7474  0008  00F6               	movwf	??_int_usart+2
  7475  0009  080A               	movf	10,w
  7476  000A  00F7               	movwf	??_int_usart+3
  7477  000B  120A  158A  2BF6   	ljmp	_int_usart


Data Sizes:
    Strings     301
    Constant    20
    Data        1
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     78      79
    BANK1            80     45      74
    BANK3            96     66      74
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[25]), STR_13(CODE[17]), 
		 -> STR_9(CODE[22]), STR_8(CODE[25]), STR_5(CODE[24]), STR_3(CODE[5]), 
		 -> STR_1(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[7]), ?_sprintf(BANK0[2]), adresult(BANK3[2]), codigoEntrada(BANK1[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), lecturaConsulta@strLote(BANK1[32]), 
		 -> consultaPrecio@mensaje(BANK0[26]), cierreDeLote@strLote(BANK0[32]), accionesPuertoSerial@mensaje(BANK3[12]), accionesAceptar@strLote(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envioTX@mensaje	PTR unsigned char  size(2) Largest target is 40
		 -> STR_18(CODE[19]), agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), 
		 -> STR_14(CODE[40]), lecturaConsulta@strLote(BANK1[32]), STR_12(CODE[20]), STR_11(CODE[17]), 
		 -> STR_10(CODE[22]), consultaPrecio@mensaje(BANK0[26]), STR_7(CODE[40]), STR_6(CODE[40]), 
		 -> cierreDeLote@strLote(BANK0[32]), STR_4(CODE[20]), accionesPuertoSerial@mensaje(BANK3[12]), STR_2(CODE[19]), 
		 -> accionesAceptar@strLote(BANK1[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _escrituraDeCierre->_eeprom_write
    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaMenos->_envioTX
    _lecturaMas->_cierreDeLote
    _cierreDeLote->_sprintf
    _agregarModificarPrecio->_sprintf
    _lecturaConsulta->_consultaPrecio
    _consultaPrecio->_sprintf
    _accionesDeshacer->_mostrarDigitos
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_sprintf
    _sprintf->___lwmod
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_accionesPuertoSerial
    _lecturaComando->_lecturaConsulta

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_accionesPuertoSerial

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   82123
                                             41 BANK1      4     4      0
                                             12 BANK3     54    54      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                        _eeprom_read
                            _envioTX
                  _escrituraDeCierre
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _escrituraDeCierre                                    3     3      0     670
                                              3 BANK0      3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                15    15      0   53105
                                             38 BANK1      3     3      0
                                              0 BANK3     12    12      0
                            _envioTX
                     _lecturaComando
                    _lecturaEtiqueta
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      8     8      0   11672
                                             31 BANK0      8     8      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                            _envioTX
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    3589
                                             22 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    2164
                                             14 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0   35259
                    _lecturaConsulta
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0    1725
                            _envioTX
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0   17687
             _agregarModificarPrecio
                       _cierreDeLote
                            _envioTX
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  3     3      0     167
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cierreDeLote                                        36    36      0    6174
                                             42 BANK0     36    36      0
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _agregarModificarPrecio                              25    25      0    9621
                                             42 BANK0     25    25      0
                            ___awdiv
                             ___bmul
                             ___wmul
                       _eeprom_write
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     602
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _lecturaConsulta                                     38    38      0   15847
                                              0 BANK1     38    38      0
                             ___wmul
                     _consultaPrecio
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _consultaPrecio                                      34    32      2    8603
                                             42 BANK0     34    32      2
                            ___awdiv
                            ___awmod
                        _eeprom_read
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    6643
                       _eliminarProd
                            _envioTX
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    1777
                                              6 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                     38    38      0    9101
                                             42 BANK0      4     4      0
                                              0 BANK1     34    34      0
                         _bailenLeds
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    18     10    4354
                                             20 BANK0     22    12     10
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    2760
                                             20 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1132
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1141
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _envioTX                                              8     6      2    1725
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_usart                                            5     5      0       1
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
       ___wmul (ARG)
   ___wmul
   _accionesAceptar
     _bailenLeds
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesPuertoSerial
     _envioTX
     _lecturaComando
       _lecturaConsulta
         ___wmul
         _consultaPrecio
           ___awdiv
           ___awmod
           _eeprom_read
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _sprintf
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
       _lecturaMas
         _agregarModificarPrecio
           ___awdiv
           ___bmul
           ___wmul
           _eeprom_write
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _cierreDeLote
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _verificacionEntrada
       _lecturaMenos
         _envioTX
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _envioTX
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _eeprom_read
   _envioTX
   _escrituraDeCierre
     _eeprom_write
   _mostrarDigitos
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     42      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      ED      12        0.0%
ABS                  0      0      ED       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 10 18:49:39 2020

                 ?_lecturaConsulta 0074                      ?_eliminarProd 002E  
                                pc 0002                     ___bmul@product 0022  
                 ?_lecturaEtiqueta 0074                        __CFG_CP$OFF 0000  
                               l61 0A81                                 l55 0F1D  
                               l71 0DDF                                 l56 0F2D  
                               l74 0AC0                                 _BS 031C  
                               l68 0DCB                                 l69 0DC5  
                     ___awdiv@sign 0026                                 fsr 0004  
              ___wmul@multiplicand 0022            __size_of_consultaPrecio 00CA  
                   ?_verificarProd 002E                                l122 0EB1  
                              l132 069B                                l300 00B5  
                              l310 00D1                                l119 0EAB  
                              l144 0926                                l128 0689  
                              l304 00CD                                l305 00C3  
                              l402 0B54                                l411 09F9  
                              l163 0877                                l404 0B9A  
                              l172 02FE                                l308 0231  
                              l149 0B4F                                l158 095B  
                              l415 0A04                                l511 0892  
                              l600 088E                                l513 08AD  
                              l418 0A08                                l530 095F  
                              l194 08CD                                l362 0D17  
                              l187 0784                                l531 095F  
                              l356 09CC                                l380 0FFF  
                              l534 0981                                l375 0CB5  
                              l537 0992                                l369 0D7B  
                              l570 05A5                                l299 00BF  
                              l740 0BF5                                l557 04A7  
                              l574 08DC                                l399 07F3  
                              l727 0E48                                l576 08F4  
                              l846 0B06                                l856 0A44  
                              _RA3 002B                                _RA5 002D  
                              _RE0 0048                                _RE1 0049  
                              _RE2 004A                       __CFG_CPD$OFF 0000  
                              _pow 0993                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0026  
agregarModificarPrecio@upper_8bits 005F                       __CFG_FOSC$XT 0000  
                     __CFG_LVP$OFF 0000                   ??_mostrarDigitos 0036  
                             l3000 0D7A                               l3010 0903  
                             l3012 090D                               l3004 08F5  
                             l3100 0CBC                               l3030 0B4A  
                             l3022 0B07                               l3014 0916  
                             l3006 08F9                               l3110 0D13  
                             l3102 0CD7                               l3040 0F52  
                             l3032 0B4B                               l3024 0B0E  
                             l3016 091F                               l3008 08FB  
                             l3120 0945                               l3112 0927  
                             l3200 08BC                               l3104 0CEE  
                             l3050 0FBD                               l3042 0F9E  
                             l3034 0F2E                               l3026 0B43  
                             l3018 0925                               l3122 094D  
                             l3114 092F                               l3130 086C  
                             l3202 08C2                               l3106 0D09  
                             l3060 0251                               l3140 06BC  
                             l3132 069C                               l3052 0FEA  
                             l3044 0FA2                               l3036 0F45  
                             l3028 0B44                               l3124 0950  
                             l3116 0935                               l3204 08C8  
                             l3108 0D0B                               l3220 05F6  
                             l3212 05AC                               l3300 0D8A  
                             l3062 026F                               l3070 02F3  
                             l3150 0721                               l3142 06C8  
                             l3134 06A4                               l3046 0FA6  
                             l3038 0F4A                               l3054 0FF6  
                             l3118 093F                               l3126 0862  
                             l3230 0635                               l3222 060B  
                             l3214 05BF                               l3206 05A6  
                             l3310 0DA7                               l3302 0D90  
                             l3072 0785                               l3064 027C  
                             l3056 0235                               l3160 0769  
                             l3152 0727                               l3144 06CE  
                             l3136 06AA                               l3048 0FB0  
                             l3128 086A                               l3080 0E4E  
                             l3240 0663                               l3232 063E  
                             l3224 0617                               l3216 05C5  
                             l3312 0DCE                               l3304 0D96  
                             l3320 0A92                               l3400 0126  
                             l3170 0B55                               l3074 07A3  
                             l3066 0282                               l3058 0244  
                             l3154 072D                               l3162 0779  
                             l3146 0713                               l3138 06B0  
                             l3090 0EA5                               l3082 0E54  
                             l3250 068A                               l3242 066B  
                             l3234 0642                               l3226 0628  
                             l3218 05D2                               l3314 0DDC  
                             l3306 0D9C                               l3322 0A9C  
                             l3410 0149                               l3402 0130  
                             l3330 003D                               l3172 0B64  
                             l3164 0B50                               l3076 07C4  
                             l3260 0EB8                               l3068 029D  
                             l3156 0733                               l3148 0719  
                             l3084 0E72                               l3252 0698  
                             l3244 0674                               l3236 064E  
                             l3228 0630                               l3308 0DA2  
                             l3324 0AA8                               l3316 0A82  
                             l3420 0156                               l3412 014E  
                             l3404 0138                               l3340 0078  
                             l3332 005A                               l3174 0B76  
                             l2710 0AD5                               l2702 0AC1  
                             l3262 0EC0                               l3190 0CA7  
                             l3158 0739                               l3086 0E76  
                             l3078 0E4C                               l3094 0CB6  
                             l3246 0677                               l3238 065D  
                             l3326 0AB4                               l3318 0A8A  
                             l3430 01A7                               l3422 015E  
                             l3406 013F                               l3350 0084  
                             l3342 0079                               l3334 0067  
                             l3176 0B88                               l2720 0AF5  
                             l2712 0AD9                               l2704 0AC5  
                             l2800 0521                               l3280 0EE9  
                             l3272 0ECA                               l3264 0EC2  
                             l3192 0CA9                               l3184 0C5A  
                             l3088 0E83                               l3248 0685  
                             l3440 022B                               l3432 01AC  
                             l3408 0147                               l3424 0165  
                             l3360 0092                               l3352 0088  
                             l3344 007A                               l3336 0072  
                             l3328 0032                               l2722 0AFC  
                             l2714 0ADD                               l2706 0ACB  
                             l2730 0A11                               l2810 056F  
                             l2802 0527                               l3282 0F28  
                             l3274 0ED1                               l3266 0EC6  
                             l3258 0EB2                               l3194 0CB1  
                             l3186 0C75                               l3178 0C54  
                             l3290 0A66                               l3442 022F  
                             l3434 01B3                               l3426 016B  
                             l3418 0151                               l3370 009E  
                             l3362 0096                               l3354 008A  
                             l3346 007E                               l3338 0076  
                             l2716 0AEE                               l2708 0ACE  
                             l2724 0B02                               l2740 0A2D  
                             l2732 0A14                               l2812 0578  
                             l2804 0530                               l3276 0ED7  
                             l3188 0C8C                               l3292 0A71  
                             l3284 0A45                               l2900 0DE7  
                             l3196 08AE                               l3436 01F9  
                             l3428 019E                               l3380 00B9  
                             l3372 00A0                               l3364 0099  
                             l3356 008C                               l3348 0082  
                             l2830 09D4                               l2718 0AF4  
                             l2742 0A33                               l2734 0A1B  
                             l2814 057E                               l2806 0536  
                             l2750 0453                               l3278 0EE4  
                             l3294 0A76                               l3286 0A51  
                             l2910 0DFB                               l2902 0DEC  
                             l3198 08B6                               l3438 0220  
                             l3390 00DB                               l3374 00A4  
                             l3366 009C                               l3358 008E  
                             l2840 0A02                               l2832 09EC  
                             l2744 0A3A                               l2736 0A1F  
                             l2728 0A09                               l2808 053B  
                             l3464 04CE                               l2760 0472  
                             l2752 045A                               l2816 0587  
                             l3288 0A55                               l2920 0E11  
                             l2912 0DFD                               l2904 0DEE  
                             l3296 0D7C                               l3392 00DF  
                             l3384 00C7                               l3376 00AF  
                             l3368 009D                               l2834 09F1  
                             l2826 09CD                               l2738 0A23  
                             l2746 0A40                               l2818 059F  
                             l2770 049B                               l2762 047B  
                             l2754 0460                               l2690 08D2  
                             l2930 0E34                               l2922 0E15  
                             l2914 0E03                               l2906 0DF2  
                             l2850 0980                               l2842 0965  
                             l3298 0D84                               l3394 0123  
                             l2836 09F3                               l2828 09D1  
                             l2780 04E4                               l2772 04A1  
                             l2764 047F                               l2756 0469  
                             l2692 08D6                               l2924 0E26  
                             l2916 0E06                               l2932 0E3A  
                             l2908 0DF7                               l2940 0B9B  
                             l2860 0991                               l2852 0985  
                             l2844 0971                               l3388 00D5  
                             l2838 09FD                               l2782 04E8  
                             l2766 0485                               l2758 0470  
                             l2694 08E3                               l2870 09A0  
                             l2934 0E3F                               l2926 0E2C  
                             l2918 0E0D                               l2950 0BAD  
                             l2942 0B9E                               l2862 089B  
                             l2854 0989                               l2846 0979  
                             l2784 04EC                               l2768 048A  
                             l2776 04B6                               l2696 08EA  
                             l2688 08CE                               l2872 09A5  
                             l2936 0E44                               l2928 0E2D  
                             l2960 0BC6                               l2952 0BB2  
                             l2944 0BA2                               l2856 098A  
                             l2848 097C                               l2794 04F7  
                             l2786 04F0                               l2778 04DC  
                             l2698 08F0                               l2874 09B8  
                             l2866 0993                               l2962 0BCA  
                             l2954 0BB8                               l2970 0BE7  
                             l2946 0BA7                               l2890 0886  
                             l2882 087B                               l2858 098B  
                             l2788 04F5                               l2868 099A  
                             l2876 09BE                               l2972 0BEC  
                             l2964 0BD4                               l2956 0BBB  
                             l2948 0BA9                               l2892 088D  
                             l2884 087C                               l2980 0D1B  
                             l2798 0517                               l2878 09C8  
                             l2974 0BF1                               l2966 0BDA  
                             l2958 0BC2                               l2886 0880  
                             l2990 0D51                               l2896 0DE0  
                             l2968 0BE1                               l2888 0884  
                             l2992 0D6A                               l2898 0DE3  
                             l2994 0D6C                               l2986 0D1F  
                             l2978 0D18                               l2988 0D3A  
                             l2996 0D6E                               l2998 0D76  
                             _ADIF 0066                               ?_pow 0026  
                             STR_1 0423                               STR_2 03FF  
                             STR_3 044E                               STR_4 03D8  
                             STR_5 0380                               STR_6 0326  
                             STR_7 0326                               STR_8 0367  
                             STR_9 03AE                               u3000 0DE7  
                             u3001 0DE6                               u3010 0DF2  
                             u3011 0DF1                               u3020 0E03  
                             u3100 0BA2                               u3021 0E02  
                             u3101 0BA1                               u3110 0BAD  
                             u3111 0BAC                               u3040 0E15  
                             u3120 0BB8                               u3200 0D6A  
                             u3041 0E14                               u3121 0BB7  
                             u3201 0D69                               u3210 0D7A  
                             u3035 0E07                               u3211 0D79  
                             u3060 0E26                               u3140 0BCA  
                             u3300 0282                               u3220 090D  
                             u3061 0E25                               u3141 0BC9  
                             u3301 0281                               u3221 090C  
                             u3150 0BD4                               u3230 0916  
                             u3310 0E76                               u3055 0E16  
                             u3151 0BD3                               u3135 0BBC  
                             u3231 0915                               u3311 0E75  
                             u3080 0E3A                               u3400 06A4  
                             u3240 091F                               u3320 0E83  
                             u3081 0E39                               u3065 0E22  
                             u3401 06A3                               u3241 091E  
                             u3321 0E82                               u2610 08D6  
                             u3090 0E3F                               u3170 0BE7  
                             u3410 06AA                               u3250 0925  
                             u3330 0EA5                               u2611 08D5  
                             u3091 0E3E                               u3075 0E2E  
                             u3171 0BE6                               u3155 0BD0  
                             u3411 06A9                               u3251 0924  
                             u3331 0EA4                               u3500 0C75  
                             u3180 0BEC                               u3420 06B0  
                             u3260 0B0E                               u3340 0CD7  
                             u3501 0C74                               u3181 0BEB  
                             u3165 0BDB                               u3421 06AF  
                             u3261 0B0D                               u3325 0E7F  
                             u3341 0CD6                               u2710 0B02  
                             u3510 0CB5                               u3430 06CE  
                             u3270 0F4A                               u3190 0D3A  
                             u3350 0D17                               u2711 0B01  
                             u3511 0CB4                               u3431 06CD  
                             u3271 0F49                               u3191 0D39  
                             u3351 0D16                               u2720 0A11  
                             u2800 04B5                               u3600 0EE9  
                             u2640 08F0                               u3280 0244  
                             u3440 0719                               u3360 092F  
                             u3520 08B6                               u2705 0AF6  
                             u2721 0A10                               u2801 04B4  
                             u3601 0EE8                               u2641 08EF  
                             u2625 08DD                               u3505 0C71  
                             u3281 0243                               u3441 0718  
                             u3361 092E                               u3521 08B5  
                             u3345 0CD3                               u2650 0ACB  
                             u2810 04EC                               u3610 0A51  
                             u3290 027C                               u3450 0727  
                             u3370 093F                               u3530 08C2  
                             u2651 0ACA                               u2811 04EB  
                             u2635 08E4                               u3611 0A50  
                             u3291 027B                               u3451 0726  
                             u3371 093E                               u3531 08C1  
                             u3195 0D36                               u2900 0A02  
                             u2740 0A23                               u2820 0516  
                             u3620 0A76                               u3460 072D  
                             u3380 094D                               u3540 05D2  
                             u3700 00B5                               u2901 0A01  
                             u2741 0A22                               u2821 0515  
                             u3621 0A75                               u3285 0240  
                             u3461 072C                               u3381 094C  
                             u3541 05D1                               u3701 00B4  
                             u2910 0A08                               u2670 0ADD  
                             u2750 0A2D                               u2830 0521  
                             u3470 0733                               u3390 086A  
                             u3550 05F6                               u3630 0D84  
                             u3710 00B9                               u2911 0A07  
                             u2671 0ADC                               u2751 0A2C  
                             u2735 0A15                               u2831 0520  
                             u3615 0A4D                               u3295 0278  
                             u3471 0732                               u3391 0869  
                             u3551 05F5                               u3631 0D83  
                             u3711 00B8                               u2840 0527  
                             u3480 0739                               u2920 0965  
                             u3560 0628                               u3640 0D8A  
                             u3800 016B                               u3720 00C3  
                             u2665 0ACF                               u2841 0526  
                             u2825 0512                               u3481 0738  
                             u2921 0964                               u3561 0627  
                             u3545 05CE                               u3641 0D89  
                             u3801 016A                               u3721 00C2  
                             u3490 0B9A                               u2690 0AEE  
                             u2770 0A40                               u2850 0587  
                             u2930 0980                               u3570 0630  
                             u3650 0D90                               u3810 01A7  
                             u3730 00C7                               u3491 0B99  
                             u2691 0AED                               u2771 0A3F  
                             u2755 0A29                               u2851 0586  
                             u2931 097F                               u3571 062F  
                             u3555 05F2                               u3651 0D8F  
                             u3811 01A6                               u3731 00C6  
                             u2860 059F                               u2780 0460  
                             u2940 0991                               u3580 0635  
                             u3660 0D9C                               u3820 01B3  
                             u3740 00D1                               u2685 0ADE  
                             u2765 0A34                               u2861 059E  
                             u2781 045F                               u2941 0990  
                             u3581 0634                               u3661 0D9B  
                             u3821 01B2                               u3741 00D0  
                             u2870 09DE                               u2790 0485  
                             u3590 0EE4                               u2950 089B  
                             u3670 0DA2                               u3750 00D5  
                             u2695 0AEA                               u2791 0484  
                             u3591 0EE3                               u2951 0898  
                             u3671 0DA1                               u3751 00D4  
                             u2880 09F1                               u2960 09A0  
                             u3680 0DA7                               u3760 00DB  
                             u2881 09F0                               u2961 099F  
                             u3681 0DA6                               u3761 00DA  
                             u2890 09FD                               u2970 09C8  
                             u3770 013E                               u3690 003D  
                             u2891 09FC                               u3595 0EE0  
                             u2971 09C7                               u3771 013D  
                             u3691 003C                               u2980 0880  
                             u3780 0147                               _RCIF 0065  
                             u2981 087F                               u3781 0146  
                             u3837 012C                               u2990 088D  
                             u3790 0164                               u2975 09C4  
                             u2991 088C                               u3847 0DD6  
                             u3791 0163                               u3857 067F  
                             u3867 0692                               u3877 0B5D  
                             u3887 0B6F                               u3897 0B81  
                             _TMR1 000E                               _TXIF 0064  
                   ??_eeprom_write 0021                       __CFG_WRT$OFF 0000  
                envioTX@transmitir 0027                               _main 0032  
                  _accionesAceptar 0EB2                               btemp 007E  
                    __CFG_BOREN$ON 0000             accionesAceptar@strLote 00A0  
                             pow@i 002A                               start 000E  
                      main@strLote 019C                  ___bmul@multiplier 0023  
                   ??_eliminarProd 0030                              ??_pow 002A  
    __size_of_accionesPuertoSerial 0064                              ?_main 0074  
                  __end_of___awdiv 0E49                              _EEADR 010D  
                            STR_10 0398                              STR_11 0412  
                            STR_12 03C4                              STR_13 0423  
                            STR_14 0326                              STR_15 034E  
                            STR_16 0434                              STR_17 043E  
                    __CFG_WDTE$OFF 0000                              STR_18 03EC  
                            STR_19 0447                    __end_of___awmod 0BF6  
                  ___awdiv@divisor 0020                              _T1CON 0010  
                     ?_ingresoProd 002E                    __end_of___lwdiv 0B07  
                            i1l331 0C02                              i1l333 0C0D  
                  __end_of___lwmod 0A45                              i1l338 0C4B  
                  ___awdiv@counter 0025                              _RCREG 001A  
                            _RCSTA 0018                              _SPBRG 0099  
                            _PORTB 0006                              _PORTD 0008  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _TRISE 0089                              _TXREG 0019  
                            _TXSTA 0098               __end_of_cierreDeLote 0B50  
                  __end_of_envioTX 0A09                    __end_of_dpowers 031C  
                            main@i 01D0                              pclath 000A  
                 _accionesDeshacer 0A45                              status 0003  
                   envioTX@mensaje 0020                              wtemp0 007E  
                  __end_of_sprintf 05A6                      ?_lecturaMenos 0074  
                  __initialization 0011                       __end_of_main 0235  
                  ??_verificarProd 0030                    EEPROM_search@tp 003E  
                           ??_main 00C9              __end_of_EEPROM_search 0EB2  
                    main@bufferMsj 01BC           ??_agregarModificarPrecio 004A  
                    eliminarProd@i 0033            __end_of_accionesAceptar 0F2E  
                           _ADCON0 001F                             _ADCON1 009F  
                           _ADRESH 001E                             _ADRESL 009E  
                           _EEDATA 010C                             _EECON1 018C  
                           _EECON2 018D                   ___awdiv@dividend 0022  
          __size_of_lecturaComando 0020                             i1l2640 0BF6  
                           i1l2650 0C11                             i1l2642 0BFC  
                           i1l2660 0C34                             i1l2652 0C1F  
                           i1l2644 0C06                             i1l2654 0C28  
                           i1l2662 0C3A                             i1l2646 0C07  
                           i1l2664 0C40                             i1l2656 0C2E  
                           i1l2648 0C0B                             i1l2666 0C41  
                           i1l2658 0C33                             _INTCON 000B  
                           u260_20 0C40                             u260_21 0C3F  
                           u253_20 0BFC                             u253_21 0BFB  
                           u254_20 0C06                             u254_21 0C05  
                           u255_20 0C0B                             u255_21 0C0A  
                           u256_20 0C11                             u256_21 0C10  
                           u257_20 0C1F                             u257_21 0C1E  
                           u258_20 0C28                             u258_21 0C27  
                           u259_20 0C2E                             u259_21 0C2D  
                           _TMR1IF 0060                     ??_lecturaMenos 0028  
                 lecturaEtiqueta@i 0042                     __CFG_PWRTE$OFF 0000  
             __size_of_eeprom_read 001F                             ___bmul 0878  
                           ___wmul 08CE                          ??___awdiv 0024  
                        ??___awmod 0024                _mostrarDigitos$1096 0036  
                        ??___lwdiv 002A                          ??___lwmod 0032  
                           _cuenta 0070                _verificacionEntrada 08F5  
                 ___awdiv@quotient 0027                    ___awmod@divisor 0020  
                           _serial 0073               __end_of_eeprom_write 0993  
                   _consultaPrecio 0235                    ___awmod@counter 0025  
                        ??_envioTX 0022                       __pdataCOMMON 0078  
                           saved_w 007E               __end_of_eliminarProd 0CB6  
                        ??_sprintf 003E               ?_verificacionEntrada 0074  
          __end_of__initialization 002E                    eeprom_read@addr 0021  
              ___bmul@multiplicand 0020                     __pcstackCOMMON 0074  
           __end_of_consultaPrecio 02FF                         __end_of_BS 0326  
            __size_of_cierreDeLote 0049                         _bailenLeds 0B50  
             __size_of_ingresoProd 0062                  eeprom_write@value 0020  
  __size_of_agregarModificarPrecio 00D2        accionesPuertoSerial@mensaje 0190  
                 ?_accionesAceptar 0074              ??_verificacionEntrada 0020  
                       __pbssBANK0 006E                         __pbssBANK1 00CD  
                       __pbssBANK3 01D2                      _pedidoVoltaje 01D6  
               __size_of_int_usart 005E                         __pmaintext 0032  
                     _cierreDeLote 0B07           agregarModificarPrecio@tp 0062  
                          ?___bmul 0020                     eliminarProd@tp 002E  
                          ?___wmul 0020                         __pintentry 0004  
                  ?_consultaPrecio 004A                EEPROM_search@precio 003C  
         __end_of_accionesDeshacer 0A82           __size_of_lecturaConsulta 00E9  
             __end_of_lecturaMenos 0878           __size_of_lecturaEtiqueta 00F6  
                   verificarProd@i 0034                     _lecturaComando 08AE  
                 accionesAceptar@i 00C0                         __stringtab 0300  
     __end_of_accionesPuertoSerial 0DE0                  lecturaEtiqueta@tp 0044  
                       _lecturaMas 0927             _agregarModificarPrecio 0F2E  
            __size_of_eeprom_write 0037                    __size_of___bmul 0017  
                          ___awdiv 0DE0                            ___awmod 0B9B  
                  __size_of___wmul 0027                            ___lwdiv 0AC1  
                          ___lwmod 0A09                            __ptext1 0A82  
                          __ptext2 0D7C                            __ptext3 05A6  
                          __ptext4 0CB6                        pow@potencia 0028  
                          __ptext5 0E49                            __ptext6 0D18  
                          __ptext7 08AE                            __ptext8 0862  
                          __ptext9 0927                        ?_bailenLeds 0074  
                          _envioTX 09CD                            _dpowers 0312  
                          _huboInt 01D2              __size_of_eliminarProd 0062  
                     __size_of_pow 003A               consultaPrecio@precio 006A  
             verificacionEntrada@i 0022                   ___awmod@dividend 0022  
                     ingresoProd@i 0033             __end_of_lecturaComando 08CE  
                          _nroLote 0078                            _numProd 00DC  
                __end_of_int_usart 0C54                            _sprintf 0453  
                          clrloop0 07F5       agregarModificarPrecio@precio 0060  
             end_of_initialization 002E                       _eeprom_write 095C  
    agregarModificarPrecio@mensaje 0054            __size_of_mostrarDigitos 006F  
                        _RCSTAbits 0018                         _montosLote 00DA  
                     _eliminarProd 0C54                       __pstringtext 0300  
                _productoIngresado 00DE                   verificarProd@ret 0033  
            __end_of_verificarProd 0D7C                         _ventasLote 006E  
                  ?_lecturaComando 0074            lecturaConsulta@articulo 00C4  
                ??_lecturaConsulta 00A0                   _cierreLotePedido 01D7  
                ??_lecturaEtiqueta 003F                      ??_eeprom_read 0020  
              __size_of_bailenLeds 004B                        ?_lecturaMas 0074  
           __size_of_EEPROM_search 0069                  _escrituraDeCierre 0A82  
                   __end_of___bmul 088F              __size_of_lecturaMenos 0016  
                   __end_of___wmul 08F5                 ?_escrituraDeCierre 0074  
                    __pidataCOMMON 07FC               _accionesPuertoSerial 0D7C  
              ??_escrituraDeCierre 0023                start_initialization 0011  
                      __end_of_pow 09CD                       _lecturaMenos 0862  
                 ??_consultaPrecio 004C          __end_of_escrituraDeCierre 0AC1  
                   _prodIngresados 00CD                           ??___bmul 0021  
                         ??___wmul 0024                __end_of_eeprom_read 08AE  
            ?_accionesPuertoSerial 0074                      ??_ingresoProd 0030  
                ?_accionesDeshacer 0074                        __pbssCOMMON 0070  
      __end_of_verificacionEntrada 0927                          ___latbits 0002  
               ??_accionesDeshacer 0038                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0                      __pcstackBANK3 0190  
                    _EEPROM_search 0E49                __size_of_lecturaMas 0035  
                 eeprom_write@addr 0022                        sprintf@flag 0042  
                      sprintf@prec 0043            ?_agregarModificarPrecio 0074  
         __size_of_accionesAceptar 007C                          _main$1094 01CC  
                        _main$1095 01CE                     _mostrarDigitos 0785  
                 ___lwdiv@dividend 0028                           ?___awdiv 0020  
                         ?___awmod 0020                           ?___lwdiv 0026  
                         ?___lwmod 002E                          _auxCuenta 01D4  
                     ??_bailenLeds 0020                           ?_envioTX 0020  
           consultaPrecio@articulo 004A                     ?_EEPROM_search 0036  
                 ___lwdiv@quotient 002C                __end_of_ingresoProd 0D18  
                         ?_sprintf 0034       escrituraDeCierre@lower_8bits 0024  
                        _modoDebug 0072                          _int_usart 0BF6  
           verificacionEntrada@ret 0021     __end_of_agregarModificarPrecio 1000  
                interrupt_function 0004                     ___wmul@product 0024  
           __end_of_mostrarDigitos 07F4                          clear_ram0 07F4  
                      _eeprom_read 088F                           _PIE1bits 008C  
                      bailenLeds@i 0023         __size_of_escrituraDeCierre 003F  
               __end_of_bailenLeds 0B9B                           _GO_nDONE 00FA  
                  verificarProd@tp 002E             ??_accionesPuertoSerial 00C6  
                 ??_lecturaComando 006E                    _lecturaConsulta 069C  
                      __stringbase 0312                          main@i_304 01D1  
                ___wmul@multiplier 0020                    _lecturaEtiqueta 05A6  
               lecturaEtiqueta@Aux 0045                      _codigoEntrada 00E0  
           lecturaConsulta@strLote 00A4                cierreDeLote@strLote 004E  
                       ?_int_usart 0074                    ?_mostrarDigitos 0034  
                       _EECON1bits 018C                       ??_lecturaMas 006E  
                ??_accionesAceptar 004A                   __size_of___awdiv 0069  
                 __size_of___awmod 005B                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                 __end_of__stringtab 0312  
                  ??_EEPROM_search 0038                        _ingresoProd 0CB6  
                       sprintf@val 0047                   __size_of_envioTX 003C  
                         _adresult 01D8                    ___lwdiv@divisor 0026  
                     pow@resultado 002C                    ___lwdiv@counter 002B  
                         __ptext10 08F5                           __ptext11 0B07  
                         __ptext20 0A45                           __ptext12 0F2E  
                         __ptext21 0C54                           __ptext13 095C  
                         __ptext30 0B50                           __ptext22 0993  
                         __ptext14 0878                           __ptext31 0BF6  
                         __ptext23 08CE                           __ptext15 069C  
                         __ptext24 0EB2                           __ptext16 0235  
                         __ptext25 0453                           __ptext17 088F  
                         __ptext26 0785                           __ptext18 0B9B  
                         __ptext27 0A09                           __ptext19 0DE0  
                         __ptext28 0AC1                           __ptext29 09CD  
               __end_of_lecturaMas 095C       escrituraDeCierre@upper_8bits 0025  
                 __size_of_sprintf 0153              consultaPrecio@mensaje 0050  
                    __size_of_main 0203                          pow@numero 0026  
           __size_of_verificarProd 0064                      ingresoProd@tp 002E  
                    ?_cierreDeLote 0074            __end_of_lecturaConsulta 0785  
          __end_of_lecturaEtiqueta 069C                           envioTX@i 0025  
                       _INTCONbits 000B  agregarModificarPrecio@lower_8bits 005E  
                         intlevel1 0000                          sprintf@ap 0044  
                        sprintf@cp 0045                        ??_int_usart 0074  
                        sprintf@sp 0034                   ___lwmod@dividend 0030  
        __size_of_accionesDeshacer 003D                     ??_cierreDeLote 004A  
                        stringcode 030A                  mostrarDigitos@num 0034  
                         sprintf@c 0049                           sprintf@f 0036  
                    _verificarProd 0D18                    ___lwmod@divisor 002E  
                  ___lwmod@counter 0033                           stringtab 0300  
     __size_of_verificacionEntrada 0032                      ?_eeprom_write 0020  
                       _STATUSbits 0003                       ?_eeprom_read 0074  
