

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 12:53:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0088                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  0091                     	;# 
   491  0092                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0098                     	;# 
   495  0099                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  010F                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  000E                     	;# 
   522  000F                     	;# 
   523  0010                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0014                     	;# 
   528  0015                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  001D                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  0081                     	;# 
   542  0085                     	;# 
   543  0086                     	;# 
   544  0087                     	;# 
   545  0088                     	;# 
   546  0089                     	;# 
   547  008C                     	;# 
   548  008D                     	;# 
   549  008E                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0094                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009C                     	;# 
   557  009D                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  010C                     	;# 
   561  010D                     	;# 
   562  010E                     	;# 
   563  010F                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566                           
   567                           	psect	idataCOMMON
   568  07FF                     __pidataCOMMON:	
   569                           
   570                           ;initializer for _nroLote
   571  07FF  3401               	retlw	1
   572                           
   573                           	psect	stringtext
   574  0300                     __pstringtext:	
   575  0300                     stringtab:	
   576  0300                     __stringtab:	
   577                           
   578                           ;	String table - string pointers are 2 bytes each
   579  0300  1BFF               	btfsc	btemp+1,7
   580  0301  2B0A               	ljmp	stringcode
   581  0302  1383               	bcf	3,7
   582  0303  187F               	btfsc	btemp+1,0
   583  0304  1783               	bsf	3,7
   584  0305  0800               	movf	0,w
   585  0306  0A84               	incf	4,f
   586  0307  1903               	skipnz
   587  0308  0AFF               	incf	btemp+1,f
   588  0309  0008               	return
   589  030A                     stringcode:	
   590  030A  087F               	movf	btemp+1,w
   591  030B  397F               	andlw	127
   592  030C  008A               	movwf	10
   593  030D  0804               	movf	4,w
   594  030E  0A84               	incf	4,f
   595  030F  1903               	skipnz
   596  0310  0AFF               	incf	btemp+1,f
   597  0311  0082               	movwf	2
   598  0312                     __stringbase:	
   599  0312                     __end_of__stringtab:	
   600  0312                     _dpowers:	
   601  0312  3401               	retlw	1
   602  0313  3400               	retlw	0
   603  0314  340A               	retlw	10
   604  0315  3400               	retlw	0
   605  0316  3464               	retlw	100
   606  0317  3400               	retlw	0
   607  0318  34E8               	retlw	232
   608  0319  3403               	retlw	3
   609  031A  3410               	retlw	16
   610  031B  3427               	retlw	39
   611  031C                     __end_of_dpowers:	
   612  031C                     _BS:	
   613  031C  3400               	retlw	0
   614  031D  3410               	retlw	16
   615  031E  3420               	retlw	32
   616  031F  3430               	retlw	48
   617  0320  3440               	retlw	64
   618  0321  3450               	retlw	80
   619  0322  3460               	retlw	96
   620  0323  3470               	retlw	112
   621  0324  3480               	retlw	128
   622  0325  3490               	retlw	144
   623  0326                     __end_of_BS:	
   624  000E                     _TMR1	set	14
   625  000B                     _INTCONbits	set	11
   626  0003                     _STATUSbits	set	3
   627  0019                     _TXREG	set	25
   628  0008                     _PORTD	set	8
   629  0006                     _PORTB	set	6
   630  001E                     _ADRESH	set	30
   631  001A                     _RCREG	set	26
   632  0018                     _RCSTAbits	set	24
   633  0018                     _RCSTA	set	24
   634  000B                     _INTCON	set	11
   635  001F                     _ADCON0	set	31
   636  0010                     _T1CON	set	16
   637  0064                     _TXIF	set	100
   638  0065                     _RCIF	set	101
   639  00FA                     _GO_nDONE	set	250
   640  0060                     _TMR1IF	set	96
   641  004A                     _RE2	set	74
   642  0049                     _RE1	set	73
   643  0048                     _RE0	set	72
   644  0066                     _ADIF	set	102
   645  002B                     _RA3	set	43
   646  0038                     _RC0	set	56
   647  002D                     _RA5	set	45
   648  009E                     _ADRESL	set	158
   649  008C                     _PIE1bits	set	140
   650  0099                     _SPBRG	set	153
   651  0098                     _TXSTA	set	152
   652  0087                     _TRISC	set	135
   653  009F                     _ADCON1	set	159
   654  0088                     _TRISD	set	136
   655  0086                     _TRISB	set	134
   656  0089                     _TRISE	set	137
   657  0085                     _TRISA	set	133
   658  010C                     _EEDATA	set	268
   659  010D                     _EEADR	set	269
   660  018D                     _EECON2	set	397
   661  018C                     _EECON1	set	396
   662  018C                     _EECON1bits	set	396
   663  0326                     STR_6:	
   664  0326  344F               	retlw	79	;'O'
   665  0327  3463               	retlw	99	;'c'
   666  0328  3475               	retlw	117	;'u'
   667  0329  3472               	retlw	114	;'r'
   668  032A  3472               	retlw	114	;'r'
   669  032B  3469               	retlw	105	;'i'
   670  032C  346F               	retlw	111	;'o'
   671  032D  3420               	retlw	32	;' '
   672  032E  3475               	retlw	117	;'u'
   673  032F  346E               	retlw	110	;'n'
   674  0330  3420               	retlw	32	;' '
   675  0331  3465               	retlw	101	;'e'
   676  0332  3472               	retlw	114	;'r'
   677  0333  3472               	retlw	114	;'r'
   678  0334  346F               	retlw	111	;'o'
   679  0335  3472               	retlw	114	;'r'
   680  0336  3420               	retlw	32	;' '
   681  0337  3465               	retlw	101	;'e'
   682  0338  346E               	retlw	110	;'n'
   683  0339  3420               	retlw	32	;' '
   684  033A  346C               	retlw	108	;'l'
   685  033B  3461               	retlw	97	;'a'
   686  033C  3420               	retlw	32	;' '
   687  033D  3469               	retlw	105	;'i'
   688  033E  346E               	retlw	110	;'n'
   689  033F  3474               	retlw	116	;'t'
   690  0340  3465               	retlw	101	;'e'
   691  0341  3472               	retlw	114	;'r'
   692  0342  3470               	retlw	112	;'p'
   693  0343  3472               	retlw	114	;'r'
   694  0344  3465               	retlw	101	;'e'
   695  0345  3474               	retlw	116	;'t'
   696  0346  3461               	retlw	97	;'a'
   697  0347  3463               	retlw	99	;'c'
   698  0348  3469               	retlw	105	;'i'
   699  0349  346F               	retlw	111	;'o'
   700  034A  346E               	retlw	110	;'n'
   701  034B  342E               	retlw	46	;'.'
   702  034C  340A               	retlw	10
   703  034D  3400               	retlw	0
   704  034E                     STR_15:	
   705  034E  340A               	retlw	10
   706  034F  3443               	retlw	67	;'C'
   707  0350  3469               	retlw	105	;'i'
   708  0351  3465               	retlw	101	;'e'
   709  0352  3472               	retlw	114	;'r'
   710  0353  3472               	retlw	114	;'r'
   711  0354  3465               	retlw	101	;'e'
   712  0355  342C               	retlw	44	;','
   713  0356  3420               	retlw	32	;' '
   714  0357  344C               	retlw	76	;'L'
   715  0358  343A               	retlw	58	;':'
   716  0359  3425               	retlw	37	;'%'
   717  035A  3464               	retlw	100	;'d'
   718  035B  342C               	retlw	44	;','
   719  035C  344E               	retlw	78	;'N'
   720  035D  343A               	retlw	58	;':'
   721  035E  3425               	retlw	37	;'%'
   722  035F  3464               	retlw	100	;'d'
   723  0360  342C               	retlw	44	;','
   724  0361  3454               	retlw	84	;'T'
   725  0362  343A               	retlw	58	;':'
   726  0363  3425               	retlw	37	;'%'
   727  0364  3464               	retlw	100	;'d'
   728  0365  340A               	retlw	10
   729  0366  3400               	retlw	0
   730  0367                     STR_8:	
   731  0367  340A               	retlw	10
   732  0368  3450               	retlw	80	;'P'
   733  0369  3472               	retlw	114	;'r'
   734  036A  346F               	retlw	111	;'o'
   735  036B  3464               	retlw	100	;'d'
   736  036C  3475               	retlw	117	;'u'
   737  036D  3463               	retlw	99	;'c'
   738  036E  3474               	retlw	116	;'t'
   739  036F  346F               	retlw	111	;'o'
   740  0370  3420               	retlw	32	;' '
   741  0371  346E               	retlw	110	;'n'
   742  0372  346F               	retlw	111	;'o'
   743  0373  3420               	retlw	32	;' '
   744  0374  3465               	retlw	101	;'e'
   745  0375  346E               	retlw	110	;'n'
   746  0376  3463               	retlw	99	;'c'
   747  0377  346F               	retlw	111	;'o'
   748  0378  346E               	retlw	110	;'n'
   749  0379  3474               	retlw	116	;'t'
   750  037A  3472               	retlw	114	;'r'
   751  037B  3461               	retlw	97	;'a'
   752  037C  3464               	retlw	100	;'d'
   753  037D  346F               	retlw	111	;'o'
   754  037E  340A               	retlw	10
   755  037F  3400               	retlw	0
   756  0380                     STR_5:	
   757  0380  340A               	retlw	10
   758  0381  3443               	retlw	67	;'C'
   759  0382  3469               	retlw	105	;'i'
   760  0383  3465               	retlw	101	;'e'
   761  0384  3472               	retlw	114	;'r'
   762  0385  3472               	retlw	114	;'r'
   763  0386  3465               	retlw	101	;'e'
   764  0387  342C               	retlw	44	;','
   765  0388  344C               	retlw	76	;'L'
   766  0389  343A               	retlw	58	;':'
   767  038A  3425               	retlw	37	;'%'
   768  038B  3464               	retlw	100	;'d'
   769  038C  342C               	retlw	44	;','
   770  038D  344E               	retlw	78	;'N'
   771  038E  343A               	retlw	58	;':'
   772  038F  3425               	retlw	37	;'%'
   773  0390  3464               	retlw	100	;'d'
   774  0391  342C               	retlw	44	;','
   775  0392  3454               	retlw	84	;'T'
   776  0393  343A               	retlw	58	;':'
   777  0394  3425               	retlw	37	;'%'
   778  0395  3464               	retlw	100	;'d'
   779  0396  340A               	retlw	10
   780  0397  3400               	retlw	0
   781  0398                     STR_10:	
   782  0398  344E               	retlw	78	;'N'
   783  0399  346F               	retlw	111	;'o'
   784  039A  3420               	retlw	32	;' '
   785  039B  3465               	retlw	101	;'e'
   786  039C  3478               	retlw	120	;'x'
   787  039D  3469               	retlw	105	;'i'
   788  039E  3473               	retlw	115	;'s'
   789  039F  3474               	retlw	116	;'t'
   790  03A0  3465               	retlw	101	;'e'
   791  03A1  3420               	retlw	32	;' '
   792  03A2  3470               	retlw	112	;'p'
   793  03A3  3472               	retlw	114	;'r'
   794  03A4  346F               	retlw	111	;'o'
   795  03A5  3464               	retlw	100	;'d'
   796  03A6  3475               	retlw	117	;'u'
   797  03A7  3463               	retlw	99	;'c'
   798  03A8  3474               	retlw	116	;'t'
   799  03A9  346F               	retlw	111	;'o'
   800  03AA  3420               	retlw	32	;' '
   801  03AB  3430               	retlw	48	;'0'
   802  03AC  3430               	retlw	48	;'0'
   803  03AD  3400               	retlw	0
   804  03AE                     STR_9:	
   805  03AE  3454               	retlw	84	;'T'
   806  03AF  3450               	retlw	80	;'P'
   807  03B0  343A               	retlw	58	;':'
   808  03B1  3420               	retlw	32	;' '
   809  03B2  3425               	retlw	37	;'%'
   810  03B3  3464               	retlw	100	;'d'
   811  03B4  3420               	retlw	32	;' '
   812  03B5  3450               	retlw	80	;'P'
   813  03B6  343A               	retlw	58	;':'
   814  03B7  3420               	retlw	32	;' '
   815  03B8  3425               	retlw	37	;'%'
   816  03B9  3464               	retlw	100	;'d'
   817  03BA  342C               	retlw	44	;','
   818  03BB  3425               	retlw	37	;'%'
   819  03BC  3464               	retlw	100	;'d'
   820  03BD  3420               	retlw	32	;' '
   821  03BE  3445               	retlw	69	;'E'
   822  03BF  3475               	retlw	117	;'u'
   823  03C0  3472               	retlw	114	;'r'
   824  03C1  346F               	retlw	111	;'o'
   825  03C2  3473               	retlw	115	;'s'
   826  03C3  3400               	retlw	0
   827  03C4                     STR_12:	
   828  03C4  340A               	retlw	10
   829  03C5  3445               	retlw	69	;'E'
   830  03C6  3473               	retlw	115	;'s'
   831  03C7  3474               	retlw	116	;'t'
   832  03C8  3461               	retlw	97	;'a'
   833  03C9  3464               	retlw	100	;'d'
   834  03CA  346F               	retlw	111	;'o'
   835  03CB  343A               	retlw	58	;':'
   836  03CC  3420               	retlw	32	;' '
   837  03CD  3445               	retlw	69	;'E'
   838  03CE  346E               	retlw	110	;'n'
   839  03CF  3420               	retlw	32	;' '
   840  03D0  3465               	retlw	101	;'e'
   841  03D1  3473               	retlw	115	;'s'
   842  03D2  3470               	retlw	112	;'p'
   843  03D3  3465               	retlw	101	;'e'
   844  03D4  3472               	retlw	114	;'r'
   845  03D5  3461               	retlw	97	;'a'
   846  03D6  340A               	retlw	10
   847  03D7  3400               	retlw	0
   848  03D8                     STR_4:	
   849  03D8  3450               	retlw	80	;'P'
   850  03D9  3472               	retlw	114	;'r'
   851  03DA  346F               	retlw	111	;'o'
   852  03DB  3464               	retlw	100	;'d'
   853  03DC  3475               	retlw	117	;'u'
   854  03DD  3463               	retlw	99	;'c'
   855  03DE  3474               	retlw	116	;'t'
   856  03DF  346F               	retlw	111	;'o'
   857  03E0  3420               	retlw	32	;' '
   858  03E1  3469               	retlw	105	;'i'
   859  03E2  346E               	retlw	110	;'n'
   860  03E3  3467               	retlw	103	;'g'
   861  03E4  3472               	retlw	114	;'r'
   862  03E5  3465               	retlw	101	;'e'
   863  03E6  3473               	retlw	115	;'s'
   864  03E7  3461               	retlw	97	;'a'
   865  03E8  3464               	retlw	100	;'d'
   866  03E9  346F               	retlw	111	;'o'
   867  03EA  340A               	retlw	10
   868  03EB  3400               	retlw	0
   869  03EC                     STR_18:	
   870  03EC  344E               	retlw	78	;'N'
   871  03ED  346F               	retlw	111	;'o'
   872  03EE  3420               	retlw	32	;' '
   873  03EF  3468               	retlw	104	;'h'
   874  03F0  3461               	retlw	97	;'a'
   875  03F1  3479               	retlw	121	;'y'
   876  03F2  3420               	retlw	32	;' '
   877  03F3  3470               	retlw	112	;'p'
   878  03F4  3472               	retlw	114	;'r'
   879  03F5  346F               	retlw	111	;'o'
   880  03F6  3464               	retlw	100	;'d'
   881  03F7  3475               	retlw	117	;'u'
   882  03F8  3463               	retlw	99	;'c'
   883  03F9  3474               	retlw	116	;'t'
   884  03FA  346F               	retlw	111	;'o'
   885  03FB  3420               	retlw	32	;' '
   886  03FC  3430               	retlw	48	;'0'
   887  03FD  3430               	retlw	48	;'0'
   888  03FE  3400               	retlw	0
   889  03FF                     STR_2:	
   890  03FF  3450               	retlw	80	;'P'
   891  0400  3472               	retlw	114	;'r'
   892  0401  346F               	retlw	111	;'o'
   893  0402  3464               	retlw	100	;'d'
   894  0403  3475               	retlw	117	;'u'
   895  0404  3463               	retlw	99	;'c'
   896  0405  3474               	retlw	116	;'t'
   897  0406  346F               	retlw	111	;'o'
   898  0407  3420               	retlw	32	;' '
   899  0408  3463               	retlw	99	;'c'
   900  0409  3461               	retlw	97	;'a'
   901  040A  346E               	retlw	110	;'n'
   902  040B  3463               	retlw	99	;'c'
   903  040C  3465               	retlw	101	;'e'
   904  040D  346C               	retlw	108	;'l'
   905  040E  3461               	retlw	97	;'a'
   906  040F  3464               	retlw	100	;'d'
   907  0410  346F               	retlw	111	;'o'
   908  0411  3400               	retlw	0
   909  0412                     STR_11:	
   910  0412  340A               	retlw	10
   911  0413  3445               	retlw	69	;'E'
   912  0414  3473               	retlw	115	;'s'
   913  0415  3474               	retlw	116	;'t'
   914  0416  3461               	retlw	97	;'a'
   915  0417  3464               	retlw	100	;'d'
   916  0418  346F               	retlw	111	;'o'
   917  0419  343A               	retlw	58	;':'
   918  041A  3420               	retlw	32	;' '
   919  041B  3441               	retlw	65	;'A'
   920  041C  3463               	retlw	99	;'c'
   921  041D  3474               	retlw	116	;'t'
   922  041E  3469               	retlw	105	;'i'
   923  041F  3476               	retlw	118	;'v'
   924  0420  346F               	retlw	111	;'o'
   925  0421  340A               	retlw	10
   926  0422  3400               	retlw	0
   927  0423                     STR_1:	
   928  0423  340A               	retlw	10
   929  0424  344C               	retlw	76	;'L'
   930  0425  343A               	retlw	58	;':'
   931  0426  3425               	retlw	37	;'%'
   932  0427  3464               	retlw	100	;'d'
   933  0428  342C               	retlw	44	;','
   934  0429  344E               	retlw	78	;'N'
   935  042A  343A               	retlw	58	;':'
   936  042B  3425               	retlw	37	;'%'
   937  042C  3464               	retlw	100	;'d'
   938  042D  342C               	retlw	44	;','
   939  042E  3454               	retlw	84	;'T'
   940  042F  343A               	retlw	58	;':'
   941  0430  3425               	retlw	37	;'%'
   942  0431  3464               	retlw	100	;'d'
   943  0432  340A               	retlw	10
   944  0433  3400               	retlw	0
   945  0434                     STR_16:	
   946  0434  3456               	retlw	86	;'V'
   947  0435  343D               	retlw	61	;'='
   948  0436  3425               	retlw	37	;'%'
   949  0437  3464               	retlw	100	;'d'
   950  0438  342E               	retlw	46	;'.'
   951  0439  3425               	retlw	37	;'%'
   952  043A  3464               	retlw	100	;'d'
   953  043B  3456               	retlw	86	;'V'
   954  043C  340A               	retlw	10
   955  043D  3400               	retlw	0
   956  043E                     STR_17:	
   957  043E  340A               	retlw	10
   958  043F  3450               	retlw	80	;'P'
   959  0440  3425               	retlw	37	;'%'
   960  0441  3464               	retlw	100	;'d'
   961  0442  343D               	retlw	61	;'='
   962  0443  3425               	retlw	37	;'%'
   963  0444  3464               	retlw	100	;'d'
   964  0445  340A               	retlw	10
   965  0446  3400               	retlw	0
   966  0447                     STR_19:	
   967  0447  3428               	retlw	40	;'('
   968  0448  346E               	retlw	110	;'n'
   969  0449  3475               	retlw	117	;'u'
   970  044A  346C               	retlw	108	;'l'
   971  044B  346C               	retlw	108	;'l'
   972  044C  3429               	retlw	41	;')'
   973  044D  3400               	retlw	0
   974  044E                     STR_3:	
   975  044E  3445               	retlw	69	;'E'
   976  044F  343A               	retlw	58	;':'
   977  0450  3425               	retlw	37	;'%'
   978  0451  3473               	retlw	115	;'s'
   979  0452  3400               	retlw	0
   980  0326                     
   981                           ; #config settings
   982  0000                     
   983                           	psect	cinit
   984  0011                     start_initialization:	
   985  0011                     __initialization:	
   986                           
   987                           ; Initialize objects allocated to COMMON
   988  0011  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   989  0016  00F8               	movwf	__pdataCOMMON& (0+127)
   990                           
   991                           ; Clear objects allocated to BANK3
   992  0017  1783               	bsf	3,7	;select IRP bank2
   993  0018  30D2               	movlw	low __pbssBANK3
   994  0019  0084               	movwf	4
   995  001A  30DA               	movlw	low (__pbssBANK3+8)
   996  001B  120A  158A  2029  120A  118A  	fcall	clear_ram0
   997                           
   998                           ; Clear objects allocated to BANK1
   999  0020  1383               	bcf	3,7	;select IRP bank0
  1000  0021  30CD               	movlw	low __pbssBANK1
  1001  0022  0084               	movwf	4
  1002  0023  30EA               	movlw	low (__pbssBANK1+29)
  1003  0024  120A  158A  2029  120A  118A  	fcall	clear_ram0
  1004                           
  1005                           ; Clear objects allocated to BANK0
  1006  0029  01EE               	clrf	__pbssBANK0& (0+127)
  1007                           
  1008                           ; Clear objects allocated to COMMON
  1009  002A  01F0               	clrf	__pbssCOMMON& (0+127)
  1010  002B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1011  002C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1012  002D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1013  002E                     end_of_initialization:	
  1014                           ;End of C runtime variable initialization code
  1015                           
  1016  002E                     __end_of__initialization:	
  1017  002E  0183               	clrf	3
  1018  002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
  1019                           
  1020                           	psect	bssCOMMON
  1021  0070                     __pbssCOMMON:	
  1022  0070                     _cuenta:	
  1023  0070                     	ds	2
  1024  0072                     _modoDebug:	
  1025  0072                     	ds	1
  1026  0073                     _serial:	
  1027  0073                     	ds	1
  1028                           
  1029                           	psect	dataCOMMON
  1030  0078                     __pdataCOMMON:	
  1031  0078                     _nroLote:	
  1032  0078                     	ds	1
  1033                           
  1034                           	psect	bssBANK0
  1035  006E                     __pbssBANK0:	
  1036  006E                     _ventasLote:	
  1037  006E                     	ds	1
  1038                           
  1039                           	psect	bssBANK1
  1040  00CD                     __pbssBANK1:	
  1041  00CD                     _prodIngresados:	
  1042  00CD                     	ds	13
  1043  00DA                     _montosLote:	
  1044  00DA                     	ds	2
  1045  00DC                     _numProd:	
  1046  00DC                     	ds	2
  1047  00DE                     _productoIngresado:	
  1048  00DE                     	ds	2
  1049  00E0                     _codigoEntrada:	
  1050  00E0                     	ds	10
  1051                           
  1052                           	psect	bssBANK3
  1053  01D2                     __pbssBANK3:	
  1054  01D2                     _huboInt:	
  1055  01D2                     	ds	2
  1056  01D4                     _auxCuenta:	
  1057  01D4                     	ds	2
  1058  01D6                     _pedidoVoltaje:	
  1059  01D6                     	ds	1
  1060  01D7                     _cierreLotePedido:	
  1061  01D7                     	ds	1
  1062  01D8                     _adresult:	
  1063  01D8                     	ds	2
  1064                           
  1065                           	psect	clrtext
  1066  0829                     clear_ram0:	
  1067                           ;	Called with FSR containing the base address, and
  1068                           ;	W with the last address+1
  1069                           
  1070  0829  0064               	clrwdt	;clear the watchdog before getting into this loop
  1071  082A                     clrloop0:	
  1072  082A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1073  082B  0A84               	incf	4,f	;increment pointer
  1074  082C  0604               	xorwf	4,w	;XOR with final address
  1075  082D  1903               	btfsc	3,2	;have we reached the end yet?
  1076  082E  3400               	retlw	0	;all done for this memory range, return
  1077  082F  0604               	xorwf	4,w	;XOR again to restore value
  1078  0830  282A               	goto	clrloop0	;do the next byte
  1079                           
  1080                           	psect	cstackBANK3
  1081  0190                     __pcstackBANK3:	
  1082  0190                     accionesPuertoSerial@mensaje:	
  1083                           
  1084                           ; 12 bytes @ 0x0
  1085  0190                     	ds	12
  1086  019C                     main@strLote:	
  1087                           
  1088                           ; 32 bytes @ 0xC
  1089  019C                     	ds	32
  1090  01BC                     main@bufferMsj:	
  1091                           
  1092                           ; 16 bytes @ 0x2C
  1093  01BC                     	ds	16
  1094  01CC                     _main$1097:	
  1095                           
  1096                           ; 2 bytes @ 0x3C
  1097  01CC                     	ds	2
  1098  01CE                     _main$1098:	
  1099                           
  1100                           ; 2 bytes @ 0x3E
  1101  01CE                     	ds	2
  1102  01D0                     main@i:	
  1103                           
  1104                           ; 1 bytes @ 0x40
  1105  01D0                     	ds	1
  1106  01D1                     main@i_307:	
  1107                           
  1108                           ; 1 bytes @ 0x41
  1109  01D1                     	ds	1
  1110                           
  1111                           	psect	cstackBANK1
  1112  00A0                     __pcstackBANK1:	
  1113  00A0                     ??_lecturaConsulta:	
  1114  00A0                     accionesAceptar@strLote:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117                           
  1118                           ; 32 bytes @ 0x0
  1119  00A0                     	ds	4
  1120  00A4                     lecturaConsulta@strLote:	
  1121                           
  1122                           ; 32 bytes @ 0x4
  1123  00A4                     	ds	28
  1124  00C0                     accionesAceptar@i:	
  1125                           
  1126                           ; 2 bytes @ 0x20
  1127  00C0                     	ds	4
  1128  00C4                     lecturaConsulta@articulo:	
  1129                           
  1130                           ; 2 bytes @ 0x24
  1131  00C4                     	ds	2
  1132  00C6                     ??_accionesPuertoSerial:	
  1133                           
  1134                           ; 1 bytes @ 0x26
  1135  00C6                     	ds	3
  1136  00C9                     ??_main:	
  1137                           
  1138                           ; 1 bytes @ 0x29
  1139  00C9                     	ds	4
  1140                           
  1141                           	psect	cstackCOMMON
  1142  0074                     __pcstackCOMMON:	
  1143  0074                     ?_bailenLeds:	
  1144  0074                     ?_lecturaComando:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0074                     ?_lecturaEtiqueta:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0074                     ?_eeprom_read:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0074                     ?_agregarModificarPrecio:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0074                     ?_accionesAceptar:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0074                     ?_accionesDeshacer:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0074                     ?_accionesPuertoSerial:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0074                     ?_escrituraDeCierre:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0074                     ?_verificacionEntrada:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0074                     ?_cierreDeLote:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0074                     ?_lecturaMas:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0074                     ?_lecturaMenos:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0074                     ?_lecturaConsulta:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0074                     ?_main:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0074                     ?_int_usart:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0074                     ??_int_usart:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0x0
  1194  0074                     	ds	4
  1195                           
  1196                           	psect	cstackBANK0
  1197  0020                     __pcstackBANK0:	
  1198  0020                     ?_envioTX:	
  1199  0020                     ??_bailenLeds:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0020                     ?_eeprom_write:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0020                     ??_eeprom_read:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0020                     ??_verificacionEntrada:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0020                     ?___bmul:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0020                     ?___wmul:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0020                     ?___awdiv:	
  1218                           ; 2 bytes @ 0x0
  1219                           
  1220  0020                     ?___awmod:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223  0020                     eeprom_write@value:	
  1224                           ; 2 bytes @ 0x0
  1225                           
  1226  0020                     ___bmul@multiplicand:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0020                     envioTX@mensaje:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0020                     ___wmul@multiplier:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235  0020                     ___awdiv@divisor:	
  1236                           ; 2 bytes @ 0x0
  1237                           
  1238  0020                     ___awmod@divisor:	
  1239                           ; 2 bytes @ 0x0
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x0
  1243  0020                     	ds	1
  1244  0021                     ??_eeprom_write:	
  1245  0021                     ??___bmul:	
  1246                           ; 1 bytes @ 0x1
  1247                           
  1248  0021                     verificacionEntrada@ret:	
  1249                           ; 1 bytes @ 0x1
  1250                           
  1251  0021                     eeprom_read@addr:	
  1252                           ; 1 bytes @ 0x1
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x1
  1256  0021                     	ds	1
  1257  0022                     ??_envioTX:	
  1258  0022                     verificacionEntrada@i:	
  1259                           ; 1 bytes @ 0x2
  1260                           
  1261  0022                     eeprom_write@addr:	
  1262                           ; 1 bytes @ 0x2
  1263                           
  1264  0022                     ___bmul@product:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267  0022                     ___wmul@multiplicand:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0022                     ___awdiv@dividend:	
  1271                           ; 2 bytes @ 0x2
  1272                           
  1273  0022                     ___awmod@dividend:	
  1274                           ; 2 bytes @ 0x2
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x2
  1278  0022                     	ds	1
  1279  0023                     ??_escrituraDeCierre:	
  1280  0023                     ___bmul@multiplier:	
  1281                           ; 1 bytes @ 0x3
  1282                           
  1283  0023                     bailenLeds@i:	
  1284                           ; 1 bytes @ 0x3
  1285                           
  1286                           
  1287                           ; 2 bytes @ 0x3
  1288  0023                     	ds	1
  1289  0024                     ??___wmul:	
  1290  0024                     ??___awdiv:	
  1291                           ; 1 bytes @ 0x4
  1292                           
  1293  0024                     ??___awmod:	
  1294                           ; 1 bytes @ 0x4
  1295                           
  1296  0024                     escrituraDeCierre@lower_8bits:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0024                     ___wmul@product:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x4
  1304  0024                     	ds	1
  1305  0025                     escrituraDeCierre@upper_8bits:	
  1306  0025                     ___awdiv@counter:	
  1307                           ; 1 bytes @ 0x5
  1308                           
  1309  0025                     ___awmod@counter:	
  1310                           ; 1 bytes @ 0x5
  1311                           
  1312  0025                     envioTX@i:	
  1313                           ; 1 bytes @ 0x5
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x5
  1317  0025                     	ds	1
  1318  0026                     ?_pow:	
  1319  0026                     ?___lwdiv:	
  1320                           ; 2 bytes @ 0x6
  1321                           
  1322  0026                     ___awdiv@sign:	
  1323                           ; 2 bytes @ 0x6
  1324                           
  1325  0026                     ___awmod@sign:	
  1326                           ; 1 bytes @ 0x6
  1327                           
  1328  0026                     pow@numero:	
  1329                           ; 1 bytes @ 0x6
  1330                           
  1331  0026                     ___lwdiv@divisor:	
  1332                           ; 2 bytes @ 0x6
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x6
  1336  0026                     	ds	1
  1337  0027                     envioTX@transmitir:	
  1338  0027                     ___awdiv@quotient:	
  1339                           ; 1 bytes @ 0x7
  1340                           
  1341                           
  1342                           ; 2 bytes @ 0x7
  1343  0027                     	ds	1
  1344  0028                     ??_lecturaMenos:	
  1345  0028                     pow@potencia:	
  1346                           ; 1 bytes @ 0x8
  1347                           
  1348  0028                     ___lwdiv@dividend:	
  1349                           ; 2 bytes @ 0x8
  1350                           
  1351                           
  1352                           ; 2 bytes @ 0x8
  1353  0028                     	ds	2
  1354  002A                     ??_pow:	
  1355  002A                     ??___lwdiv:	
  1356                           ; 1 bytes @ 0xA
  1357                           
  1358  002A                     pow@i:	
  1359                           ; 1 bytes @ 0xA
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0xA
  1363  002A                     	ds	1
  1364  002B                     ___lwdiv@counter:	
  1365                           
  1366                           ; 1 bytes @ 0xB
  1367  002B                     	ds	1
  1368  002C                     pow@resultado:	
  1369  002C                     ___lwdiv@quotient:	
  1370                           ; 2 bytes @ 0xC
  1371                           
  1372                           
  1373                           ; 2 bytes @ 0xC
  1374  002C                     	ds	2
  1375  002E                     ?_eliminarProd:	
  1376  002E                     ?_verificarProd:	
  1377                           ; 1 bytes @ 0xE
  1378                           
  1379  002E                     ?_ingresoProd:	
  1380                           ; 1 bytes @ 0xE
  1381                           
  1382  002E                     ?___lwmod:	
  1383                           ; 1 bytes @ 0xE
  1384                           
  1385  002E                     ingresoProd@tp:	
  1386                           ; 2 bytes @ 0xE
  1387                           
  1388  002E                     verificarProd@tp:	
  1389                           ; 2 bytes @ 0xE
  1390                           
  1391  002E                     eliminarProd@tp:	
  1392                           ; 2 bytes @ 0xE
  1393                           
  1394  002E                     ___lwmod@divisor:	
  1395                           ; 2 bytes @ 0xE
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0xE
  1399  002E                     	ds	2
  1400  0030                     ??_eliminarProd:	
  1401  0030                     ??_verificarProd:	
  1402                           ; 1 bytes @ 0x10
  1403                           
  1404  0030                     ??_ingresoProd:	
  1405                           ; 1 bytes @ 0x10
  1406                           
  1407  0030                     ___lwmod@dividend:	
  1408                           ; 1 bytes @ 0x10
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x10
  1412  0030                     	ds	2
  1413  0032                     ??___lwmod:	
  1414                           
  1415                           ; 1 bytes @ 0x12
  1416  0032                     	ds	1
  1417  0033                     verificarProd@ret:	
  1418  0033                     ___lwmod@counter:	
  1419                           ; 1 bytes @ 0x13
  1420                           
  1421  0033                     ingresoProd@i:	
  1422                           ; 1 bytes @ 0x13
  1423                           
  1424  0033                     eliminarProd@i:	
  1425                           ; 2 bytes @ 0x13
  1426                           
  1427                           
  1428                           ; 2 bytes @ 0x13
  1429  0033                     	ds	1
  1430  0034                     ?_mostrarDigitos:	
  1431  0034                     ?_sprintf:	
  1432                           ; 1 bytes @ 0x14
  1433                           
  1434  0034                     verificarProd@i:	
  1435                           ; 2 bytes @ 0x14
  1436                           
  1437  0034                     mostrarDigitos@num:	
  1438                           ; 2 bytes @ 0x14
  1439                           
  1440  0034                     sprintf@sp:	
  1441                           ; 2 bytes @ 0x14
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x14
  1445  0034                     	ds	2
  1446  0036                     ??_mostrarDigitos:	
  1447  0036                     ?_EEPROM_search:	
  1448                           ; 1 bytes @ 0x16
  1449                           
  1450  0036                     sprintf@f:	
  1451                           ; 2 bytes @ 0x16
  1452                           
  1453  0036                     _mostrarDigitos$1099:	
  1454                           ; 2 bytes @ 0x16
  1455                           
  1456                           
  1457                           ; 2 bytes @ 0x16
  1458  0036                     	ds	2
  1459  0038                     ??_accionesDeshacer:	
  1460  0038                     ??_EEPROM_search:	
  1461                           ; 1 bytes @ 0x18
  1462                           
  1463                           
  1464                           ; 1 bytes @ 0x18
  1465  0038                     	ds	4
  1466  003C                     EEPROM_search@precio:	
  1467                           
  1468                           ; 2 bytes @ 0x1C
  1469  003C                     	ds	2
  1470  003E                     ??_sprintf:	
  1471  003E                     EEPROM_search@tp:	
  1472                           ; 1 bytes @ 0x1E
  1473                           
  1474                           
  1475                           ; 1 bytes @ 0x1E
  1476  003E                     	ds	1
  1477  003F                     ??_lecturaEtiqueta:	
  1478                           
  1479                           ; 1 bytes @ 0x1F
  1480  003F                     	ds	3
  1481  0042                     lecturaEtiqueta@letra:	
  1482  0042                     sprintf@flag:	
  1483                           ; 1 bytes @ 0x22
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x22
  1487  0042                     	ds	1
  1488  0043                     lecturaEtiqueta@tp:	
  1489  0043                     sprintf@prec:	
  1490                           ; 1 bytes @ 0x23
  1491                           
  1492                           
  1493                           ; 1 bytes @ 0x23
  1494  0043                     	ds	1
  1495  0044                     sprintf@ap:	
  1496  0044                     lecturaEtiqueta@Aux:	
  1497                           ; 1 bytes @ 0x24
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x24
  1501  0044                     	ds	1
  1502  0045                     sprintf@cp:	
  1503                           
  1504                           ; 2 bytes @ 0x25
  1505  0045                     	ds	1
  1506  0046                     lecturaEtiqueta@i:	
  1507                           
  1508                           ; 2 bytes @ 0x26
  1509  0046                     	ds	1
  1510  0047                     sprintf@val:	
  1511                           
  1512                           ; 2 bytes @ 0x27
  1513  0047                     	ds	2
  1514  0049                     sprintf@c:	
  1515                           
  1516                           ; 1 bytes @ 0x29
  1517  0049                     	ds	1
  1518  004A                     ??_agregarModificarPrecio:	
  1519  004A                     ??_accionesAceptar:	
  1520                           ; 1 bytes @ 0x2A
  1521                           
  1522  004A                     ??_cierreDeLote:	
  1523                           ; 1 bytes @ 0x2A
  1524                           
  1525  004A                     ?_consultaPrecio:	
  1526                           ; 1 bytes @ 0x2A
  1527                           
  1528  004A                     consultaPrecio@articulo:	
  1529                           ; 1 bytes @ 0x2A
  1530                           
  1531                           
  1532                           ; 2 bytes @ 0x2A
  1533  004A                     	ds	2
  1534  004C                     ??_consultaPrecio:	
  1535                           
  1536                           ; 1 bytes @ 0x2C
  1537  004C                     	ds	2
  1538  004E                     cierreDeLote@strLote:	
  1539                           
  1540                           ; 32 bytes @ 0x2E
  1541  004E                     	ds	2
  1542  0050                     consultaPrecio@mensaje:	
  1543                           
  1544                           ; 26 bytes @ 0x30
  1545  0050                     	ds	4
  1546  0054                     agregarModificarPrecio@mensaje:	
  1547                           
  1548                           ; 10 bytes @ 0x34
  1549  0054                     	ds	10
  1550  005E                     agregarModificarPrecio@lower_8bits:	
  1551                           
  1552                           ; 1 bytes @ 0x3E
  1553  005E                     	ds	1
  1554  005F                     agregarModificarPrecio@upper_8bits:	
  1555                           
  1556                           ; 1 bytes @ 0x3F
  1557  005F                     	ds	1
  1558  0060                     agregarModificarPrecio@precio:	
  1559                           
  1560                           ; 2 bytes @ 0x40
  1561  0060                     	ds	2
  1562  0062                     agregarModificarPrecio@tp:	
  1563                           
  1564                           ; 1 bytes @ 0x42
  1565  0062                     	ds	8
  1566  006A                     consultaPrecio@precio:	
  1567                           
  1568                           ; 2 bytes @ 0x4A
  1569  006A                     	ds	4
  1570  006E                     ??_lecturaComando:	
  1571  006E                     ??_lecturaMas:	
  1572                           ; 1 bytes @ 0x4E
  1573                           
  1574                           
  1575                           	psect	maintext
  1576  0032                     __pmaintext:	
  1577                           ; 1 bytes @ 0x4E
  1578 ;;
  1579 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1580 ;;
  1581 ;; *************** function _main *****************
  1582 ;; Defined at:
  1583 ;;		line 8 in file "main.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  i               1   64[BANK3 ] unsigned char 
  1588 ;;  bufferMsj      16   44[BANK3 ] unsigned char [16]
  1589 ;;  i               1   65[BANK3 ] unsigned char 
  1590 ;;  strLote        32   12[BANK3 ] unsigned char [32]
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : B00/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       0       0      54       0
  1602 ;;      Temps:          0       0       4       0       0
  1603 ;;      Totals:         0       0       4      54       0
  1604 ;;Total ram usage:       58 bytes
  1605 ;; Hardware stack levels required when called:    7
  1606 ;; This function calls:
  1607 ;;		___lwdiv
  1608 ;;		___lwmod
  1609 ;;		___wmul
  1610 ;;		_accionesAceptar
  1611 ;;		_accionesDeshacer
  1612 ;;		_accionesPuertoSerial
  1613 ;;		_eeprom_read
  1614 ;;		_envioTX
  1615 ;;		_escrituraDeCierre
  1616 ;;		_mostrarDigitos
  1617 ;;		_sprintf
  1618 ;; This function is called by:
  1619 ;;		Startup code after reset
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function _main
  1625  0032                     _main:	
  1626  0032                     l3385:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1629                           
  1630                           
  1631                           ;main.c: 11:     if(eeprom_read(255) != 0xFF){
  1632  0032  30FF               	movlw	255
  1633  0033  120A  158A  205E  120A  118A  	fcall	_eeprom_read
  1634  0038  3AFF               	xorlw	255
  1635  0039  1903               	skipnz
  1636  003A  283C               	goto	u3841
  1637  003B  283D               	goto	u3840
  1638  003C                     u3841:	
  1639  003C  2872               	goto	l3393
  1640  003D                     u3840:	
  1641  003D                     l3387:	
  1642                           
  1643                           ;main.c: 12:         montosLote = (eeprom_read(252) << 8) | (eeprom_read(253));
  1644  003D  30FD               	movlw	253
  1645  003E  120A  158A  205E  120A  118A  	fcall	_eeprom_read
  1646  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1648  0045  00C9               	movwf	??_main^(0+128)
  1649  0046  01CA               	clrf	(??_main^(0+128)+1)
  1650  0047  30FC               	movlw	252
  1651  0048  120A  158A  205E  120A  118A  	fcall	_eeprom_read
  1652  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1653  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1654  004F  00CB               	movwf	(??_main+2)^(0+128)
  1655  0050  01CC               	clrf	((??_main+2)^(0+128)+1)
  1656  0051  084B               	movf	(??_main+2)^(0+128),w
  1657  0052  00CC               	movwf	((??_main+2)^(0+128)+1)
  1658  0053  01CB               	clrf	(??_main+2)^(0+128)
  1659  0054  0849               	movf	??_main^(0+128),w
  1660  0055  044B               	iorwf	(??_main+2)^(0+128),w
  1661  0056  00DA               	movwf	_montosLote^(0+128)
  1662  0057  084A               	movf	(??_main+1)^(0+128),w
  1663  0058  044C               	iorwf	(??_main+3)^(0+128),w
  1664  0059  00DB               	movwf	(_montosLote+1)^(0+128)
  1665  005A                     l3389:	
  1666                           
  1667                           ;main.c: 13:         ventasLote = eeprom_read(254);
  1668  005A  30FE               	movlw	254
  1669  005B  120A  158A  205E  120A  118A  	fcall	_eeprom_read
  1670  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0062  00C9               	movwf	??_main^(0+128)
  1673  0063  0849               	movf	??_main^(0+128),w
  1674  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0066  00EE               	movwf	_ventasLote
  1677  0067                     l3391:	
  1678                           
  1679                           ;main.c: 14:         nroLote = eeprom_read(255);
  1680  0067  30FF               	movlw	255
  1681  0068  120A  158A  205E  120A  118A  	fcall	_eeprom_read
  1682  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1683  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1684  006F  00C9               	movwf	??_main^(0+128)
  1685  0070  0849               	movf	??_main^(0+128),w
  1686  0071  00F8               	movwf	_nroLote
  1687  0072                     l3393:	
  1688                           
  1689                           ;main.c: 18:     TRISA = 0x01;
  1690  0072  3001               	movlw	1
  1691  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1693  0075  0085               	movwf	5	;volatile
  1694  0076                     l3395:	
  1695                           
  1696                           ;main.c: 19:     TRISE = 0x07;
  1697  0076  3007               	movlw	7
  1698  0077  0089               	movwf	9	;volatile
  1699  0078                     l3397:	
  1700                           
  1701                           ;main.c: 20:     TRISB = 0x00;
  1702  0078  0186               	clrf	6	;volatile
  1703  0079                     l3399:	
  1704                           
  1705                           ;main.c: 21:     TRISD = 0x00;
  1706  0079  0188               	clrf	8	;volatile
  1707  007A                     l3401:	
  1708                           
  1709                           ;main.c: 22:     T1CON = 0b00010001;
  1710  007A  3011               	movlw	17
  1711  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1712  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1713  007D  0090               	movwf	16	;volatile
  1714  007E                     l3403:	
  1715                           
  1716                           ;main.c: 23:     TMR1 = 15536;
  1717  007E  303C               	movlw	60
  1718  007F  008F               	movwf	15	;volatile
  1719  0080  30B0               	movlw	176
  1720  0081  008E               	movwf	14	;volatile
  1721  0082                     l3405:	
  1722                           
  1723                           ;main.c: 25:     ADCON0 = 0b01000001;
  1724  0082  3041               	movlw	65
  1725  0083  009F               	movwf	31	;volatile
  1726  0084                     l3407:	
  1727                           
  1728                           ;main.c: 26:     ADCON1 = 0b10001110;
  1729  0084  308E               	movlw	142
  1730  0085  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0086  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0087  009F               	movwf	31	;volatile
  1733  0088                     l3409:	
  1734                           
  1735                           ;main.c: 27:     INTCON = 0b11000000;
  1736  0088  30C0               	movlw	192
  1737  0089  008B               	movwf	11	;volatile
  1738  008A                     l3411:	
  1739                           
  1740                           ;main.c: 30:     TRISC = 0b10000000;
  1741  008A  3080               	movlw	128
  1742  008B  0087               	movwf	7	;volatile
  1743  008C                     l3413:	
  1744                           
  1745                           ;main.c: 31:     TXSTA = 0b00100110;
  1746  008C  3026               	movlw	38
  1747  008D  0098               	movwf	24	;volatile
  1748  008E                     l3415:	
  1749                           
  1750                           ;main.c: 32:     RCSTA = 0b10010000;
  1751  008E  3090               	movlw	144
  1752  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0091  0098               	movwf	24	;volatile
  1755  0092                     l3417:	
  1756                           
  1757                           ;main.c: 33:     SPBRG = 25;
  1758  0092  3019               	movlw	25
  1759  0093  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0094  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0095  0099               	movwf	25	;volatile
  1762  0096                     l3419:	
  1763                           
  1764                           ;main.c: 36:     ADIF = 0;
  1765  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0098  130C               	bcf	12,6	;volatile
  1768  0099                     l3421:	
  1769                           
  1770                           ;main.c: 37:     PIE1bits.ADIE = 1;
  1771  0099  1683               	bsf	3,5	;RP0=1, select bank1
  1772  009A  1303               	bcf	3,6	;RP1=0, select bank1
  1773  009B  170C               	bsf	12,6	;volatile
  1774  009C                     l3423:	
  1775                           
  1776                           ;main.c: 38:     PIE1bits.RCIE = 1;
  1777  009C  168C               	bsf	12,5	;volatile
  1778  009D                     l3425:	
  1779                           
  1780                           ;main.c: 39:     PIE1bits.TMR1IE = 1;
  1781  009D  140C               	bsf	12,0	;volatile
  1782  009E                     l3427:	
  1783                           
  1784                           ;main.c: 40:     cuenta = 0;
  1785  009E  01F0               	clrf	_cuenta
  1786  009F  01F1               	clrf	_cuenta+1
  1787  00A0                     l3429:	
  1788                           
  1789                           ;main.c: 41:     auxCuenta = 0;
  1790  00A0  1683               	bsf	3,5	;RP0=1, select bank3
  1791  00A1  1703               	bsf	3,6	;RP1=1, select bank3
  1792  00A2  01D4               	clrf	_auxCuenta^(0+384)
  1793  00A3  01D5               	clrf	(_auxCuenta+1)^(0+384)
  1794  00A4                     l3431:	
  1795                           
  1796                           ;main.c: 42:     mostrarDigitos(cuenta);
  1797  00A4  0871               	movf	_cuenta+1,w
  1798  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1799  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1800  00A7  00B5               	movwf	mostrarDigitos@num+1
  1801  00A8  0870               	movf	_cuenta,w
  1802  00A9  00B4               	movwf	mostrarDigitos@num
  1803  00AA  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  1804  00AF                     l3433:	
  1805                           
  1806                           ;main.c: 43:     RC0 = 0;
  1807  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1808  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1809  00B1  1007               	bcf	7,0	;volatile
  1810  00B2                     l3435:	
  1811                           
  1812                           ;main.c: 49:         if(RE0) {
  1813  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1814  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1815  00B4  1C09               	btfss	9,0	;volatile
  1816  00B5  28B7               	goto	u3851
  1817  00B6  28B8               	goto	u3850
  1818  00B7                     u3851:	
  1819  00B7  28C2               	goto	l307
  1820  00B8                     u3850:	
  1821  00B8                     l308:	
  1822  00B8  1809               	btfsc	9,0	;volatile
  1823  00B9  28BB               	goto	u3861
  1824  00BA  28BC               	goto	u3860
  1825  00BB                     u3861:	
  1826  00BB  28B8               	goto	l308
  1827  00BC                     u3860:	
  1828  00BC                     l3439:	
  1829                           
  1830                           ;main.c: 51:             accionesAceptar();
  1831  00BC  120A  118A  224B  120A  118A  	fcall	_accionesAceptar
  1832                           
  1833                           ;main.c: 52:         }
  1834  00C1  28B2               	goto	l3435
  1835  00C2                     l307:	
  1836                           ;main.c: 53:         else if(RE1) {
  1837                           
  1838  00C2  1C89               	btfss	9,1	;volatile
  1839  00C3  28C5               	goto	u3871
  1840  00C4  28C6               	goto	u3870
  1841  00C5                     u3871:	
  1842  00C5  28D0               	goto	l312
  1843  00C6                     u3870:	
  1844  00C6                     l313:	
  1845  00C6  1889               	btfsc	9,1	;volatile
  1846  00C7  28C9               	goto	u3881
  1847  00C8  28CA               	goto	u3880
  1848  00C9                     u3881:	
  1849  00C9  28C6               	goto	l313
  1850  00CA                     u3880:	
  1851  00CA                     l3443:	
  1852                           
  1853                           ;main.c: 55:             accionesDeshacer();
  1854  00CA  120A  158A  21E2  120A  118A  	fcall	_accionesDeshacer
  1855                           
  1856                           ;main.c: 56:         }
  1857  00CF  28B2               	goto	l3435
  1858  00D0                     l312:	
  1859                           ;main.c: 57:         else if(RE2) {
  1860                           
  1861  00D0  1D09               	btfss	9,2	;volatile
  1862  00D1  28D3               	goto	u3891
  1863  00D2  28D4               	goto	u3890
  1864  00D3                     u3891:	
  1865  00D3  2955               	goto	l3469
  1866  00D4                     u3890:	
  1867  00D4                     l318:	
  1868  00D4  1909               	btfsc	9,2	;volatile
  1869  00D5  28D7               	goto	u3901
  1870  00D6  28D8               	goto	u3900
  1871  00D7                     u3901:	
  1872  00D7  28D4               	goto	l318
  1873  00D8                     u3900:	
  1874  00D8                     l3447:	
  1875                           
  1876                           ;main.c: 59:             if (cuenta == 0){
  1877  00D8  0870               	movf	_cuenta,w
  1878  00D9  0471               	iorwf	_cuenta+1,w
  1879  00DA  1D03               	btfss	3,2
  1880  00DB  28DD               	goto	u3911
  1881  00DC  28DE               	goto	u3910
  1882  00DD                     u3911:	
  1883  00DD  2942               	goto	l321
  1884  00DE                     u3910:	
  1885  00DE                     l3449:	
  1886                           
  1887                           ;main.c: 60:                 cierreLotePedido = 1;
  1888  00DE  1683               	bsf	3,5	;RP0=1, select bank3
  1889  00DF  1703               	bsf	3,6	;RP1=1, select bank3
  1890  00E0  01D7               	clrf	_cierreLotePedido^(0+384)
  1891  00E1  0AD7               	incf	_cierreLotePedido^(0+384),f
  1892  00E2                     l3451:	
  1893                           
  1894                           ;main.c: 61:                 char strLote[32];;main.c: 62:                 sprintf(strLo
      +                          te,"\nCierre, L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  1895  00E2  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1896  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1897  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1898  00E5  00B4               	movwf	sprintf@sp
  1899  00E6  3001               	movlw	1
  1900  00E7  00B5               	movwf	sprintf@sp+1
  1901  00E8  304E               	movlw	low (STR_15| (0+32768))
  1902  00E9  00B6               	movwf	sprintf@f
  1903  00EA  3083               	movlw	high (STR_15| (0+32768))
  1904  00EB  00B7               	movwf	sprintf@f+1
  1905  00EC  0878               	movf	_nroLote,w
  1906  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1907  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1908  00EF  00C9               	movwf	??_main^(0+128)
  1909  00F0  01CA               	clrf	(??_main^(0+128)+1)
  1910  00F1  0849               	movf	??_main^(0+128),w
  1911  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1912  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1913  00F4  00B8               	movwf	?_sprintf+4
  1914  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1915  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1916  00F7  084A               	movf	(??_main+1)^(0+128),w
  1917  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1918  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1919  00FA  00B9               	movwf	?_sprintf+5
  1920  00FB  086E               	movf	_ventasLote,w
  1921  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1922  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1923  00FE  00CB               	movwf	(??_main+2)^(0+128)
  1924  00FF  01CC               	clrf	((??_main+2)^(0+128)+1)
  1925  0100  084B               	movf	(??_main+2)^(0+128),w
  1926  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0103  00BA               	movwf	?_sprintf+6
  1929  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0106  084C               	movf	(??_main+3)^(0+128),w
  1932  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0109  00BB               	movwf	?_sprintf+7
  1935  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1936  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1937  010C  085B               	movf	(_montosLote+1)^(0+128),w
  1938  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1939  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1940  010F  00BD               	movwf	?_sprintf+9
  1941  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0112  085A               	movf	_montosLote^(0+128),w
  1944  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0115  00BC               	movwf	?_sprintf+8
  1947  0116  120A  118A  2453  120A  118A  	fcall	_sprintf
  1948                           
  1949                           ;main.c: 63:                 envioTX(strLote);
  1950  011B  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1951  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1952  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1953  011E  00A0               	movwf	envioTX@mensaje
  1954  011F  3001               	movlw	1
  1955  0120  00A1               	movwf	envioTX@mensaje+1
  1956  0121  120A  158A  216A  120A  118A  	fcall	_envioTX
  1957  0126                     l3453:	
  1958                           
  1959                           ;main.c: 64:                 for(char i = 0; i<10; i++){
  1960  0126  1683               	bsf	3,5	;RP0=1, select bank3
  1961  0127  1703               	bsf	3,6	;RP1=1, select bank3
  1962  0128  01D0               	clrf	main@i^(0+384)
  1963  0129                     l3459:	
  1964                           
  1965                           ;main.c: 65:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  1966  0129  3082               	movlw	130
  1967  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1968  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1969  012C  00CA               	movwf	(??_main^(0+128)+1)
  1970  012D  30DD               	movlw	221
  1971  012E  00C9               	movwf	??_main^(0+128)
  1972  012F                     u3987:	
  1973  012F  0BC9               	decfsz	??_main^(0+128),f
  1974  0130  292F               	goto	u3987
  1975  0131  0BCA               	decfsz	(??_main^(0+128)+1),f
  1976  0132  292F               	goto	u3987
  1977  0133                     l3461:	
  1978                           
  1979                           ;main.c: 66:                 }
  1980  0133  3001               	movlw	1
  1981  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1983  0136  00C9               	movwf	??_main^(0+128)
  1984  0137  0849               	movf	??_main^(0+128),w
  1985  0138  1683               	bsf	3,5	;RP0=1, select bank3
  1986  0139  1703               	bsf	3,6	;RP1=1, select bank3
  1987  013A  07D0               	addwf	main@i^(0+384),f
  1988  013B                     l3463:	
  1989  013B  300A               	movlw	10
  1990  013C  0250               	subwf	main@i^(0+384),w
  1991  013D  1C03               	skipc
  1992  013E  2940               	goto	u3921
  1993  013F  2941               	goto	u3920
  1994  0140                     u3921:	
  1995  0140  2929               	goto	l3459
  1996  0141                     u3920:	
  1997  0141  28B2               	goto	l3435
  1998  0142                     l321:	
  1999                           ;main.c: 68:             else{
  2000                           
  2001                           
  2002                           ;main.c: 69:                 RA5 = 1;
  2003  0142  1685               	bsf	5,5	;volatile
  2004  0143                     l3465:	
  2005                           
  2006                           ;main.c: 70:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
  2007  0143  3006               	movlw	6
  2008  0144  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0145  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0146  00CB               	movwf	(??_main^(0+128)+2)
  2011  0147  3013               	movlw	19
  2012  0148  00CA               	movwf	(??_main^(0+128)+1)
  2013  0149  30AD               	movlw	173
  2014  014A  00C9               	movwf	??_main^(0+128)
  2015  014B                     u3997:	
  2016  014B  0BC9               	decfsz	??_main^(0+128),f
  2017  014C  294B               	goto	u3997
  2018  014D  0BCA               	decfsz	(??_main^(0+128)+1),f
  2019  014E  294B               	goto	u3997
  2020  014F  0BCB               	decfsz	(??_main^(0+128)+2),f
  2021  0150  294B               	goto	u3997
  2022  0151                     l3467:	
  2023                           
  2024                           ;main.c: 71:                 RA5 = 0;
  2025  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0153  1285               	bcf	5,5	;volatile
  2028  0154  28B2               	goto	l3435
  2029  0155                     l3469:	
  2030  0155  1683               	bsf	3,5	;RP0=1, select bank3
  2031  0156  1703               	bsf	3,6	;RP1=1, select bank3
  2032  0157  0852               	movf	_huboInt^(0+384),w
  2033  0158  0453               	iorwf	(_huboInt+1)^(0+384),w
  2034  0159  1903               	btfsc	3,2
  2035  015A  295C               	goto	u3931
  2036  015B  295D               	goto	u3930
  2037  015C                     u3931:	
  2038  015C  297B               	goto	l3487
  2039  015D                     u3930:	
  2040  015D                     l3471:	
  2041                           
  2042                           ;main.c: 75:             huboInt = 0;
  2043  015D  01D2               	clrf	_huboInt^(0+384)
  2044  015E  01D3               	clrf	(_huboInt+1)^(0+384)
  2045  015F                     l3473:	
  2046                           
  2047                           ;main.c: 76:             accionesPuertoSerial();
  2048  015F  120A  158A  24BA  120A  118A  	fcall	_accionesPuertoSerial
  2049  0164                     l3475:	
  2050                           
  2051                           ;main.c: 77:             for(char i = 0; i < 10; i++){
  2052  0164  1683               	bsf	3,5	;RP0=1, select bank3
  2053  0165  1703               	bsf	3,6	;RP1=1, select bank3
  2054  0166  01D1               	clrf	main@i_307^(0+384)
  2055  0167                     l3481:	
  2056                           
  2057                           ;main.c: 78:                 codigoEntrada[i] = 0;
  2058  0167  0851               	movf	main@i_307^(0+384),w
  2059  0168  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2060  0169  0084               	movwf	4
  2061  016A  1383               	bcf	3,7	;select IRP bank1
  2062  016B  0180               	clrf	0
  2063  016C                     l3483:	
  2064                           
  2065                           ;main.c: 79:             }
  2066  016C  3001               	movlw	1
  2067  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2068  016E  1303               	bcf	3,6	;RP1=0, select bank1
  2069  016F  00C9               	movwf	??_main^(0+128)
  2070  0170  0849               	movf	??_main^(0+128),w
  2071  0171  1683               	bsf	3,5	;RP0=1, select bank3
  2072  0172  1703               	bsf	3,6	;RP1=1, select bank3
  2073  0173  07D1               	addwf	main@i_307^(0+384),f
  2074  0174                     l3485:	
  2075  0174  300A               	movlw	10
  2076  0175  0251               	subwf	main@i_307^(0+384),w
  2077  0176  1C03               	skipc
  2078  0177  2979               	goto	u3941
  2079  0178  297A               	goto	u3940
  2080  0179                     u3941:	
  2081  0179  2967               	goto	l3481
  2082  017A                     u3940:	
  2083  017A  28B2               	goto	l3435
  2084  017B                     l3487:	
  2085  017B  0858               	movf	_adresult^(0+384),w
  2086  017C  0459               	iorwf	(_adresult+1)^(0+384),w
  2087  017D  1903               	btfsc	3,2
  2088  017E  2980               	goto	u3951
  2089  017F  2981               	goto	u3950
  2090  0180                     u3951:	
  2091  0180  2A47               	goto	l316
  2092  0181                     u3950:	
  2093  0181                     l3489:	
  2094                           
  2095                           ;main.c: 82:             adresult = 2*(adresult*10*5/1023);
  2096  0181  30FF               	movlw	255
  2097  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0184  00A6               	movwf	___lwdiv@divisor
  2100  0185  3003               	movlw	3
  2101  0186  00A7               	movwf	___lwdiv@divisor+1
  2102  0187  1683               	bsf	3,5	;RP0=1, select bank3
  2103  0188  1703               	bsf	3,6	;RP1=1, select bank3
  2104  0189  0859               	movf	(_adresult+1)^(0+384),w
  2105  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2106  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2107  018C  00A1               	movwf	___wmul@multiplier+1
  2108  018D  1683               	bsf	3,5	;RP0=1, select bank3
  2109  018E  1703               	bsf	3,6	;RP1=1, select bank3
  2110  018F  0858               	movf	_adresult^(0+384),w
  2111  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0192  00A0               	movwf	___wmul@multiplier
  2114  0193  3032               	movlw	50
  2115  0194  00A2               	movwf	___wmul@multiplicand
  2116  0195  3000               	movlw	0
  2117  0196  00A3               	movwf	___wmul@multiplicand+1
  2118  0197  120A  158A  209D  120A  118A  	fcall	___wmul
  2119  019C  1283               	bcf	3,5	;RP0=0, select bank0
  2120  019D  1303               	bcf	3,6	;RP1=0, select bank0
  2121  019E  0821               	movf	?___wmul+1,w
  2122  019F  00A9               	movwf	___lwdiv@dividend+1
  2123  01A0  0820               	movf	?___wmul,w
  2124  01A1  00A8               	movwf	___lwdiv@dividend
  2125  01A2  120A  158A  2261  120A  118A  	fcall	___lwdiv
  2126  01A7  1003               	clrc
  2127  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2128  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2129  01AA  0D26               	rlf	?___lwdiv,w
  2130  01AB  1683               	bsf	3,5	;RP0=1, select bank3
  2131  01AC  1703               	bsf	3,6	;RP1=1, select bank3
  2132  01AD  00D8               	movwf	_adresult^(0+384)
  2133  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2134  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2135  01B0  0D27               	rlf	?___lwdiv+1,w
  2136  01B1  1683               	bsf	3,5	;RP0=1, select bank3
  2137  01B2  1703               	bsf	3,6	;RP1=1, select bank3
  2138  01B3  00D9               	movwf	(_adresult+1)^(0+384)
  2139  01B4                     l3491:	
  2140                           
  2141                           ;main.c: 83:             if(adresult < 75){
  2142  01B4  3000               	movlw	0
  2143  01B5  0259               	subwf	(_adresult+1)^(0+384),w
  2144  01B6  304B               	movlw	75
  2145  01B7  1903               	skipnz
  2146  01B8  0258               	subwf	_adresult^(0+384),w
  2147  01B9  1803               	skipnc
  2148  01BA  29BC               	goto	u3961
  2149  01BB  29BD               	goto	u3960
  2150  01BC                     u3961:	
  2151  01BC  29C2               	goto	l3495
  2152  01BD                     u3960:	
  2153  01BD                     l3493:	
  2154                           
  2155                           ;main.c: 84:                 escrituraDeCierre();
  2156  01BD  120A  158A  221F  120A  118A  	fcall	_escrituraDeCierre
  2157  01C2                     l3495:	
  2158                           
  2159                           ;main.c: 86:             if(pedidoVoltaje){
  2160  01C2  1683               	bsf	3,5	;RP0=1, select bank3
  2161  01C3  1703               	bsf	3,6	;RP1=1, select bank3
  2162  01C4  0856               	movf	_pedidoVoltaje^(0+384),w
  2163  01C5  1903               	btfsc	3,2
  2164  01C6  29C8               	goto	u3971
  2165  01C7  29C9               	goto	u3970
  2166  01C8                     u3971:	
  2167  01C8  2A44               	goto	l3505
  2168  01C9                     u3970:	
  2169  01C9                     l3497:	
  2170                           
  2171                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2172  01C9  300A               	movlw	10
  2173  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2174  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2175  01CC  00A6               	movwf	___lwdiv@divisor
  2176  01CD  3000               	movlw	0
  2177  01CE  00A7               	movwf	___lwdiv@divisor+1
  2178  01CF  1683               	bsf	3,5	;RP0=1, select bank3
  2179  01D0  1703               	bsf	3,6	;RP1=1, select bank3
  2180  01D1  0859               	movf	(_adresult+1)^(0+384),w
  2181  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2182  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2183  01D4  00A9               	movwf	___lwdiv@dividend+1
  2184  01D5  1683               	bsf	3,5	;RP0=1, select bank3
  2185  01D6  1703               	bsf	3,6	;RP1=1, select bank3
  2186  01D7  0858               	movf	_adresult^(0+384),w
  2187  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2188  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2189  01DA  00A8               	movwf	___lwdiv@dividend
  2190  01DB  120A  158A  2261  120A  118A  	fcall	___lwdiv
  2191  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2192  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2193  01E2  0827               	movf	?___lwdiv+1,w
  2194  01E3  1683               	bsf	3,5	;RP0=1, select bank3
  2195  01E4  1703               	bsf	3,6	;RP1=1, select bank3
  2196  01E5  00CD               	movwf	(_main$1097+1)^(0+384)
  2197  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2198  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2199  01E8  0826               	movf	?___lwdiv,w
  2200  01E9  1683               	bsf	3,5	;RP0=1, select bank3
  2201  01EA  1703               	bsf	3,6	;RP1=1, select bank3
  2202  01EB  00CC               	movwf	_main$1097^(0+384)
  2203                           
  2204                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2205  01EC  300A               	movlw	10
  2206  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2207  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2208  01EF  00AE               	movwf	___lwmod@divisor
  2209  01F0  3000               	movlw	0
  2210  01F1  00AF               	movwf	___lwmod@divisor+1
  2211  01F2  1683               	bsf	3,5	;RP0=1, select bank3
  2212  01F3  1703               	bsf	3,6	;RP1=1, select bank3
  2213  01F4  0859               	movf	(_adresult+1)^(0+384),w
  2214  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2216  01F7  00B1               	movwf	___lwmod@dividend+1
  2217  01F8  1683               	bsf	3,5	;RP0=1, select bank3
  2218  01F9  1703               	bsf	3,6	;RP1=1, select bank3
  2219  01FA  0858               	movf	_adresult^(0+384),w
  2220  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2221  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2222  01FD  00B0               	movwf	___lwmod@dividend
  2223  01FE  120A  158A  21A6  120A  118A  	fcall	___lwmod
  2224  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0205  082F               	movf	?___lwmod+1,w
  2227  0206  1683               	bsf	3,5	;RP0=1, select bank3
  2228  0207  1703               	bsf	3,6	;RP1=1, select bank3
  2229  0208  00CF               	movwf	(_main$1098+1)^(0+384)
  2230  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2231  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2232  020B  082E               	movf	?___lwmod,w
  2233  020C  1683               	bsf	3,5	;RP0=1, select bank3
  2234  020D  1703               	bsf	3,6	;RP1=1, select bank3
  2235  020E  00CE               	movwf	_main$1098^(0+384)
  2236  020F                     l3499:	
  2237                           
  2238                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2239  020F  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2240  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0212  00B4               	movwf	sprintf@sp
  2243  0213  3001               	movlw	1
  2244  0214  00B5               	movwf	sprintf@sp+1
  2245  0215  3034               	movlw	low (STR_16| (0+32768))
  2246  0216  00B6               	movwf	sprintf@f
  2247  0217  3084               	movlw	high (STR_16| (0+32768))
  2248  0218  00B7               	movwf	sprintf@f+1
  2249  0219  1683               	bsf	3,5	;RP0=1, select bank3
  2250  021A  1703               	bsf	3,6	;RP1=1, select bank3
  2251  021B  084D               	movf	(_main$1097+1)^(0+384),w
  2252  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2253  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2254  021E  00B9               	movwf	?_sprintf+5
  2255  021F  1683               	bsf	3,5	;RP0=1, select bank3
  2256  0220  1703               	bsf	3,6	;RP1=1, select bank3
  2257  0221  084C               	movf	_main$1097^(0+384),w
  2258  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0224  00B8               	movwf	?_sprintf+4
  2261  0225  1683               	bsf	3,5	;RP0=1, select bank3
  2262  0226  1703               	bsf	3,6	;RP1=1, select bank3
  2263  0227  084F               	movf	(_main$1098+1)^(0+384),w
  2264  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2266  022A  00BB               	movwf	?_sprintf+7
  2267  022B  1683               	bsf	3,5	;RP0=1, select bank3
  2268  022C  1703               	bsf	3,6	;RP1=1, select bank3
  2269  022D  084E               	movf	_main$1098^(0+384),w
  2270  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2271  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0230  00BA               	movwf	?_sprintf+6
  2273  0231  120A  118A  2453  120A  118A  	fcall	_sprintf
  2274  0236                     l3501:	
  2275                           
  2276                           ;main.c: 89:                 envioTX(bufferMsj);
  2277  0236  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2278  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0239  00A0               	movwf	envioTX@mensaje
  2281  023A  3001               	movlw	1
  2282  023B  00A1               	movwf	envioTX@mensaje+1
  2283  023C  120A  158A  216A  120A  118A  	fcall	_envioTX
  2284  0241                     l3503:	
  2285                           
  2286                           ;main.c: 90:                 pedidoVoltaje = 0;
  2287  0241  1683               	bsf	3,5	;RP0=1, select bank3
  2288  0242  1703               	bsf	3,6	;RP1=1, select bank3
  2289  0243  01D6               	clrf	_pedidoVoltaje^(0+384)
  2290  0244                     l3505:	
  2291                           
  2292                           ;main.c: 92:             adresult = 0;
  2293  0244  01D8               	clrf	_adresult^(0+384)
  2294  0245  01D9               	clrf	(_adresult+1)^(0+384)
  2295  0246  28B2               	goto	l3435
  2296  0247                     l316:	
  2297  0247  28B2               	goto	l3435
  2298  0248  120A  118A  280E   	ljmp	start
  2299  024B                     __end_of_main:	
  2300                           
  2301                           	psect	text1
  2302  0A1F                     __ptext1:	
  2303 ;; *************** function _escrituraDeCierre *****************
  2304 ;; Defined at:
  2305 ;;		line 56 in file "acciones.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  upper_8bits     1    5[BANK0 ] unsigned char 
  2310 ;;  lower_8bits     1    4[BANK0 ] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         0       2       0       0       0
  2322 ;;      Temps:          0       1       0       0       0
  2323 ;;      Totals:         0       3       0       0       0
  2324 ;;Total ram usage:        3 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    2
  2327 ;; This function calls:
  2328 ;;		_eeprom_write
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _escrituraDeCierre
  2336  0A1F                     _escrituraDeCierre:	
  2337  0A1F                     l3371:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _escrituraDeCierre: [wreg+status,2+status,0+pclath+cstack]
  2340                           
  2341                           
  2342                           ;acciones.c: 58:     char lower_8bits;;acciones.c: 59:     char upper_8bits;;acciones.c:
      +                           60:     lower_8bits = montosLote & 0xff;
  2343  0A1F  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0A20  1303               	bcf	3,6	;RP1=0, select bank1
  2345  0A21  085A               	movf	_montosLote^(0+128),w
  2346  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0A24  00A3               	movwf	??_escrituraDeCierre
  2349  0A25  0823               	movf	??_escrituraDeCierre,w
  2350  0A26  00A4               	movwf	escrituraDeCierre@lower_8bits
  2351  0A27                     l3373:	
  2352                           
  2353                           ;acciones.c: 61:     upper_8bits = (montosLote >> 8) & 0xff;
  2354  0A27  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0A28  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0A29  085B               	movf	(_montosLote+1)^(0+128),w
  2357  0A2A  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0A2B  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0A2C  00A3               	movwf	??_escrituraDeCierre
  2360  0A2D  0823               	movf	??_escrituraDeCierre,w
  2361  0A2E  00A5               	movwf	escrituraDeCierre@upper_8bits
  2362  0A2F                     l3375:	
  2363                           
  2364                           ;acciones.c: 62:     eeprom_write(252, upper_8bits);
  2365  0A2F  0825               	movf	escrituraDeCierre@upper_8bits,w
  2366  0A30  00A3               	movwf	??_escrituraDeCierre
  2367  0A31  0823               	movf	??_escrituraDeCierre,w
  2368  0A32  00A0               	movwf	eeprom_write@value
  2369  0A33  30FC               	movlw	252
  2370  0A34  120A  158A  20F9  120A  158A  	fcall	_eeprom_write
  2371  0A39                     l3377:	
  2372                           
  2373                           ;acciones.c: 63:     eeprom_write(253, lower_8bits);
  2374  0A39  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0A3A  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0A3B  0824               	movf	escrituraDeCierre@lower_8bits,w
  2377  0A3C  00A3               	movwf	??_escrituraDeCierre
  2378  0A3D  0823               	movf	??_escrituraDeCierre,w
  2379  0A3E  00A0               	movwf	eeprom_write@value
  2380  0A3F  30FD               	movlw	253
  2381  0A40  120A  158A  20F9  120A  158A  	fcall	_eeprom_write
  2382  0A45                     l3379:	
  2383                           
  2384                           ;acciones.c: 64:     eeprom_write(254, ventasLote);
  2385  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0A47  086E               	movf	_ventasLote,w
  2388  0A48  00A3               	movwf	??_escrituraDeCierre
  2389  0A49  0823               	movf	??_escrituraDeCierre,w
  2390  0A4A  00A0               	movwf	eeprom_write@value
  2391  0A4B  30FE               	movlw	254
  2392  0A4C  120A  158A  20F9  120A  158A  	fcall	_eeprom_write
  2393  0A51                     l3381:	
  2394                           
  2395                           ;acciones.c: 65:     eeprom_write(255, nroLote);
  2396  0A51  0878               	movf	_nroLote,w
  2397  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0A53  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0A54  00A3               	movwf	??_escrituraDeCierre
  2400  0A55  0823               	movf	??_escrituraDeCierre,w
  2401  0A56  00A0               	movwf	eeprom_write@value
  2402  0A57  30FF               	movlw	255
  2403  0A58  120A  158A  20F9  120A  158A  	fcall	_eeprom_write
  2404  0A5D                     l3383:	
  2405                           
  2406                           ;acciones.c: 66:     RC0 = 1;
  2407  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0A5E  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0A5F  1407               	bsf	7,0	;volatile
  2410  0A60                     l76:	
  2411  0A60  0008               	return
  2412  0A61                     __end_of_escrituraDeCierre:	
  2413                           
  2414                           	psect	text2
  2415  0CBA                     __ptext2:	
  2416 ;; *************** function _accionesPuertoSerial *****************
  2417 ;; Defined at:
  2418 ;;		line 35 in file "acciones.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  mensaje        12    0[BANK3 ] unsigned char [12]
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       0       0      12       0
  2434 ;;      Temps:          0       0       3       0       0
  2435 ;;      Totals:         0       0       3      12       0
  2436 ;;Total ram usage:       15 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    6
  2439 ;; This function calls:
  2440 ;;		_envioTX
  2441 ;;		_lecturaComando
  2442 ;;		_lecturaEtiqueta
  2443 ;;		_sprintf
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _accionesPuertoSerial
  2451  0CBA                     _accionesPuertoSerial:	
  2452  0CBA                     l3351:	
  2453                           ;incstack = 0
  2454                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2455                           
  2456                           
  2457                           ;acciones.c: 36:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codi
      +                          goEntrada[0] == '-')) {
  2458  0CBA  303F               	movlw	63
  2459  0CBB  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0CBC  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0CBD  0660               	xorwf	_codigoEntrada^(0+128),w
  2462  0CBE  1903               	btfsc	3,2
  2463  0CBF  2CC1               	goto	u3781
  2464  0CC0  2CC2               	goto	u3780
  2465  0CC1                     u3781:	
  2466  0CC1  2CCE               	goto	l3357
  2467  0CC2                     u3780:	
  2468  0CC2                     l3353:	
  2469  0CC2  302B               	movlw	43
  2470  0CC3  0660               	xorwf	_codigoEntrada^(0+128),w
  2471  0CC4  1903               	btfsc	3,2
  2472  0CC5  2CC7               	goto	u3791
  2473  0CC6  2CC8               	goto	u3790
  2474  0CC7                     u3791:	
  2475  0CC7  2CCE               	goto	l3357
  2476  0CC8                     u3790:	
  2477  0CC8                     l3355:	
  2478  0CC8  302D               	movlw	45
  2479  0CC9  0660               	xorwf	_codigoEntrada^(0+128),w
  2480  0CCA  1D03               	btfss	3,2
  2481  0CCB  2CCD               	goto	u3801
  2482  0CCC  2CCE               	goto	u3800
  2483  0CCD                     u3801:	
  2484  0CCD  2CD4               	goto	l3359
  2485  0CCE                     u3800:	
  2486  0CCE                     l3357:	
  2487                           
  2488                           ;acciones.c: 37:         lecturaComando();
  2489  0CCE  120A  158A  207D  120A  158A  	fcall	_lecturaComando
  2490                           
  2491                           ;acciones.c: 38:     }
  2492  0CD3  2D1D               	goto	l73
  2493  0CD4                     l3359:	
  2494  0CD4  303A               	movlw	58
  2495  0CD5  0260               	subwf	_codigoEntrada^(0+128),w
  2496  0CD6  1803               	skipnc
  2497  0CD7  2CD9               	goto	u3811
  2498  0CD8  2CDA               	goto	u3810
  2499  0CD9                     u3811:	
  2500  0CD9  2D09               	goto	l70
  2501  0CDA                     u3810:	
  2502  0CDA                     l3361:	
  2503  0CDA  3030               	movlw	48
  2504  0CDB  0260               	subwf	_codigoEntrada^(0+128),w
  2505  0CDC  1C03               	skipc
  2506  0CDD  2CDF               	goto	u3821
  2507  0CDE  2CE0               	goto	u3820
  2508  0CDF                     u3821:	
  2509  0CDF  2D09               	goto	l70
  2510  0CE0                     u3820:	
  2511  0CE0                     l3363:	
  2512                           
  2513                           ;acciones.c: 40:         if (modoDebug){
  2514  0CE0  0872               	movf	_modoDebug,w
  2515  0CE1  1903               	btfsc	3,2
  2516  0CE2  2CE4               	goto	u3831
  2517  0CE3  2CE5               	goto	u3830
  2518  0CE4                     u3831:	
  2519  0CE4  2D03               	goto	l71
  2520  0CE5                     u3830:	
  2521  0CE5                     l3365:	
  2522                           
  2523                           ;acciones.c: 41:             char mensaje[12];;acciones.c: 42:             sprintf(mensa
      +                          je,"E:%s", codigoEntrada);
  2524  0CE5  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2525  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0CE8  00B4               	movwf	sprintf@sp
  2528  0CE9  3001               	movlw	1
  2529  0CEA  00B5               	movwf	sprintf@sp+1
  2530  0CEB  304E               	movlw	low (STR_3| (0+32768))
  2531  0CEC  00B6               	movwf	sprintf@f
  2532  0CED  3084               	movlw	high (STR_3| (0+32768))
  2533  0CEE  00B7               	movwf	sprintf@f+1
  2534  0CEF  30E0               	movlw	(low (_codigoEntrada| 0))& (0+255)
  2535  0CF0  00B8               	movwf	low ((?_sprintf| 0+4))
  2536  0CF1  3000               	movlw	0
  2537  0CF2  00B9               	movwf	(low ((?_sprintf| 0+4))+1)
  2538  0CF3  120A  118A  2453  120A  158A  	fcall	_sprintf
  2539                           
  2540                           ;acciones.c: 43:             envioTX(mensaje);
  2541  0CF8  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2542  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0CFB  00A0               	movwf	envioTX@mensaje
  2545  0CFC  3001               	movlw	1
  2546  0CFD  00A1               	movwf	envioTX@mensaje+1
  2547  0CFE  120A  158A  216A  120A  158A  	fcall	_envioTX
  2548  0D03                     l71:	
  2549                           ;acciones.c: 44:         }
  2550                           
  2551                           
  2552                           ;acciones.c: 45:         lecturaEtiqueta();
  2553  0D03  120A  118A  25A6  120A  158A  	fcall	_lecturaEtiqueta
  2554                           
  2555                           ;acciones.c: 46:     }
  2556  0D08  2D1D               	goto	l73
  2557  0D09                     l70:	
  2558                           ;acciones.c: 47:     else{
  2559                           
  2560                           
  2561                           ;acciones.c: 49:         RA5 = 1;
  2562  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0D0B  1685               	bsf	5,5	;volatile
  2565  0D0C                     l3367:	
  2566                           
  2567                           ;acciones.c: 50:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2568  0D0C  3006               	movlw	6
  2569  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0D0F  00C8               	movwf	(??_accionesPuertoSerial^(0+128)+2)
  2572  0D10  3013               	movlw	19
  2573  0D11  00C7               	movwf	(??_accionesPuertoSerial^(0+128)+1)
  2574  0D12  30AD               	movlw	173
  2575  0D13  00C6               	movwf	??_accionesPuertoSerial^(0+128)
  2576  0D14                     u4007:	
  2577  0D14  0BC6               	decfsz	??_accionesPuertoSerial^(0+128),f
  2578  0D15  2D14               	goto	u4007
  2579  0D16  0BC7               	decfsz	(??_accionesPuertoSerial^(0+128)+1),f
  2580  0D17  2D14               	goto	u4007
  2581  0D18  0BC8               	decfsz	(??_accionesPuertoSerial^(0+128)+2),f
  2582  0D19  2D14               	goto	u4007
  2583  0D1A                     l3369:	
  2584                           
  2585                           ;acciones.c: 51:         RA5 = 0;
  2586  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0D1C  1285               	bcf	5,5	;volatile
  2589  0D1D                     l73:	
  2590  0D1D  0008               	return
  2591  0D1E                     __end_of_accionesPuertoSerial:	
  2592                           
  2593                           	psect	text3
  2594  05A6                     __ptext3:	
  2595 ;; *************** function _lecturaEtiqueta *****************
  2596 ;; Defined at:
  2597 ;;		line 22 in file "lectura.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  tp              1   35[BANK0 ] unsigned char 
  2602 ;;  i               2   38[BANK0 ] int 
  2603 ;;  Aux             2   36[BANK0 ] short 
  2604 ;;  letra           1   34[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         0       6       0       0       0
  2616 ;;      Temps:          0       3       0       0       0
  2617 ;;      Totals:         0       9       0       0       0
  2618 ;;Total ram usage:        9 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    5
  2621 ;; This function calls:
  2622 ;;		_EEPROM_search
  2623 ;;		___awmod
  2624 ;;		___bmul
  2625 ;;		_envioTX
  2626 ;;		_ingresoProd
  2627 ;;		_mostrarDigitos
  2628 ;; This function is called by:
  2629 ;;		_accionesPuertoSerial
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _lecturaEtiqueta
  2635  05A6                     _lecturaEtiqueta:	
  2636  05A6                     l3255:	
  2637                           ;incstack = 0
  2638                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2639                           
  2640                           
  2641                           ;lectura.c: 23:     short int Aux = 0;
  2642  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2643  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2644  05A8  01C4               	clrf	lecturaEtiqueta@Aux
  2645  05A9  01C5               	clrf	lecturaEtiqueta@Aux+1
  2646                           
  2647                           ;lectura.c: 24:     unsigned char letra = 0;
  2648  05AA  01C2               	clrf	lecturaEtiqueta@letra
  2649                           
  2650                           ;lectura.c: 27:     for (int i = 0; i < 8; i++ ) {
  2651  05AB  01C6               	clrf	lecturaEtiqueta@i
  2652  05AC  01C7               	clrf	lecturaEtiqueta@i+1
  2653  05AD                     l3261:	
  2654                           
  2655                           ;lectura.c: 28:         if(codigoEntrada[i] >= '0' && codigoEntrada[i] <= '9'){
  2656  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  2657  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  2658  05AF  0846               	movf	lecturaEtiqueta@i,w
  2659  05B0  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2660  05B1  0084               	movwf	4
  2661  05B2  3030               	movlw	48
  2662  05B3  1383               	bcf	3,7	;select IRP bank1
  2663  05B4  0200               	subwf	0,w
  2664  05B5  1C03               	skipc
  2665  05B6  2DB8               	goto	u3661
  2666  05B7  2DB9               	goto	u3660
  2667  05B8                     u3661:	
  2668  05B8  2DD3               	goto	l129
  2669  05B9                     u3660:	
  2670  05B9                     l3263:	
  2671  05B9  0846               	movf	lecturaEtiqueta@i,w
  2672  05BA  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2673  05BB  0084               	movwf	4
  2674  05BC  303A               	movlw	58
  2675  05BD  0200               	subwf	0,w
  2676  05BE  1803               	skipnc
  2677  05BF  2DC1               	goto	u3671
  2678  05C0  2DC2               	goto	u3670
  2679  05C1                     u3671:	
  2680  05C1  2DD3               	goto	l129
  2681  05C2                     u3670:	
  2682  05C2                     l3265:	
  2683                           
  2684                           ;lectura.c: 29:             Aux += (codigoEntrada[i] - '0');
  2685  05C2  0846               	movf	lecturaEtiqueta@i,w
  2686  05C3  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2687  05C4  0084               	movwf	4
  2688  05C5  0800               	movf	0,w
  2689  05C6  3ED0               	addlw	208
  2690  05C7  00BF               	movwf	??_lecturaEtiqueta
  2691  05C8  30FF               	movlw	255
  2692  05C9  1803               	skipnc
  2693  05CA  3000               	movlw	0
  2694  05CB  00C0               	movwf	??_lecturaEtiqueta+1
  2695  05CC  083F               	movf	??_lecturaEtiqueta,w
  2696  05CD  07C4               	addwf	lecturaEtiqueta@Aux,f
  2697  05CE  1803               	skipnc
  2698  05CF  0AC5               	incf	lecturaEtiqueta@Aux+1,f
  2699  05D0  0840               	movf	??_lecturaEtiqueta+1,w
  2700  05D1  07C5               	addwf	lecturaEtiqueta@Aux+1,f
  2701                           
  2702                           ;lectura.c: 30:         }
  2703  05D2  2DD5               	goto	l3267
  2704  05D3                     l129:	
  2705                           ;lectura.c: 31:         else{
  2706                           
  2707                           
  2708                           ;lectura.c: 32:             letra = 1;
  2709  05D3  01C2               	clrf	lecturaEtiqueta@letra
  2710  05D4  0AC2               	incf	lecturaEtiqueta@letra,f
  2711  05D5                     l3267:	
  2712                           
  2713                           ;lectura.c: 34:     }
  2714  05D5  3001               	movlw	1
  2715  05D6  07C6               	addwf	lecturaEtiqueta@i,f
  2716  05D7  1803               	skipnc
  2717  05D8  0AC7               	incf	lecturaEtiqueta@i+1,f
  2718  05D9  3000               	movlw	0
  2719  05DA  07C7               	addwf	lecturaEtiqueta@i+1,f
  2720  05DB                     l3269:	
  2721  05DB  0847               	movf	lecturaEtiqueta@i+1,w
  2722  05DC  3A80               	xorlw	128
  2723  05DD  00FF               	movwf	btemp+1
  2724  05DE  3080               	movlw	128
  2725  05DF  027F               	subwf	btemp+1,w
  2726  05E0  1D03               	skipz
  2727  05E1  2DE4               	goto	u3685
  2728  05E2  3008               	movlw	8
  2729  05E3  0246               	subwf	lecturaEtiqueta@i,w
  2730  05E4                     u3685:	
  2731  05E4  1C03               	skipc
  2732  05E5  2DE7               	goto	u3681
  2733  05E6  2DE8               	goto	u3680
  2734  05E7                     u3681:	
  2735  05E7  2DAD               	goto	l3261
  2736  05E8                     u3680:	
  2737  05E8                     l3271:	
  2738                           
  2739                           ;lectura.c: 36:     if ( ((Aux%10) == (codigoEntrada[8] - '0')) && letra == 0) {
  2740  05E8  300A               	movlw	10
  2741  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  2742  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  2743  05EB  00A0               	movwf	___awmod@divisor
  2744  05EC  3000               	movlw	0
  2745  05ED  00A1               	movwf	___awmod@divisor+1
  2746  05EE  0845               	movf	lecturaEtiqueta@Aux+1,w
  2747  05EF  00A3               	movwf	___awmod@dividend+1
  2748  05F0  0844               	movf	lecturaEtiqueta@Aux,w
  2749  05F1  00A2               	movwf	___awmod@dividend
  2750  05F2  120A  158A  233B  120A  118A  	fcall	___awmod
  2751  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  2752  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  2753  05F9  0868               	movf	(_codigoEntrada^(0+128)+8),w
  2754  05FA  3ED0               	addlw	208
  2755  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  2756  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  2757  05FD  00BF               	movwf	??_lecturaEtiqueta
  2758  05FE  30FF               	movlw	255
  2759  05FF  1803               	skipnc
  2760  0600  3000               	movlw	0
  2761  0601  00C0               	movwf	??_lecturaEtiqueta+1
  2762  0602  0821               	movf	?___awmod+1,w
  2763  0603  0640               	xorwf	??_lecturaEtiqueta+1,w
  2764  0604  1D03               	skipz
  2765  0605  2E08               	goto	u3695
  2766  0606  0820               	movf	?___awmod,w
  2767  0607  063F               	xorwf	??_lecturaEtiqueta,w
  2768  0608                     u3695:	
  2769  0608  1D03               	skipz
  2770  0609  2E0B               	goto	u3691
  2771  060A  2E0C               	goto	u3690
  2772  060B                     u3691:	
  2773  060B  2EA4               	goto	l132
  2774  060C                     u3690:	
  2775  060C                     l3273:	
  2776  060C  0842               	movf	lecturaEtiqueta@letra,w
  2777  060D  1D03               	btfss	3,2
  2778  060E  2E10               	goto	u3701
  2779  060F  2E11               	goto	u3700
  2780  0610                     u3701:	
  2781  0610  2EA4               	goto	l132
  2782  0611                     u3700:	
  2783  0611                     l3275:	
  2784                           
  2785                           ;lectura.c: 38:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1]
      +                           - '0');
  2786  0611  300A               	movlw	10
  2787  0612  00BF               	movwf	??_lecturaEtiqueta
  2788  0613  083F               	movf	??_lecturaEtiqueta,w
  2789  0614  00A0               	movwf	___bmul@multiplicand
  2790  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0617  0860               	movf	_codigoEntrada^(0+128),w
  2793  0618  120A  158A  2047  120A  118A  	fcall	___bmul
  2794  061D  1683               	bsf	3,5	;RP0=1, select bank1
  2795  061E  1303               	bcf	3,6	;RP1=0, select bank1
  2796  061F  0761               	addwf	(_codigoEntrada^(0+128)+1),w
  2797  0620  3EF0               	addlw	240
  2798  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0623  00C0               	movwf	??_lecturaEtiqueta+1
  2801  0624  0840               	movf	??_lecturaEtiqueta+1,w
  2802  0625  00C3               	movwf	lecturaEtiqueta@tp
  2803  0626                     l3277:	
  2804                           
  2805                           ;lectura.c: 39:         Aux = EEPROM_search(tp);
  2806  0626  0843               	movf	lecturaEtiqueta@tp,w
  2807  0627  120A  158A  2587  120A  118A  	fcall	_EEPROM_search
  2808  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2809  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2810  062E  0837               	movf	?_EEPROM_search+1,w
  2811  062F  00C5               	movwf	lecturaEtiqueta@Aux+1
  2812  0630  0836               	movf	?_EEPROM_search,w
  2813  0631  00C4               	movwf	lecturaEtiqueta@Aux
  2814  0632                     l3279:	
  2815                           
  2816                           ;lectura.c: 41:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  2817  0632  0870               	movf	_cuenta,w
  2818  0633  0744               	addwf	lecturaEtiqueta@Aux,w
  2819  0634  00BF               	movwf	??_lecturaEtiqueta
  2820  0635  0871               	movf	_cuenta+1,w
  2821  0636  1803               	skipnc
  2822  0637  0A71               	incf	_cuenta+1,w
  2823  0638  0745               	addwf	lecturaEtiqueta@Aux+1,w
  2824  0639  00C0               	movwf	??_lecturaEtiqueta+1
  2825  063A  3003               	movlw	3
  2826  063B  0240               	subwf	??_lecturaEtiqueta+1,w
  2827  063C  30E8               	movlw	232
  2828  063D  1903               	skipnz
  2829  063E  023F               	subwf	??_lecturaEtiqueta,w
  2830  063F  1803               	skipnc
  2831  0640  2E42               	goto	u3711
  2832  0641  2E43               	goto	u3710
  2833  0642                     u3711:	
  2834  0642  2EA4               	goto	l132
  2835  0643                     u3710:	
  2836  0643                     l3281:	
  2837  0643  0A44               	incf	lecturaEtiqueta@Aux,w
  2838  0644  1D03               	skipz
  2839  0645  2E4B               	goto	u3720
  2840  0646  0A45               	incf	lecturaEtiqueta@Aux+1,w
  2841  0647  1903               	btfsc	3,2
  2842  0648  2E4A               	goto	u3721
  2843  0649  2E4B               	goto	u3720
  2844  064A                     u3721:	
  2845  064A  2EA4               	goto	l132
  2846  064B                     u3720:	
  2847  064B                     l3283:	
  2848                           
  2849                           ;lectura.c: 42:             if(modoDebug){
  2850  064B  0872               	movf	_modoDebug,w
  2851  064C  1903               	btfsc	3,2
  2852  064D  2E4F               	goto	u3731
  2853  064E  2E50               	goto	u3730
  2854  064F                     u3731:	
  2855  064F  2E59               	goto	l3287
  2856  0650                     u3730:	
  2857  0650                     l3285:	
  2858                           
  2859                           ;lectura.c: 43:                 envioTX("Producto ingresado\n");
  2860  0650  30D8               	movlw	low (STR_4| (0+32768))
  2861  0651  00A0               	movwf	envioTX@mensaje
  2862  0652  3083               	movlw	high (STR_4| (0+32768))
  2863  0653  00A1               	movwf	envioTX@mensaje+1
  2864  0654  120A  158A  216A  120A  118A  	fcall	_envioTX
  2865  0659                     l3287:	
  2866                           
  2867                           ;lectura.c: 45:             tp--;
  2868  0659  3001               	movlw	1
  2869  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2870  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2871  065C  02C3               	subwf	lecturaEtiqueta@tp,f
  2872  065D                     l3289:	
  2873                           
  2874                           ;lectura.c: 46:             ingresoProd(tp);
  2875  065D  0843               	movf	lecturaEtiqueta@tp,w
  2876  065E  00BF               	movwf	??_lecturaEtiqueta
  2877  065F  01C0               	clrf	??_lecturaEtiqueta+1
  2878  0660  083F               	movf	??_lecturaEtiqueta,w
  2879  0661  00AE               	movwf	ingresoProd@tp
  2880  0662  0840               	movf	??_lecturaEtiqueta+1,w
  2881  0663  00AF               	movwf	ingresoProd@tp+1
  2882  0664  120A  118A  279D  120A  118A  	fcall	_ingresoProd
  2883  0669                     l3291:	
  2884                           
  2885                           ;lectura.c: 47:             productoIngresado = tp;
  2886  0669  1283               	bcf	3,5	;RP0=0, select bank0
  2887  066A  1303               	bcf	3,6	;RP1=0, select bank0
  2888  066B  0843               	movf	lecturaEtiqueta@tp,w
  2889  066C  00BF               	movwf	??_lecturaEtiqueta
  2890  066D  01C0               	clrf	??_lecturaEtiqueta+1
  2891  066E  083F               	movf	??_lecturaEtiqueta,w
  2892  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0670  1303               	bcf	3,6	;RP1=0, select bank1
  2894  0671  00DE               	movwf	_productoIngresado^(0+128)
  2895  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2896  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0674  0840               	movf	??_lecturaEtiqueta+1,w
  2898  0675  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0676  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0677  00DF               	movwf	(_productoIngresado+1)^(0+128)
  2901  0678                     l3293:	
  2902                           
  2903                           ;lectura.c: 48:             auxCuenta = cuenta;
  2904  0678  0871               	movf	_cuenta+1,w
  2905  0679  1683               	bsf	3,5	;RP0=1, select bank3
  2906  067A  1703               	bsf	3,6	;RP1=1, select bank3
  2907  067B  00D5               	movwf	(_auxCuenta+1)^(0+384)
  2908  067C  0870               	movf	_cuenta,w
  2909  067D  00D4               	movwf	_auxCuenta^(0+384)
  2910  067E                     l3295:	
  2911                           
  2912                           ;lectura.c: 49:             cuenta += Aux;
  2913  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2914  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0680  0844               	movf	lecturaEtiqueta@Aux,w
  2916  0681  07F0               	addwf	_cuenta,f
  2917  0682  1803               	skipnc
  2918  0683  0AF1               	incf	_cuenta+1,f
  2919  0684  0845               	movf	lecturaEtiqueta@Aux+1,w
  2920  0685  07F1               	addwf	_cuenta+1,f
  2921  0686                     l3297:	
  2922                           
  2923                           ;lectura.c: 50:             mostrarDigitos(cuenta);
  2924  0686  0871               	movf	_cuenta+1,w
  2925  0687  00B5               	movwf	mostrarDigitos@num+1
  2926  0688  0870               	movf	_cuenta,w
  2927  0689  00B4               	movwf	mostrarDigitos@num
  2928  068A  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  2929  068F                     l3299:	
  2930                           
  2931                           ;lectura.c: 51:             RA3 = 1;
  2932  068F  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0690  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0691  1585               	bsf	5,3	;volatile
  2935  0692                     l3301:	
  2936                           
  2937                           ;lectura.c: 52:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2938  0692  3006               	movlw	6
  2939  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0695  00C1               	movwf	??_lecturaEtiqueta+2
  2942  0696  3013               	movlw	19
  2943  0697  00C0               	movwf	??_lecturaEtiqueta+1
  2944  0698  30AD               	movlw	173
  2945  0699  00BF               	movwf	??_lecturaEtiqueta
  2946  069A                     u4017:	
  2947  069A  0BBF               	decfsz	??_lecturaEtiqueta,f
  2948  069B  2E9A               	goto	u4017
  2949  069C  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2950  069D  2E9A               	goto	u4017
  2951  069E  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2952  069F  2E9A               	goto	u4017
  2953  06A0                     l3303:	
  2954                           
  2955                           ;lectura.c: 53:             RA3 = 0;
  2956  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2957  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2958  06A2  1185               	bcf	5,3	;volatile
  2959                           
  2960                           ;lectura.c: 55:         }
  2961  06A3  2EB6               	goto	l136
  2962  06A4                     l132:	
  2963                           ;lectura.c: 56:         else {
  2964                           
  2965                           
  2966                           ;lectura.c: 58:             RA5 = 1;
  2967  06A4  1685               	bsf	5,5	;volatile
  2968  06A5                     l3305:	
  2969                           
  2970                           ;lectura.c: 59:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2971  06A5  3006               	movlw	6
  2972  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2973  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2974  06A8  00C1               	movwf	??_lecturaEtiqueta+2
  2975  06A9  3013               	movlw	19
  2976  06AA  00C0               	movwf	??_lecturaEtiqueta+1
  2977  06AB  30AD               	movlw	173
  2978  06AC  00BF               	movwf	??_lecturaEtiqueta
  2979  06AD                     u4027:	
  2980  06AD  0BBF               	decfsz	??_lecturaEtiqueta,f
  2981  06AE  2EAD               	goto	u4027
  2982  06AF  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2983  06B0  2EAD               	goto	u4027
  2984  06B1  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2985  06B2  2EAD               	goto	u4027
  2986  06B3                     l3307:	
  2987                           
  2988                           ;lectura.c: 60:             RA5 = 0;
  2989  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2990  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2991  06B5  1285               	bcf	5,5	;volatile
  2992  06B6                     l136:	
  2993  06B6  0008               	return
  2994  06B7                     __end_of_lecturaEtiqueta:	
  2995                           
  2996                           	psect	text4
  2997  079D                     __ptext4:	
  2998 ;; *************** function _ingresoProd *****************
  2999 ;; Defined at:
  3000 ;;		line 17 in file "manejoProductos.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  tp              2   14[BANK0 ] short 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  i               2   19[BANK0 ] short 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       2       0       0       0
  3015 ;;      Locals:         0       2       0       0       0
  3016 ;;      Temps:          0       3       0       0       0
  3017 ;;      Totals:         0       7       0       0       0
  3018 ;;Total ram usage:        7 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    3
  3021 ;; This function calls:
  3022 ;;		_pow
  3023 ;; This function is called by:
  3024 ;;		_lecturaEtiqueta
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _ingresoProd
  3030  079D                     _ingresoProd:	
  3031  079D                     l3143:	
  3032                           ;incstack = 0
  3033                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3034                           
  3035                           
  3036                           ;manejoProductos.c: 19:     for(short int i = 12; i>=0; i--) {
  3037  079D  300C               	movlw	12
  3038  079E  1283               	bcf	3,5	;RP0=0, select bank0
  3039  079F  1303               	bcf	3,6	;RP1=0, select bank0
  3040  07A0  00B3               	movwf	ingresoProd@i
  3041  07A1  3000               	movlw	0
  3042  07A2  00B4               	movwf	ingresoProd@i+1
  3043  07A3                     l3149:	
  3044                           
  3045                           ;manejoProductos.c: 20:         if( tp >= 8*i) {
  3046  07A3  0834               	movf	ingresoProd@i+1,w
  3047  07A4  00B1               	movwf	??_ingresoProd+1
  3048  07A5  0833               	movf	ingresoProd@i,w
  3049  07A6  00B0               	movwf	??_ingresoProd
  3050  07A7  1003               	clrc
  3051  07A8  0DB0               	rlf	??_ingresoProd,f
  3052  07A9  0DB1               	rlf	??_ingresoProd+1,f
  3053  07AA  1003               	clrc
  3054  07AB  0DB0               	rlf	??_ingresoProd,f
  3055  07AC  0DB1               	rlf	??_ingresoProd+1,f
  3056  07AD  1003               	clrc
  3057  07AE  0DB0               	rlf	??_ingresoProd,f
  3058  07AF  0DB1               	rlf	??_ingresoProd+1,f
  3059  07B0  082F               	movf	ingresoProd@tp+1,w
  3060  07B1  3A80               	xorlw	128
  3061  07B2  00B2               	movwf	??_ingresoProd+2
  3062  07B3  0831               	movf	??_ingresoProd+1,w
  3063  07B4  3A80               	xorlw	128
  3064  07B5  0232               	subwf	??_ingresoProd+2,w
  3065  07B6  1D03               	skipz
  3066  07B7  2FBA               	goto	u3465
  3067  07B8  0830               	movf	??_ingresoProd,w
  3068  07B9  022E               	subwf	ingresoProd@tp,w
  3069  07BA                     u3465:	
  3070  07BA  1C03               	skipc
  3071  07BB  2FBD               	goto	u3461
  3072  07BC  2FBE               	goto	u3460
  3073  07BD                     u3461:	
  3074  07BD  2FF2               	goto	l3157
  3075  07BE                     u3460:	
  3076  07BE                     l3151:	
  3077                           
  3078                           ;manejoProductos.c: 22:             tp = tp - 8*i;
  3079  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3080  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3081  07C0  0834               	movf	ingresoProd@i+1,w
  3082  07C1  00B1               	movwf	??_ingresoProd+1
  3083  07C2  0833               	movf	ingresoProd@i,w
  3084  07C3  00B0               	movwf	??_ingresoProd
  3085  07C4  1003               	clrc
  3086  07C5  0DB0               	rlf	??_ingresoProd,f
  3087  07C6  0DB1               	rlf	??_ingresoProd+1,f
  3088  07C7  1003               	clrc
  3089  07C8  0DB0               	rlf	??_ingresoProd,f
  3090  07C9  0DB1               	rlf	??_ingresoProd+1,f
  3091  07CA  1003               	clrc
  3092  07CB  0DB0               	rlf	??_ingresoProd,f
  3093  07CC  0DB1               	rlf	??_ingresoProd+1,f
  3094  07CD  0830               	movf	??_ingresoProd,w
  3095  07CE  022E               	subwf	ingresoProd@tp,w
  3096  07CF  00AE               	movwf	ingresoProd@tp
  3097  07D0  0831               	movf	??_ingresoProd+1,w
  3098  07D1  1C03               	skipc
  3099  07D2  0A31               	incf	??_ingresoProd+1,w
  3100  07D3  022F               	subwf	ingresoProd@tp+1,w
  3101  07D4  00AF               	movwf	ingresoProd@tp+1
  3102  07D5                     l3153:	
  3103                           
  3104                           ;manejoProductos.c: 23:             prodIngresados[i] = prodIngresados[i] | pow(2,tp);
  3105  07D5  0833               	movf	ingresoProd@i,w
  3106  07D6  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3107  07D7  0084               	movwf	4
  3108  07D8  3002               	movlw	2
  3109  07D9  00A6               	movwf	pow@numero
  3110  07DA  3000               	movlw	0
  3111  07DB  00A7               	movwf	pow@numero+1
  3112  07DC  082F               	movf	ingresoProd@tp+1,w
  3113  07DD  00A9               	movwf	pow@potencia+1
  3114  07DE  082E               	movf	ingresoProd@tp,w
  3115  07DF  00A8               	movwf	pow@potencia
  3116  07E0  120A  158A  2130  120A  118A  	fcall	_pow
  3117  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  3118  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  3119  07E7  0826               	movf	?_pow,w
  3120  07E8  1383               	bcf	3,7	;select IRP bank1
  3121  07E9  0400               	iorwf	0,w
  3122  07EA  00B0               	movwf	??_ingresoProd
  3123  07EB  0833               	movf	ingresoProd@i,w
  3124  07EC  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3125  07ED  0084               	movwf	4
  3126  07EE  0830               	movf	??_ingresoProd,w
  3127  07EF  0080               	movwf	0
  3128  07F0                     l3155:	
  3129                           
  3130                           ;manejoProductos.c: 24:             i = 0;
  3131  07F0  01B3               	clrf	ingresoProd@i
  3132  07F1  01B4               	clrf	ingresoProd@i+1
  3133  07F2                     l3157:	
  3134                           
  3135                           ;manejoProductos.c: 27:     }
  3136  07F2  30FF               	movlw	255
  3137  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  3138  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  3139  07F5  07B3               	addwf	ingresoProd@i,f
  3140  07F6  1803               	skipnc
  3141  07F7  0AB4               	incf	ingresoProd@i+1,f
  3142  07F8  30FF               	movlw	255
  3143  07F9  07B4               	addwf	ingresoProd@i+1,f
  3144  07FA                     l3159:	
  3145  07FA  1FB4               	btfss	ingresoProd@i+1,7
  3146  07FB  2FFD               	goto	u3471
  3147  07FC  2FFE               	goto	u3470
  3148  07FD                     u3471:	
  3149  07FD  2FA3               	goto	l3149
  3150  07FE                     u3470:	
  3151  07FE                     l371:	
  3152  07FE  0008               	return
  3153  07FF                     __end_of_ingresoProd:	
  3154                           
  3155                           	psect	text5
  3156  0D87                     __ptext5:	
  3157 ;; *************** function _EEPROM_search *****************
  3158 ;; Defined at:
  3159 ;;		line 3 in file "lectura.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  tp              1    wreg     unsigned char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  tp              1   30[BANK0 ] unsigned char 
  3164 ;;  precio          2   28[BANK0 ] short 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2   22[BANK0 ] short 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       2       0       0       0
  3175 ;;      Locals:         0       3       0       0       0
  3176 ;;      Temps:          0       4       0       0       0
  3177 ;;      Totals:         0       9       0       0       0
  3178 ;;Total ram usage:        9 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    4
  3181 ;; This function calls:
  3182 ;;		___awdiv
  3183 ;;		_eeprom_read
  3184 ;;		_verificarProd
  3185 ;; This function is called by:
  3186 ;;		_lecturaEtiqueta
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _EEPROM_search
  3192  0D87                     _EEPROM_search:	
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3196                           ;EEPROM_search@tp stored from wreg
  3197  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0D89  00BE               	movwf	EEPROM_search@tp
  3200  0D8A                     l3125:	
  3201                           
  3202                           ;lectura.c: 5:     short int precio;;lectura.c: 6:     if(tp != 0){
  3203  0D8A  083E               	movf	EEPROM_search@tp,w
  3204  0D8B  1903               	btfsc	3,2
  3205  0D8C  2D8E               	goto	u3421
  3206  0D8D  2D8F               	goto	u3420
  3207  0D8E                     u3421:	
  3208  0D8E  2DE8               	goto	l3137
  3209  0D8F                     u3420:	
  3210  0D8F                     l3127:	
  3211                           
  3212                           ;lectura.c: 7:         tp--;
  3213  0D8F  3001               	movlw	1
  3214  0D90  02BE               	subwf	EEPROM_search@tp,f
  3215                           
  3216                           ;lectura.c: 8:         tp = tp*2;
  3217  0D91  083E               	movf	EEPROM_search@tp,w
  3218  0D92  00B8               	movwf	??_EEPROM_search
  3219  0D93  0738               	addwf	??_EEPROM_search,w
  3220  0D94  00B9               	movwf	??_EEPROM_search+1
  3221  0D95  0839               	movf	??_EEPROM_search+1,w
  3222  0D96  00BE               	movwf	EEPROM_search@tp
  3223  0D97                     l3129:	
  3224                           
  3225                           ;lectura.c: 9:         precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  3226  0D97  083E               	movf	EEPROM_search@tp,w
  3227  0D98  3E01               	addlw	1
  3228  0D99  120A  158A  205E  120A  158A  	fcall	_eeprom_read
  3229  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0DA0  00B8               	movwf	??_EEPROM_search
  3232  0DA1  01B9               	clrf	??_EEPROM_search+1
  3233  0DA2  083E               	movf	EEPROM_search@tp,w
  3234  0DA3  120A  158A  205E  120A  158A  	fcall	_eeprom_read
  3235  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0DAA  00BA               	movwf	??_EEPROM_search+2
  3238  0DAB  01BB               	clrf	??_EEPROM_search+3
  3239  0DAC  083A               	movf	??_EEPROM_search+2,w
  3240  0DAD  00BB               	movwf	??_EEPROM_search+3
  3241  0DAE  01BA               	clrf	??_EEPROM_search+2
  3242  0DAF  0838               	movf	??_EEPROM_search,w
  3243  0DB0  043A               	iorwf	??_EEPROM_search+2,w
  3244  0DB1  00BC               	movwf	EEPROM_search@precio
  3245  0DB2  0839               	movf	??_EEPROM_search+1,w
  3246  0DB3  043B               	iorwf	??_EEPROM_search+3,w
  3247  0DB4  00BD               	movwf	EEPROM_search@precio+1
  3248  0DB5                     l3131:	
  3249                           
  3250                           ;lectura.c: 11:         if( (precio < 0 || precio > 999) || verificarProd(tp/2)) {
  3251  0DB5  1BBD               	btfsc	EEPROM_search@precio+1,7
  3252  0DB6  2DB8               	goto	u3431
  3253  0DB7  2DB9               	goto	u3430
  3254  0DB8                     u3431:	
  3255  0DB8  2DE8               	goto	l3137
  3256  0DB9                     u3430:	
  3257  0DB9                     l3133:	
  3258  0DB9  083D               	movf	EEPROM_search@precio+1,w
  3259  0DBA  3A80               	xorlw	128
  3260  0DBB  00FF               	movwf	btemp+1
  3261  0DBC  3083               	movlw	131
  3262  0DBD  027F               	subwf	btemp+1,w
  3263  0DBE  1D03               	skipz
  3264  0DBF  2DC2               	goto	u3445
  3265  0DC0  30E8               	movlw	232
  3266  0DC1  023C               	subwf	EEPROM_search@precio,w
  3267  0DC2                     u3445:	
  3268  0DC2  1803               	skipnc
  3269  0DC3  2DC5               	goto	u3441
  3270  0DC4  2DC6               	goto	u3440
  3271  0DC5                     u3441:	
  3272  0DC5  2DE8               	goto	l3137
  3273  0DC6                     u3440:	
  3274  0DC6                     l3135:	
  3275  0DC6  3002               	movlw	2
  3276  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0DC9  00A0               	movwf	___awdiv@divisor
  3279  0DCA  3000               	movlw	0
  3280  0DCB  00A1               	movwf	___awdiv@divisor+1
  3281  0DCC  083E               	movf	EEPROM_search@tp,w
  3282  0DCD  00B8               	movwf	??_EEPROM_search
  3283  0DCE  01B9               	clrf	??_EEPROM_search+1
  3284  0DCF  0838               	movf	??_EEPROM_search,w
  3285  0DD0  00A2               	movwf	___awdiv@dividend
  3286  0DD1  0839               	movf	??_EEPROM_search+1,w
  3287  0DD2  00A3               	movwf	___awdiv@dividend+1
  3288  0DD3  120A  158A  251E  120A  158A  	fcall	___awdiv
  3289  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0DDA  0821               	movf	?___awdiv+1,w
  3292  0DDB  00AF               	movwf	verificarProd@tp+1
  3293  0DDC  0820               	movf	?___awdiv,w
  3294  0DDD  00AE               	movwf	verificarProd@tp
  3295  0DDE  120A  158A  2456  120A  158A  	fcall	_verificarProd
  3296  0DE3  3A00               	xorlw	0
  3297  0DE4  1903               	skipnz
  3298  0DE5  2DE7               	goto	u3451
  3299  0DE6  2DE8               	goto	u3450
  3300  0DE7                     u3451:	
  3301  0DE7  2DEE               	goto	l123
  3302  0DE8                     u3450:	
  3303  0DE8                     l3137:	
  3304                           
  3305                           ;lectura.c: 12:             precio = -1;
  3306  0DE8  30FF               	movlw	255
  3307  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0DEB  00BC               	movwf	EEPROM_search@precio
  3310  0DEC  30FF               	movlw	255
  3311  0DED  00BD               	movwf	EEPROM_search@precio+1
  3312  0DEE                     l123:	
  3313                           ;lectura.c: 17:     }
  3314                           
  3315                           
  3316                           ;lectura.c: 19:     return precio;
  3317  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0DF0  083D               	movf	EEPROM_search@precio+1,w
  3320  0DF1  00B7               	movwf	?_EEPROM_search+1
  3321  0DF2  083C               	movf	EEPROM_search@precio,w
  3322  0DF3  00B6               	movwf	?_EEPROM_search
  3323  0DF4                     l124:	
  3324  0DF4  0008               	return
  3325  0DF5                     __end_of_EEPROM_search:	
  3326                           
  3327                           	psect	text6
  3328  0C56                     __ptext6:	
  3329 ;; *************** function _verificarProd *****************
  3330 ;; Defined at:
  3331 ;;		line 30 in file "manejoProductos.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  tp              2   14[BANK0 ] short 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  i               2   20[BANK0 ] short 
  3336 ;;  ret             1   19[BANK0 ] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      unsigned char 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       2       0       0       0
  3347 ;;      Locals:         0       3       0       0       0
  3348 ;;      Temps:          0       3       0       0       0
  3349 ;;      Totals:         0       8       0       0       0
  3350 ;;Total ram usage:        8 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    3
  3353 ;; This function calls:
  3354 ;;		_pow
  3355 ;; This function is called by:
  3356 ;;		_EEPROM_search
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _verificarProd
  3362  0C56                     _verificarProd:	
  3363  0C56                     l3023:	
  3364                           ;incstack = 0
  3365                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3366                           
  3367                           
  3368                           ;manejoProductos.c: 31:     char ret = 0;
  3369  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0C58  01B3               	clrf	verificarProd@ret
  3372  0C59                     l3025:	
  3373                           
  3374                           ;manejoProductos.c: 32:     for(short int i = 12; i>=0; i--) {
  3375  0C59  300C               	movlw	12
  3376  0C5A  00B4               	movwf	verificarProd@i
  3377  0C5B  3000               	movlw	0
  3378  0C5C  00B5               	movwf	verificarProd@i+1
  3379  0C5D                     l3031:	
  3380                           
  3381                           ;manejoProductos.c: 33:         if( tp >= 8*i) {
  3382  0C5D  0835               	movf	verificarProd@i+1,w
  3383  0C5E  00B1               	movwf	??_verificarProd+1
  3384  0C5F  0834               	movf	verificarProd@i,w
  3385  0C60  00B0               	movwf	??_verificarProd
  3386  0C61  1003               	clrc
  3387  0C62  0DB0               	rlf	??_verificarProd,f
  3388  0C63  0DB1               	rlf	??_verificarProd+1,f
  3389  0C64  1003               	clrc
  3390  0C65  0DB0               	rlf	??_verificarProd,f
  3391  0C66  0DB1               	rlf	??_verificarProd+1,f
  3392  0C67  1003               	clrc
  3393  0C68  0DB0               	rlf	??_verificarProd,f
  3394  0C69  0DB1               	rlf	??_verificarProd+1,f
  3395  0C6A  082F               	movf	verificarProd@tp+1,w
  3396  0C6B  3A80               	xorlw	128
  3397  0C6C  00B2               	movwf	??_verificarProd+2
  3398  0C6D  0831               	movf	??_verificarProd+1,w
  3399  0C6E  3A80               	xorlw	128
  3400  0C6F  0232               	subwf	??_verificarProd+2,w
  3401  0C70  1D03               	skipz
  3402  0C71  2C74               	goto	u3295
  3403  0C72  0830               	movf	??_verificarProd,w
  3404  0C73  022E               	subwf	verificarProd@tp,w
  3405  0C74                     u3295:	
  3406  0C74  1C03               	skipc
  3407  0C75  2C77               	goto	u3291
  3408  0C76  2C78               	goto	u3290
  3409  0C77                     u3291:	
  3410  0C77  2CAC               	goto	l3041
  3411  0C78                     u3290:	
  3412  0C78                     l3033:	
  3413                           
  3414                           ;manejoProductos.c: 35:             tp = tp - 8*i;
  3415  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0C7A  0835               	movf	verificarProd@i+1,w
  3418  0C7B  00B1               	movwf	??_verificarProd+1
  3419  0C7C  0834               	movf	verificarProd@i,w
  3420  0C7D  00B0               	movwf	??_verificarProd
  3421  0C7E  1003               	clrc
  3422  0C7F  0DB0               	rlf	??_verificarProd,f
  3423  0C80  0DB1               	rlf	??_verificarProd+1,f
  3424  0C81  1003               	clrc
  3425  0C82  0DB0               	rlf	??_verificarProd,f
  3426  0C83  0DB1               	rlf	??_verificarProd+1,f
  3427  0C84  1003               	clrc
  3428  0C85  0DB0               	rlf	??_verificarProd,f
  3429  0C86  0DB1               	rlf	??_verificarProd+1,f
  3430  0C87  0830               	movf	??_verificarProd,w
  3431  0C88  022E               	subwf	verificarProd@tp,w
  3432  0C89  00AE               	movwf	verificarProd@tp
  3433  0C8A  0831               	movf	??_verificarProd+1,w
  3434  0C8B  1C03               	skipc
  3435  0C8C  0A31               	incf	??_verificarProd+1,w
  3436  0C8D  022F               	subwf	verificarProd@tp+1,w
  3437  0C8E  00AF               	movwf	verificarProd@tp+1
  3438  0C8F                     l3035:	
  3439                           
  3440                           ;manejoProductos.c: 36:             if(prodIngresados[i] & pow(2,tp)) {
  3441  0C8F  0834               	movf	verificarProd@i,w
  3442  0C90  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3443  0C91  0084               	movwf	4
  3444  0C92  3002               	movlw	2
  3445  0C93  00A6               	movwf	pow@numero
  3446  0C94  3000               	movlw	0
  3447  0C95  00A7               	movwf	pow@numero+1
  3448  0C96  082F               	movf	verificarProd@tp+1,w
  3449  0C97  00A9               	movwf	pow@potencia+1
  3450  0C98  082E               	movf	verificarProd@tp,w
  3451  0C99  00A8               	movwf	pow@potencia
  3452  0C9A  120A  158A  2130  120A  158A  	fcall	_pow
  3453  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  3455  0CA1  0826               	movf	?_pow,w
  3456  0CA2  1383               	bcf	3,7	;select IRP bank1
  3457  0CA3  0500               	andwf	0,w
  3458  0CA4  1903               	btfsc	3,2
  3459  0CA5  2CA7               	goto	u3301
  3460  0CA6  2CA8               	goto	u3300
  3461  0CA7                     u3301:	
  3462  0CA7  2CAA               	goto	l3039
  3463  0CA8                     u3300:	
  3464  0CA8                     l3037:	
  3465                           
  3466                           ;manejoProductos.c: 37:                 ret = 1;
  3467  0CA8  01B3               	clrf	verificarProd@ret
  3468  0CA9  0AB3               	incf	verificarProd@ret,f
  3469  0CAA                     l3039:	
  3470                           
  3471                           ;manejoProductos.c: 39:             i = 0;
  3472  0CAA  01B4               	clrf	verificarProd@i
  3473  0CAB  01B5               	clrf	verificarProd@i+1
  3474  0CAC                     l3041:	
  3475                           
  3476                           ;manejoProductos.c: 42:     }
  3477  0CAC  30FF               	movlw	255
  3478  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0CAF  07B4               	addwf	verificarProd@i,f
  3481  0CB0  1803               	skipnc
  3482  0CB1  0AB5               	incf	verificarProd@i+1,f
  3483  0CB2  30FF               	movlw	255
  3484  0CB3  07B5               	addwf	verificarProd@i+1,f
  3485  0CB4                     l3043:	
  3486  0CB4  1FB5               	btfss	verificarProd@i+1,7
  3487  0CB5  2CB7               	goto	u3311
  3488  0CB6  2CB8               	goto	u3310
  3489  0CB7                     u3311:	
  3490  0CB7  2C5D               	goto	l3031
  3491  0CB8                     u3310:	
  3492  0CB8                     l3045:	
  3493                           
  3494                           ;manejoProductos.c: 44:     return ret;
  3495  0CB8  0833               	movf	verificarProd@ret,w
  3496  0CB9                     l378:	
  3497  0CB9  0008               	return
  3498  0CBA                     __end_of_verificarProd:	
  3499                           
  3500                           	psect	text7
  3501  087D                     __ptext7:	
  3502 ;; *************** function _lecturaComando *****************
  3503 ;; Defined at:
  3504 ;;		line 184 in file "lectura.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;		None
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0
  3520 ;;      Temps:          0       0       0       0       0
  3521 ;;      Totals:         0       0       0       0       0
  3522 ;;Total ram usage:        0 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    5
  3525 ;; This function calls:
  3526 ;;		_lecturaConsulta
  3527 ;;		_lecturaMas
  3528 ;;		_lecturaMenos
  3529 ;; This function is called by:
  3530 ;;		_accionesPuertoSerial
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _lecturaComando
  3536  087D                     _lecturaComando:	
  3537  087D                     l3245:	
  3538                           ;incstack = 0
  3539                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3540                           
  3541                           
  3542                           ;lectura.c: 185:     if(codigoEntrada[0] == '?') {
  3543  087D  303F               	movlw	63
  3544  087E  1683               	bsf	3,5	;RP0=1, select bank1
  3545  087F  1303               	bcf	3,6	;RP1=0, select bank1
  3546  0880  0660               	xorwf	_codigoEntrada^(0+128),w
  3547  0881  1D03               	btfss	3,2
  3548  0882  2884               	goto	u3641
  3549  0883  2885               	goto	u3640
  3550  0884                     u3641:	
  3551  0884  288B               	goto	l3249
  3552  0885                     u3640:	
  3553  0885                     l3247:	
  3554                           
  3555                           ;lectura.c: 186:         lecturaConsulta();
  3556  0885  120A  118A  26B7  120A  158A  	fcall	_lecturaConsulta
  3557                           
  3558                           ;lectura.c: 187:     }
  3559  088A  289C               	goto	l198
  3560  088B                     l3249:	
  3561  088B  302B               	movlw	43
  3562  088C  0660               	xorwf	_codigoEntrada^(0+128),w
  3563  088D  1D03               	btfss	3,2
  3564  088E  2890               	goto	u3651
  3565  088F  2891               	goto	u3650
  3566  0890                     u3651:	
  3567  0890  2897               	goto	l3253
  3568  0891                     u3650:	
  3569  0891                     l3251:	
  3570                           
  3571                           ;lectura.c: 189:         lecturaMas();
  3572  0891  120A  158A  20C4  120A  158A  	fcall	_lecturaMas
  3573                           
  3574                           ;lectura.c: 190:     }
  3575  0896  289C               	goto	l198
  3576  0897                     l3253:	
  3577                           
  3578                           ;lectura.c: 192:         lecturaMenos();
  3579  0897  120A  158A  2031  120A  158A  	fcall	_lecturaMenos
  3580  089C                     l198:	
  3581  089C  0008               	return
  3582  089D                     __end_of_lecturaComando:	
  3583                           
  3584                           	psect	text8
  3585  0831                     __ptext8:	
  3586 ;; *************** function _lecturaMenos *****************
  3587 ;; Defined at:
  3588 ;;		line 115 in file "lectura.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    3
  3609 ;; This function calls:
  3610 ;;		_envioTX
  3611 ;; This function is called by:
  3612 ;;		_lecturaComando
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           
  3617                           ;psect for function _lecturaMenos
  3618  0831                     _lecturaMenos:	
  3619  0831                     l3175:	
  3620                           ;incstack = 0
  3621                           ; Regs used in _lecturaMenos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3622                           
  3623                           
  3624                           ;lectura.c: 116:     if(codigoEntrada[1] == 'D') {
  3625  0831  3044               	movlw	68
  3626  0832  1683               	bsf	3,5	;RP0=1, select bank1
  3627  0833  1303               	bcf	3,6	;RP1=0, select bank1
  3628  0834  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3629  0835  1D03               	btfss	3,2
  3630  0836  2838               	goto	u3511
  3631  0837  2839               	goto	u3510
  3632  0838                     u3511:	
  3633  0838  283B               	goto	l3179
  3634  0839                     u3510:	
  3635  0839                     l3177:	
  3636                           
  3637                           ;lectura.c: 117:         modoDebug = 0;
  3638  0839  01F2               	clrf	_modoDebug
  3639                           
  3640                           ;lectura.c: 119:     }
  3641  083A  2846               	goto	l167
  3642  083B                     l3179:	
  3643                           
  3644                           ;lectura.c: 121:         envioTX("Ocurrio un error en la interpretacion.\n");
  3645  083B  3026               	movlw	low (STR_6| (0+32768))
  3646  083C  1283               	bcf	3,5	;RP0=0, select bank0
  3647  083D  1303               	bcf	3,6	;RP1=0, select bank0
  3648  083E  00A0               	movwf	envioTX@mensaje
  3649  083F  3083               	movlw	high (STR_6| (0+32768))
  3650  0840  00A1               	movwf	envioTX@mensaje+1
  3651  0841  120A  158A  216A  120A  158A  	fcall	_envioTX
  3652  0846                     l167:	
  3653  0846  0008               	return
  3654  0847                     __end_of_lecturaMenos:	
  3655                           
  3656                           	psect	text9
  3657  08C4                     __ptext9:	
  3658 ;; *************** function _lecturaMas *****************
  3659 ;; Defined at:
  3660 ;;		line 100 in file "lectura.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3674 ;;      Params:         0       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0
  3677 ;;      Totals:         0       0       0       0       0
  3678 ;;Total ram usage:        0 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    4
  3681 ;; This function calls:
  3682 ;;		_agregarModificarPrecio
  3683 ;;		_cierreDeLote
  3684 ;;		_envioTX
  3685 ;;		_verificacionEntrada
  3686 ;; This function is called by:
  3687 ;;		_lecturaComando
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _lecturaMas
  3693  08C4                     _lecturaMas:	
  3694  08C4                     l3161:	
  3695                           ;incstack = 0
  3696                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3697                           
  3698                           
  3699                           ;lectura.c: 101:     if (codigoEntrada[1] == 'L') {
  3700  08C4  304C               	movlw	76
  3701  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  3702  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  3703  08C7  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3704  08C8  1D03               	btfss	3,2
  3705  08C9  28CB               	goto	u3481
  3706  08CA  28CC               	goto	u3480
  3707  08CB                     u3481:	
  3708  08CB  28D2               	goto	l3165
  3709  08CC                     u3480:	
  3710  08CC                     l3163:	
  3711                           
  3712                           ;lectura.c: 102:         cierreDeLote();
  3713  08CC  120A  158A  22A7  120A  158A  	fcall	_cierreDeLote
  3714                           
  3715                           ;lectura.c: 103:     }
  3716  08D1  28F8               	goto	l162
  3717  08D2                     l3165:	
  3718  08D2  120A  118A  22C7  120A  158A  	fcall	_verificacionEntrada
  3719  08D7  3A06               	xorlw	6
  3720  08D8  1D03               	skipz
  3721  08D9  28DB               	goto	u3491
  3722  08DA  28DC               	goto	u3490
  3723  08DB                     u3491:	
  3724  08DB  28E2               	goto	l3169
  3725  08DC                     u3490:	
  3726  08DC                     l3167:	
  3727                           
  3728                           ;lectura.c: 105:         agregarModificarPrecio();
  3729  08DC  120A  158A  272E  120A  158A  	fcall	_agregarModificarPrecio
  3730                           
  3731                           ;lectura.c: 106:     }
  3732  08E1  28F8               	goto	l162
  3733  08E2                     l3169:	
  3734  08E2  3044               	movlw	68
  3735  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  3736  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  3737  08E5  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3738  08E6  1D03               	btfss	3,2
  3739  08E7  28E9               	goto	u3501
  3740  08E8  28EA               	goto	u3500
  3741  08E9                     u3501:	
  3742  08E9  28ED               	goto	l3173
  3743  08EA                     u3500:	
  3744  08EA                     l3171:	
  3745                           
  3746                           ;lectura.c: 108:         modoDebug = 1;
  3747  08EA  01F2               	clrf	_modoDebug
  3748  08EB  0AF2               	incf	_modoDebug,f
  3749                           
  3750                           ;lectura.c: 109:     }
  3751  08EC  28F8               	goto	l162
  3752  08ED                     l3173:	
  3753                           
  3754                           ;lectura.c: 111:         envioTX("Ocurrio un error en la interpretacion.\n");
  3755  08ED  3026               	movlw	low (STR_6| (0+32768))
  3756  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  3757  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  3758  08F0  00A0               	movwf	envioTX@mensaje
  3759  08F1  3083               	movlw	high (STR_6| (0+32768))
  3760  08F2  00A1               	movwf	envioTX@mensaje+1
  3761  08F3  120A  158A  216A  120A  158A  	fcall	_envioTX
  3762  08F8                     l162:	
  3763  08F8  0008               	return
  3764  08F9                     __end_of_lecturaMas:	
  3765                           
  3766                           	psect	text10
  3767  02C7                     __ptext10:	
  3768 ;; *************** function _verificacionEntrada *****************
  3769 ;; Defined at:
  3770 ;;		line 73 in file "lectura.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  i               1    2[BANK0 ] unsigned char 
  3775 ;;  ret             1    1[BANK0 ] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      unsigned char 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         0       0       0       0       0
  3786 ;;      Locals:         0       2       0       0       0
  3787 ;;      Temps:          0       1       0       0       0
  3788 ;;      Totals:         0       3       0       0       0
  3789 ;;Total ram usage:        3 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_lecturaMas
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _verificacionEntrada
  3801  02C7                     _verificacionEntrada:	
  3802  02C7                     l3049:	
  3803                           ;incstack = 0
  3804                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  3805                           
  3806                           
  3807                           ;lectura.c: 74:     char i = 1;
  3808  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  3809  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  3810  02C9  01A2               	clrf	verificacionEntrada@i
  3811  02CA  0AA2               	incf	verificacionEntrada@i,f
  3812  02CB                     l3051:	
  3813                           
  3814                           ;lectura.c: 75:     char ret = 0;
  3815  02CB  01A1               	clrf	verificacionEntrada@ret
  3816                           
  3817                           ;lectura.c: 76:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          (codigoEntrada[i] == '=' && i == 3)) && (i<=6) ) {
  3818  02CC  2AD5               	goto	l3055
  3819  02CD                     l3053:	
  3820                           
  3821                           ;lectura.c: 77:         i++;
  3822  02CD  3001               	movlw	1
  3823  02CE  00A0               	movwf	??_verificacionEntrada
  3824  02CF  0820               	movf	??_verificacionEntrada,w
  3825  02D0  07A2               	addwf	verificacionEntrada@i,f
  3826                           
  3827                           ;lectura.c: 78:         ret++;
  3828  02D1  3001               	movlw	1
  3829  02D2  00A0               	movwf	??_verificacionEntrada
  3830  02D3  0820               	movf	??_verificacionEntrada,w
  3831  02D4  07A1               	addwf	verificacionEntrada@ret,f
  3832  02D5                     l3055:	
  3833                           
  3834                           ;lectura.c: 76:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          (codigoEntrada[i] == '=' && i == 3)) && (i<=6) ) {
  3835  02D5  0822               	movf	verificacionEntrada@i,w
  3836  02D6  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3837  02D7  0084               	movwf	4
  3838  02D8  303A               	movlw	58
  3839  02D9  1383               	bcf	3,7	;select IRP bank1
  3840  02DA  0200               	subwf	0,w
  3841  02DB  1803               	skipnc
  3842  02DC  2ADE               	goto	u3321
  3843  02DD  2ADF               	goto	u3320
  3844  02DE                     u3321:	
  3845  02DE  2AE8               	goto	l3059
  3846  02DF                     u3320:	
  3847  02DF                     l3057:	
  3848  02DF  0822               	movf	verificacionEntrada@i,w
  3849  02E0  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3850  02E1  0084               	movwf	4
  3851  02E2  3030               	movlw	48
  3852  02E3  0200               	subwf	0,w
  3853  02E4  1803               	skipnc
  3854  02E5  2AE7               	goto	u3331
  3855  02E6  2AE8               	goto	u3330
  3856  02E7                     u3331:	
  3857  02E7  2AF7               	goto	l3063
  3858  02E8                     u3330:	
  3859  02E8                     l3059:	
  3860  02E8  0822               	movf	verificacionEntrada@i,w
  3861  02E9  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3862  02EA  0084               	movwf	4
  3863  02EB  303D               	movlw	61
  3864  02EC  0600               	xorwf	0,w
  3865  02ED  1D03               	btfss	3,2
  3866  02EE  2AF0               	goto	u3341
  3867  02EF  2AF1               	goto	u3340
  3868  02F0                     u3341:	
  3869  02F0  2AFD               	goto	l3065
  3870  02F1                     u3340:	
  3871  02F1                     l3061:	
  3872  02F1  3003               	movlw	3
  3873  02F2  0622               	xorwf	verificacionEntrada@i,w
  3874  02F3  1D03               	btfss	3,2
  3875  02F4  2AF6               	goto	u3351
  3876  02F5  2AF7               	goto	u3350
  3877  02F6                     u3351:	
  3878  02F6  2AFD               	goto	l3065
  3879  02F7                     u3350:	
  3880  02F7                     l3063:	
  3881  02F7  3007               	movlw	7
  3882  02F8  0222               	subwf	verificacionEntrada@i,w
  3883  02F9  1C03               	skipc
  3884  02FA  2AFC               	goto	u3361
  3885  02FB  2AFD               	goto	u3360
  3886  02FC                     u3361:	
  3887  02FC  2ACD               	goto	l3053
  3888  02FD                     u3360:	
  3889  02FD                     l3065:	
  3890                           
  3891                           ;lectura.c: 80:     return ret;
  3892  02FD  0821               	movf	verificacionEntrada@ret,w
  3893  02FE                     l148:	
  3894  02FE  0008               	return
  3895  02FF                     __end_of_verificacionEntrada:	
  3896                           
  3897                           	psect	text11
  3898  0AA7                     __ptext11:	
  3899 ;; *************** function _cierreDeLote *****************
  3900 ;; Defined at:
  3901 ;;		line 83 in file "lectura.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  strLote        32   46[BANK0 ] unsigned char [32]
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       0       0       0       0
  3916 ;;      Locals:         0      32       0       0       0
  3917 ;;      Temps:          0       4       0       0       0
  3918 ;;      Totals:         0      36       0       0       0
  3919 ;;Total ram usage:       36 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    3
  3922 ;; This function calls:
  3923 ;;		_envioTX
  3924 ;;		_sprintf
  3925 ;; This function is called by:
  3926 ;;		_lecturaMas
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           
  3931                           ;psect for function _cierreDeLote
  3932  0AA7                     _cierreDeLote:	
  3933  0AA7                     l3069:	
  3934                           ;incstack = 0
  3935                           ; Regs used in _cierreDeLote: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3936                           
  3937                           
  3938                           ;lectura.c: 85:     if (cierreLotePedido == 0) {
  3939  0AA7  1683               	bsf	3,5	;RP0=1, select bank3
  3940  0AA8  1703               	bsf	3,6	;RP1=1, select bank3
  3941  0AA9  0857               	movf	_cierreLotePedido^(0+384),w
  3942  0AAA  1D03               	btfss	3,2
  3943  0AAB  2AAD               	goto	u3371
  3944  0AAC  2AAE               	goto	u3370
  3945  0AAD                     u3371:	
  3946  0AAD  2AE3               	goto	l3073
  3947  0AAE                     u3370:	
  3948  0AAE                     l3071:	
  3949                           
  3950                           ;lectura.c: 86:         char strLote[32];;lectura.c: 88:         sprintf(strLote,"\nCier
      +                          re,L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  3951  0AAE  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3952  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0AB1  00B4               	movwf	sprintf@sp
  3955  0AB2  3000               	movlw	0
  3956  0AB3  00B5               	movwf	sprintf@sp+1
  3957  0AB4  3080               	movlw	low (STR_5| (0+32768))
  3958  0AB5  00B6               	movwf	sprintf@f
  3959  0AB6  3083               	movlw	high (STR_5| (0+32768))
  3960  0AB7  00B7               	movwf	sprintf@f+1
  3961  0AB8  0878               	movf	_nroLote,w
  3962  0AB9  00CA               	movwf	??_cierreDeLote
  3963  0ABA  01CB               	clrf	??_cierreDeLote+1
  3964  0ABB  084A               	movf	??_cierreDeLote,w
  3965  0ABC  00B8               	movwf	?_sprintf+4
  3966  0ABD  084B               	movf	??_cierreDeLote+1,w
  3967  0ABE  00B9               	movwf	?_sprintf+5
  3968  0ABF  086E               	movf	_ventasLote,w
  3969  0AC0  00CC               	movwf	??_cierreDeLote+2
  3970  0AC1  01CD               	clrf	??_cierreDeLote+3
  3971  0AC2  084C               	movf	??_cierreDeLote+2,w
  3972  0AC3  00BA               	movwf	?_sprintf+6
  3973  0AC4  084D               	movf	??_cierreDeLote+3,w
  3974  0AC5  00BB               	movwf	?_sprintf+7
  3975  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  3976  0AC7  1303               	bcf	3,6	;RP1=0, select bank1
  3977  0AC8  085B               	movf	(_montosLote+1)^(0+128),w
  3978  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0ACB  00BD               	movwf	?_sprintf+9
  3981  0ACC  1683               	bsf	3,5	;RP0=1, select bank1
  3982  0ACD  1303               	bcf	3,6	;RP1=0, select bank1
  3983  0ACE  085A               	movf	_montosLote^(0+128),w
  3984  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0AD1  00BC               	movwf	?_sprintf+8
  3987  0AD2  120A  118A  2453  120A  158A  	fcall	_sprintf
  3988                           
  3989                           ;lectura.c: 89:         envioTX(strLote);
  3990  0AD7  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3991  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0ADA  00A0               	movwf	envioTX@mensaje
  3994  0ADB  3000               	movlw	0
  3995  0ADC  00A1               	movwf	envioTX@mensaje+1
  3996  0ADD  120A  158A  216A  120A  158A  	fcall	_envioTX
  3997                           
  3998                           ;lectura.c: 90:     }
  3999  0AE2  2AE4               	goto	l3075
  4000  0AE3                     l3073:	
  4001                           
  4002                           ;lectura.c: 92:         cierreLotePedido = 0;
  4003  0AE3  01D7               	clrf	_cierreLotePedido^(0+384)
  4004  0AE4                     l3075:	
  4005                           
  4006                           ;lectura.c: 95:     nroLote++;
  4007  0AE4  3001               	movlw	1
  4008  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0AE7  00CA               	movwf	??_cierreDeLote
  4011  0AE8  084A               	movf	??_cierreDeLote,w
  4012  0AE9  07F8               	addwf	_nroLote,f
  4013  0AEA                     l3077:	
  4014                           
  4015                           ;lectura.c: 96:     ventasLote=0;
  4016  0AEA  01EE               	clrf	_ventasLote
  4017  0AEB                     l3079:	
  4018                           
  4019                           ;lectura.c: 97:     montosLote=0;
  4020  0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  4022  0AED  01DA               	clrf	_montosLote^(0+128)
  4023  0AEE  01DB               	clrf	(_montosLote+1)^(0+128)
  4024  0AEF                     l153:	
  4025  0AEF  0008               	return
  4026  0AF0                     __end_of_cierreDeLote:	
  4027                           
  4028                           	psect	text12
  4029  0F2E                     __ptext12:	
  4030 ;; *************** function _agregarModificarPrecio *****************
  4031 ;; Defined at:
  4032 ;;		line 61 in file "manejoProductos.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  mensaje        10   52[BANK0 ] unsigned char [10]
  4037 ;;  precio          2   64[BANK0 ] short 
  4038 ;;  upper_8bits     1   63[BANK0 ] unsigned char 
  4039 ;;  lower_8bits     1   62[BANK0 ] unsigned char 
  4040 ;;  tp              1   66[BANK0 ] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4050 ;;      Params:         0       0       0       0       0
  4051 ;;      Locals:         0      15       0       0       0
  4052 ;;      Temps:          0      10       0       0       0
  4053 ;;      Totals:         0      25       0       0       0
  4054 ;;Total ram usage:       25 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    3
  4057 ;; This function calls:
  4058 ;;		___awdiv
  4059 ;;		___bmul
  4060 ;;		___wmul
  4061 ;;		_eeprom_write
  4062 ;;		_envioTX
  4063 ;;		_sprintf
  4064 ;; This function is called by:
  4065 ;;		_lecturaMas
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _agregarModificarPrecio
  4071  0F2E                     _agregarModificarPrecio:	
  4072  0F2E                     l3081:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _agregarModificarPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4075                           
  4076                           
  4077                           ;manejoProductos.c: 62:     unsigned char tp = 10*(codigoEntrada[1]-'0') + (codigoEntrad
      +                          a[2] - '0');
  4078  0F2E  300A               	movlw	10
  4079  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0F31  00CA               	movwf	??_agregarModificarPrecio
  4082  0F32  084A               	movf	??_agregarModificarPrecio,w
  4083  0F33  00A0               	movwf	___bmul@multiplicand
  4084  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  4085  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  4086  0F36  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4087  0F37  120A  158A  2047  120A  158A  	fcall	___bmul
  4088  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  4089  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  4090  0F3E  0762               	addwf	(_codigoEntrada^(0+128)+2),w
  4091  0F3F  3EF0               	addlw	240
  4092  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4093  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4094  0F42  00CB               	movwf	??_agregarModificarPrecio+1
  4095  0F43  084B               	movf	??_agregarModificarPrecio+1,w
  4096  0F44  00E2               	movwf	agregarModificarPrecio@tp
  4097  0F45                     l3083:	
  4098                           
  4099                           ;manejoProductos.c: 63:     if (tp > 0){
  4100  0F45  0862               	movf	agregarModificarPrecio@tp,w
  4101  0F46  1903               	btfsc	3,2
  4102  0F47  2F49               	goto	u3381
  4103  0F48  2F4A               	goto	u3380
  4104  0F49                     u3381:	
  4105  0F49  2FF6               	goto	l3101
  4106  0F4A                     u3380:	
  4107  0F4A                     l3085:	
  4108                           
  4109                           ;manejoProductos.c: 64:         char lower_8bits;;manejoProductos.c: 65:         char up
      +                          per_8bits;;manejoProductos.c: 66:         char mensaje[10];;manejoProductos.c: 67:      
      +                             tp--;
  4110  0F4A  3001               	movlw	1
  4111  0F4B  02E2               	subwf	agregarModificarPrecio@tp,f
  4112                           
  4113                           ;manejoProductos.c: 68:         tp = tp * 2;
  4114  0F4C  0862               	movf	agregarModificarPrecio@tp,w
  4115  0F4D  00CA               	movwf	??_agregarModificarPrecio
  4116  0F4E  074A               	addwf	??_agregarModificarPrecio,w
  4117  0F4F  00CB               	movwf	??_agregarModificarPrecio+1
  4118  0F50  084B               	movf	??_agregarModificarPrecio+1,w
  4119  0F51  00E2               	movwf	agregarModificarPrecio@tp
  4120  0F52                     l3087:	
  4121                           
  4122                           ;manejoProductos.c: 69:         short int precio;;manejoProductos.c: 72:         precio 
      +                          = 100 * (codigoEntrada[4] - '0')+ 10 * (codigoEntrada[5] - '0') + (codigoEntrada[6] - '0
      +                          ');
  4123  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  4124  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  4125  0F54  0864               	movf	(_codigoEntrada^(0+128)+4),w
  4126  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0F57  00CA               	movwf	??_agregarModificarPrecio
  4129  0F58  01CB               	clrf	??_agregarModificarPrecio+1
  4130  0F59  084A               	movf	??_agregarModificarPrecio,w
  4131  0F5A  00A0               	movwf	___wmul@multiplier
  4132  0F5B  084B               	movf	??_agregarModificarPrecio+1,w
  4133  0F5C  00A1               	movwf	___wmul@multiplier+1
  4134  0F5D  3064               	movlw	100
  4135  0F5E  00A2               	movwf	___wmul@multiplicand
  4136  0F5F  3000               	movlw	0
  4137  0F60  00A3               	movwf	___wmul@multiplicand+1
  4138  0F61  120A  158A  209D  120A  158A  	fcall	___wmul
  4139  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4140  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4141  0F68  0820               	movf	?___wmul,w
  4142  0F69  00CC               	movwf	??_agregarModificarPrecio+2
  4143  0F6A  0821               	movf	?___wmul+1,w
  4144  0F6B  00CD               	movwf	??_agregarModificarPrecio+3
  4145  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  4146  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  4147  0F6E  0865               	movf	(_codigoEntrada^(0+128)+5),w
  4148  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0F71  00CE               	movwf	??_agregarModificarPrecio+4
  4151  0F72  01CF               	clrf	??_agregarModificarPrecio+5
  4152  0F73  084E               	movf	??_agregarModificarPrecio+4,w
  4153  0F74  00A0               	movwf	___wmul@multiplier
  4154  0F75  084F               	movf	??_agregarModificarPrecio+5,w
  4155  0F76  00A1               	movwf	___wmul@multiplier+1
  4156  0F77  300A               	movlw	10
  4157  0F78  00A2               	movwf	___wmul@multiplicand
  4158  0F79  3000               	movlw	0
  4159  0F7A  00A3               	movwf	___wmul@multiplicand+1
  4160  0F7B  120A  158A  209D  120A  158A  	fcall	___wmul
  4161  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0F82  0820               	movf	?___wmul,w
  4164  0F83  074C               	addwf	??_agregarModificarPrecio+2,w
  4165  0F84  00D0               	movwf	??_agregarModificarPrecio+6
  4166  0F85  0821               	movf	?___wmul+1,w
  4167  0F86  1803               	skipnc
  4168  0F87  0A21               	incf	?___wmul+1,w
  4169  0F88  074D               	addwf	??_agregarModificarPrecio+3,w
  4170  0F89  00D1               	movwf	??_agregarModificarPrecio+7
  4171  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  4172  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  4173  0F8C  0866               	movf	(_codigoEntrada^(0+128)+6),w
  4174  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0F8F  0750               	addwf	??_agregarModificarPrecio+6,w
  4177  0F90  00D2               	movwf	??_agregarModificarPrecio+8
  4178  0F91  3000               	movlw	0
  4179  0F92  1803               	skipnc
  4180  0F93  3001               	movlw	1
  4181  0F94  0751               	addwf	??_agregarModificarPrecio+7,w
  4182  0F95  00D3               	movwf	??_agregarModificarPrecio+9
  4183  0F96  0852               	movf	??_agregarModificarPrecio+8,w
  4184  0F97  3E30               	addlw	48
  4185  0F98  00E0               	movwf	agregarModificarPrecio@precio
  4186  0F99  0853               	movf	??_agregarModificarPrecio+9,w
  4187  0F9A  1803               	skipnc
  4188  0F9B  3E01               	addlw	1
  4189  0F9C  3EEB               	addlw	235
  4190  0F9D  00E1               	movwf	agregarModificarPrecio@precio+1
  4191  0F9E                     l3089:	
  4192                           
  4193                           ;manejoProductos.c: 73:         lower_8bits = precio & 0xff;
  4194  0F9E  0860               	movf	agregarModificarPrecio@precio,w
  4195  0F9F  00CA               	movwf	??_agregarModificarPrecio
  4196  0FA0  084A               	movf	??_agregarModificarPrecio,w
  4197  0FA1  00DE               	movwf	agregarModificarPrecio@lower_8bits
  4198  0FA2                     l3091:	
  4199                           
  4200                           ;manejoProductos.c: 74:         upper_8bits = (precio >> 8) & 0xff;
  4201  0FA2  0861               	movf	agregarModificarPrecio@precio+1,w
  4202  0FA3  00CA               	movwf	??_agregarModificarPrecio
  4203  0FA4  084A               	movf	??_agregarModificarPrecio,w
  4204  0FA5  00DF               	movwf	agregarModificarPrecio@upper_8bits
  4205  0FA6                     l3093:	
  4206                           
  4207                           ;manejoProductos.c: 75:         eeprom_write(tp ,upper_8bits);
  4208  0FA6  085F               	movf	agregarModificarPrecio@upper_8bits,w
  4209  0FA7  00CA               	movwf	??_agregarModificarPrecio
  4210  0FA8  084A               	movf	??_agregarModificarPrecio,w
  4211  0FA9  00A0               	movwf	eeprom_write@value
  4212  0FAA  0862               	movf	agregarModificarPrecio@tp,w
  4213  0FAB  120A  158A  20F9  120A  158A  	fcall	_eeprom_write
  4214  0FB0                     l3095:	
  4215                           
  4216                           ;manejoProductos.c: 76:         eeprom_write(tp + 1,lower_8bits);
  4217  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0FB2  085E               	movf	agregarModificarPrecio@lower_8bits,w
  4220  0FB3  00CA               	movwf	??_agregarModificarPrecio
  4221  0FB4  084A               	movf	??_agregarModificarPrecio,w
  4222  0FB5  00A0               	movwf	eeprom_write@value
  4223  0FB6  0862               	movf	agregarModificarPrecio@tp,w
  4224  0FB7  3E01               	addlw	1
  4225  0FB8  120A  158A  20F9  120A  158A  	fcall	_eeprom_write
  4226  0FBD                     l3097:	
  4227                           
  4228                           ;manejoProductos.c: 77:         sprintf(mensaje, "\nP%d=%d\n", tp/2 + 1, precio);
  4229  0FBD  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4230  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  4231  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  4232  0FC0  00B4               	movwf	sprintf@sp
  4233  0FC1  3000               	movlw	0
  4234  0FC2  00B5               	movwf	sprintf@sp+1
  4235  0FC3  303E               	movlw	low (STR_17| (0+32768))
  4236  0FC4  00B6               	movwf	sprintf@f
  4237  0FC5  3084               	movlw	high (STR_17| (0+32768))
  4238  0FC6  00B7               	movwf	sprintf@f+1
  4239  0FC7  3002               	movlw	2
  4240  0FC8  00A0               	movwf	___awdiv@divisor
  4241  0FC9  3000               	movlw	0
  4242  0FCA  00A1               	movwf	___awdiv@divisor+1
  4243  0FCB  0862               	movf	agregarModificarPrecio@tp,w
  4244  0FCC  00CA               	movwf	??_agregarModificarPrecio
  4245  0FCD  01CB               	clrf	??_agregarModificarPrecio+1
  4246  0FCE  084A               	movf	??_agregarModificarPrecio,w
  4247  0FCF  00A2               	movwf	___awdiv@dividend
  4248  0FD0  084B               	movf	??_agregarModificarPrecio+1,w
  4249  0FD1  00A3               	movwf	___awdiv@dividend+1
  4250  0FD2  120A  158A  251E  120A  158A  	fcall	___awdiv
  4251  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0FD9  0820               	movf	?___awdiv,w
  4254  0FDA  3E01               	addlw	1
  4255  0FDB  00B8               	movwf	?_sprintf+4
  4256  0FDC  0821               	movf	?___awdiv+1,w
  4257  0FDD  1803               	skipnc
  4258  0FDE  3E01               	addlw	1
  4259  0FDF  3E00               	addlw	0
  4260  0FE0  00B9               	movwf	?_sprintf+5
  4261  0FE1  0861               	movf	agregarModificarPrecio@precio+1,w
  4262  0FE2  00BB               	movwf	?_sprintf+7
  4263  0FE3  0860               	movf	agregarModificarPrecio@precio,w
  4264  0FE4  00BA               	movwf	?_sprintf+6
  4265  0FE5  120A  118A  2453  120A  158A  	fcall	_sprintf
  4266  0FEA                     l3099:	
  4267                           
  4268                           ;manejoProductos.c: 78:         envioTX(mensaje);
  4269  0FEA  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4270  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0FED  00A0               	movwf	envioTX@mensaje
  4273  0FEE  3000               	movlw	0
  4274  0FEF  00A1               	movwf	envioTX@mensaje+1
  4275  0FF0  120A  158A  216A  120A  158A  	fcall	_envioTX
  4276                           
  4277                           ;manejoProductos.c: 79:     }
  4278  0FF5  2FFF               	goto	l389
  4279  0FF6                     l3101:	
  4280                           
  4281                           ;manejoProductos.c: 81:         envioTX("No hay producto 00");
  4282  0FF6  30EC               	movlw	low (STR_18| (0+32768))
  4283  0FF7  00A0               	movwf	envioTX@mensaje
  4284  0FF8  3083               	movlw	high (STR_18| (0+32768))
  4285  0FF9  00A1               	movwf	envioTX@mensaje+1
  4286  0FFA  120A  158A  216A  120A  158A  	fcall	_envioTX
  4287  0FFF                     l389:	
  4288  0FFF  0008               	return
  4289  1000                     __end_of_agregarModificarPrecio:	
  4290                           
  4291                           	psect	text13
  4292  08F9                     __ptext13:	
  4293 ;; *************** function _eeprom_write *****************
  4294 ;; Defined at:
  4295 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  addr            1    wreg     unsigned char 
  4298 ;;  value           1    0[BANK0 ] unsigned char 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  addr            1    2[BANK0 ] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4310 ;;      Params:         0       1       0       0       0
  4311 ;;      Locals:         0       1       0       0       0
  4312 ;;      Temps:          0       1       0       0       0
  4313 ;;      Totals:         0       3       0       0       0
  4314 ;;Total ram usage:        3 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    1
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_escrituraDeCierre
  4321 ;;		_agregarModificarPrecio
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           
  4326                           ;psect for function _eeprom_write
  4327  08F9                     _eeprom_write:	
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4331                           ;eeprom_write@addr stored from wreg
  4332  08F9  1283               	bcf	3,5	;RP0=0, select bank0
  4333  08FA  1303               	bcf	3,6	;RP1=0, select bank0
  4334  08FB  00A2               	movwf	eeprom_write@addr
  4335  08FC                     l539:	
  4336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.10
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  4337                           
  4338  08FC                     l540:	
  4339  08FC  1683               	bsf	3,5	;RP0=1, select bank3
  4340  08FD  1703               	bsf	3,6	;RP1=1, select bank3
  4341  08FE  188C               	btfsc	12,1	;volsfr
  4342  08FF  2901               	goto	u3021
  4343  0900  2902               	goto	u3020
  4344  0901                     u3021:	
  4345  0901  28FC               	goto	l540
  4346  0902                     u3020:	
  4347  0902                     l2887:	
  4348  0902  1283               	bcf	3,5	;RP0=0, select bank0
  4349  0903  1303               	bcf	3,6	;RP1=0, select bank0
  4350  0904  0822               	movf	eeprom_write@addr,w
  4351  0905  1283               	bcf	3,5	;RP0=0, select bank2
  4352  0906  1703               	bsf	3,6	;RP1=1, select bank2
  4353  0907  008D               	movwf	13	;volatile
  4354  0908  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0909  1303               	bcf	3,6	;RP1=0, select bank0
  4356  090A  0820               	movf	eeprom_write@value,w
  4357  090B  1283               	bcf	3,5	;RP0=0, select bank2
  4358  090C  1703               	bsf	3,6	;RP1=1, select bank2
  4359  090D  008C               	movwf	12	;volatile
  4360  090E                     l2889:	
  4361  090E  303F               	movlw	63
  4362  090F  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0910  1303               	bcf	3,6	;RP1=0, select bank0
  4364  0911  00A1               	movwf	??_eeprom_write
  4365  0912  0821               	movf	??_eeprom_write,w
  4366  0913  1683               	bsf	3,5	;RP0=1, select bank3
  4367  0914  1703               	bsf	3,6	;RP1=1, select bank3
  4368  0915  058C               	andwf	12,f	;volsfr
  4369  0916                     l2891:	
  4370  0916  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0917  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0918  1003               	bcf	3,0	;volatile
  4373  0919                     l2893:	
  4374  0919  1F8B               	btfss	11,7	;volatile
  4375  091A  291C               	goto	u3031
  4376  091B  291D               	goto	u3030
  4377  091C                     u3031:	
  4378  091C  291E               	goto	l543
  4379  091D                     u3030:	
  4380  091D                     l2895:	
  4381  091D  1403               	bsf	3,0	;volatile
  4382  091E                     l543:	
  4383  091E  138B               	bcf	11,7	;volatile
  4384  091F  1683               	bsf	3,5	;RP0=1, select bank3
  4385  0920  1703               	bsf	3,6	;RP1=1, select bank3
  4386  0921  150C               	bsf	12,2	;volsfr
  4387  0922                     l2897:	
  4388  0922  3055               	movlw	85
  4389  0923  008D               	movwf	13	;volsfr
  4390  0924  30AA               	movlw	170
  4391  0925  008D               	movwf	13	;volsfr
  4392  0926                     l2899:	
  4393  0926  148C               	bsf	12,1	;volsfr
  4394  0927                     l2901:	
  4395  0927  110C               	bcf	12,2	;volsfr
  4396  0928                     l2903:	
  4397  0928  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0929  1303               	bcf	3,6	;RP1=0, select bank0
  4399  092A  1C03               	btfss	3,0	;volatile
  4400  092B  292D               	goto	u3041
  4401  092C  292E               	goto	u3040
  4402  092D                     u3041:	
  4403  092D  292F               	goto	l546
  4404  092E                     u3040:	
  4405  092E                     l2905:	
  4406  092E  178B               	bsf	11,7	;volatile
  4407  092F                     l546:	
  4408  092F  0008               	return
  4409  0930                     __end_of_eeprom_write:	
  4410                           
  4411                           	psect	text14
  4412  0847                     __ptext14:	
  4413 ;; *************** function ___bmul *****************
  4414 ;; Defined at:
  4415 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  multiplier      1    wreg     unsigned char 
  4418 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4421 ;;  product         1    2[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       1       0       0       0
  4432 ;;      Locals:         0       2       0       0       0
  4433 ;;      Temps:          0       1       0       0       0
  4434 ;;      Totals:         0       4       0       0       0
  4435 ;;Total ram usage:        4 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    1
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_lecturaEtiqueta
  4442 ;;		_agregarModificarPrecio
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function ___bmul
  4448  0847                     ___bmul:	
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4452                           ;___bmul@multiplier stored from wreg
  4453  0847  1283               	bcf	3,5	;RP0=0, select bank0
  4454  0848  1303               	bcf	3,6	;RP1=0, select bank0
  4455  0849  00A3               	movwf	___bmul@multiplier
  4456  084A                     l2927:	
  4457  084A  01A2               	clrf	___bmul@product
  4458  084B                     l2929:	
  4459  084B  1C23               	btfss	___bmul@multiplier,0
  4460  084C  284E               	goto	u3081
  4461  084D  284F               	goto	u3080
  4462  084E                     u3081:	
  4463  084E  2853               	goto	l2933
  4464  084F                     u3080:	
  4465  084F                     l2931:	
  4466  084F  0820               	movf	___bmul@multiplicand,w
  4467  0850  00A1               	movwf	??___bmul
  4468  0851  0821               	movf	??___bmul,w
  4469  0852  07A2               	addwf	___bmul@product,f
  4470  0853                     l2933:	
  4471  0853  1003               	clrc
  4472  0854  0DA0               	rlf	___bmul@multiplicand,f
  4473  0855                     l2935:	
  4474  0855  1003               	clrc
  4475  0856  0CA3               	rrf	___bmul@multiplier,f
  4476  0857  0823               	movf	___bmul@multiplier,w
  4477  0858  1D03               	btfss	3,2
  4478  0859  285B               	goto	u3091
  4479  085A  285C               	goto	u3090
  4480  085B                     u3091:	
  4481  085B  284B               	goto	l2929
  4482  085C                     u3090:	
  4483  085C                     l2937:	
  4484  085C  0822               	movf	___bmul@product,w
  4485  085D                     l609:	
  4486  085D  0008               	return
  4487  085E                     __end_of___bmul:	
  4488                           
  4489                           	psect	text15
  4490  06B7                     __ptext15:	
  4491 ;; *************** function _lecturaConsulta *****************
  4492 ;; Defined at:
  4493 ;;		line 147 in file "lectura.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  articulo        2   36[BANK1 ] unsigned short 
  4498 ;;  strLote        32    4[BANK1 ] unsigned char [32]
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       0       0       0       0
  4509 ;;      Locals:         0       0      34       0       0
  4510 ;;      Temps:          0       0       4       0       0
  4511 ;;      Totals:         0       0      38       0       0
  4512 ;;Total ram usage:       38 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    4
  4515 ;; This function calls:
  4516 ;;		___wmul
  4517 ;;		_consultaPrecio
  4518 ;;		_envioTX
  4519 ;;		_sprintf
  4520 ;; This function is called by:
  4521 ;;		_lecturaComando
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           
  4526                           ;psect for function _lecturaConsulta
  4527  06B7                     _lecturaConsulta:	
  4528  06B7                     l3181:	
  4529                           ;incstack = 0
  4530                           ; Regs used in _lecturaConsulta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4531                           
  4532                           
  4533                           ;lectura.c: 149:     if (codigoEntrada[1] == 0x0D || codigoEntrada[1] == 0x0A) {
  4534  06B7  300D               	movlw	13
  4535  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  4536  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  4537  06BA  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4538  06BB  1903               	btfsc	3,2
  4539  06BC  2EBE               	goto	u3521
  4540  06BD  2EBF               	goto	u3520
  4541  06BE                     u3521:	
  4542  06BE  2EC5               	goto	l3185
  4543  06BF                     u3520:	
  4544  06BF                     l3183:	
  4545  06BF  300A               	movlw	10
  4546  06C0  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4547  06C1  1D03               	btfss	3,2
  4548  06C2  2EC4               	goto	u3531
  4549  06C3  2EC5               	goto	u3530
  4550  06C4                     u3531:	
  4551  06C4  2EE3               	goto	l3191
  4552  06C5                     u3530:	
  4553  06C5                     l3185:	
  4554                           
  4555                           ;lectura.c: 151:         if (cuenta != 0) {
  4556  06C5  0870               	movf	_cuenta,w
  4557  06C6  0471               	iorwf	_cuenta+1,w
  4558  06C7  1903               	btfsc	3,2
  4559  06C8  2ECA               	goto	u3541
  4560  06C9  2ECB               	goto	u3540
  4561  06CA                     u3541:	
  4562  06CA  2ED7               	goto	l3189
  4563  06CB                     u3540:	
  4564  06CB                     l3187:	
  4565                           
  4566                           ;lectura.c: 152:             envioTX("\nEstado: Activo\n");
  4567  06CB  3012               	movlw	low (STR_11| (0+32768))
  4568  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  4569  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  4570  06CE  00A0               	movwf	envioTX@mensaje
  4571  06CF  3084               	movlw	high (STR_11| (0+32768))
  4572  06D0  00A1               	movwf	envioTX@mensaje+1
  4573  06D1  120A  158A  216A  120A  118A  	fcall	_envioTX
  4574                           
  4575                           ;lectura.c: 153:         }
  4576  06D6  2F9C               	goto	l191
  4577  06D7                     l3189:	
  4578                           
  4579                           ;lectura.c: 155:             envioTX("\nEstado: En espera\n");
  4580  06D7  30C4               	movlw	low (STR_12| (0+32768))
  4581  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4582  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4583  06DA  00A0               	movwf	envioTX@mensaje
  4584  06DB  3083               	movlw	high (STR_12| (0+32768))
  4585  06DC  00A1               	movwf	envioTX@mensaje+1
  4586  06DD  120A  158A  216A  120A  118A  	fcall	_envioTX
  4587  06E2  2F9C               	goto	l191
  4588  06E3                     l3191:	
  4589  06E3  304C               	movlw	76
  4590  06E4  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4591  06E5  1D03               	btfss	3,2
  4592  06E6  2EE8               	goto	u3551
  4593  06E7  2EE9               	goto	u3550
  4594  06E8                     u3551:	
  4595  06E8  2F2E               	goto	l3195
  4596  06E9                     u3550:	
  4597  06E9                     l3193:	
  4598                           
  4599                           ;lectura.c: 159:         char strLote[32];;lectura.c: 161:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  4600  06E9  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4601  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  4602  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  4603  06EC  00B4               	movwf	sprintf@sp
  4604  06ED  3000               	movlw	0
  4605  06EE  00B5               	movwf	sprintf@sp+1
  4606  06EF  3023               	movlw	low (STR_1| (0+32768))
  4607  06F0  00B6               	movwf	sprintf@f
  4608  06F1  3084               	movlw	high (STR_1| (0+32768))
  4609  06F2  00B7               	movwf	sprintf@f+1
  4610  06F3  0878               	movf	_nroLote,w
  4611  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  4612  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  4613  06F6  00A0               	movwf	??_lecturaConsulta^(0+128)
  4614  06F7  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4615  06F8  0820               	movf	??_lecturaConsulta^(0+128),w
  4616  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  4617  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  4618  06FB  00B8               	movwf	?_sprintf+4
  4619  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  4620  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  4621  06FE  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4622  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4623  0700  1303               	bcf	3,6	;RP1=0, select bank0
  4624  0701  00B9               	movwf	?_sprintf+5
  4625  0702  086E               	movf	_ventasLote,w
  4626  0703  1683               	bsf	3,5	;RP0=1, select bank1
  4627  0704  1303               	bcf	3,6	;RP1=0, select bank1
  4628  0705  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4629  0706  01A3               	clrf	((??_lecturaConsulta+2)^(0+128)+1)
  4630  0707  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4631  0708  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0709  1303               	bcf	3,6	;RP1=0, select bank0
  4633  070A  00BA               	movwf	?_sprintf+6
  4634  070B  1683               	bsf	3,5	;RP0=1, select bank1
  4635  070C  1303               	bcf	3,6	;RP1=0, select bank1
  4636  070D  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4637  070E  1283               	bcf	3,5	;RP0=0, select bank0
  4638  070F  1303               	bcf	3,6	;RP1=0, select bank0
  4639  0710  00BB               	movwf	?_sprintf+7
  4640  0711  1683               	bsf	3,5	;RP0=1, select bank1
  4641  0712  1303               	bcf	3,6	;RP1=0, select bank1
  4642  0713  085B               	movf	(_montosLote+1)^(0+128),w
  4643  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0715  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0716  00BD               	movwf	?_sprintf+9
  4646  0717  1683               	bsf	3,5	;RP0=1, select bank1
  4647  0718  1303               	bcf	3,6	;RP1=0, select bank1
  4648  0719  085A               	movf	_montosLote^(0+128),w
  4649  071A  1283               	bcf	3,5	;RP0=0, select bank0
  4650  071B  1303               	bcf	3,6	;RP1=0, select bank0
  4651  071C  00BC               	movwf	?_sprintf+8
  4652  071D  120A  118A  2453  120A  118A  	fcall	_sprintf
  4653                           
  4654                           ;lectura.c: 162:         envioTX(strLote);
  4655  0722  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4656  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0724  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0725  00A0               	movwf	envioTX@mensaje
  4659  0726  3000               	movlw	0
  4660  0727  00A1               	movwf	envioTX@mensaje+1
  4661  0728  120A  158A  216A  120A  118A  	fcall	_envioTX
  4662                           
  4663                           ;lectura.c: 164:     }
  4664  072D  2F9C               	goto	l191
  4665  072E                     l3195:	
  4666  072E  3056               	movlw	86
  4667  072F  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4668  0730  1D03               	btfss	3,2
  4669  0731  2F33               	goto	u3561
  4670  0732  2F34               	goto	u3560
  4671  0733                     u3561:	
  4672  0733  2F39               	goto	l3199
  4673  0734                     u3560:	
  4674  0734                     l3197:	
  4675                           
  4676                           ;lectura.c: 167:         pedidoVoltaje = 1;
  4677  0734  1683               	bsf	3,5	;RP0=1, select bank3
  4678  0735  1703               	bsf	3,6	;RP1=1, select bank3
  4679  0736  01D6               	clrf	_pedidoVoltaje^(0+384)
  4680  0737  0AD6               	incf	_pedidoVoltaje^(0+384),f
  4681                           
  4682                           ;lectura.c: 168:     }
  4683  0738  2F9C               	goto	l191
  4684  0739                     l3199:	
  4685  0739  303A               	movlw	58
  4686  073A  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4687  073B  1803               	skipnc
  4688  073C  2F3E               	goto	u3571
  4689  073D  2F3F               	goto	u3570
  4690  073E                     u3571:	
  4691  073E  2F91               	goto	l3211
  4692  073F                     u3570:	
  4693  073F                     l3201:	
  4694  073F  3030               	movlw	48
  4695  0740  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4696  0741  1C03               	skipc
  4697  0742  2F44               	goto	u3581
  4698  0743  2F45               	goto	u3580
  4699  0744                     u3581:	
  4700  0744  2F91               	goto	l3211
  4701  0745                     u3580:	
  4702  0745                     l3203:	
  4703  0745  303A               	movlw	58
  4704  0746  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4705  0747  1803               	skipnc
  4706  0748  2F4A               	goto	u3591
  4707  0749  2F4B               	goto	u3590
  4708  074A                     u3591:	
  4709  074A  2F91               	goto	l3211
  4710  074B                     u3590:	
  4711  074B                     l3205:	
  4712  074B  3030               	movlw	48
  4713  074C  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4714  074D  1C03               	skipc
  4715  074E  2F50               	goto	u3601
  4716  074F  2F51               	goto	u3600
  4717  0750                     u3601:	
  4718  0750  2F91               	goto	l3211
  4719  0751                     u3600:	
  4720  0751                     l3207:	
  4721                           
  4722                           ;lectura.c: 172:         unsigned short int articulo = 10*(codigoEntrada[1] - '0') + (co
      +                          digoEntrada[2] - '0');
  4723  0751  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4724  0752  00A0               	movwf	??_lecturaConsulta^(0+128)
  4725  0753  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4726  0754  0820               	movf	??_lecturaConsulta^(0+128),w
  4727  0755  1283               	bcf	3,5	;RP0=0, select bank0
  4728  0756  1303               	bcf	3,6	;RP1=0, select bank0
  4729  0757  00A0               	movwf	___wmul@multiplier
  4730  0758  1683               	bsf	3,5	;RP0=1, select bank1
  4731  0759  1303               	bcf	3,6	;RP1=0, select bank1
  4732  075A  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4733  075B  1283               	bcf	3,5	;RP0=0, select bank0
  4734  075C  1303               	bcf	3,6	;RP1=0, select bank0
  4735  075D  00A1               	movwf	___wmul@multiplier+1
  4736  075E  300A               	movlw	10
  4737  075F  00A2               	movwf	___wmul@multiplicand
  4738  0760  3000               	movlw	0
  4739  0761  00A3               	movwf	___wmul@multiplicand+1
  4740  0762  120A  158A  209D  120A  118A  	fcall	___wmul
  4741  0767  1683               	bsf	3,5	;RP0=1, select bank1
  4742  0768  1303               	bcf	3,6	;RP1=0, select bank1
  4743  0769  0862               	movf	(_codigoEntrada^(0+128)+2),w
  4744  076A  1283               	bcf	3,5	;RP0=0, select bank0
  4745  076B  1303               	bcf	3,6	;RP1=0, select bank0
  4746  076C  0720               	addwf	?___wmul,w
  4747  076D  1683               	bsf	3,5	;RP0=1, select bank1
  4748  076E  1303               	bcf	3,6	;RP1=0, select bank1
  4749  076F  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4750  0770  3000               	movlw	0
  4751  0771  1803               	skipnc
  4752  0772  3001               	movlw	1
  4753  0773  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0774  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0775  0721               	addwf	?___wmul+1,w
  4756  0776  1683               	bsf	3,5	;RP0=1, select bank1
  4757  0777  1303               	bcf	3,6	;RP1=0, select bank1
  4758  0778  00A3               	movwf	(??_lecturaConsulta+3)^(0+128)
  4759  0779  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4760  077A  3EF0               	addlw	240
  4761  077B  00C4               	movwf	lecturaConsulta@articulo^(0+128)
  4762  077C  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4763  077D  1803               	skipnc
  4764  077E  3E01               	addlw	1
  4765  077F  3EFD               	addlw	253
  4766  0780  00C5               	movwf	(lecturaConsulta@articulo+1)^(0+128)
  4767  0781                     l3209:	
  4768                           
  4769                           ;lectura.c: 174:         consultaPrecio(articulo);
  4770  0781  0845               	movf	(lecturaConsulta@articulo+1)^(0+128),w
  4771  0782  1283               	bcf	3,5	;RP0=0, select bank0
  4772  0783  1303               	bcf	3,6	;RP1=0, select bank0
  4773  0784  00CB               	movwf	consultaPrecio@articulo+1
  4774  0785  1683               	bsf	3,5	;RP0=1, select bank1
  4775  0786  1303               	bcf	3,6	;RP1=0, select bank1
  4776  0787  0844               	movf	lecturaConsulta@articulo^(0+128),w
  4777  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4779  078A  00CA               	movwf	consultaPrecio@articulo
  4780  078B  120A  158A  2664  120A  118A  	fcall	_consultaPrecio
  4781                           
  4782                           ;lectura.c: 176:     }
  4783  0790  2F9C               	goto	l191
  4784  0791                     l3211:	
  4785                           
  4786                           ;lectura.c: 178:         envioTX("Ocurrio un error en la interpretacion.\n");
  4787  0791  3026               	movlw	low (STR_6| (0+32768))
  4788  0792  1283               	bcf	3,5	;RP0=0, select bank0
  4789  0793  1303               	bcf	3,6	;RP1=0, select bank0
  4790  0794  00A0               	movwf	envioTX@mensaje
  4791  0795  3083               	movlw	high (STR_6| (0+32768))
  4792  0796  00A1               	movwf	envioTX@mensaje+1
  4793  0797  120A  158A  216A  120A  118A  	fcall	_envioTX
  4794  079C                     l191:	
  4795  079C  0008               	return
  4796  079D                     __end_of_lecturaConsulta:	
  4797                           
  4798                           	psect	text16
  4799  0E64                     __ptext16:	
  4800 ;; *************** function _consultaPrecio *****************
  4801 ;; Defined at:
  4802 ;;		line 125 in file "lectura.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  articulo        2   42[BANK0 ] short 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  precio          2   74[BANK0 ] short 
  4807 ;;  mensaje        26   48[BANK0 ] unsigned char [26]
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4817 ;;      Params:         0       2       0       0       0
  4818 ;;      Locals:         0      28       0       0       0
  4819 ;;      Temps:          0       4       0       0       0
  4820 ;;      Totals:         0      34       0       0       0
  4821 ;;Total ram usage:       34 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    3
  4824 ;; This function calls:
  4825 ;;		___awdiv
  4826 ;;		___awmod
  4827 ;;		_eeprom_read
  4828 ;;		_envioTX
  4829 ;;		_sprintf
  4830 ;; This function is called by:
  4831 ;;		_lecturaConsulta
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function _consultaPrecio
  4837  0E64                     _consultaPrecio:	
  4838  0E64                     l3103:	
  4839                           ;incstack = 0
  4840                           ; Regs used in _consultaPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4841                           
  4842                           
  4843                           ;lectura.c: 126:     char mensaje[26];;lectura.c: 127:     if(articulo > 0){
  4844  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0E66  084B               	movf	consultaPrecio@articulo+1,w
  4847  0E67  3A80               	xorlw	128
  4848  0E68  00FF               	movwf	btemp+1
  4849  0E69  3080               	movlw	128
  4850  0E6A  027F               	subwf	btemp+1,w
  4851  0E6B  1D03               	skipz
  4852  0E6C  2E6F               	goto	u3395
  4853  0E6D  3001               	movlw	1
  4854  0E6E  024A               	subwf	consultaPrecio@articulo,w
  4855  0E6F                     u3395:	
  4856  0E6F  1C03               	skipc
  4857  0E70  2E72               	goto	u3391
  4858  0E71  2E73               	goto	u3390
  4859  0E72                     u3391:	
  4860  0E72  2F22               	goto	l3117
  4861  0E73                     u3390:	
  4862  0E73                     l3105:	
  4863                           
  4864                           ;lectura.c: 128:         articulo--;
  4865  0E73  30FF               	movlw	255
  4866  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0E76  07CA               	addwf	consultaPrecio@articulo,f
  4869  0E77  1803               	skipnc
  4870  0E78  0ACB               	incf	consultaPrecio@articulo+1,f
  4871  0E79  30FF               	movlw	255
  4872  0E7A  07CB               	addwf	consultaPrecio@articulo+1,f
  4873                           
  4874                           ;lectura.c: 129:         articulo = articulo * 2;
  4875  0E7B  1003               	clrc
  4876  0E7C  0D4A               	rlf	consultaPrecio@articulo,w
  4877  0E7D  00CA               	movwf	consultaPrecio@articulo
  4878  0E7E  0D4B               	rlf	consultaPrecio@articulo+1,w
  4879  0E7F  00CB               	movwf	consultaPrecio@articulo+1
  4880  0E80                     l3107:	
  4881                           
  4882                           ;lectura.c: 130:         short int precio = (eeprom_read(articulo) << 8) | (eeprom_read(
      +                          articulo+1));
  4883  0E80  084A               	movf	consultaPrecio@articulo,w
  4884  0E81  3E01               	addlw	1
  4885  0E82  120A  158A  205E  120A  158A  	fcall	_eeprom_read
  4886  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0E89  00CC               	movwf	??_consultaPrecio
  4889  0E8A  01CD               	clrf	??_consultaPrecio+1
  4890  0E8B  084A               	movf	consultaPrecio@articulo,w
  4891  0E8C  120A  158A  205E  120A  158A  	fcall	_eeprom_read
  4892  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  4894  0E93  00CE               	movwf	??_consultaPrecio+2
  4895  0E94  01CF               	clrf	??_consultaPrecio+3
  4896  0E95  084E               	movf	??_consultaPrecio+2,w
  4897  0E96  00CF               	movwf	??_consultaPrecio+3
  4898  0E97  01CE               	clrf	??_consultaPrecio+2
  4899  0E98  084C               	movf	??_consultaPrecio,w
  4900  0E99  044E               	iorwf	??_consultaPrecio+2,w
  4901  0E9A  00EA               	movwf	consultaPrecio@precio
  4902  0E9B  084D               	movf	??_consultaPrecio+1,w
  4903  0E9C  044F               	iorwf	??_consultaPrecio+3,w
  4904  0E9D  00EB               	movwf	consultaPrecio@precio+1
  4905  0E9E                     l3109:	
  4906                           
  4907                           ;lectura.c: 132:         if (precio > 999 || precio < 0) {
  4908  0E9E  086B               	movf	consultaPrecio@precio+1,w
  4909  0E9F  3A80               	xorlw	128
  4910  0EA0  00FF               	movwf	btemp+1
  4911  0EA1  3083               	movlw	131
  4912  0EA2  027F               	subwf	btemp+1,w
  4913  0EA3  1D03               	skipz
  4914  0EA4  2EA7               	goto	u3405
  4915  0EA5  30E8               	movlw	232
  4916  0EA6  026A               	subwf	consultaPrecio@precio,w
  4917  0EA7                     u3405:	
  4918  0EA7  1803               	skipnc
  4919  0EA8  2EAA               	goto	u3401
  4920  0EA9  2EAB               	goto	u3400
  4921  0EAA                     u3401:	
  4922  0EAA  2EB1               	goto	l3113
  4923  0EAB                     u3400:	
  4924  0EAB                     l3111:	
  4925  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0EAD  1FEB               	btfss	consultaPrecio@precio+1,7
  4928  0EAE  2EB0               	goto	u3411
  4929  0EAF  2EB1               	goto	u3410
  4930  0EB0                     u3411:	
  4931  0EB0  2ECC               	goto	l3115
  4932  0EB1                     u3410:	
  4933  0EB1                     l3113:	
  4934                           
  4935                           ;lectura.c: 133:             sprintf(mensaje, "\nProducto no encontrado\n");
  4936  0EB1  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4937  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0EB4  00B4               	movwf	sprintf@sp
  4940  0EB5  3000               	movlw	0
  4941  0EB6  00B5               	movwf	sprintf@sp+1
  4942  0EB7  3067               	movlw	low (STR_8| (0+32768))
  4943  0EB8  00B6               	movwf	sprintf@f
  4944  0EB9  3083               	movlw	high (STR_8| (0+32768))
  4945  0EBA  00B7               	movwf	sprintf@f+1
  4946  0EBB  120A  118A  2453  120A  158A  	fcall	_sprintf
  4947                           
  4948                           ;lectura.c: 134:             envioTX(mensaje);
  4949  0EC0  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4950  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  4951  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  4952  0EC3  00A0               	movwf	envioTX@mensaje
  4953  0EC4  3000               	movlw	0
  4954  0EC5  00A1               	movwf	envioTX@mensaje+1
  4955  0EC6  120A  158A  216A  120A  158A  	fcall	_envioTX
  4956                           
  4957                           ;lectura.c: 135:         }
  4958  0ECB  2F2D               	goto	l176
  4959  0ECC                     l3115:	
  4960                           
  4961                           ;lectura.c: 137:             sprintf(mensaje, "TP: %d P: %d,%d Euros", articulo/2 + 1, p
      +                          recio/10, precio%10);
  4962  0ECC  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4963  0ECD  00B4               	movwf	sprintf@sp
  4964  0ECE  3000               	movlw	0
  4965  0ECF  00B5               	movwf	sprintf@sp+1
  4966  0ED0  30AE               	movlw	low (STR_9| (0+32768))
  4967  0ED1  00B6               	movwf	sprintf@f
  4968  0ED2  3083               	movlw	high (STR_9| (0+32768))
  4969  0ED3  00B7               	movwf	sprintf@f+1
  4970  0ED4  3002               	movlw	2
  4971  0ED5  00A0               	movwf	___awdiv@divisor
  4972  0ED6  3000               	movlw	0
  4973  0ED7  00A1               	movwf	___awdiv@divisor+1
  4974  0ED8  084B               	movf	consultaPrecio@articulo+1,w
  4975  0ED9  00A3               	movwf	___awdiv@dividend+1
  4976  0EDA  084A               	movf	consultaPrecio@articulo,w
  4977  0EDB  00A2               	movwf	___awdiv@dividend
  4978  0EDC  120A  158A  251E  120A  158A  	fcall	___awdiv
  4979  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4980  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4981  0EE3  0820               	movf	?___awdiv,w
  4982  0EE4  3E01               	addlw	1
  4983  0EE5  00B8               	movwf	?_sprintf+4
  4984  0EE6  0821               	movf	?___awdiv+1,w
  4985  0EE7  1803               	skipnc
  4986  0EE8  3E01               	addlw	1
  4987  0EE9  3E00               	addlw	0
  4988  0EEA  00B9               	movwf	?_sprintf+5
  4989  0EEB  300A               	movlw	10
  4990  0EEC  00A0               	movwf	___awdiv@divisor
  4991  0EED  3000               	movlw	0
  4992  0EEE  00A1               	movwf	___awdiv@divisor+1
  4993  0EEF  086B               	movf	consultaPrecio@precio+1,w
  4994  0EF0  00A3               	movwf	___awdiv@dividend+1
  4995  0EF1  086A               	movf	consultaPrecio@precio,w
  4996  0EF2  00A2               	movwf	___awdiv@dividend
  4997  0EF3  120A  158A  251E  120A  158A  	fcall	___awdiv
  4998  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  4999  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  5000  0EFA  0821               	movf	?___awdiv+1,w
  5001  0EFB  00BB               	movwf	?_sprintf+7
  5002  0EFC  0820               	movf	?___awdiv,w
  5003  0EFD  00BA               	movwf	?_sprintf+6
  5004  0EFE  300A               	movlw	10
  5005  0EFF  00A0               	movwf	___awmod@divisor
  5006  0F00  3000               	movlw	0
  5007  0F01  00A1               	movwf	___awmod@divisor+1
  5008  0F02  086B               	movf	consultaPrecio@precio+1,w
  5009  0F03  00A3               	movwf	___awmod@dividend+1
  5010  0F04  086A               	movf	consultaPrecio@precio,w
  5011  0F05  00A2               	movwf	___awmod@dividend
  5012  0F06  120A  158A  233B  120A  158A  	fcall	___awmod
  5013  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0F0D  0821               	movf	?___awmod+1,w
  5016  0F0E  00BD               	movwf	?_sprintf+9
  5017  0F0F  0820               	movf	?___awmod,w
  5018  0F10  00BC               	movwf	?_sprintf+8
  5019  0F11  120A  118A  2453  120A  158A  	fcall	_sprintf
  5020                           
  5021                           ;lectura.c: 138:             envioTX(mensaje);
  5022  0F16  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  5023  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  5024  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  5025  0F19  00A0               	movwf	envioTX@mensaje
  5026  0F1A  3000               	movlw	0
  5027  0F1B  00A1               	movwf	envioTX@mensaje+1
  5028  0F1C  120A  158A  216A  120A  158A  	fcall	_envioTX
  5029  0F21  2F2D               	goto	l176
  5030  0F22                     l3117:	
  5031                           
  5032                           ;lectura.c: 142:         envioTX("No existe producto 00");
  5033  0F22  3098               	movlw	low (STR_10| (0+32768))
  5034  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0F25  00A0               	movwf	envioTX@mensaje
  5037  0F26  3083               	movlw	high (STR_10| (0+32768))
  5038  0F27  00A1               	movwf	envioTX@mensaje+1
  5039  0F28  120A  158A  216A  120A  158A  	fcall	_envioTX
  5040  0F2D                     l176:	
  5041  0F2D  0008               	return
  5042  0F2E                     __end_of_consultaPrecio:	
  5043                           
  5044                           	psect	text17
  5045  085E                     __ptext17:	
  5046 ;; *************** function _eeprom_read *****************
  5047 ;; Defined at:
  5048 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  addr            1    wreg     unsigned char 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  addr            1    1[BANK0 ] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      unsigned char 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5062 ;;      Params:         0       0       0       0       0
  5063 ;;      Locals:         0       1       0       0       0
  5064 ;;      Temps:          0       1       0       0       0
  5065 ;;      Totals:         0       2       0       0       0
  5066 ;;Total ram usage:        2 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    1
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_EEPROM_search
  5073 ;;		_consultaPrecio
  5074 ;;		_main
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function _eeprom_read
  5080  085E                     _eeprom_read:	
  5081                           
  5082                           ;incstack = 0
  5083                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5084                           ;eeprom_read@addr stored from wreg
  5085  085E  1283               	bcf	3,5	;RP0=0, select bank0
  5086  085F  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0860  00A1               	movwf	eeprom_read@addr
  5088  0861                     l520:	
  5089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  5090                           
  5091  0861  0064               	clrwdt	;# 
  5092  0862  1683               	bsf	3,5	;RP0=1, select bank3
  5093  0863  1703               	bsf	3,6	;RP1=1, select bank3
  5094  0864  188C               	btfsc	12,1	;volsfr
  5095  0865  2867               	goto	u3051
  5096  0866  286A               	goto	u3050
  5097  0867                     u3051:	
  5098  0867  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0868  1303               	bcf	3,6	;RP1=0, select bank0
  5100  0869  2861               	goto	l520
  5101  086A                     u3050:	
  5102  086A                     l2907:	
  5103                           
  5104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  5105  086A  1283               	bcf	3,5	;RP0=0, select bank0
  5106  086B  1303               	bcf	3,6	;RP1=0, select bank0
  5107  086C  0821               	movf	eeprom_read@addr,w
  5108  086D  1283               	bcf	3,5	;RP0=0, select bank2
  5109  086E  1703               	bsf	3,6	;RP1=1, select bank2
  5110  086F  008D               	movwf	13	;volatile
  5111  0870  303F               	movlw	63
  5112  0871  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0872  1303               	bcf	3,6	;RP1=0, select bank0
  5114  0873  00A0               	movwf	??_eeprom_read
  5115  0874  0820               	movf	??_eeprom_read,w
  5116  0875  1683               	bsf	3,5	;RP0=1, select bank3
  5117  0876  1703               	bsf	3,6	;RP1=1, select bank3
  5118  0877  058C               	andwf	12,f	;volsfr
  5119  0878  140C               	bsf	12,0	;volsfr
  5120  0879  1283               	bcf	3,5	;RP0=0, select bank2
  5121  087A  1703               	bsf	3,6	;RP1=1, select bank2
  5122  087B  080C               	movf	12,w	;volatile
  5123  087C                     l522:	
  5124  087C  0008               	return
  5125  087D                     __end_of_eeprom_read:	
  5126                           
  5127                           	psect	text18
  5128  0B3B                     __ptext18:	
  5129 ;; *************** function ___awmod *****************
  5130 ;; Defined at:
  5131 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  divisor         2    0[BANK0 ] int 
  5134 ;;  dividend        2    2[BANK0 ] int 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  sign            1    6[BANK0 ] unsigned char 
  5137 ;;  counter         1    5[BANK0 ] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  2    0[BANK0 ] int 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5147 ;;      Params:         0       4       0       0       0
  5148 ;;      Locals:         0       2       0       0       0
  5149 ;;      Temps:          0       1       0       0       0
  5150 ;;      Totals:         0       7       0       0       0
  5151 ;;Total ram usage:        7 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    1
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_lecturaEtiqueta
  5158 ;;		_consultaPrecio
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           
  5163                           ;psect for function ___awmod
  5164  0B3B                     ___awmod:	
  5165  0B3B                     l2985:	
  5166                           ;incstack = 0
  5167                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5168                           
  5169  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  5170  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  5171  0B3D  01A6               	clrf	___awmod@sign
  5172  0B3E                     l2987:	
  5173  0B3E  1FA3               	btfss	___awmod@dividend+1,7
  5174  0B3F  2B41               	goto	u3201
  5175  0B40  2B42               	goto	u3200
  5176  0B41                     u3201:	
  5177  0B41  2B49               	goto	l2993
  5178  0B42                     u3200:	
  5179  0B42                     l2989:	
  5180  0B42  09A2               	comf	___awmod@dividend,f
  5181  0B43  09A3               	comf	___awmod@dividend+1,f
  5182  0B44  0AA2               	incf	___awmod@dividend,f
  5183  0B45  1903               	skipnz
  5184  0B46  0AA3               	incf	___awmod@dividend+1,f
  5185  0B47                     l2991:	
  5186  0B47  01A6               	clrf	___awmod@sign
  5187  0B48  0AA6               	incf	___awmod@sign,f
  5188  0B49                     l2993:	
  5189  0B49  1FA1               	btfss	___awmod@divisor+1,7
  5190  0B4A  2B4C               	goto	u3211
  5191  0B4B  2B4D               	goto	u3210
  5192  0B4C                     u3211:	
  5193  0B4C  2B52               	goto	l2997
  5194  0B4D                     u3210:	
  5195  0B4D                     l2995:	
  5196  0B4D  09A0               	comf	___awmod@divisor,f
  5197  0B4E  09A1               	comf	___awmod@divisor+1,f
  5198  0B4F  0AA0               	incf	___awmod@divisor,f
  5199  0B50  1903               	skipnz
  5200  0B51  0AA1               	incf	___awmod@divisor+1,f
  5201  0B52                     l2997:	
  5202  0B52  0820               	movf	___awmod@divisor,w
  5203  0B53  0421               	iorwf	___awmod@divisor+1,w
  5204  0B54  1903               	btfsc	3,2
  5205  0B55  2B57               	goto	u3221
  5206  0B56  2B58               	goto	u3220
  5207  0B57                     u3221:	
  5208  0B57  2B87               	goto	l3015
  5209  0B58                     u3220:	
  5210  0B58                     l2999:	
  5211  0B58  01A5               	clrf	___awmod@counter
  5212  0B59  0AA5               	incf	___awmod@counter,f
  5213  0B5A  2B66               	goto	l3005
  5214  0B5B                     l3001:	
  5215  0B5B  3001               	movlw	1
  5216  0B5C                     u3235:	
  5217  0B5C  1003               	clrc
  5218  0B5D  0DA0               	rlf	___awmod@divisor,f
  5219  0B5E  0DA1               	rlf	___awmod@divisor+1,f
  5220  0B5F  3EFF               	addlw	-1
  5221  0B60  1D03               	skipz
  5222  0B61  2B5C               	goto	u3235
  5223  0B62                     l3003:	
  5224  0B62  3001               	movlw	1
  5225  0B63  00A4               	movwf	??___awmod
  5226  0B64  0824               	movf	??___awmod,w
  5227  0B65  07A5               	addwf	___awmod@counter,f
  5228  0B66                     l3005:	
  5229  0B66  1FA1               	btfss	___awmod@divisor+1,7
  5230  0B67  2B69               	goto	u3241
  5231  0B68  2B6A               	goto	u3240
  5232  0B69                     u3241:	
  5233  0B69  2B5B               	goto	l3001
  5234  0B6A                     u3240:	
  5235  0B6A                     l3007:	
  5236  0B6A  0821               	movf	___awmod@divisor+1,w
  5237  0B6B  0223               	subwf	___awmod@dividend+1,w
  5238  0B6C  1D03               	skipz
  5239  0B6D  2B70               	goto	u3255
  5240  0B6E  0820               	movf	___awmod@divisor,w
  5241  0B6F  0222               	subwf	___awmod@dividend,w
  5242  0B70                     u3255:	
  5243  0B70  1C03               	skipc
  5244  0B71  2B73               	goto	u3251
  5245  0B72  2B74               	goto	u3250
  5246  0B73                     u3251:	
  5247  0B73  2B7A               	goto	l3011
  5248  0B74                     u3250:	
  5249  0B74                     l3009:	
  5250  0B74  0820               	movf	___awmod@divisor,w
  5251  0B75  02A2               	subwf	___awmod@dividend,f
  5252  0B76  0821               	movf	___awmod@divisor+1,w
  5253  0B77  1C03               	skipc
  5254  0B78  03A3               	decf	___awmod@dividend+1,f
  5255  0B79  02A3               	subwf	___awmod@dividend+1,f
  5256  0B7A                     l3011:	
  5257  0B7A  3001               	movlw	1
  5258  0B7B                     u3265:	
  5259  0B7B  1003               	clrc
  5260  0B7C  0CA1               	rrf	___awmod@divisor+1,f
  5261  0B7D  0CA0               	rrf	___awmod@divisor,f
  5262  0B7E  3EFF               	addlw	-1
  5263  0B7F  1D03               	skipz
  5264  0B80  2B7B               	goto	u3265
  5265  0B81                     l3013:	
  5266  0B81  3001               	movlw	1
  5267  0B82  02A5               	subwf	___awmod@counter,f
  5268  0B83  1D03               	btfss	3,2
  5269  0B84  2B86               	goto	u3271
  5270  0B85  2B87               	goto	u3270
  5271  0B86                     u3271:	
  5272  0B86  2B6A               	goto	l3007
  5273  0B87                     u3270:	
  5274  0B87                     l3015:	
  5275  0B87  0826               	movf	___awmod@sign,w
  5276  0B88  1903               	btfsc	3,2
  5277  0B89  2B8B               	goto	u3281
  5278  0B8A  2B8C               	goto	u3280
  5279  0B8B                     u3281:	
  5280  0B8B  2B91               	goto	l3019
  5281  0B8C                     u3280:	
  5282  0B8C                     l3017:	
  5283  0B8C  09A2               	comf	___awmod@dividend,f
  5284  0B8D  09A3               	comf	___awmod@dividend+1,f
  5285  0B8E  0AA2               	incf	___awmod@dividend,f
  5286  0B8F  1903               	skipnz
  5287  0B90  0AA3               	incf	___awmod@dividend+1,f
  5288  0B91                     l3019:	
  5289  0B91  0823               	movf	___awmod@dividend+1,w
  5290  0B92  00A1               	movwf	?___awmod+1
  5291  0B93  0822               	movf	___awmod@dividend,w
  5292  0B94  00A0               	movwf	?___awmod
  5293  0B95                     l749:	
  5294  0B95  0008               	return
  5295  0B96                     __end_of___awmod:	
  5296                           
  5297                           	psect	text19
  5298  0D1E                     __ptext19:	
  5299 ;; *************** function ___awdiv *****************
  5300 ;; Defined at:
  5301 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  divisor         2    0[BANK0 ] int 
  5304 ;;  dividend        2    2[BANK0 ] int 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  quotient        2    7[BANK0 ] int 
  5307 ;;  sign            1    6[BANK0 ] unsigned char 
  5308 ;;  counter         1    5[BANK0 ] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  2    0[BANK0 ] int 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       4       0       0       0
  5319 ;;      Locals:         0       4       0       0       0
  5320 ;;      Temps:          0       1       0       0       0
  5321 ;;      Totals:         0       9       0       0       0
  5322 ;;Total ram usage:        9 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_EEPROM_search
  5329 ;;		_consultaPrecio
  5330 ;;		_agregarModificarPrecio
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function ___awdiv
  5336  0D1E                     ___awdiv:	
  5337  0D1E                     l2941:	
  5338                           ;incstack = 0
  5339                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5340                           
  5341  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  5342  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  5343  0D20  01A6               	clrf	___awdiv@sign
  5344  0D21                     l2943:	
  5345  0D21  1FA1               	btfss	___awdiv@divisor+1,7
  5346  0D22  2D24               	goto	u3101
  5347  0D23  2D25               	goto	u3100
  5348  0D24                     u3101:	
  5349  0D24  2D2C               	goto	l2949
  5350  0D25                     u3100:	
  5351  0D25                     l2945:	
  5352  0D25  09A0               	comf	___awdiv@divisor,f
  5353  0D26  09A1               	comf	___awdiv@divisor+1,f
  5354  0D27  0AA0               	incf	___awdiv@divisor,f
  5355  0D28  1903               	skipnz
  5356  0D29  0AA1               	incf	___awdiv@divisor+1,f
  5357  0D2A                     l2947:	
  5358  0D2A  01A6               	clrf	___awdiv@sign
  5359  0D2B  0AA6               	incf	___awdiv@sign,f
  5360  0D2C                     l2949:	
  5361  0D2C  1FA3               	btfss	___awdiv@dividend+1,7
  5362  0D2D  2D2F               	goto	u3111
  5363  0D2E  2D30               	goto	u3110
  5364  0D2F                     u3111:	
  5365  0D2F  2D39               	goto	l2955
  5366  0D30                     u3110:	
  5367  0D30                     l2951:	
  5368  0D30  09A2               	comf	___awdiv@dividend,f
  5369  0D31  09A3               	comf	___awdiv@dividend+1,f
  5370  0D32  0AA2               	incf	___awdiv@dividend,f
  5371  0D33  1903               	skipnz
  5372  0D34  0AA3               	incf	___awdiv@dividend+1,f
  5373  0D35                     l2953:	
  5374  0D35  3001               	movlw	1
  5375  0D36  00A4               	movwf	??___awdiv
  5376  0D37  0824               	movf	??___awdiv,w
  5377  0D38  06A6               	xorwf	___awdiv@sign,f
  5378  0D39                     l2955:	
  5379  0D39  01A7               	clrf	___awdiv@quotient
  5380  0D3A  01A8               	clrf	___awdiv@quotient+1
  5381  0D3B                     l2957:	
  5382  0D3B  0820               	movf	___awdiv@divisor,w
  5383  0D3C  0421               	iorwf	___awdiv@divisor+1,w
  5384  0D3D  1903               	btfsc	3,2
  5385  0D3E  2D40               	goto	u3121
  5386  0D3F  2D41               	goto	u3120
  5387  0D40                     u3121:	
  5388  0D40  2D78               	goto	l2977
  5389  0D41                     u3120:	
  5390  0D41                     l2959:	
  5391  0D41  01A5               	clrf	___awdiv@counter
  5392  0D42  0AA5               	incf	___awdiv@counter,f
  5393  0D43  2D4F               	goto	l2965
  5394  0D44                     l2961:	
  5395  0D44  3001               	movlw	1
  5396  0D45                     u3135:	
  5397  0D45  1003               	clrc
  5398  0D46  0DA0               	rlf	___awdiv@divisor,f
  5399  0D47  0DA1               	rlf	___awdiv@divisor+1,f
  5400  0D48  3EFF               	addlw	-1
  5401  0D49  1D03               	skipz
  5402  0D4A  2D45               	goto	u3135
  5403  0D4B                     l2963:	
  5404  0D4B  3001               	movlw	1
  5405  0D4C  00A4               	movwf	??___awdiv
  5406  0D4D  0824               	movf	??___awdiv,w
  5407  0D4E  07A5               	addwf	___awdiv@counter,f
  5408  0D4F                     l2965:	
  5409  0D4F  1FA1               	btfss	___awdiv@divisor+1,7
  5410  0D50  2D52               	goto	u3141
  5411  0D51  2D53               	goto	u3140
  5412  0D52                     u3141:	
  5413  0D52  2D44               	goto	l2961
  5414  0D53                     u3140:	
  5415  0D53                     l2967:	
  5416  0D53  3001               	movlw	1
  5417  0D54                     u3155:	
  5418  0D54  1003               	clrc
  5419  0D55  0DA7               	rlf	___awdiv@quotient,f
  5420  0D56  0DA8               	rlf	___awdiv@quotient+1,f
  5421  0D57  3EFF               	addlw	-1
  5422  0D58  1D03               	skipz
  5423  0D59  2D54               	goto	u3155
  5424  0D5A  0821               	movf	___awdiv@divisor+1,w
  5425  0D5B  0223               	subwf	___awdiv@dividend+1,w
  5426  0D5C  1D03               	skipz
  5427  0D5D  2D60               	goto	u3165
  5428  0D5E  0820               	movf	___awdiv@divisor,w
  5429  0D5F  0222               	subwf	___awdiv@dividend,w
  5430  0D60                     u3165:	
  5431  0D60  1C03               	skipc
  5432  0D61  2D63               	goto	u3161
  5433  0D62  2D64               	goto	u3160
  5434  0D63                     u3161:	
  5435  0D63  2D6B               	goto	l2973
  5436  0D64                     u3160:	
  5437  0D64                     l2969:	
  5438  0D64  0820               	movf	___awdiv@divisor,w
  5439  0D65  02A2               	subwf	___awdiv@dividend,f
  5440  0D66  0821               	movf	___awdiv@divisor+1,w
  5441  0D67  1C03               	skipc
  5442  0D68  03A3               	decf	___awdiv@dividend+1,f
  5443  0D69  02A3               	subwf	___awdiv@dividend+1,f
  5444  0D6A                     l2971:	
  5445  0D6A  1427               	bsf	___awdiv@quotient,0
  5446  0D6B                     l2973:	
  5447  0D6B  3001               	movlw	1
  5448  0D6C                     u3175:	
  5449  0D6C  1003               	clrc
  5450  0D6D  0CA1               	rrf	___awdiv@divisor+1,f
  5451  0D6E  0CA0               	rrf	___awdiv@divisor,f
  5452  0D6F  3EFF               	addlw	-1
  5453  0D70  1D03               	skipz
  5454  0D71  2D6C               	goto	u3175
  5455  0D72                     l2975:	
  5456  0D72  3001               	movlw	1
  5457  0D73  02A5               	subwf	___awdiv@counter,f
  5458  0D74  1D03               	btfss	3,2
  5459  0D75  2D77               	goto	u3181
  5460  0D76  2D78               	goto	u3180
  5461  0D77                     u3181:	
  5462  0D77  2D53               	goto	l2967
  5463  0D78                     u3180:	
  5464  0D78                     l2977:	
  5465  0D78  0826               	movf	___awdiv@sign,w
  5466  0D79  1903               	btfsc	3,2
  5467  0D7A  2D7C               	goto	u3191
  5468  0D7B  2D7D               	goto	u3190
  5469  0D7C                     u3191:	
  5470  0D7C  2D82               	goto	l2981
  5471  0D7D                     u3190:	
  5472  0D7D                     l2979:	
  5473  0D7D  09A7               	comf	___awdiv@quotient,f
  5474  0D7E  09A8               	comf	___awdiv@quotient+1,f
  5475  0D7F  0AA7               	incf	___awdiv@quotient,f
  5476  0D80  1903               	skipnz
  5477  0D81  0AA8               	incf	___awdiv@quotient+1,f
  5478  0D82                     l2981:	
  5479  0D82  0828               	movf	___awdiv@quotient+1,w
  5480  0D83  00A1               	movwf	?___awdiv+1
  5481  0D84  0827               	movf	___awdiv@quotient,w
  5482  0D85  00A0               	movwf	?___awdiv
  5483  0D86                     l736:	
  5484  0D86  0008               	return
  5485  0D87                     __end_of___awdiv:	
  5486                           
  5487                           	psect	text20
  5488  09E2                     __ptext20:	
  5489 ;; *************** function _accionesDeshacer *****************
  5490 ;; Defined at:
  5491 ;;		line 23 in file "acciones.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0
  5508 ;;      Totals:         0       0       0       0       0
  5509 ;;Total ram usage:        0 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    4
  5512 ;; This function calls:
  5513 ;;		_eliminarProd
  5514 ;;		_envioTX
  5515 ;;		_mostrarDigitos
  5516 ;; This function is called by:
  5517 ;;		_main
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           
  5522                           ;psect for function _accionesDeshacer
  5523  09E2                     _accionesDeshacer:	
  5524  09E2                     l3339:	
  5525                           ;incstack = 0
  5526                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5527                           
  5528                           
  5529                           ;acciones.c: 24:     if (cuenta != auxCuenta) {
  5530  09E2  1683               	bsf	3,5	;RP0=1, select bank3
  5531  09E3  1703               	bsf	3,6	;RP1=1, select bank3
  5532  09E4  0855               	movf	(_auxCuenta+1)^(0+384),w
  5533  09E5  0671               	xorwf	_cuenta+1,w
  5534  09E6  1D03               	skipz
  5535  09E7  29EA               	goto	u3765
  5536  09E8  0854               	movf	_auxCuenta^(0+384),w
  5537  09E9  0670               	xorwf	_cuenta,w
  5538  09EA                     u3765:	
  5539  09EA  1903               	skipnz
  5540  09EB  29ED               	goto	u3761
  5541  09EC  29EE               	goto	u3760
  5542  09ED                     u3761:	
  5543  09ED  2A0E               	goto	l3347
  5544  09EE                     u3760:	
  5545  09EE                     l3341:	
  5546                           
  5547                           ;acciones.c: 25:         cuenta = auxCuenta;
  5548  09EE  0855               	movf	(_auxCuenta+1)^(0+384),w
  5549  09EF  00F1               	movwf	_cuenta+1
  5550  09F0  0854               	movf	_auxCuenta^(0+384),w
  5551  09F1  00F0               	movwf	_cuenta
  5552  09F2                     l3343:	
  5553                           
  5554                           ;acciones.c: 27:         eliminarProd(productoIngresado);
  5555  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  5556  09F3  1303               	bcf	3,6	;RP1=0, select bank1
  5557  09F4  085F               	movf	(_productoIngresado+1)^(0+128),w
  5558  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  5559  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  5560  09F7  00AF               	movwf	eliminarProd@tp+1
  5561  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  5562  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  5563  09FA  085E               	movf	_productoIngresado^(0+128),w
  5564  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  5565  09FC  1303               	bcf	3,6	;RP1=0, select bank0
  5566  09FD  00AE               	movwf	eliminarProd@tp
  5567  09FE  120A  158A  23F4  120A  158A  	fcall	_eliminarProd
  5568  0A03                     l3345:	
  5569                           
  5570                           ;acciones.c: 28:         mostrarDigitos(cuenta);
  5571  0A03  0871               	movf	_cuenta+1,w
  5572  0A04  1283               	bcf	3,5	;RP0=0, select bank0
  5573  0A05  1303               	bcf	3,6	;RP1=0, select bank0
  5574  0A06  00B5               	movwf	mostrarDigitos@num+1
  5575  0A07  0870               	movf	_cuenta,w
  5576  0A08  00B4               	movwf	mostrarDigitos@num
  5577  0A09  120A  158A  25F5  120A  158A  	fcall	_mostrarDigitos
  5578  0A0E                     l3347:	
  5579                           
  5580                           ;acciones.c: 30:     if (modoDebug){
  5581  0A0E  0872               	movf	_modoDebug,w
  5582  0A0F  1903               	btfsc	3,2
  5583  0A10  2A12               	goto	u3771
  5584  0A11  2A13               	goto	u3770
  5585  0A12                     u3771:	
  5586  0A12  2A1E               	goto	l63
  5587  0A13                     u3770:	
  5588  0A13                     l3349:	
  5589                           
  5590                           ;acciones.c: 31:         envioTX("Producto cancelado");
  5591  0A13  30FF               	movlw	low (STR_2| (0+32768))
  5592  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  5593  0A15  1303               	bcf	3,6	;RP1=0, select bank0
  5594  0A16  00A0               	movwf	envioTX@mensaje
  5595  0A17  3083               	movlw	high (STR_2| (0+32768))
  5596  0A18  00A1               	movwf	envioTX@mensaje+1
  5597  0A19  120A  158A  216A  120A  158A  	fcall	_envioTX
  5598  0A1E                     l63:	
  5599  0A1E  0008               	return
  5600  0A1F                     __end_of_accionesDeshacer:	
  5601                           
  5602                           	psect	text21
  5603  0BF4                     __ptext21:	
  5604 ;; *************** function _eliminarProd *****************
  5605 ;; Defined at:
  5606 ;;		line 47 in file "manejoProductos.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  tp              2   14[BANK0 ] short 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  i               2   19[BANK0 ] short 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5620 ;;      Params:         0       2       0       0       0
  5621 ;;      Locals:         0       2       0       0       0
  5622 ;;      Temps:          0       3       0       0       0
  5623 ;;      Totals:         0       7       0       0       0
  5624 ;;Total ram usage:        7 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    3
  5627 ;; This function calls:
  5628 ;;		_pow
  5629 ;; This function is called by:
  5630 ;;		_accionesDeshacer
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _eliminarProd
  5636  0BF4                     _eliminarProd:	
  5637  0BF4                     l3227:	
  5638                           ;incstack = 0
  5639                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5640                           
  5641                           
  5642                           ;manejoProductos.c: 48:         for(short int i = 12; i>=0; i--) {
  5643  0BF4  300C               	movlw	12
  5644  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  5646  0BF7  00B3               	movwf	eliminarProd@i
  5647  0BF8  3000               	movlw	0
  5648  0BF9  00B4               	movwf	eliminarProd@i+1
  5649  0BFA                     l3233:	
  5650                           
  5651                           ;manejoProductos.c: 49:         if( tp >= 8*i) {
  5652  0BFA  0834               	movf	eliminarProd@i+1,w
  5653  0BFB  00B1               	movwf	??_eliminarProd+1
  5654  0BFC  0833               	movf	eliminarProd@i,w
  5655  0BFD  00B0               	movwf	??_eliminarProd
  5656  0BFE  1003               	clrc
  5657  0BFF  0DB0               	rlf	??_eliminarProd,f
  5658  0C00  0DB1               	rlf	??_eliminarProd+1,f
  5659  0C01  1003               	clrc
  5660  0C02  0DB0               	rlf	??_eliminarProd,f
  5661  0C03  0DB1               	rlf	??_eliminarProd+1,f
  5662  0C04  1003               	clrc
  5663  0C05  0DB0               	rlf	??_eliminarProd,f
  5664  0C06  0DB1               	rlf	??_eliminarProd+1,f
  5665  0C07  082F               	movf	eliminarProd@tp+1,w
  5666  0C08  3A80               	xorlw	128
  5667  0C09  00B2               	movwf	??_eliminarProd+2
  5668  0C0A  0831               	movf	??_eliminarProd+1,w
  5669  0C0B  3A80               	xorlw	128
  5670  0C0C  0232               	subwf	??_eliminarProd+2,w
  5671  0C0D  1D03               	skipz
  5672  0C0E  2C11               	goto	u3625
  5673  0C0F  0830               	movf	??_eliminarProd,w
  5674  0C10  022E               	subwf	eliminarProd@tp,w
  5675  0C11                     u3625:	
  5676  0C11  1C03               	skipc
  5677  0C12  2C14               	goto	u3621
  5678  0C13  2C15               	goto	u3620
  5679  0C14                     u3621:	
  5680  0C14  2C49               	goto	l3241
  5681  0C15                     u3620:	
  5682  0C15                     l3235:	
  5683                           
  5684                           ;manejoProductos.c: 51:             tp = tp - 8*i;
  5685  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  5686  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  5687  0C17  0834               	movf	eliminarProd@i+1,w
  5688  0C18  00B1               	movwf	??_eliminarProd+1
  5689  0C19  0833               	movf	eliminarProd@i,w
  5690  0C1A  00B0               	movwf	??_eliminarProd
  5691  0C1B  1003               	clrc
  5692  0C1C  0DB0               	rlf	??_eliminarProd,f
  5693  0C1D  0DB1               	rlf	??_eliminarProd+1,f
  5694  0C1E  1003               	clrc
  5695  0C1F  0DB0               	rlf	??_eliminarProd,f
  5696  0C20  0DB1               	rlf	??_eliminarProd+1,f
  5697  0C21  1003               	clrc
  5698  0C22  0DB0               	rlf	??_eliminarProd,f
  5699  0C23  0DB1               	rlf	??_eliminarProd+1,f
  5700  0C24  0830               	movf	??_eliminarProd,w
  5701  0C25  022E               	subwf	eliminarProd@tp,w
  5702  0C26  00AE               	movwf	eliminarProd@tp
  5703  0C27  0831               	movf	??_eliminarProd+1,w
  5704  0C28  1C03               	skipc
  5705  0C29  0A31               	incf	??_eliminarProd+1,w
  5706  0C2A  022F               	subwf	eliminarProd@tp+1,w
  5707  0C2B  00AF               	movwf	eliminarProd@tp+1
  5708  0C2C                     l3237:	
  5709                           
  5710                           ;manejoProductos.c: 52:             prodIngresados[i] = prodIngresados[i] ^ pow(2,tp);
  5711  0C2C  0833               	movf	eliminarProd@i,w
  5712  0C2D  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5713  0C2E  0084               	movwf	4
  5714  0C2F  3002               	movlw	2
  5715  0C30  00A6               	movwf	pow@numero
  5716  0C31  3000               	movlw	0
  5717  0C32  00A7               	movwf	pow@numero+1
  5718  0C33  082F               	movf	eliminarProd@tp+1,w
  5719  0C34  00A9               	movwf	pow@potencia+1
  5720  0C35  082E               	movf	eliminarProd@tp,w
  5721  0C36  00A8               	movwf	pow@potencia
  5722  0C37  120A  158A  2130  120A  158A  	fcall	_pow
  5723  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0C3E  0826               	movf	?_pow,w
  5726  0C3F  1383               	bcf	3,7	;select IRP bank1
  5727  0C40  0600               	xorwf	0,w
  5728  0C41  00B0               	movwf	??_eliminarProd
  5729  0C42  0833               	movf	eliminarProd@i,w
  5730  0C43  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5731  0C44  0084               	movwf	4
  5732  0C45  0830               	movf	??_eliminarProd,w
  5733  0C46  0080               	movwf	0
  5734  0C47                     l3239:	
  5735                           
  5736                           ;manejoProductos.c: 53:             i = 0;
  5737  0C47  01B3               	clrf	eliminarProd@i
  5738  0C48  01B4               	clrf	eliminarProd@i+1
  5739  0C49                     l3241:	
  5740                           
  5741                           ;manejoProductos.c: 56:     }
  5742  0C49  30FF               	movlw	255
  5743  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  5744  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  5745  0C4C  07B3               	addwf	eliminarProd@i,f
  5746  0C4D  1803               	skipnc
  5747  0C4E  0AB4               	incf	eliminarProd@i+1,f
  5748  0C4F  30FF               	movlw	255
  5749  0C50  07B4               	addwf	eliminarProd@i+1,f
  5750  0C51                     l3243:	
  5751  0C51  1FB4               	btfss	eliminarProd@i+1,7
  5752  0C52  2C54               	goto	u3631
  5753  0C53  2C55               	goto	u3630
  5754  0C54                     u3631:	
  5755  0C54  2BFA               	goto	l3233
  5756  0C55                     u3630:	
  5757  0C55                     l384:	
  5758  0C55  0008               	return
  5759  0C56                     __end_of_eliminarProd:	
  5760                           
  5761                           	psect	text22
  5762  0930                     __ptext22:	
  5763 ;; *************** function _pow *****************
  5764 ;; Defined at:
  5765 ;;		line 3 in file "manejoProductos.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  numero          2    6[BANK0 ] unsigned int 
  5768 ;;  potencia        2    8[BANK0 ] unsigned int 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  i               2   10[BANK0 ] int 
  5771 ;;  resultado       2   12[BANK0 ] unsigned int 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  2    6[BANK0 ] unsigned int 
  5774 ;; Registers used:
  5775 ;;		wreg, status,2, status,0, pclath, cstack
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5781 ;;      Params:         0       4       0       0       0
  5782 ;;      Locals:         0       4       0       0       0
  5783 ;;      Temps:          0       0       0       0       0
  5784 ;;      Totals:         0       8       0       0       0
  5785 ;;Total ram usage:        8 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    2
  5788 ;; This function calls:
  5789 ;;		___wmul
  5790 ;; This function is called by:
  5791 ;;		_ingresoProd
  5792 ;;		_verificarProd
  5793 ;;		_eliminarProd
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function _pow
  5799  0930                     _pow:	
  5800  0930                     l2911:	
  5801                           ;incstack = 0
  5802                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  5803                           
  5804                           
  5805                           ;manejoProductos.c: 4:     unsigned int resultado = 0;
  5806  0930  1283               	bcf	3,5	;RP0=0, select bank0
  5807  0931  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0932  01AC               	clrf	pow@resultado
  5809  0933  01AD               	clrf	pow@resultado+1
  5810                           
  5811                           ;manejoProductos.c: 6:     for (int i = 0; i <= potencia; i++){
  5812  0934  01AA               	clrf	pow@i
  5813  0935  01AB               	clrf	pow@i+1
  5814  0936  295B               	goto	l2921
  5815  0937                     l2913:	
  5816                           
  5817                           ;manejoProductos.c: 7:         if (i == 0){
  5818  0937  082A               	movf	pow@i,w
  5819  0938  042B               	iorwf	pow@i+1,w
  5820  0939  1D03               	btfss	3,2
  5821  093A  293C               	goto	u3061
  5822  093B  293D               	goto	u3060
  5823  093C                     u3061:	
  5824  093C  2942               	goto	l2917
  5825  093D                     u3060:	
  5826  093D                     l2915:	
  5827                           
  5828                           ;manejoProductos.c: 8:         resultado = 1;
  5829  093D  3001               	movlw	1
  5830  093E  00AC               	movwf	pow@resultado
  5831  093F  3000               	movlw	0
  5832  0940  00AD               	movwf	pow@resultado+1
  5833                           
  5834                           ;manejoProductos.c: 9:         }
  5835  0941  2955               	goto	l2919
  5836  0942                     l2917:	
  5837                           
  5838                           ;manejoProductos.c: 11:             resultado = resultado * numero;
  5839  0942  082D               	movf	pow@resultado+1,w
  5840  0943  00A1               	movwf	___wmul@multiplier+1
  5841  0944  082C               	movf	pow@resultado,w
  5842  0945  00A0               	movwf	___wmul@multiplier
  5843  0946  0827               	movf	pow@numero+1,w
  5844  0947  00A3               	movwf	___wmul@multiplicand+1
  5845  0948  0826               	movf	pow@numero,w
  5846  0949  00A2               	movwf	___wmul@multiplicand
  5847  094A  120A  158A  209D  120A  158A  	fcall	___wmul
  5848  094F  1283               	bcf	3,5	;RP0=0, select bank0
  5849  0950  1303               	bcf	3,6	;RP1=0, select bank0
  5850  0951  0821               	movf	?___wmul+1,w
  5851  0952  00AD               	movwf	pow@resultado+1
  5852  0953  0820               	movf	?___wmul,w
  5853  0954  00AC               	movwf	pow@resultado
  5854  0955                     l2919:	
  5855                           
  5856                           ;manejoProductos.c: 13:     }
  5857  0955  3001               	movlw	1
  5858  0956  07AA               	addwf	pow@i,f
  5859  0957  1803               	skipnc
  5860  0958  0AAB               	incf	pow@i+1,f
  5861  0959  3000               	movlw	0
  5862  095A  07AB               	addwf	pow@i+1,f
  5863  095B                     l2921:	
  5864  095B  082B               	movf	pow@i+1,w
  5865  095C  0229               	subwf	pow@potencia+1,w
  5866  095D  1D03               	skipz
  5867  095E  2961               	goto	u3075
  5868  095F  082A               	movf	pow@i,w
  5869  0960  0228               	subwf	pow@potencia,w
  5870  0961                     u3075:	
  5871  0961  1803               	skipnc
  5872  0962  2964               	goto	u3071
  5873  0963  2965               	goto	u3070
  5874  0964                     u3071:	
  5875  0964  2937               	goto	l2913
  5876  0965                     u3070:	
  5877  0965                     l2923:	
  5878                           
  5879                           ;manejoProductos.c: 14:     return resultado;
  5880  0965  082D               	movf	pow@resultado+1,w
  5881  0966  00A7               	movwf	?_pow+1
  5882  0967  082C               	movf	pow@resultado,w
  5883  0968  00A6               	movwf	?_pow
  5884  0969                     l365:	
  5885  0969  0008               	return
  5886  096A                     __end_of_pow:	
  5887                           
  5888                           	psect	text23
  5889  089D                     __ptext23:	
  5890 ;; *************** function ___wmul *****************
  5891 ;; Defined at:
  5892 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5895 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;  product         2    4[BANK0 ] unsigned int 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  2    0[BANK0 ] unsigned int 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         0       4       0       0       0
  5908 ;;      Locals:         0       2       0       0       0
  5909 ;;      Temps:          0       0       0       0       0
  5910 ;;      Totals:         0       6       0       0       0
  5911 ;;Total ram usage:        6 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    1
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_lecturaConsulta
  5918 ;;		_main
  5919 ;;		_pow
  5920 ;;		_agregarModificarPrecio
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function ___wmul
  5926  089D                     ___wmul:	
  5927  089D                     l2733:	
  5928                           ;incstack = 0
  5929                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5930                           
  5931  089D  1283               	bcf	3,5	;RP0=0, select bank0
  5932  089E  1303               	bcf	3,6	;RP1=0, select bank0
  5933  089F  01A4               	clrf	___wmul@product
  5934  08A0  01A5               	clrf	___wmul@product+1
  5935  08A1                     l2735:	
  5936  08A1  1C20               	btfss	___wmul@multiplier,0
  5937  08A2  28A4               	goto	u2711
  5938  08A3  28A5               	goto	u2710
  5939  08A4                     u2711:	
  5940  08A4  28AB               	goto	l583
  5941  08A5                     u2710:	
  5942  08A5                     l2737:	
  5943  08A5  0822               	movf	___wmul@multiplicand,w
  5944  08A6  07A4               	addwf	___wmul@product,f
  5945  08A7  1803               	skipnc
  5946  08A8  0AA5               	incf	___wmul@product+1,f
  5947  08A9  0823               	movf	___wmul@multiplicand+1,w
  5948  08AA  07A5               	addwf	___wmul@product+1,f
  5949  08AB                     l583:	
  5950  08AB  3001               	movlw	1
  5951  08AC                     u2725:	
  5952  08AC  1003               	clrc
  5953  08AD  0DA2               	rlf	___wmul@multiplicand,f
  5954  08AE  0DA3               	rlf	___wmul@multiplicand+1,f
  5955  08AF  3EFF               	addlw	-1
  5956  08B0  1D03               	skipz
  5957  08B1  28AC               	goto	u2725
  5958  08B2                     l2739:	
  5959  08B2  3001               	movlw	1
  5960  08B3                     u2735:	
  5961  08B3  1003               	clrc
  5962  08B4  0CA1               	rrf	___wmul@multiplier+1,f
  5963  08B5  0CA0               	rrf	___wmul@multiplier,f
  5964  08B6  3EFF               	addlw	-1
  5965  08B7  1D03               	skipz
  5966  08B8  28B3               	goto	u2735
  5967  08B9                     l2741:	
  5968  08B9  0820               	movf	___wmul@multiplier,w
  5969  08BA  0421               	iorwf	___wmul@multiplier+1,w
  5970  08BB  1D03               	btfss	3,2
  5971  08BC  28BE               	goto	u2741
  5972  08BD  28BF               	goto	u2740
  5973  08BE                     u2741:	
  5974  08BE  28A1               	goto	l2735
  5975  08BF                     u2740:	
  5976  08BF                     l2743:	
  5977  08BF  0825               	movf	___wmul@product+1,w
  5978  08C0  00A1               	movwf	?___wmul+1
  5979  08C1  0824               	movf	___wmul@product,w
  5980  08C2  00A0               	movwf	?___wmul
  5981  08C3                     l585:	
  5982  08C3  0008               	return
  5983  08C4                     __end_of___wmul:	
  5984                           
  5985                           	psect	text24
  5986  024B                     __ptext24:	
  5987 ;; *************** function _accionesAceptar *****************
  5988 ;; Defined at:
  5989 ;;		line 4 in file "acciones.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  strLote        32    0[BANK1 ] unsigned char [32]
  5994 ;;  i               2   32[BANK1 ] short 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6004 ;;      Params:         0       0       0       0       0
  6005 ;;      Locals:         0       0      34       0       0
  6006 ;;      Temps:          0       4       0       0       0
  6007 ;;      Totals:         0       4      34       0       0
  6008 ;;Total ram usage:       38 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    3
  6011 ;; This function calls:
  6012 ;;		_bailenLeds
  6013 ;;		_envioTX
  6014 ;;		_mostrarDigitos
  6015 ;;		_sprintf
  6016 ;; This function is called by:
  6017 ;;		_main
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function _accionesAceptar
  6023  024B                     _accionesAceptar:	
  6024  024B                     l3313:	
  6025                           ;incstack = 0
  6026                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6027                           
  6028                           
  6029                           ;acciones.c: 6:     ventasLote++;
  6030  024B  3001               	movlw	1
  6031  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6032  024D  1303               	bcf	3,6	;RP1=0, select bank0
  6033  024E  00CA               	movwf	??_accionesAceptar
  6034  024F  084A               	movf	??_accionesAceptar,w
  6035  0250  07EE               	addwf	_ventasLote,f
  6036  0251                     l3315:	
  6037                           
  6038                           ;acciones.c: 7:     montosLote+=cuenta;
  6039  0251  0870               	movf	_cuenta,w
  6040  0252  1683               	bsf	3,5	;RP0=1, select bank1
  6041  0253  1303               	bcf	3,6	;RP1=0, select bank1
  6042  0254  07DA               	addwf	_montosLote^(0+128),f
  6043  0255  1803               	skipnc
  6044  0256  0ADB               	incf	(_montosLote+1)^(0+128),f
  6045  0257  0871               	movf	_cuenta+1,w
  6046  0258  07DB               	addwf	(_montosLote+1)^(0+128),f
  6047  0259                     l3317:	
  6048                           
  6049                           ;acciones.c: 8:     cuenta = 0;
  6050  0259  01F0               	clrf	_cuenta
  6051  025A  01F1               	clrf	_cuenta+1
  6052  025B                     l3319:	
  6053                           
  6054                           ;acciones.c: 9:     auxCuenta = 0;
  6055  025B  1683               	bsf	3,5	;RP0=1, select bank3
  6056  025C  1703               	bsf	3,6	;RP1=1, select bank3
  6057  025D  01D4               	clrf	_auxCuenta^(0+384)
  6058  025E  01D5               	clrf	(_auxCuenta+1)^(0+384)
  6059  025F                     l3321:	
  6060                           
  6061                           ;acciones.c: 10:     for(short int i = 0; i < 13; i++){
  6062  025F  1683               	bsf	3,5	;RP0=1, select bank1
  6063  0260  1303               	bcf	3,6	;RP1=0, select bank1
  6064  0261  01C0               	clrf	accionesAceptar@i^(0+128)
  6065  0262  01C1               	clrf	(accionesAceptar@i+1)^(0+128)
  6066  0263                     l3327:	
  6067                           
  6068                           ;acciones.c: 11:         prodIngresados[i] = 0;
  6069  0263  1683               	bsf	3,5	;RP0=1, select bank1
  6070  0264  1303               	bcf	3,6	;RP1=0, select bank1
  6071  0265  0840               	movf	accionesAceptar@i^(0+128),w
  6072  0266  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  6073  0267  0084               	movwf	4
  6074  0268  1383               	bcf	3,7	;select IRP bank1
  6075  0269  0180               	clrf	0
  6076  026A                     l3329:	
  6077                           
  6078                           ;acciones.c: 12:     }
  6079  026A  3001               	movlw	1
  6080  026B  07C0               	addwf	accionesAceptar@i^(0+128),f
  6081  026C  1803               	skipnc
  6082  026D  0AC1               	incf	(accionesAceptar@i+1)^(0+128),f
  6083  026E  3000               	movlw	0
  6084  026F  07C1               	addwf	(accionesAceptar@i+1)^(0+128),f
  6085  0270                     l3331:	
  6086  0270  0841               	movf	(accionesAceptar@i+1)^(0+128),w
  6087  0271  3A80               	xorlw	128
  6088  0272  00FF               	movwf	btemp+1
  6089  0273  3080               	movlw	128
  6090  0274  027F               	subwf	btemp+1,w
  6091  0275  1D03               	skipz
  6092  0276  2A79               	goto	u3745
  6093  0277  300D               	movlw	13
  6094  0278  0240               	subwf	accionesAceptar@i^(0+128),w
  6095  0279                     u3745:	
  6096  0279  1C03               	skipc
  6097  027A  2A7C               	goto	u3741
  6098  027B  2A7D               	goto	u3740
  6099  027C                     u3741:	
  6100  027C  2A63               	goto	l3327
  6101  027D                     u3740:	
  6102  027D                     l3333:	
  6103                           
  6104                           ;acciones.c: 13:     if(modoDebug){
  6105  027D  0872               	movf	_modoDebug,w
  6106  027E  1903               	btfsc	3,2
  6107  027F  2A81               	goto	u3751
  6108  0280  2A82               	goto	u3750
  6109  0281                     u3751:	
  6110  0281  2AB6               	goto	l57
  6111  0282                     u3750:	
  6112  0282                     l3335:	
  6113                           
  6114                           ;acciones.c: 14:         char strLote[32];;acciones.c: 16:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  6115  0282  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6116  0283  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0284  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0285  00B4               	movwf	sprintf@sp
  6119  0286  3000               	movlw	0
  6120  0287  00B5               	movwf	sprintf@sp+1
  6121  0288  3023               	movlw	low (STR_1| (0+32768))
  6122  0289  00B6               	movwf	sprintf@f
  6123  028A  3084               	movlw	high (STR_1| (0+32768))
  6124  028B  00B7               	movwf	sprintf@f+1
  6125  028C  0878               	movf	_nroLote,w
  6126  028D  00CA               	movwf	??_accionesAceptar
  6127  028E  01CB               	clrf	??_accionesAceptar+1
  6128  028F  084A               	movf	??_accionesAceptar,w
  6129  0290  00B8               	movwf	?_sprintf+4
  6130  0291  084B               	movf	??_accionesAceptar+1,w
  6131  0292  00B9               	movwf	?_sprintf+5
  6132  0293  086E               	movf	_ventasLote,w
  6133  0294  00CC               	movwf	??_accionesAceptar+2
  6134  0295  01CD               	clrf	??_accionesAceptar+3
  6135  0296  084C               	movf	??_accionesAceptar+2,w
  6136  0297  00BA               	movwf	?_sprintf+6
  6137  0298  084D               	movf	??_accionesAceptar+3,w
  6138  0299  00BB               	movwf	?_sprintf+7
  6139  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6140  029B  1303               	bcf	3,6	;RP1=0, select bank1
  6141  029C  085B               	movf	(_montosLote+1)^(0+128),w
  6142  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6143  029E  1303               	bcf	3,6	;RP1=0, select bank0
  6144  029F  00BD               	movwf	?_sprintf+9
  6145  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6146  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  6147  02A2  085A               	movf	_montosLote^(0+128),w
  6148  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6149  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6150  02A5  00BC               	movwf	?_sprintf+8
  6151  02A6  120A  118A  2453  120A  118A  	fcall	_sprintf
  6152                           
  6153                           ;acciones.c: 17:         envioTX(strLote);
  6154  02AB  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6155  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6156  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  6157  02AE  00A0               	movwf	envioTX@mensaje
  6158  02AF  3000               	movlw	0
  6159  02B0  00A1               	movwf	envioTX@mensaje+1
  6160  02B1  120A  158A  216A  120A  118A  	fcall	_envioTX
  6161  02B6                     l57:	
  6162                           ;acciones.c: 18:     }
  6163                           
  6164                           
  6165                           ;acciones.c: 19:     mostrarDigitos(cuenta);
  6166  02B6  0871               	movf	_cuenta+1,w
  6167  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  6168  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  6169  02B9  00B5               	movwf	mostrarDigitos@num+1
  6170  02BA  0870               	movf	_cuenta,w
  6171  02BB  00B4               	movwf	mostrarDigitos@num
  6172  02BC  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  6173  02C1                     l3337:	
  6174                           
  6175                           ;acciones.c: 20:     bailenLeds();
  6176  02C1  120A  158A  22F0  120A  118A  	fcall	_bailenLeds
  6177  02C6                     l58:	
  6178  02C6  0008               	return
  6179  02C7                     __end_of_accionesAceptar:	
  6180                           
  6181                           	psect	text25
  6182  0453                     __ptext25:	
  6183 ;; *************** function _sprintf *****************
  6184 ;; Defined at:
  6185 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  sp              2   20[BANK0 ] PTR unsigned char 
  6188 ;;		 -> agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), lecturaConsulta@strLote(32), 
  6189 ;;		 -> consultaPrecio@mensaje(26), cierreDeLote@strLote(32), accionesPuertoSerial@mensaje(12), accionesAceptar@strLote(
      +32), 
  6190 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  6191 ;;		 -> STR_17(9), STR_16(10), STR_15(25), STR_13(17), 
  6192 ;;		 -> STR_9(22), STR_8(25), STR_5(24), STR_3(5), 
  6193 ;;		 -> STR_1(17), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  tmpval          4    0        struct .
  6196 ;;  val             2   39[BANK0 ] unsigned int 
  6197 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  6198 ;;		 -> STR_19(7), ?_sprintf(2), adresult(2), codigoEntrada(10), 
  6199 ;;  len             2    0        unsigned int 
  6200 ;;  c               1   41[BANK0 ] unsigned char 
  6201 ;;  ap              1   36[BANK0 ] PTR void [1]
  6202 ;;		 -> ?_sprintf(2), 
  6203 ;;  prec            1   35[BANK0 ] char 
  6204 ;;  flag            1   34[BANK0 ] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  2   20[BANK0 ] int 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6214 ;;      Params:         0      10       0       0       0
  6215 ;;      Locals:         0       8       0       0       0
  6216 ;;      Temps:          0       4       0       0       0
  6217 ;;      Totals:         0      22       0       0       0
  6218 ;;Total ram usage:       22 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    2
  6221 ;; This function calls:
  6222 ;;		___lwdiv
  6223 ;;		___lwmod
  6224 ;; This function is called by:
  6225 ;;		_accionesAceptar
  6226 ;;		_accionesPuertoSerial
  6227 ;;		_cierreDeLote
  6228 ;;		_consultaPrecio
  6229 ;;		_lecturaConsulta
  6230 ;;		_main
  6231 ;;		_agregarModificarPrecio
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           
  6236                           ;psect for function _sprintf
  6237  0453                     _sprintf:	
  6238  0453                     l2795:	
  6239                           ;incstack = 0
  6240                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6241                           
  6242                           
  6243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  6244  0453  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6245  0454  1283               	bcf	3,5	;RP0=0, select bank0
  6246  0455  1303               	bcf	3,6	;RP1=0, select bank0
  6247  0456  00BE               	movwf	??_sprintf
  6248  0457  083E               	movf	??_sprintf,w
  6249  0458  00C4               	movwf	sprintf@ap
  6250                           
  6251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6252  0459  2D87               	goto	l2861
  6253  045A                     l2797:	
  6254                           
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  6256  045A  3025               	movlw	37
  6257  045B  0649               	xorwf	sprintf@c,w
  6258  045C  1903               	btfsc	3,2
  6259  045D  2C5F               	goto	u2881
  6260  045E  2C60               	goto	u2880
  6261  045F                     u2881:	
  6262  045F  2C70               	goto	l2803
  6263  0460                     u2880:	
  6264  0460                     l2799:	
  6265                           
  6266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  6267  0460  0849               	movf	sprintf@c,w
  6268  0461  00BE               	movwf	??_sprintf
  6269  0462  0834               	movf	sprintf@sp,w
  6270  0463  0084               	movwf	4
  6271  0464  1783               	bsf	3,7
  6272  0465  1C35               	btfss	sprintf@sp+1,0
  6273  0466  1383               	bcf	3,7
  6274  0467  083E               	movf	??_sprintf,w
  6275  0468  0080               	movwf	0
  6276  0469                     l2801:	
  6277  0469  3001               	movlw	1
  6278  046A  07B4               	addwf	sprintf@sp,f
  6279  046B  1803               	skipnc
  6280  046C  0AB5               	incf	sprintf@sp+1,f
  6281  046D  3000               	movlw	0
  6282  046E  07B5               	addwf	sprintf@sp+1,f
  6283                           
  6284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  6285  046F  2D87               	goto	l2861
  6286  0470                     l2803:	
  6287                           
  6288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  6289  0470  01C2               	clrf	sprintf@flag
  6290                           
  6291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  6292  0471  2CB6               	goto	l2821
  6293  0472                     l2805:	
  6294                           
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 760:     cp
      +                           = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  6296  0472  0844               	movf	sprintf@ap,w
  6297  0473  0084               	movwf	4
  6298  0474  1383               	bcf	3,7	;select IRP bank0
  6299  0475  0800               	movf	0,w
  6300  0476  00C5               	movwf	sprintf@cp
  6301  0477  0A84               	incf	4,f
  6302  0478  0800               	movf	0,w
  6303  0479  0384               	decf	4,f
  6304  047A  00C6               	movwf	sprintf@cp+1
  6305  047B                     l2807:	
  6306  047B  3002               	movlw	2
  6307  047C  00BE               	movwf	??_sprintf
  6308  047D  083E               	movf	??_sprintf,w
  6309  047E  07C4               	addwf	sprintf@ap,f
  6310  047F                     l2809:	
  6311                           
  6312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 766:    if(
      +                          !cp)
  6313  047F  0845               	movf	sprintf@cp,w
  6314  0480  0446               	iorwf	sprintf@cp+1,w
  6315  0481  1D03               	btfss	3,2
  6316  0482  2C84               	goto	u2891
  6317  0483  2C85               	goto	u2890
  6318  0484                     u2891:	
  6319  0484  2CA7               	goto	l566
  6320  0485                     u2890:	
  6321  0485                     l2811:	
  6322                           
  6323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 767:     cp
      +                           = "(null)";
  6324  0485  3047               	movlw	low (STR_19| (0+32768))
  6325  0486  00C5               	movwf	sprintf@cp
  6326  0487  3084               	movlw	high (STR_19| (0+32768))
  6327  0488  00C6               	movwf	sprintf@cp+1
  6328  0489  2CA7               	goto	l566
  6329  048A                     l2813:	
  6330                           
  6331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 804:     ((
      +                          *sp++ = (*cp++)));
  6332  048A  0846               	movf	sprintf@cp+1,w
  6333  048B  00FF               	movwf	btemp+1
  6334  048C  0845               	movf	sprintf@cp,w
  6335  048D  0084               	movwf	4
  6336  048E  120A  118A  2300  120A  118A  	fcall	stringtab
  6337  0493  00BE               	movwf	??_sprintf
  6338  0494  0834               	movf	sprintf@sp,w
  6339  0495  0084               	movwf	4
  6340  0496  1783               	bsf	3,7
  6341  0497  1C35               	btfss	sprintf@sp+1,0
  6342  0498  1383               	bcf	3,7
  6343  0499  083E               	movf	??_sprintf,w
  6344  049A  0080               	movwf	0
  6345  049B                     l2815:	
  6346  049B  3001               	movlw	1
  6347  049C  07C5               	addwf	sprintf@cp,f
  6348  049D  1803               	skipnc
  6349  049E  0AC6               	incf	sprintf@cp+1,f
  6350  049F  3000               	movlw	0
  6351  04A0  07C6               	addwf	sprintf@cp+1,f
  6352  04A1                     l2817:	
  6353  04A1  3001               	movlw	1
  6354  04A2  07B4               	addwf	sprintf@sp,f
  6355  04A3  1803               	skipnc
  6356  04A4  0AB5               	incf	sprintf@sp+1,f
  6357  04A5  3000               	movlw	0
  6358  04A6  07B5               	addwf	sprintf@sp+1,f
  6359  04A7                     l566:	
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 803:    whi
      +                          le(*cp)
  6362  04A7  0846               	movf	sprintf@cp+1,w
  6363  04A8  00FF               	movwf	btemp+1
  6364  04A9  0845               	movf	sprintf@cp,w
  6365  04AA  0084               	movwf	4
  6366  04AB  120A  118A  2300  120A  118A  	fcall	stringtab
  6367  04B0  3A00               	xorlw	0
  6368  04B1  1D03               	skipz
  6369  04B2  2CB4               	goto	u2901
  6370  04B3  2CB5               	goto	u2900
  6371  04B4                     u2901:	
  6372  04B4  2C8A               	goto	l2813
  6373  04B5                     u2900:	
  6374  04B5  2D87               	goto	l2861
  6375  04B6                     l2821:	
  6376  04B6  0837               	movf	sprintf@f+1,w
  6377  04B7  00BF               	movwf	??_sprintf+1
  6378  04B8  0836               	movf	sprintf@f,w
  6379  04B9  00BE               	movwf	??_sprintf
  6380  04BA  0AB6               	incf	sprintf@f,f
  6381  04BB  1903               	skipnz
  6382  04BC  0AB7               	incf	sprintf@f+1,f
  6383  04BD  083F               	movf	??_sprintf+1,w
  6384  04BE  00FF               	movwf	btemp+1
  6385  04BF  083E               	movf	??_sprintf,w
  6386  04C0  0084               	movwf	4
  6387  04C1  120A  118A  2300  120A  118A  	fcall	stringtab
  6388  04C6  00C9               	movwf	sprintf@c
  6389  04C7  00C0               	movwf	??_sprintf+2
  6390  04C8  01C1               	clrf	??_sprintf+3
  6391                           
  6392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6393                           ; Switch size 1, requested type "simple"
  6394                           ; Number of cases is 1, Range of values is 0 to 0
  6395                           ; switch strategies available:
  6396                           ; Name         Instructions Cycles
  6397                           ; simple_byte            4     3 (average)
  6398                           ; direct_byte           11     8 (fixed)
  6399                           ; jumptable            260     6 (fixed)
  6400                           ;	Chosen strategy is simple_byte
  6401  04C9  0841               	movf	??_sprintf+3,w
  6402  04CA  3A00               	xorlw	0	; case 0
  6403  04CB  1903               	skipnz
  6404  04CC  2CCE               	goto	l3527
  6405  04CD  2D87               	goto	l2861
  6406  04CE                     l3527:	
  6407                           
  6408                           ; Switch size 1, requested type "simple"
  6409                           ; Number of cases is 4, Range of values is 0 to 115
  6410                           ; switch strategies available:
  6411                           ; Name         Instructions Cycles
  6412                           ; simple_byte           13     7 (average)
  6413                           ; jumptable            260     6 (fixed)
  6414                           ;	Chosen strategy is simple_byte
  6415  04CE  0840               	movf	??_sprintf+2,w
  6416  04CF  3A00               	xorlw	0	; case 0
  6417  04D0  1903               	skipnz
  6418  04D1  2D9F               	goto	l2863
  6419  04D2  3A64               	xorlw	100	; case 100
  6420  04D3  1903               	skipnz
  6421  04D4  2CDC               	goto	l2823
  6422  04D5  3A0D               	xorlw	13	; case 105
  6423  04D6  1903               	skipnz
  6424  04D7  2CDC               	goto	l2823
  6425  04D8  3A1A               	xorlw	26	; case 115
  6426  04D9  1903               	skipnz
  6427  04DA  2C72               	goto	l2805
  6428  04DB  2D87               	goto	l2861
  6429  04DC                     l2823:	
  6430                           
  6431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6432  04DC  0844               	movf	sprintf@ap,w
  6433  04DD  0084               	movwf	4
  6434  04DE  1383               	bcf	3,7	;select IRP bank0
  6435  04DF  0800               	movf	0,w
  6436  04E0  00C7               	movwf	sprintf@val
  6437  04E1  0A84               	incf	4,f
  6438  04E2  0800               	movf	0,w
  6439  04E3  00C8               	movwf	sprintf@val+1
  6440  04E4                     l2825:	
  6441  04E4  3002               	movlw	2
  6442  04E5  00BE               	movwf	??_sprintf
  6443  04E6  083E               	movf	??_sprintf,w
  6444  04E7  07C4               	addwf	sprintf@ap,f
  6445  04E8                     l2827:	
  6446                           
  6447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  6448  04E8  1FC8               	btfss	sprintf@val+1,7
  6449  04E9  2CEB               	goto	u2911
  6450  04EA  2CEC               	goto	u2910
  6451  04EB                     u2911:	
  6452  04EB  2CF5               	goto	l2833
  6453  04EC                     u2910:	
  6454  04EC                     l2829:	
  6455                           
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  6457  04EC  3003               	movlw	3
  6458  04ED  00BE               	movwf	??_sprintf
  6459  04EE  083E               	movf	??_sprintf,w
  6460  04EF  04C2               	iorwf	sprintf@flag,f
  6461  04F0                     l2831:	
  6462                           
  6463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  6464  04F0  09C7               	comf	sprintf@val,f
  6465  04F1  09C8               	comf	sprintf@val+1,f
  6466  04F2  0AC7               	incf	sprintf@val,f
  6467  04F3  1903               	skipnz
  6468  04F4  0AC8               	incf	sprintf@val+1,f
  6469  04F5                     l2833:	
  6470                           
  6471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6472  04F5  01C9               	clrf	sprintf@c
  6473  04F6  0AC9               	incf	sprintf@c,f
  6474  04F7                     l2839:	
  6475                           
  6476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  6477  04F7  0849               	movf	sprintf@c,w
  6478  04F8  00BE               	movwf	??_sprintf
  6479  04F9  073E               	addwf	??_sprintf,w
  6480  04FA  3E12               	addlw	low (_dpowers| (0+32768))
  6481  04FB  0084               	movwf	4
  6482  04FC  3083               	movlw	high (_dpowers| (0+32768))
  6483  04FD  1803               	skipnc
  6484  04FE  3E01               	addlw	1
  6485  04FF  00FF               	movwf	btemp+1
  6486  0500  120A  118A  2300  120A  118A  	fcall	stringtab
  6487  0505  00BF               	movwf	??_sprintf+1
  6488  0506  120A  118A  2300  120A  118A  	fcall	stringtab
  6489  050B  00C0               	movwf	??_sprintf+2
  6490  050C  0840               	movf	??_sprintf+2,w
  6491  050D  0248               	subwf	sprintf@val+1,w
  6492  050E  1D03               	skipz
  6493  050F  2D12               	goto	u2925
  6494  0510  083F               	movf	??_sprintf+1,w
  6495  0511  0247               	subwf	sprintf@val,w
  6496  0512                     u2925:	
  6497  0512  1803               	skipnc
  6498  0513  2D15               	goto	u2921
  6499  0514  2D16               	goto	u2920
  6500  0515                     u2921:	
  6501  0515  2D17               	goto	l2843
  6502  0516                     u2920:	
  6503  0516  2D21               	goto	l2845
  6504  0517                     l2843:	
  6505  0517  3001               	movlw	1
  6506  0518  00BE               	movwf	??_sprintf
  6507  0519  083E               	movf	??_sprintf,w
  6508  051A  07C9               	addwf	sprintf@c,f
  6509  051B  3005               	movlw	5
  6510  051C  0649               	xorwf	sprintf@c,w
  6511  051D  1D03               	btfss	3,2
  6512  051E  2D20               	goto	u2931
  6513  051F  2D21               	goto	u2930
  6514  0520                     u2931:	
  6515  0520  2CF7               	goto	l2839
  6516  0521                     u2930:	
  6517  0521                     l2845:	
  6518                           
  6519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  6520  0521  0842               	movf	sprintf@flag,w
  6521  0522  3903               	andlw	3
  6522  0523  1903               	btfsc	3,2
  6523  0524  2D26               	goto	u2941
  6524  0525  2D27               	goto	u2940
  6525  0526                     u2941:	
  6526  0526  2D36               	goto	l2851
  6527  0527                     u2940:	
  6528  0527                     l2847:	
  6529                           
  6530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  6531  0527  302D               	movlw	45
  6532  0528  00BE               	movwf	??_sprintf
  6533  0529  0834               	movf	sprintf@sp,w
  6534  052A  0084               	movwf	4
  6535  052B  1783               	bsf	3,7
  6536  052C  1C35               	btfss	sprintf@sp+1,0
  6537  052D  1383               	bcf	3,7
  6538  052E  083E               	movf	??_sprintf,w
  6539  052F  0080               	movwf	0
  6540  0530                     l2849:	
  6541  0530  3001               	movlw	1
  6542  0531  07B4               	addwf	sprintf@sp,f
  6543  0532  1803               	skipnc
  6544  0533  0AB5               	incf	sprintf@sp+1,f
  6545  0534  3000               	movlw	0
  6546  0535  07B5               	addwf	sprintf@sp+1,f
  6547  0536                     l2851:	
  6548                           
  6549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  6550  0536  0849               	movf	sprintf@c,w
  6551  0537  00BE               	movwf	??_sprintf
  6552  0538  083E               	movf	??_sprintf,w
  6553  0539  00C3               	movwf	sprintf@prec
  6554                           
  6555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6556  053A  2D7E               	goto	l2859
  6557  053B                     l2853:	
  6558                           
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  6560  053B  300A               	movlw	10
  6561  053C  00AE               	movwf	___lwmod@divisor
  6562  053D  3000               	movlw	0
  6563  053E  00AF               	movwf	___lwmod@divisor+1
  6564  053F  0843               	movf	sprintf@prec,w
  6565  0540  00BE               	movwf	??_sprintf
  6566  0541  073E               	addwf	??_sprintf,w
  6567  0542  3E12               	addlw	low (_dpowers| (0+32768))
  6568  0543  0084               	movwf	4
  6569  0544  3083               	movlw	high (_dpowers| (0+32768))
  6570  0545  1803               	skipnc
  6571  0546  3E01               	addlw	1
  6572  0547  00FF               	movwf	btemp+1
  6573  0548  120A  118A  2300  120A  118A  	fcall	stringtab
  6574  054D  00A6               	movwf	___lwdiv@divisor
  6575  054E  120A  118A  2300  120A  118A  	fcall	stringtab
  6576  0553  00A7               	movwf	___lwdiv@divisor+1
  6577  0554  0848               	movf	sprintf@val+1,w
  6578  0555  00A9               	movwf	___lwdiv@dividend+1
  6579  0556  0847               	movf	sprintf@val,w
  6580  0557  00A8               	movwf	___lwdiv@dividend
  6581  0558  120A  158A  2261  120A  118A  	fcall	___lwdiv
  6582  055D  1283               	bcf	3,5	;RP0=0, select bank0
  6583  055E  1303               	bcf	3,6	;RP1=0, select bank0
  6584  055F  0827               	movf	?___lwdiv+1,w
  6585  0560  00B1               	movwf	___lwmod@dividend+1
  6586  0561  0826               	movf	?___lwdiv,w
  6587  0562  00B0               	movwf	___lwmod@dividend
  6588  0563  120A  158A  21A6  120A  118A  	fcall	___lwmod
  6589  0568  1283               	bcf	3,5	;RP0=0, select bank0
  6590  0569  1303               	bcf	3,6	;RP1=0, select bank0
  6591  056A  082E               	movf	?___lwmod,w
  6592  056B  3E30               	addlw	48
  6593  056C  00BF               	movwf	??_sprintf+1
  6594  056D  083F               	movf	??_sprintf+1,w
  6595  056E  00C9               	movwf	sprintf@c
  6596  056F                     l2855:	
  6597                           
  6598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  6599  056F  0849               	movf	sprintf@c,w
  6600  0570  00BE               	movwf	??_sprintf
  6601  0571  0834               	movf	sprintf@sp,w
  6602  0572  0084               	movwf	4
  6603  0573  1783               	bsf	3,7
  6604  0574  1C35               	btfss	sprintf@sp+1,0
  6605  0575  1383               	bcf	3,7
  6606  0576  083E               	movf	??_sprintf,w
  6607  0577  0080               	movwf	0
  6608  0578                     l2857:	
  6609  0578  3001               	movlw	1
  6610  0579  07B4               	addwf	sprintf@sp,f
  6611  057A  1803               	skipnc
  6612  057B  0AB5               	incf	sprintf@sp+1,f
  6613  057C  3000               	movlw	0
  6614  057D  07B5               	addwf	sprintf@sp+1,f
  6615  057E                     l2859:	
  6616                           
  6617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6618  057E  30FF               	movlw	255
  6619  057F  00BE               	movwf	??_sprintf
  6620  0580  083E               	movf	??_sprintf,w
  6621  0581  07C3               	addwf	sprintf@prec,f
  6622  0582  0A43               	incf	sprintf@prec,w
  6623  0583  1D03               	btfss	3,2
  6624  0584  2D86               	goto	u2951
  6625  0585  2D87               	goto	u2950
  6626  0586                     u2951:	
  6627  0586  2D3B               	goto	l2853
  6628  0587                     u2950:	
  6629  0587                     l2861:	
  6630                           
  6631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6632  0587  0837               	movf	sprintf@f+1,w
  6633  0588  00BF               	movwf	??_sprintf+1
  6634  0589  0836               	movf	sprintf@f,w
  6635  058A  00BE               	movwf	??_sprintf
  6636  058B  0AB6               	incf	sprintf@f,f
  6637  058C  1903               	skipnz
  6638  058D  0AB7               	incf	sprintf@f+1,f
  6639  058E  083F               	movf	??_sprintf+1,w
  6640  058F  00FF               	movwf	btemp+1
  6641  0590  083E               	movf	??_sprintf,w
  6642  0591  0084               	movwf	4
  6643  0592  120A  118A  2300  120A  118A  	fcall	stringtab
  6644  0597  00C0               	movwf	??_sprintf+2
  6645  0598  0840               	movf	??_sprintf+2,w
  6646  0599  00C9               	movwf	sprintf@c
  6647  059A  0849               	movf	sprintf@c,w
  6648  059B  1D03               	btfss	3,2
  6649  059C  2D9E               	goto	u2961
  6650  059D  2D9F               	goto	u2960
  6651  059E                     u2961:	
  6652  059E  2C5A               	goto	l2797
  6653  059F                     u2960:	
  6654  059F                     l2863:	
  6655                           
  6656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  6657  059F  0834               	movf	sprintf@sp,w
  6658  05A0  0084               	movwf	4
  6659  05A1  1783               	bsf	3,7
  6660  05A2  1C35               	btfss	sprintf@sp+1,0
  6661  05A3  1383               	bcf	3,7
  6662  05A4  0180               	clrf	0
  6663  05A5                     l579:	
  6664  05A5  0008               	return
  6665  05A6                     __end_of_sprintf:	
  6666                           
  6667                           	psect	text26
  6668  0DF5                     __ptext26:	
  6669 ;; *************** function _mostrarDigitos *****************
  6670 ;; Defined at:
  6671 ;;		line 17 in file "mostrarInicializar.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  num             2   20[BANK0 ] unsigned int 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6685 ;;      Params:         0       2       0       0       0
  6686 ;;      Locals:         0       2       0       0       0
  6687 ;;      Temps:          0       0       0       0       0
  6688 ;;      Totals:         0       4       0       0       0
  6689 ;;Total ram usage:        4 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    2
  6692 ;; This function calls:
  6693 ;;		___lwdiv
  6694 ;;		___lwmod
  6695 ;; This function is called by:
  6696 ;;		_accionesAceptar
  6697 ;;		_accionesDeshacer
  6698 ;;		_lecturaEtiqueta
  6699 ;;		_main
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _mostrarDigitos
  6705  0DF5                     _mostrarDigitos:	
  6706  0DF5                     l3119:	
  6707                           ;incstack = 0
  6708                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6709                           
  6710                           
  6711                           ;mostrarInicializar.c: 19:     PORTB = BS[num/100];
  6712  0DF5  3064               	movlw	100
  6713  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  6714  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  6715  0DF8  00A6               	movwf	___lwdiv@divisor
  6716  0DF9  3000               	movlw	0
  6717  0DFA  00A7               	movwf	___lwdiv@divisor+1
  6718  0DFB  0835               	movf	mostrarDigitos@num+1,w
  6719  0DFC  00A9               	movwf	___lwdiv@dividend+1
  6720  0DFD  0834               	movf	mostrarDigitos@num,w
  6721  0DFE  00A8               	movwf	___lwdiv@dividend
  6722  0DFF  120A  158A  2261  120A  158A  	fcall	___lwdiv
  6723  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  6724  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  6725  0E06  0826               	movf	?___lwdiv,w
  6726  0E07  3E1C               	addlw	low (_BS| (0+32768))
  6727  0E08  0084               	movwf	4
  6728  0E09  3083               	movlw	high (_BS| (0+32768))
  6729  0E0A  1803               	skipnc
  6730  0E0B  3E01               	addlw	1
  6731  0E0C  00FF               	movwf	btemp+1
  6732  0E0D  120A  118A  2300  120A  158A  	fcall	stringtab
  6733  0E12  0086               	movwf	6	;volatile
  6734  0E13                     l3121:	
  6735                           
  6736                           ;mostrarInicializar.c: 20:     PORTB = PORTB | ((num%100)/10);
  6737  0E13  300A               	movlw	10
  6738  0E14  00A6               	movwf	___lwdiv@divisor
  6739  0E15  3000               	movlw	0
  6740  0E16  00A7               	movwf	___lwdiv@divisor+1
  6741  0E17  0835               	movf	mostrarDigitos@num+1,w
  6742  0E18  00B1               	movwf	___lwmod@dividend+1
  6743  0E19  0834               	movf	mostrarDigitos@num,w
  6744  0E1A  00B0               	movwf	___lwmod@dividend
  6745  0E1B  3064               	movlw	100
  6746  0E1C  00AE               	movwf	___lwmod@divisor
  6747  0E1D  3000               	movlw	0
  6748  0E1E  00AF               	movwf	___lwmod@divisor+1
  6749  0E1F  120A  158A  21A6  120A  158A  	fcall	___lwmod
  6750  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  6751  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  6752  0E26  082F               	movf	?___lwmod+1,w
  6753  0E27  00A9               	movwf	___lwdiv@dividend+1
  6754  0E28  082E               	movf	?___lwmod,w
  6755  0E29  00A8               	movwf	___lwdiv@dividend
  6756  0E2A  120A  158A  2261  120A  158A  	fcall	___lwdiv
  6757  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  6758  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  6759  0E31  0826               	movf	?___lwdiv,w
  6760  0E32  0406               	iorwf	6,w
  6761  0E33  0086               	movwf	6	;volatile
  6762  0E34                     l3123:	
  6763                           
  6764                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6765  0E34  0835               	movf	mostrarDigitos@num+1,w
  6766  0E35  00B1               	movwf	___lwmod@dividend+1
  6767  0E36  0834               	movf	mostrarDigitos@num,w
  6768  0E37  00B0               	movwf	___lwmod@dividend
  6769  0E38  3064               	movlw	100
  6770  0E39  00AE               	movwf	___lwmod@divisor
  6771  0E3A  3000               	movlw	0
  6772  0E3B  00AF               	movwf	___lwmod@divisor+1
  6773  0E3C  120A  158A  21A6  120A  158A  	fcall	___lwmod
  6774  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  6775  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  6776  0E43  082F               	movf	?___lwmod+1,w
  6777  0E44  00B7               	movwf	_mostrarDigitos$1099+1
  6778  0E45  082E               	movf	?___lwmod,w
  6779  0E46  00B6               	movwf	_mostrarDigitos$1099
  6780                           
  6781                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6782  0E47  300A               	movlw	10
  6783  0E48  00AE               	movwf	___lwmod@divisor
  6784  0E49  3000               	movlw	0
  6785  0E4A  00AF               	movwf	___lwmod@divisor+1
  6786  0E4B  0837               	movf	_mostrarDigitos$1099+1,w
  6787  0E4C  00B1               	movwf	___lwmod@dividend+1
  6788  0E4D  0836               	movf	_mostrarDigitos$1099,w
  6789  0E4E  00B0               	movwf	___lwmod@dividend
  6790  0E4F  120A  158A  21A6  120A  158A  	fcall	___lwmod
  6791  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  6792  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  6793  0E56  082E               	movf	?___lwmod,w
  6794  0E57  3E1C               	addlw	low (_BS| (0+32768))
  6795  0E58  0084               	movwf	4
  6796  0E59  3083               	movlw	high (_BS| (0+32768))
  6797  0E5A  1803               	skipnc
  6798  0E5B  3E01               	addlw	1
  6799  0E5C  00FF               	movwf	btemp+1
  6800  0E5D  120A  118A  2300  120A  158A  	fcall	stringtab
  6801  0E62  0088               	movwf	8	;volatile
  6802  0E63                     l408:	
  6803  0E63  0008               	return
  6804  0E64                     __end_of_mostrarDigitos:	
  6805                           
  6806                           	psect	text27
  6807  09A6                     __ptext27:	
  6808 ;; *************** function ___lwmod *****************
  6809 ;; Defined at:
  6810 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  divisor         2   14[BANK0 ] unsigned int 
  6813 ;;  dividend        2   16[BANK0 ] unsigned int 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  counter         1   19[BANK0 ] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  2   14[BANK0 ] unsigned int 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6825 ;;      Params:         0       4       0       0       0
  6826 ;;      Locals:         0       1       0       0       0
  6827 ;;      Temps:          0       1       0       0       0
  6828 ;;      Totals:         0       6       0       0       0
  6829 ;;Total ram usage:        6 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    1
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_main
  6836 ;;		_mostrarDigitos
  6837 ;;		_sprintf
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           
  6842                           ;psect for function ___lwmod
  6843  09A6                     ___lwmod:	
  6844  09A6                     l2773:	
  6845                           ;incstack = 0
  6846                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6847                           
  6848  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  6849  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  6850  09A8  082E               	movf	___lwmod@divisor,w
  6851  09A9  042F               	iorwf	___lwmod@divisor+1,w
  6852  09AA  1903               	btfsc	3,2
  6853  09AB  29AD               	goto	u2821
  6854  09AC  29AE               	goto	u2820
  6855  09AD                     u2821:	
  6856  09AD  29DD               	goto	l2791
  6857  09AE                     u2820:	
  6858  09AE                     l2775:	
  6859  09AE  01B3               	clrf	___lwmod@counter
  6860  09AF  0AB3               	incf	___lwmod@counter,f
  6861  09B0  29BC               	goto	l2781
  6862  09B1                     l2777:	
  6863  09B1  3001               	movlw	1
  6864  09B2                     u2835:	
  6865  09B2  1003               	clrc
  6866  09B3  0DAE               	rlf	___lwmod@divisor,f
  6867  09B4  0DAF               	rlf	___lwmod@divisor+1,f
  6868  09B5  3EFF               	addlw	-1
  6869  09B6  1D03               	skipz
  6870  09B7  29B2               	goto	u2835
  6871  09B8                     l2779:	
  6872  09B8  3001               	movlw	1
  6873  09B9  00B2               	movwf	??___lwmod
  6874  09BA  0832               	movf	??___lwmod,w
  6875  09BB  07B3               	addwf	___lwmod@counter,f
  6876  09BC                     l2781:	
  6877  09BC  1FAF               	btfss	___lwmod@divisor+1,7
  6878  09BD  29BF               	goto	u2841
  6879  09BE  29C0               	goto	u2840
  6880  09BF                     u2841:	
  6881  09BF  29B1               	goto	l2777
  6882  09C0                     u2840:	
  6883  09C0                     l2783:	
  6884  09C0  082F               	movf	___lwmod@divisor+1,w
  6885  09C1  0231               	subwf	___lwmod@dividend+1,w
  6886  09C2  1D03               	skipz
  6887  09C3  29C6               	goto	u2855
  6888  09C4  082E               	movf	___lwmod@divisor,w
  6889  09C5  0230               	subwf	___lwmod@dividend,w
  6890  09C6                     u2855:	
  6891  09C6  1C03               	skipc
  6892  09C7  29C9               	goto	u2851
  6893  09C8  29CA               	goto	u2850
  6894  09C9                     u2851:	
  6895  09C9  29D0               	goto	l2787
  6896  09CA                     u2850:	
  6897  09CA                     l2785:	
  6898  09CA  082E               	movf	___lwmod@divisor,w
  6899  09CB  02B0               	subwf	___lwmod@dividend,f
  6900  09CC  082F               	movf	___lwmod@divisor+1,w
  6901  09CD  1C03               	skipc
  6902  09CE  03B1               	decf	___lwmod@dividend+1,f
  6903  09CF  02B1               	subwf	___lwmod@dividend+1,f
  6904  09D0                     l2787:	
  6905  09D0  3001               	movlw	1
  6906  09D1                     u2865:	
  6907  09D1  1003               	clrc
  6908  09D2  0CAF               	rrf	___lwmod@divisor+1,f
  6909  09D3  0CAE               	rrf	___lwmod@divisor,f
  6910  09D4  3EFF               	addlw	-1
  6911  09D5  1D03               	skipz
  6912  09D6  29D1               	goto	u2865
  6913  09D7                     l2789:	
  6914  09D7  3001               	movlw	1
  6915  09D8  02B3               	subwf	___lwmod@counter,f
  6916  09D9  1D03               	btfss	3,2
  6917  09DA  29DC               	goto	u2871
  6918  09DB  29DD               	goto	u2870
  6919  09DC                     u2871:	
  6920  09DC  29C0               	goto	l2783
  6921  09DD                     u2870:	
  6922  09DD                     l2791:	
  6923  09DD  0831               	movf	___lwmod@dividend+1,w
  6924  09DE  00AF               	movwf	?___lwmod+1
  6925  09DF  0830               	movf	___lwmod@dividend,w
  6926  09E0  00AE               	movwf	?___lwmod
  6927  09E1                     l865:	
  6928  09E1  0008               	return
  6929  09E2                     __end_of___lwmod:	
  6930                           
  6931                           	psect	text28
  6932  0A61                     __ptext28:	
  6933 ;; *************** function ___lwdiv *****************
  6934 ;; Defined at:
  6935 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  divisor         2    6[BANK0 ] unsigned int 
  6938 ;;  dividend        2    8[BANK0 ] unsigned int 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  quotient        2   12[BANK0 ] unsigned int 
  6941 ;;  counter         1   11[BANK0 ] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  2    6[BANK0 ] unsigned int 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6951 ;;      Params:         0       4       0       0       0
  6952 ;;      Locals:         0       3       0       0       0
  6953 ;;      Temps:          0       1       0       0       0
  6954 ;;      Totals:         0       8       0       0       0
  6955 ;;Total ram usage:        8 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_main
  6962 ;;		_mostrarDigitos
  6963 ;;		_sprintf
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           
  6968                           ;psect for function ___lwdiv
  6969  0A61                     ___lwdiv:	
  6970  0A61                     l2747:	
  6971                           ;incstack = 0
  6972                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6973                           
  6974  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  6975  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  6976  0A63  01AC               	clrf	___lwdiv@quotient
  6977  0A64  01AD               	clrf	___lwdiv@quotient+1
  6978  0A65                     l2749:	
  6979  0A65  0826               	movf	___lwdiv@divisor,w
  6980  0A66  0427               	iorwf	___lwdiv@divisor+1,w
  6981  0A67  1903               	btfsc	3,2
  6982  0A68  2A6A               	goto	u2751
  6983  0A69  2A6B               	goto	u2750
  6984  0A6A                     u2751:	
  6985  0A6A  2AA2               	goto	l2769
  6986  0A6B                     u2750:	
  6987  0A6B                     l2751:	
  6988  0A6B  01AB               	clrf	___lwdiv@counter
  6989  0A6C  0AAB               	incf	___lwdiv@counter,f
  6990  0A6D  2A79               	goto	l2757
  6991  0A6E                     l2753:	
  6992  0A6E  3001               	movlw	1
  6993  0A6F                     u2765:	
  6994  0A6F  1003               	clrc
  6995  0A70  0DA6               	rlf	___lwdiv@divisor,f
  6996  0A71  0DA7               	rlf	___lwdiv@divisor+1,f
  6997  0A72  3EFF               	addlw	-1
  6998  0A73  1D03               	skipz
  6999  0A74  2A6F               	goto	u2765
  7000  0A75                     l2755:	
  7001  0A75  3001               	movlw	1
  7002  0A76  00AA               	movwf	??___lwdiv
  7003  0A77  082A               	movf	??___lwdiv,w
  7004  0A78  07AB               	addwf	___lwdiv@counter,f
  7005  0A79                     l2757:	
  7006  0A79  1FA7               	btfss	___lwdiv@divisor+1,7
  7007  0A7A  2A7C               	goto	u2771
  7008  0A7B  2A7D               	goto	u2770
  7009  0A7C                     u2771:	
  7010  0A7C  2A6E               	goto	l2753
  7011  0A7D                     u2770:	
  7012  0A7D                     l2759:	
  7013  0A7D  3001               	movlw	1
  7014  0A7E                     u2785:	
  7015  0A7E  1003               	clrc
  7016  0A7F  0DAC               	rlf	___lwdiv@quotient,f
  7017  0A80  0DAD               	rlf	___lwdiv@quotient+1,f
  7018  0A81  3EFF               	addlw	-1
  7019  0A82  1D03               	skipz
  7020  0A83  2A7E               	goto	u2785
  7021  0A84  0827               	movf	___lwdiv@divisor+1,w
  7022  0A85  0229               	subwf	___lwdiv@dividend+1,w
  7023  0A86  1D03               	skipz
  7024  0A87  2A8A               	goto	u2795
  7025  0A88  0826               	movf	___lwdiv@divisor,w
  7026  0A89  0228               	subwf	___lwdiv@dividend,w
  7027  0A8A                     u2795:	
  7028  0A8A  1C03               	skipc
  7029  0A8B  2A8D               	goto	u2791
  7030  0A8C  2A8E               	goto	u2790
  7031  0A8D                     u2791:	
  7032  0A8D  2A95               	goto	l2765
  7033  0A8E                     u2790:	
  7034  0A8E                     l2761:	
  7035  0A8E  0826               	movf	___lwdiv@divisor,w
  7036  0A8F  02A8               	subwf	___lwdiv@dividend,f
  7037  0A90  0827               	movf	___lwdiv@divisor+1,w
  7038  0A91  1C03               	skipc
  7039  0A92  03A9               	decf	___lwdiv@dividend+1,f
  7040  0A93  02A9               	subwf	___lwdiv@dividend+1,f
  7041  0A94                     l2763:	
  7042  0A94  142C               	bsf	___lwdiv@quotient,0
  7043  0A95                     l2765:	
  7044  0A95  3001               	movlw	1
  7045  0A96                     u2805:	
  7046  0A96  1003               	clrc
  7047  0A97  0CA7               	rrf	___lwdiv@divisor+1,f
  7048  0A98  0CA6               	rrf	___lwdiv@divisor,f
  7049  0A99  3EFF               	addlw	-1
  7050  0A9A  1D03               	skipz
  7051  0A9B  2A96               	goto	u2805
  7052  0A9C                     l2767:	
  7053  0A9C  3001               	movlw	1
  7054  0A9D  02AB               	subwf	___lwdiv@counter,f
  7055  0A9E  1D03               	btfss	3,2
  7056  0A9F  2AA1               	goto	u2811
  7057  0AA0  2AA2               	goto	u2810
  7058  0AA1                     u2811:	
  7059  0AA1  2A7D               	goto	l2759
  7060  0AA2                     u2810:	
  7061  0AA2                     l2769:	
  7062  0AA2  082D               	movf	___lwdiv@quotient+1,w
  7063  0AA3  00A7               	movwf	?___lwdiv+1
  7064  0AA4  082C               	movf	___lwdiv@quotient,w
  7065  0AA5  00A6               	movwf	?___lwdiv
  7066  0AA6                     l855:	
  7067  0AA6  0008               	return
  7068  0AA7                     __end_of___lwdiv:	
  7069                           
  7070                           	psect	text29
  7071  096A                     __ptext29:	
  7072 ;; *************** function _envioTX *****************
  7073 ;; Defined at:
  7074 ;;		line 39 in file "mostrarInicializar.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  mensaje         2    0[BANK0 ] PTR unsigned char 
  7077 ;;		 -> STR_18(19), agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), 
  7078 ;;		 -> STR_14(40), lecturaConsulta@strLote(32), STR_12(20), STR_11(17), 
  7079 ;;		 -> STR_10(22), consultaPrecio@mensaje(26), STR_7(40), STR_6(40), 
  7080 ;;		 -> cierreDeLote@strLote(32), STR_4(20), accionesPuertoSerial@mensaje(12), STR_2(19), 
  7081 ;;		 -> accionesAceptar@strLote(32), 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;  i               2    5[BANK0 ] int 
  7084 ;;  transmitir      1    7[BANK0 ] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7094 ;;      Params:         0       2       0       0       0
  7095 ;;      Locals:         0       3       0       0       0
  7096 ;;      Temps:          0       3       0       0       0
  7097 ;;      Totals:         0       8       0       0       0
  7098 ;;Total ram usage:        8 bytes
  7099 ;; Hardware stack levels used:    2
  7100 ;; Hardware stack levels required when called:    1
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_accionesAceptar
  7105 ;;		_accionesDeshacer
  7106 ;;		_accionesPuertoSerial
  7107 ;;		_lecturaEtiqueta
  7108 ;;		_cierreDeLote
  7109 ;;		_lecturaMas
  7110 ;;		_lecturaMenos
  7111 ;;		_consultaPrecio
  7112 ;;		_lecturaConsulta
  7113 ;;		_main
  7114 ;;		_agregarModificarPrecio
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           
  7119                           ;psect for function _envioTX
  7120  096A                     _envioTX:	
  7121  096A                     l2871:	
  7122                           ;incstack = 0
  7123                           ; Regs used in _envioTX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7124                           
  7125                           
  7126                           ;mostrarInicializar.c: 40:     int i = 0;
  7127  096A  1283               	bcf	3,5	;RP0=0, select bank0
  7128  096B  1303               	bcf	3,6	;RP1=0, select bank0
  7129  096C  01A5               	clrf	envioTX@i
  7130  096D  01A6               	clrf	envioTX@i+1
  7131  096E                     l2873:	
  7132                           
  7133                           ;mostrarInicializar.c: 41:     char transmitir=1;
  7134  096E  01A7               	clrf	envioTX@transmitir
  7135  096F  0AA7               	incf	envioTX@transmitir,f
  7136                           
  7137                           ;mostrarInicializar.c: 42:  while(transmitir){
  7138  0970  299A               	goto	l2883
  7139  0971                     l2875:	
  7140                           
  7141                           ;mostrarInicializar.c: 43:   TXREG = mensaje[i];
  7142  0971  0825               	movf	envioTX@i,w
  7143  0972  0720               	addwf	envioTX@mensaje,w
  7144  0973  00A3               	movwf	??_envioTX+1
  7145  0974  0821               	movf	envioTX@mensaje+1,w
  7146  0975  00A2               	movwf	??_envioTX
  7147  0976  1803               	skipnc
  7148  0977  0AA2               	incf	??_envioTX,f
  7149  0978  1FA5               	btfss	envioTX@i,7
  7150  0979  297B               	goto	u2970
  7151  097A  03A2               	decf	??_envioTX,f
  7152  097B                     u2970:	
  7153  097B  1283               	bcf	3,5	;RP0=0, select bank0
  7154  097C  1303               	bcf	3,6	;RP1=0, select bank0
  7155  097D  0822               	movf	??_envioTX,w
  7156  097E  00A4               	movwf	??_envioTX+2
  7157  097F  0824               	movf	??_envioTX+2,w
  7158  0980  00FF               	movwf	btemp+1
  7159  0981  0823               	movf	??_envioTX+1,w
  7160  0982  0084               	movwf	4
  7161  0983  120A  118A  2300  120A  158A  	fcall	stringtab
  7162  0988  0099               	movwf	25	;volatile
  7163  0989                     l2877:	
  7164                           
  7165                           ;mostrarInicializar.c: 44:   if (TXREG==0){
  7166  0989  0819               	movf	25,w	;volatile
  7167  098A  1D03               	btfss	3,2
  7168  098B  298D               	goto	u2981
  7169  098C  298E               	goto	u2980
  7170  098D                     u2981:	
  7171  098D  2990               	goto	l2881
  7172  098E                     u2980:	
  7173  098E                     l2879:	
  7174                           
  7175                           ;mostrarInicializar.c: 45:    transmitir=0;
  7176  098E  01A7               	clrf	envioTX@transmitir
  7177                           
  7178                           ;mostrarInicializar.c: 46:         }
  7179  098F  2996               	goto	l420
  7180  0990                     l2881:	
  7181                           
  7182                           ;mostrarInicializar.c: 48:    i++;
  7183  0990  3001               	movlw	1
  7184  0991  07A5               	addwf	envioTX@i,f
  7185  0992  1803               	skipnc
  7186  0993  0AA6               	incf	envioTX@i+1,f
  7187  0994  3000               	movlw	0
  7188  0995  07A6               	addwf	envioTX@i+1,f
  7189  0996                     l420:	
  7190  0996  1E0C               	btfss	12,4	;volatile
  7191  0997  2999               	goto	u2991
  7192  0998  299A               	goto	u2990
  7193  0999                     u2991:	
  7194  0999  2996               	goto	l420
  7195  099A                     u2990:	
  7196  099A                     l2883:	
  7197                           
  7198                           ;mostrarInicializar.c: 42:  while(transmitir){
  7199  099A  0827               	movf	envioTX@transmitir,w
  7200  099B  1D03               	btfss	3,2
  7201  099C  299E               	goto	u3001
  7202  099D  299F               	goto	u3000
  7203  099E                     u3001:	
  7204  099E  2971               	goto	l2875
  7205  099F                     u3000:	
  7206  099F                     l2885:	
  7207                           
  7208                           ;mostrarInicializar.c: 53:     TXREG = 13;
  7209  099F  300D               	movlw	13
  7210  09A0  0099               	movwf	25	;volatile
  7211  09A1                     l424:	
  7212                           ;mostrarInicializar.c: 54:     while(TXIF == 0);
  7213                           
  7214  09A1  1E0C               	btfss	12,4	;volatile
  7215  09A2  29A4               	goto	u3011
  7216  09A3  29A5               	goto	u3010
  7217  09A4                     u3011:	
  7218  09A4  29A1               	goto	l424
  7219  09A5                     u3010:	
  7220  09A5                     l427:	
  7221  09A5  0008               	return
  7222  09A6                     __end_of_envioTX:	
  7223                           
  7224                           	psect	text30
  7225  0AF0                     __ptext30:	
  7226 ;; *************** function _bailenLeds *****************
  7227 ;; Defined at:
  7228 ;;		line 25 in file "mostrarInicializar.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  i               2    3[BANK0 ] unsigned short 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      void 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7242 ;;      Params:         0       0       0       0       0
  7243 ;;      Locals:         0       2       0       0       0
  7244 ;;      Temps:          0       3       0       0       0
  7245 ;;      Totals:         0       5       0       0       0
  7246 ;;Total ram usage:        5 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    1
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_accionesAceptar
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           
  7257                           ;psect for function _bailenLeds
  7258  0AF0                     _bailenLeds:	
  7259  0AF0                     l3213:	
  7260                           ;incstack = 0
  7261                           ; Regs used in _bailenLeds: [wreg+status,2]
  7262                           
  7263                           
  7264                           ;mostrarInicializar.c: 27:     unsigned short int i;;mostrarInicializar.c: 28:     for (
      +                          i = 0; i < 3; i++) {
  7265  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  7266  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  7267  0AF2  01A3               	clrf	bailenLeds@i
  7268  0AF3  01A4               	clrf	bailenLeds@i+1
  7269  0AF4                     l411:	
  7270                           
  7271                           ;mostrarInicializar.c: 29:         RA3 = 1;
  7272  0AF4  1585               	bsf	5,3	;volatile
  7273  0AF5                     l3219:	
  7274                           
  7275                           ;mostrarInicializar.c: 30:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7276  0AF5  3002               	movlw	2
  7277  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  7278  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  7279  0AF8  00A2               	movwf	??_bailenLeds+2
  7280  0AF9  3004               	movlw	4
  7281  0AFA  00A1               	movwf	??_bailenLeds+1
  7282  0AFB  30B9               	movlw	185
  7283  0AFC  00A0               	movwf	??_bailenLeds
  7284  0AFD                     u4037:	
  7285  0AFD  0BA0               	decfsz	??_bailenLeds,f
  7286  0AFE  2AFD               	goto	u4037
  7287  0AFF  0BA1               	decfsz	??_bailenLeds+1,f
  7288  0B00  2AFD               	goto	u4037
  7289  0B01  0BA2               	decfsz	??_bailenLeds+2,f
  7290  0B02  2AFD               	goto	u4037
  7291  0B03  2B04               	nop2
  7292  0B04                     l3221:	
  7293                           
  7294                           ;mostrarInicializar.c: 31:         RA5 = 1;
  7295  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  7296  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  7297  0B06  1685               	bsf	5,5	;volatile
  7298                           
  7299                           ;mostrarInicializar.c: 32:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7300  0B07  3002               	movlw	2
  7301  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  7302  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  7303  0B0A  00A2               	movwf	??_bailenLeds+2
  7304  0B0B  3004               	movlw	4
  7305  0B0C  00A1               	movwf	??_bailenLeds+1
  7306  0B0D  30B9               	movlw	185
  7307  0B0E  00A0               	movwf	??_bailenLeds
  7308  0B0F                     u4047:	
  7309  0B0F  0BA0               	decfsz	??_bailenLeds,f
  7310  0B10  2B0F               	goto	u4047
  7311  0B11  0BA1               	decfsz	??_bailenLeds+1,f
  7312  0B12  2B0F               	goto	u4047
  7313  0B13  0BA2               	decfsz	??_bailenLeds+2,f
  7314  0B14  2B0F               	goto	u4047
  7315  0B15  2B16               	nop2
  7316  0B16                     l3223:	
  7317                           
  7318                           ;mostrarInicializar.c: 33:         RA3 = 0;
  7319  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  7320  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  7321  0B18  1185               	bcf	5,3	;volatile
  7322                           
  7323                           ;mostrarInicializar.c: 34:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7324  0B19  3002               	movlw	2
  7325  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  7326  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  7327  0B1C  00A2               	movwf	??_bailenLeds+2
  7328  0B1D  3004               	movlw	4
  7329  0B1E  00A1               	movwf	??_bailenLeds+1
  7330  0B1F  30B9               	movlw	185
  7331  0B20  00A0               	movwf	??_bailenLeds
  7332  0B21                     u4057:	
  7333  0B21  0BA0               	decfsz	??_bailenLeds,f
  7334  0B22  2B21               	goto	u4057
  7335  0B23  0BA1               	decfsz	??_bailenLeds+1,f
  7336  0B24  2B21               	goto	u4057
  7337  0B25  0BA2               	decfsz	??_bailenLeds+2,f
  7338  0B26  2B21               	goto	u4057
  7339  0B27  2B28               	nop2
  7340  0B28                     l3225:	
  7341                           
  7342                           ;mostrarInicializar.c: 35:         RA5 = 0;
  7343  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  7344  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  7345  0B2A  1285               	bcf	5,5	;volatile
  7346                           
  7347                           ;mostrarInicializar.c: 36:     }
  7348  0B2B  3001               	movlw	1
  7349  0B2C  07A3               	addwf	bailenLeds@i,f
  7350  0B2D  1803               	skipnc
  7351  0B2E  0AA4               	incf	bailenLeds@i+1,f
  7352  0B2F  3000               	movlw	0
  7353  0B30  07A4               	addwf	bailenLeds@i+1,f
  7354  0B31  3000               	movlw	0
  7355  0B32  0224               	subwf	bailenLeds@i+1,w
  7356  0B33  3003               	movlw	3
  7357  0B34  1903               	skipnz
  7358  0B35  0223               	subwf	bailenLeds@i,w
  7359  0B36  1C03               	skipc
  7360  0B37  2B39               	goto	u3611
  7361  0B38  2B3A               	goto	u3610
  7362  0B39                     u3611:	
  7363  0B39  2AF4               	goto	l411
  7364  0B3A                     u3610:	
  7365  0B3A                     l413:	
  7366  0B3A  0008               	return
  7367  0B3B                     __end_of_bailenLeds:	
  7368                           
  7369                           	psect	text31
  7370  0B96                     __ptext31:	
  7371 ;; *************** function _int_usart *****************
  7372 ;; Defined at:
  7373 ;;		line 99 in file "main.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  basura          1    0        unsigned char 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7387 ;;      Params:         0       0       0       0       0
  7388 ;;      Locals:         1       0       0       0       0
  7389 ;;      Temps:          4       0       0       0       0
  7390 ;;      Totals:         5       0       0       0       0
  7391 ;;Total ram usage:        5 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		Interrupt level 1
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           
  7401                           ;psect for function _int_usart
  7402  0B96                     _int_usart:	
  7403  0B96                     i1l2685:	
  7404                           
  7405                           ;main.c: 101:     if(TMR1IF){
  7406  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  7407  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  7408  0B98  1C0C               	btfss	12,0	;volatile
  7409  0B99  2B9B               	goto	u263_21
  7410  0B9A  2B9C               	goto	u263_20
  7411  0B9B                     u263_21:	
  7412  0B9B  2BA2               	goto	i1l340
  7413  0B9C                     u263_20:	
  7414  0B9C                     i1l2687:	
  7415                           
  7416                           ;main.c: 102:         GO_nDONE = 1;
  7417  0B9C  151F               	bsf	31,2	;volatile
  7418                           
  7419                           ;main.c: 103:         TMR1 = 15536;
  7420  0B9D  303C               	movlw	60
  7421  0B9E  008F               	movwf	15	;volatile
  7422  0B9F  30B0               	movlw	176
  7423  0BA0  008E               	movwf	14	;volatile
  7424                           
  7425                           ;main.c: 104:         TMR1IF = 0;
  7426  0BA1  100C               	bcf	12,0	;volatile
  7427  0BA2                     i1l340:	
  7428                           ;main.c: 105:     }
  7429                           
  7430                           
  7431                           ;main.c: 106:     if(RCSTAbits.FERR){
  7432  0BA2  1D18               	btfss	24,2	;volatile
  7433  0BA3  2BA5               	goto	u264_21
  7434  0BA4  2BA6               	goto	u264_20
  7435  0BA5                     u264_21:	
  7436  0BA5  2BA7               	goto	i1l2691
  7437  0BA6                     u264_20:	
  7438  0BA6                     i1l2689:	
  7439  0BA6  081A               	movf	26,w	;volatile
  7440  0BA7                     i1l2691:	
  7441                           
  7442                           ;main.c: 109:     if (RCSTAbits.OERR){
  7443  0BA7  1C98               	btfss	24,1	;volatile
  7444  0BA8  2BAA               	goto	u265_21
  7445  0BA9  2BAB               	goto	u265_20
  7446  0BAA                     u265_21:	
  7447  0BAA  2BAD               	goto	i1l342
  7448  0BAB                     u265_20:	
  7449  0BAB                     i1l2693:	
  7450                           
  7451                           ;main.c: 110:         RCSTAbits.CREN=0;
  7452  0BAB  1218               	bcf	24,4	;volatile
  7453                           
  7454                           ;main.c: 111:         RCSTAbits.CREN=1;
  7455  0BAC  1618               	bsf	24,4	;volatile
  7456  0BAD                     i1l342:	
  7457                           ;main.c: 112:     }
  7458                           
  7459                           
  7460                           ;main.c: 113:     if(RCIF) {
  7461  0BAD  1E8C               	btfss	12,5	;volatile
  7462  0BAE  2BB0               	goto	u266_21
  7463  0BAF  2BB1               	goto	u266_20
  7464  0BB0                     u266_21:	
  7465  0BB0  2BDA               	goto	i1l2707
  7466  0BB1                     u266_20:	
  7467  0BB1                     i1l2695:	
  7468                           
  7469                           ;main.c: 114:         if((codigoEntrada[serial] = RCREG) != 0x0D && (codigoEntrada[seria
      +                          l]) != 0x0A && serial < (10 -1)) {
  7470  0BB1  081A               	movf	26,w	;volatile
  7471  0BB2  00F4               	movwf	??_int_usart
  7472  0BB3  0873               	movf	_serial,w
  7473  0BB4  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7474  0BB5  0084               	movwf	4
  7475  0BB6  0874               	movf	??_int_usart,w
  7476  0BB7  1383               	bcf	3,7	;select IRP bank1
  7477  0BB8  0080               	movwf	0
  7478  0BB9  300D               	movlw	13
  7479  0BBA  0600               	xorwf	0,w
  7480  0BBB  1903               	btfsc	3,2
  7481  0BBC  2BBE               	goto	u267_21
  7482  0BBD  2BBF               	goto	u267_20
  7483  0BBE                     u267_21:	
  7484  0BBE  2BD3               	goto	i1l2703
  7485  0BBF                     u267_20:	
  7486  0BBF                     i1l2697:	
  7487  0BBF  0873               	movf	_serial,w
  7488  0BC0  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7489  0BC1  0084               	movwf	4
  7490  0BC2  300A               	movlw	10
  7491  0BC3  0600               	xorwf	0,w
  7492  0BC4  1903               	btfsc	3,2
  7493  0BC5  2BC7               	goto	u268_21
  7494  0BC6  2BC8               	goto	u268_20
  7495  0BC7                     u268_21:	
  7496  0BC7  2BD3               	goto	i1l2703
  7497  0BC8                     u268_20:	
  7498  0BC8                     i1l2699:	
  7499  0BC8  3009               	movlw	9
  7500  0BC9  0273               	subwf	_serial,w
  7501  0BCA  1803               	skipnc
  7502  0BCB  2BCD               	goto	u269_21
  7503  0BCC  2BCE               	goto	u269_20
  7504  0BCD                     u269_21:	
  7505  0BCD  2BD3               	goto	i1l2703
  7506  0BCE                     u269_20:	
  7507  0BCE                     i1l2701:	
  7508                           
  7509                           ;main.c: 115:             serial++;
  7510  0BCE  3001               	movlw	1
  7511  0BCF  00F4               	movwf	??_int_usart
  7512  0BD0  0874               	movf	??_int_usart,w
  7513  0BD1  07F3               	addwf	_serial,f
  7514                           
  7515                           ;main.c: 116:         }
  7516  0BD2  2BDA               	goto	i1l2707
  7517  0BD3                     i1l2703:	
  7518                           
  7519                           ;main.c: 118:             serial = 0;
  7520  0BD3  01F3               	clrf	_serial
  7521  0BD4                     i1l2705:	
  7522                           
  7523                           ;main.c: 119:             huboInt = 1;
  7524  0BD4  3001               	movlw	1
  7525  0BD5  1683               	bsf	3,5	;RP0=1, select bank3
  7526  0BD6  1703               	bsf	3,6	;RP1=1, select bank3
  7527  0BD7  00D2               	movwf	_huboInt^(0+384)
  7528  0BD8  3000               	movlw	0
  7529  0BD9  00D3               	movwf	(_huboInt^(0+384)+1)
  7530  0BDA                     i1l2707:	
  7531                           
  7532                           ;main.c: 122:     if(ADIF) {
  7533  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  7534  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  7535  0BDC  1F0C               	btfss	12,6	;volatile
  7536  0BDD  2BDF               	goto	u270_21
  7537  0BDE  2BE0               	goto	u270_20
  7538  0BDF                     u270_21:	
  7539  0BDF  2BEB               	goto	i1l347
  7540  0BE0                     u270_20:	
  7541  0BE0                     i1l2709:	
  7542                           
  7543                           ;main.c: 123:         ADIF = 0;
  7544  0BE0  130C               	bcf	12,6	;volatile
  7545  0BE1                     i1l2711:	
  7546                           
  7547                           ;main.c: 124:         adresult = (ADRESH<<8)+ADRESL;
  7548  0BE1  081E               	movf	30,w	;volatile
  7549  0BE2  1683               	bsf	3,5	;RP0=1, select bank3
  7550  0BE3  1703               	bsf	3,6	;RP1=1, select bank3
  7551  0BE4  00D9               	movwf	(_adresult+1)^(0+384)
  7552  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  7553  0BE6  1303               	bcf	3,6	;RP1=0, select bank1
  7554  0BE7  081E               	movf	30,w	;volatile
  7555  0BE8  1683               	bsf	3,5	;RP0=1, select bank3
  7556  0BE9  1703               	bsf	3,6	;RP1=1, select bank3
  7557  0BEA  00D8               	movwf	_adresult^(0+384)
  7558  0BEB                     i1l347:	
  7559  0BEB  0877               	movf	??_int_usart+3,w
  7560  0BEC  008A               	movwf	10
  7561  0BED  0876               	movf	??_int_usart+2,w
  7562  0BEE  0084               	movwf	4
  7563  0BEF  0E75               	swapf	(??_int_usart+1)^(0+4294967168),w
  7564  0BF0  0083               	movwf	3
  7565  0BF1  0EFE               	swapf	btemp,f
  7566  0BF2  0E7E               	swapf	btemp,w
  7567  0BF3  0009               	retfie
  7568  0BF4                     __end_of_int_usart:	
  7569  007E                     btemp	set	126	;btemp
  7570  007E                     wtemp0	set	126
  7571                           
  7572                           	psect	intentry
  7573  0004                     __pintentry:	
  7574                           ;incstack = 0
  7575                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  7576                           
  7577  0004                     interrupt_function:	
  7578  007E                     saved_w	set	btemp
  7579  0004  00FE               	movwf	btemp
  7580  0005  0E03               	swapf	3,w
  7581  0006  00F5               	movwf	??_int_usart+1
  7582  0007  0804               	movf	4,w
  7583  0008  00F6               	movwf	??_int_usart+2
  7584  0009  080A               	movf	10,w
  7585  000A  00F7               	movwf	??_int_usart+3
  7586  000B  120A  158A  2B96   	ljmp	_int_usart


Data Sizes:
    Strings     301
    Constant    20
    Data        1
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     78      79
    BANK1            80     45      74
    BANK3            96     66      74
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[25]), STR_13(CODE[17]), 
		 -> STR_9(CODE[22]), STR_8(CODE[25]), STR_5(CODE[24]), STR_3(CODE[5]), 
		 -> STR_1(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[7]), ?_sprintf(BANK0[2]), adresult(BANK3[2]), codigoEntrada(BANK1[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), lecturaConsulta@strLote(BANK1[32]), 
		 -> consultaPrecio@mensaje(BANK0[26]), cierreDeLote@strLote(BANK0[32]), accionesPuertoSerial@mensaje(BANK3[12]), accionesAceptar@strLote(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envioTX@mensaje	PTR unsigned char  size(2) Largest target is 40
		 -> STR_18(CODE[19]), agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), 
		 -> STR_14(CODE[40]), lecturaConsulta@strLote(BANK1[32]), STR_12(CODE[20]), STR_11(CODE[17]), 
		 -> STR_10(CODE[22]), consultaPrecio@mensaje(BANK0[26]), STR_7(CODE[40]), STR_6(CODE[40]), 
		 -> cierreDeLote@strLote(BANK0[32]), STR_4(CODE[20]), accionesPuertoSerial@mensaje(BANK3[12]), STR_2(CODE[19]), 
		 -> accionesAceptar@strLote(BANK1[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _escrituraDeCierre->_eeprom_write
    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaMenos->_envioTX
    _lecturaMas->_cierreDeLote
    _cierreDeLote->_sprintf
    _agregarModificarPrecio->_sprintf
    _lecturaConsulta->_consultaPrecio
    _consultaPrecio->_sprintf
    _accionesDeshacer->_mostrarDigitos
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_sprintf
    _sprintf->___lwmod
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_accionesPuertoSerial
    _lecturaComando->_lecturaConsulta

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_accionesPuertoSerial

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   82287
                                             41 BANK1      4     4      0
                                             12 BANK3     54    54      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                        _eeprom_read
                            _envioTX
                  _escrituraDeCierre
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _escrituraDeCierre                                    3     3      0     670
                                              3 BANK0      3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                15    15      0   53269
                                             38 BANK1      3     3      0
                                              0 BANK3     12    12      0
                            _envioTX
                     _lecturaComando
                    _lecturaEtiqueta
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      9     9      0   11805
                                             31 BANK0      9     9      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                            _envioTX
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    3623
                                             22 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    2164
                                             14 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0   35290
                    _lecturaConsulta
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0    1725
                            _envioTX
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0   17718
             _agregarModificarPrecio
                       _cierreDeLote
                            _envioTX
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  3     3      0     198
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cierreDeLote                                        36    36      0    6174
                                             42 BANK0     36    36      0
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _agregarModificarPrecio                              25    25      0    9621
                                             42 BANK0     25    25      0
                            ___awdiv
                             ___bmul
                             ___wmul
                       _eeprom_write
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     602
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _lecturaConsulta                                     38    38      0   15847
                                              0 BANK1     38    38      0
                             ___wmul
                     _consultaPrecio
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _consultaPrecio                                      34    32      2    8603
                                             42 BANK0     34    32      2
                            ___awdiv
                            ___awmod
                        _eeprom_read
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    6643
                       _eliminarProd
                            _envioTX
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    1777
                                              6 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                     38    38      0    9101
                                             42 BANK0      4     4      0
                                              0 BANK1     34    34      0
                         _bailenLeds
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    18     10    4354
                                             20 BANK0     22    12     10
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    2760
                                             20 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1132
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1141
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _envioTX                                              8     6      2    1725
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_usart                                            5     5      0       1
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
       ___wmul (ARG)
   ___wmul
   _accionesAceptar
     _bailenLeds
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesPuertoSerial
     _envioTX
     _lecturaComando
       _lecturaConsulta
         ___wmul
         _consultaPrecio
           ___awdiv
           ___awmod
           _eeprom_read
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _sprintf
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
       _lecturaMas
         _agregarModificarPrecio
           ___awdiv
           ___bmul
           ___wmul
           _eeprom_write
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _cierreDeLote
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _verificacionEntrada
       _lecturaMenos
         _envioTX
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _envioTX
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _eeprom_read
   _envioTX
   _escrituraDeCierre
     _eeprom_write
   _mostrarDigitos
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     42      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      ED      12        0.0%
ABS                  0      0      ED       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 12:53:04 2020

                 ?_lecturaConsulta 0074                      ?_eliminarProd 002E  
                                pc 0002                     ___bmul@product 0022  
                 ?_lecturaEtiqueta 0074                        __CFG_CP$OFF 0000  
                               l70 0D09                                 l63 0A1E  
                               l71 0D03                                 l57 02B6  
                               l73 0D1D                                 l58 02C6  
                               _BS 031C                                 l76 0A60  
                     ___awdiv@sign 0026                                 fsr 0004  
              ___wmul@multiplicand 0022            __size_of_consultaPrecio 00CA  
                   ?_verificarProd 002E                                l123 0DEE  
                              l124 0DF4                                l132 06A4  
                              l136 06B6                                l312 00D0  
                              l153 0AEF                                l129 05D3  
                              l321 0142                                l313 00C6  
                              l162 08F8                                l411 0AF4  
                              l307 00C2                                l420 0996  
                              l148 02FE                                l316 0247  
                              l308 00B8                                l413 0B3A  
                              l318 00D4                                l191 079C  
                              l167 0846                                l424 09A1  
                              l408 0E63                                l520 0861  
                              l176 0F2D                                l522 087C  
                              l427 09A5                                l371 07FE  
                              l540 08FC                                l365 0969  
                              l198 089C                                l543 091E  
                              l384 0C55                                l609 085D  
                              l546 092F                                l378 0CB9  
                              l539 08FC                                l389 0FFF  
                              l566 04A7                                l583 08AB  
                              l736 0D86                                l585 08C3  
                              l579 05A5                                l749 0B95  
                              l855 0AA6                                l865 09E1  
                              _RA3 002B                                _RC0 0038  
                              _RA5 002D                                _RE0 0048  
                              _RE1 0049                                _RE2 004A  
                     __CFG_CPD$OFF 0000                                _pow 0930  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0026  agregarModificarPrecio@upper_8bits 005F  
                     __CFG_FOSC$XT 0000                       __CFG_LVP$OFF 0000  
                 ??_mostrarDigitos 0036                               l3001 0B5B  
                             l3011 0B7A                               l3003 0B62  
                             l3013 0B81                               l3005 0B66  
                             l3101 0FF6                               l3007 0B6A  
                             l3015 0B87                               l3111 0EAB  
                             l3103 0E64                               l3031 0C5D  
                             l3023 0C56                               l3121 0E13  
                             l3017 0B8C                               l3009 0B74  
                             l3113 0EB1                               l3105 0E73  
                             l3201 073F                               l3033 0C78  
                             l3041 0CAC                               l3025 0C59  
                             l3123 0E34                               l3019 0B91  
                             l3115 0ECC                               l3107 0E80  
                             l3203 0745                               l3211 0791  
                             l3051 02CB                               l3043 0CB4  
                             l3035 0C8F                               l3131 0DB5  
                             l3221 0B04                               l3213 0AF0  
                             l3109 0E9E                               l3117 0F22  
                             l3205 074B                               l3061 02F1  
                             l3053 02CD                               l3045 0CB8  
                             l3037 0CA8                               l3133 0DB9  
                             l3125 0D8A                               l3301 0692  
                             l3223 0B16                               l3119 0DF5  
                             l3207 0751                               l3071 0AAE  
                             l3063 02F7                               l3055 02D5  
                             l3039 0CAA                               l3135 0DC6  
                             l3127 0D8F                               l3151 07BE  
                             l3143 079D                               l3303 06A0  
                             l3225 0B28                               l3321 025F  
                             l3313 024B                               l3241 0C49  
                             l3233 0BFA                               l3209 0781  
                             l3081 0F2E                               l3073 0AE3  
                             l3065 02FD                               l3057 02DF  
                             l3049 02C7                               l3161 08C4  
                             l3129 0D97                               l3137 0DE8  
                             l3153 07D5                               l3305 06A5  
                             l3401 007A                               l3219 0AF5  
                             l3331 0270                               l3315 0251  
                             l3243 0C51                               l3235 0C15  
                             l3227 0BF4                               l3091 0FA2  
                             l3083 0F45                               l3075 0AE4  
                             l3059 02E8                               l3171 08EA  
                             l3163 08CC                               l3251 0891  
                             l3155 07F0                               l3307 06B3  
                             l3411 008A                               l3403 007E  
                             l3333 027D                               l3317 0259  
                             l3237 0C2C                               l3341 09EE  
                             l3181 06B7                               l3093 0FA6  
                             l3085 0F4A                               l3077 0AEA  
                             l3069 0AA7                               l3173 08ED  
                             l3165 08D2                               l3253 0897  
                             l3245 087D                               l3157 07F2  
                             l3149 07A3                               l3261 05AD  
                             l3501 0236                               l3421 0099  
                             l3413 008C                               l3405 0082  
                             l3335 0282                               l3327 0263  
                             l3319 025B                               l3239 0C47  
                             l3343 09F2                               l3191 06E3  
                             l3183 06BF                               l3095 0FB0  
                             l3087 0F52                               l3079 0AEB  
                             l3167 08DC                               l3175 0831  
                             l3247 0885                               l3159 07FA  
                             l3271 05E8                               l3263 05B9  
                             l3255 05A6                               l3351 0CBA  
                             l3503 0241                               l3431 00A4  
                             l3423 009C                               l3415 008E  
                             l3407 0084                               l2801 0469  
                             l3337 02C1                               l3329 026A  
                             l3345 0A03                               l3193 06E9  
                             l3185 06C5                               l3097 0FBD  
                             l3089 0F9E                               l3169 08E2  
                             l3177 0839                               l3249 088B  
                             l3281 0643                               l3273 060C  
                             l3265 05C2                               l3361 0CDA  
                             l3353 0CC2                               l3505 0244  
                             l3433 00AF                               l3425 009D  
                             l3417 0092                               l3409 0088  
                             l2811 0485                               l2803 0470  
                             l3347 0A0E                               l3339 09E2  
                             l3195 072E                               l3187 06CB  
                             l3099 0FEA                               l3179 083B  
                             l3291 0669                               l3283 064B  
                             l3275 0611                               l3267 05D5  
                             l3363 0CE0                               l3355 0CC8  
                             l3371 0A1F                               l3451 00E2  
                             l3443 00CA                               l3435 00B2  
                             l3427 009E                               l3419 0096  
                             l2813 048A                               l2805 0472  
                             l2821 04B6                               l2741 08B9  
                             l2733 089D                               l3349 0A13  
                             l3197 0734                               l3189 06D7  
                             l2901 0927                               l3293 0678  
                             l3285 0650                               l3277 0626  
                             l3269 05DB                               l3365 0CE5  
                             l3357 0CCE                               l3381 0A51  
                             l3373 0A27                               l3461 0133  
                             l3453 0126                               l3429 00A0  
                             l2751 0A6B                               l2831 04F0  
                             l2823 04DC                               l3527 04CE  
                             l2815 049B                               l2807 047B  
                             l2743 08BF                               l2735 08A1  
                             l2911 0930                               l3199 0739  
                             l2903 0928                               l3295 067E  
                             l3287 0659                               l3279 0632  
                             l3367 0D0C                               l3359 0CD4  
                             l3383 0A5D                               l3375 0A2F  
                             l3471 015D                               l3463 013B  
                             l3447 00D8                               l3439 00BC  
                             l3391 0067                               l2761 0A8E  
                             l2753 0A6E                               l2833 04F5  
                             l2825 04E4                               l2817 04A1  
                             l2809 047F                               l2737 08A5  
                             l2913 0937                               l2921 095B  
                             l2905 092E                               l3297 0686  
                             l3289 065D                               l3369 0D1A  
                             l3377 0A39                               l3481 0167  
                             l3473 015F                               l3465 0143  
                             l3449 00DE                               l3393 0072  
                             l3385 0032                               l2763 0A94  
                             l2755 0A75                               l2747 0A61  
                             l2851 0536                               l2843 0517  
                             l2827 04E8                               l2739 08B2  
                             l2923 0965                               l2915 093D  
                             l2907 086A                               l2931 084F  
                             l3299 068F                               l3379 0A45  
                             l3491 01B4                               l3483 016C  
                             l3475 0164                               l3467 0151  
                             l3459 0129                               l3395 0076  
                             l3387 003D                               l2765 0A95  
                             l2757 0A79                               l2749 0A65  
                             l2781 09BC                               l2773 09A6  
                             l2853 053B                               l2845 0521  
                             l2829 04EC                               l2861 0587  
                             l2917 0942                               l2941 0D1E  
                             l2933 0853                               l3493 01BD  
                             l3485 0174                               l3469 0155  
                             l3397 0078                               l3389 005A  
                             l2871 096A                               l2767 0A9C  
                             l2759 0A7D                               l2783 09C0  
                             l2775 09AE                               l2791 09DD  
                             l2855 056F                               l2847 0527  
                             l2839 04F7                               l2863 059F  
                             l2919 0955                               l2951 0D30  
                             l2943 0D21                               l2935 0855  
                             l2927 084A                               l3495 01C2  
                             l3487 017B                               l3399 0079  
                             l2881 0990                               l2873 096E  
                             l2769 0AA2                               l2785 09CA  
                             l2777 09B1                               l2857 0578  
                             l2849 0530                               l2961 0D44  
                             l2953 0D35                               l2945 0D25  
                             l2937 085C                               l2929 084B  
                             l3497 01C9                               l3489 0181  
                             l2875 0971                               l2883 099A  
                             l2787 09D0                               l2779 09B8  
                             l2859 057E                               l2795 0453  
                             l2971 0D6A                               l2963 0D4B  
                             l2955 0D39                               l2947 0D2A  
                             l2891 0916                               l3499 020F  
                             l2885 099F                               l2877 0989  
                             l2789 09D7                               l2797 045A  
                             l2981 0D82                               l2973 0D6B  
                             l2965 0D4F                               l2957 0D3B  
                             l2949 0D2C                               l2893 0919  
                             l2879 098E                               l2799 0460  
                             l2975 0D72                               l2967 0D53  
                             l2959 0D41                               l2991 0B47  
                             l2895 091D                               l2887 0902  
                             l2969 0D64                               l2977 0D78  
                             l2993 0B49                               l2985 0B3B  
                             l2897 0922                               l2889 090E  
                             l2979 0D7D                               l2995 0B4D  
                             l2987 0B3E                               l2899 0926  
                             l2997 0B52                               l2989 0B42  
                             l2999 0B58                               _ADIF 0066  
                             ?_pow 0026                               STR_1 0423  
                             STR_2 03FF                               STR_3 044E  
                             STR_4 03D8                               STR_5 0380  
                             STR_6 0326                               STR_7 0326  
                             STR_8 0367                               STR_9 03AE  
                             u3000 099F                               u3001 099E  
                             u3010 09A5                               u3011 09A4  
                             u3100 0D25                               u3020 0902  
                             u3101 0D24                               u3021 0901  
                             u3110 0D30                               u3030 091D  
                             u3111 0D2F                               u3031 091C  
                             u3120 0D41                               u3200 0B42  
                             u3040 092E                               u3121 0D40  
                             u3201 0B41                               u3041 092D  
                             u3210 0B4D                               u3050 086A  
                             u3211 0B4C                               u3051 0867  
                             u3060 093D                               u3140 0D53  
                             u3220 0B58                               u3300 0CA8  
                             u3061 093C                               u3141 0D52  
                             u3221 0B57                               u3301 0CA7  
                             u3070 0965                               u3310 0CB8  
                             u3071 0964                               u3135 0D45  
                             u3311 0CB7                               u4007 0D14  
                             u3160 0D64                               u3240 0B6A  
                             u3400 0EAB                               u3080 084F  
                             u3320 02DF                               u3161 0D63  
                             u3241 0B69                               u3401 0EAA  
                             u3081 084E                               u3321 02DE  
                             u4017 069A                               u3250 0B74  
                             u3410 0EB1                               u3090 085C  
                             u3330 02E8                               u3075 0961  
                             u3155 0D54                               u3251 0B73  
                             u3235 0B5C                               u3411 0EB0  
                             u3091 085B                               u3331 02E7  
                             u4027 06AD                               u3180 0D78  
                             u3340 02F1                               u3500 08EA  
                             u3420 0D8F                               u4037 0AFD  
                             u3181 0D77                               u3165 0D60  
                             u3405 0EA7                               u3341 02F0  
                             u3501 08E9                               u3421 0D8E  
                             u2710 08A5                               u3190 0D7D  
                             u3270 0B87                               u3350 02F7  
                             u3510 0839                               u3430 0DB9  
                             u4047 0B0F                               u2711 08A4  
                             u3191 0D7C                               u3175 0D6C  
                             u3271 0B86                               u3255 0B70  
                             u3351 02F6                               u3511 0838  
                             u3431 0DB8                               u3280 0B8C  
                             u3600 0751                               u3520 06BF  
                             u3360 02FD                               u3440 0DC6  
                             u4057 0B21                               u3281 0B8B  
                             u3265 0B7B                               u3601 0750  
                             u3521 06BE                               u3361 02FC  
                             u3441 0DC5                               u3610 0B3A  
                             u2810 0AA2                               u3530 06C5  
                             u3370 0AAE                               u3290 0C78  
                             u3450 0DE8                               u3611 0B39  
                             u2811 0AA1                               u3531 06C4  
                             u3371 0AAD                               u3291 0C77  
                             u3451 0DE7                               u2820 09AE  
                             u2900 04B5                               u2740 08BF  
                             u3620 0C15                               u3540 06CB  
                             u3380 0F4A                               u3460 07BE  
                             u3700 0611                               u2805 0A96  
                             u2821 09AD                               u2901 04B4  
                             u2741 08BE                               u2725 08AC  
                             u3621 0C14                               u3541 06CA  
                             u3381 0F49                               u3445 0DC2  
                             u3461 07BD                               u3701 0610  
                             u2750 0A6B                               u2910 04EC  
                             u3630 0C55                               u3390 0E73  
                             u3550 06E9                               u3470 07FE  
                             u3710 0643                               u2751 0A6A  
                             u2911 04EB                               u2735 08B3  
                             u3631 0C54                               u3391 0E72  
                             u3551 06E8                               u3295 0C74  
                             u3471 07FD                               u3711 0642  
                             u2840 09C0                               u2920 0516  
                             u3560 0734                               u3480 08CC  
                             u3640 0885                               u3720 064B  
                             u3800 0CCE                               u2841 09BF  
                             u2921 0515                               u3625 0C11  
                             u3561 0733                               u3481 08CB  
                             u3641 0884                               u3465 07BA  
                             u3721 064A                               u3801 0CCD  
                             u2770 0A7D                               u2850 09CA  
                             u2930 0521                               u3570 073F  
                             u3490 08DC                               u3650 0891  
                             u3730 0650                               u3810 0CDA  
                             u2771 0A7C                               u2851 09C9  
                             u2835 09B2                               u2931 0520  
                             u3395 0E6F                               u3571 073E  
                             u3491 08DB                               u3651 0890  
                             u3731 064F                               u3811 0CD9  
                             u2940 0527                               u3740 027D  
                             u3580 0745                               u3660 05B9  
                             u3820 0CE0                               u3900 00D8  
                             u2765 0A6F                               u2941 0526  
                             u2925 0512                               u3741 027C  
                             u3581 0744                               u3661 05B8  
                             u3821 0CDF                               u3901 00D7  
                             u2790 0A8E                               u2870 09DD  
                             u2950 0587                               u3750 0282  
                             u3590 074B                               u3670 05C2  
                             u3830 0CE5                               u3910 00DE  
                             u2791 0A8D                               u2871 09DC  
                             u2855 09C6                               u2951 0586  
                             u3751 0281                               u3591 074A  
                             u3671 05C1                               u3831 0CE4  
                             u3911 00DD                               u2960 059F  
                             u2880 0460                               u3760 09EE  
                             u3680 05E8                               u3920 0141  
                             u3840 003D                               u2785 0A7E  
                             u2865 09D1                               u2961 059E  
                             u2881 045F                               u3745 0279  
                             u3761 09ED                               u3681 05E7  
                             u3921 0140                               u3841 003C  
                             u2970 097B                               u2890 0485  
                             u3770 0A13                               u3690 060C  
                             u3930 015D                               u3850 00B8  
                             u2795 0A8A                               u2891 0484  
                             u3771 0A12                               u3691 060B  
                             u3931 015C                               u3851 00B7  
                             u2980 098E                               u3780 0CC2  
                             u3940 017A                               u3860 00BC  
                             _RCIF 0065                               u2981 098D  
                             u3765 09EA                               u3685 05E4  
                             u3781 0CC1                               u3941 0179  
                             u3861 00BB                               u2990 099A  
                             u3790 0CC8                               u3950 0181  
                             u3870 00C6                               u2991 0999  
                             u3695 0608                               u3791 0CC7  
                             u3951 0180                               u3871 00C5  
                             u3960 01BD                               u3880 00CA  
                             u3961 01BC                               u3881 00C9  
                             u3970 01C9                               u3890 00D4  
                             u3971 01C8                               u3891 00D3  
                             u3987 012F                               u3997 014B  
                             _TMR1 000E                               _TXIF 0064  
                   ??_eeprom_write 0021                       __CFG_WRT$OFF 0000  
                envioTX@transmitir 0027                               _main 0032  
                  _accionesAceptar 024B                               btemp 007E  
                    __CFG_BOREN$ON 0000             accionesAceptar@strLote 00A0  
                             pow@i 002A                               start 000E  
                      main@strLote 019C                  ___bmul@multiplier 0023  
             lecturaEtiqueta@letra 0042                     ??_eliminarProd 0030  
                            ??_pow 002A      __size_of_accionesPuertoSerial 0064  
                            ?_main 0074                    __end_of___awdiv 0D87  
                            _EEADR 010D                              STR_10 0398  
                            STR_11 0412                              STR_12 03C4  
                            STR_13 0423                              STR_14 0326  
                            STR_15 034E                              STR_16 0434  
                            STR_17 043E                      __CFG_WDTE$OFF 0000  
                            STR_18 03EC                              STR_19 0447  
                  __end_of___awmod 0B96                    ___awdiv@divisor 0020  
                            _T1CON 0010                       ?_ingresoProd 002E  
                  __end_of___lwdiv 0AA7                              i1l340 0BA2  
                            i1l342 0BAD                    __end_of___lwmod 09E2  
                            i1l347 0BEB                    ___awdiv@counter 0025  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTB 0006  
                            _PORTD 0008                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _TRISE 0089  
                            _TXREG 0019                              _TXSTA 0098  
             __end_of_cierreDeLote 0AF0                    __end_of_envioTX 09A6  
                  __end_of_dpowers 031C                              main@i 01D0  
                            pclath 000A                   _accionesDeshacer 09E2  
                            status 0003                     envioTX@mensaje 0020  
                            wtemp0 007E                    __end_of_sprintf 05A6  
                    ?_lecturaMenos 0074                    __initialization 0011  
                     __end_of_main 024B                    ??_verificarProd 0030  
                  EEPROM_search@tp 003E                             ??_main 00C9  
            __end_of_EEPROM_search 0DF5                      main@bufferMsj 01BC  
         ??_agregarModificarPrecio 004A                      eliminarProd@i 0033  
          __end_of_accionesAceptar 02C7                             _ADCON0 001F  
                           _ADCON1 009F                             _ADRESH 001E  
                           _ADRESL 009E                             _EEDATA 010C  
                           _EECON1 018C                             _EECON2 018D  
                 ___awdiv@dividend 0022            __size_of_lecturaComando 0020  
                           i1l2701 0BCE                             i1l2711 0BE1  
                           i1l2703 0BD3                             i1l2705 0BD4  
                           i1l2707 0BDA                             i1l2709 0BE0  
                           i1l2691 0BA7                             i1l2693 0BAB  
                           i1l2685 0B96                             i1l2695 0BB1  
                           i1l2687 0B9C                             i1l2697 0BBF  
                           i1l2689 0BA6                             i1l2699 0BC8  
                           _INTCON 000B                             u270_20 0BE0  
                           u270_21 0BDF                             u263_20 0B9C  
                           u263_21 0B9B                             u264_20 0BA6  
                           u264_21 0BA5                             u265_20 0BAB  
                           u265_21 0BAA                             u266_20 0BB1  
                           u266_21 0BB0                             u267_20 0BBF  
                           u267_21 0BBE                             u268_20 0BC8  
                           u268_21 0BC7                             u269_20 0BCE  
                           u269_21 0BCD                             _TMR1IF 0060  
                   ??_lecturaMenos 0028                   lecturaEtiqueta@i 0046  
                   __CFG_PWRTE$OFF 0000               __size_of_eeprom_read 001F  
                           ___bmul 0847                             ___wmul 089D  
                        ??___awdiv 0024                          ??___awmod 0024  
              _mostrarDigitos$1099 0036                          ??___lwdiv 002A  
                        ??___lwmod 0032                             _cuenta 0070  
              _verificacionEntrada 02C7                   ___awdiv@quotient 0027  
                  ___awmod@divisor 0020                             _serial 0073  
             __end_of_eeprom_write 0930                     _consultaPrecio 0E64  
                  ___awmod@counter 0025                          ??_envioTX 0022  
                     __pdataCOMMON 0078                             saved_w 007E  
             __end_of_eliminarProd 0C56                          ??_sprintf 003E  
             ?_verificacionEntrada 0074            __end_of__initialization 002E  
                  eeprom_read@addr 0021                ___bmul@multiplicand 0020  
                   __pcstackCOMMON 0074             __end_of_consultaPrecio 0F2E  
                       __end_of_BS 0326              __size_of_cierreDeLote 0049  
                       _bailenLeds 0AF0               __size_of_ingresoProd 0062  
                eeprom_write@value 0020    __size_of_agregarModificarPrecio 00D2  
      accionesPuertoSerial@mensaje 0190                   ?_accionesAceptar 0074  
            ??_verificacionEntrada 0020                         __pbssBANK0 006E  
                       __pbssBANK1 00CD                         __pbssBANK3 01D2  
                    _pedidoVoltaje 01D6                 __size_of_int_usart 005E  
                       __pmaintext 0032                       _cierreDeLote 0AA7  
         agregarModificarPrecio@tp 0062                            ?___bmul 0020  
                   eliminarProd@tp 002E                            ?___wmul 0020  
                       __pintentry 0004                    ?_consultaPrecio 004A  
              EEPROM_search@precio 003C           __end_of_accionesDeshacer 0A1F  
         __size_of_lecturaConsulta 00E6               __end_of_lecturaMenos 0847  
         __size_of_lecturaEtiqueta 0111                     verificarProd@i 0034  
                   _lecturaComando 087D                   accionesAceptar@i 00C0  
                       __stringtab 0300       __end_of_accionesPuertoSerial 0D1E  
                lecturaEtiqueta@tp 0043                         _lecturaMas 08C4  
           _agregarModificarPrecio 0F2E              __size_of_eeprom_write 0037  
                  __size_of___bmul 0017                            ___awdiv 0D1E  
                          ___awmod 0B3B                    __size_of___wmul 0027  
                          ___lwdiv 0A61                            ___lwmod 09A6  
                          __ptext1 0A1F                            __ptext2 0CBA  
                          __ptext3 05A6                            __ptext4 079D  
                      pow@potencia 0028                            __ptext5 0D87  
                          __ptext6 0C56                            __ptext7 087D  
                          __ptext8 0831                            __ptext9 08C4  
                      ?_bailenLeds 0074                            _envioTX 096A  
                          _dpowers 0312                            _huboInt 01D2  
            __size_of_eliminarProd 0062                       __size_of_pow 003A  
             consultaPrecio@precio 006A               verificacionEntrada@i 0022  
                 ___awmod@dividend 0022                       ingresoProd@i 0033  
           __end_of_lecturaComando 089D                            _nroLote 0078  
                          _numProd 00DC                  __end_of_int_usart 0BF4  
                          _sprintf 0453                            clrloop0 082A  
     agregarModificarPrecio@precio 0060               end_of_initialization 002E  
                     _eeprom_write 08F9      agregarModificarPrecio@mensaje 0054  
          __size_of_mostrarDigitos 006F                          _RCSTAbits 0018  
                       _montosLote 00DA                       _eliminarProd 0BF4  
                     __pstringtext 0300                  _productoIngresado 00DE  
                 verificarProd@ret 0033              __end_of_verificarProd 0CBA  
                       _ventasLote 006E                    ?_lecturaComando 0074  
          lecturaConsulta@articulo 00C4                  ??_lecturaConsulta 00A0  
                 _cierreLotePedido 01D7                  ??_lecturaEtiqueta 003F  
                    ??_eeprom_read 0020                __size_of_bailenLeds 004B  
                      ?_lecturaMas 0074             __size_of_EEPROM_search 006E  
                _escrituraDeCierre 0A1F                     __end_of___bmul 085E  
            __size_of_lecturaMenos 0016                     __end_of___wmul 08C4  
               ?_escrituraDeCierre 0074                      __pidataCOMMON 07FF  
             _accionesPuertoSerial 0CBA                ??_escrituraDeCierre 0023  
              start_initialization 0011                        __end_of_pow 096A  
                     _lecturaMenos 0831                   ??_consultaPrecio 004C  
        __end_of_escrituraDeCierre 0A61                     _prodIngresados 00CD  
                         ??___bmul 0021                           ??___wmul 0024  
              __end_of_eeprom_read 087D              ?_accionesPuertoSerial 0074  
                    ??_ingresoProd 0030                  ?_accionesDeshacer 0074  
                      __pbssCOMMON 0070        __end_of_verificacionEntrada 02FF  
                        ___latbits 0002                 ??_accionesDeshacer 0038  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                    __pcstackBANK3 0190                      _EEPROM_search 0D87  
              __size_of_lecturaMas 0035                   eeprom_write@addr 0022  
                      sprintf@flag 0042                        sprintf@prec 0043  
          ?_agregarModificarPrecio 0074           __size_of_accionesAceptar 007C  
                        _main$1097 01CC                          _main$1098 01CE  
                   _mostrarDigitos 0DF5                   ___lwdiv@dividend 0028  
                         ?___awdiv 0020                           ?___awmod 0020  
                         ?___lwdiv 0026                           ?___lwmod 002E  
                        _auxCuenta 01D4                       ??_bailenLeds 0020  
                         ?_envioTX 0020             consultaPrecio@articulo 004A  
                   ?_EEPROM_search 0036                   ___lwdiv@quotient 002C  
              __end_of_ingresoProd 07FF                           ?_sprintf 0034  
     escrituraDeCierre@lower_8bits 0024                          _modoDebug 0072  
                        _int_usart 0B96             verificacionEntrada@ret 0021  
   __end_of_agregarModificarPrecio 1000                  interrupt_function 0004  
                   ___wmul@product 0024             __end_of_mostrarDigitos 0E64  
                        clear_ram0 0829                        _eeprom_read 085E  
                         _PIE1bits 008C                        bailenLeds@i 0023  
       __size_of_escrituraDeCierre 0042                 __end_of_bailenLeds 0B3B  
                         _GO_nDONE 00FA                    verificarProd@tp 002E  
           ??_accionesPuertoSerial 00C6                   ??_lecturaComando 006E  
                  _lecturaConsulta 06B7                        __stringbase 0312  
                        main@i_307 01D1                  ___wmul@multiplier 0020  
                  _lecturaEtiqueta 05A6                 lecturaEtiqueta@Aux 0044  
                    _codigoEntrada 00E0             lecturaConsulta@strLote 00A4  
              cierreDeLote@strLote 004E                         ?_int_usart 0074  
                  ?_mostrarDigitos 0034                         _EECON1bits 018C  
                     ??_lecturaMas 006E                  ??_accionesAceptar 004A  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
               __end_of__stringtab 0312                    ??_EEPROM_search 0038  
                      _ingresoProd 079D                         sprintf@val 0047  
                 __size_of_envioTX 003C                           _adresult 01D8  
                  ___lwdiv@divisor 0026                       pow@resultado 002C  
                  ___lwdiv@counter 002B                           __ptext10 02C7  
                         __ptext11 0AA7                           __ptext20 09E2  
                         __ptext12 0F2E                           __ptext21 0BF4  
                         __ptext13 08F9                           __ptext30 0AF0  
                         __ptext22 0930                           __ptext14 0847  
                         __ptext31 0B96                           __ptext23 089D  
                         __ptext15 06B7                           __ptext24 024B  
                         __ptext16 0E64                           __ptext25 0453  
                         __ptext17 085E                           __ptext26 0DF5  
                         __ptext18 0B3B                           __ptext27 09A6  
                         __ptext19 0D1E                           __ptext28 0A61  
                         __ptext29 096A                 __end_of_lecturaMas 08F9  
     escrituraDeCierre@upper_8bits 0025                   __size_of_sprintf 0153  
            consultaPrecio@mensaje 0050                      __size_of_main 0219  
                        pow@numero 0026             __size_of_verificarProd 0064  
                    ingresoProd@tp 002E                      ?_cierreDeLote 0074  
          __end_of_lecturaConsulta 079D            __end_of_lecturaEtiqueta 06B7  
                         envioTX@i 0025                         _INTCONbits 000B  
agregarModificarPrecio@lower_8bits 005E                           intlevel1 0000  
                        sprintf@ap 0044                          sprintf@cp 0045  
                      ??_int_usart 0074                          sprintf@sp 0034  
                 ___lwmod@dividend 0030          __size_of_accionesDeshacer 003D  
                   ??_cierreDeLote 004A                          stringcode 030A  
                mostrarDigitos@num 0034                           sprintf@c 0049  
                         sprintf@f 0036                      _verificarProd 0C56  
                  ___lwmod@divisor 002E                    ___lwmod@counter 0033  
                         stringtab 0300       __size_of_verificacionEntrada 0038  
                    ?_eeprom_write 0020                         _STATUSbits 0003  
                     ?_eeprom_read 0074  
