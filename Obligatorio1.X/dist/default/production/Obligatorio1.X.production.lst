

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 23:49:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0088                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  0091                     	;# 
   491  0092                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0098                     	;# 
   495  0099                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  010F                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  000E                     	;# 
   522  000F                     	;# 
   523  0010                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0014                     	;# 
   528  0015                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  001D                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  0081                     	;# 
   542  0085                     	;# 
   543  0086                     	;# 
   544  0087                     	;# 
   545  0088                     	;# 
   546  0089                     	;# 
   547  008C                     	;# 
   548  008D                     	;# 
   549  008E                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0094                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009C                     	;# 
   557  009D                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  010C                     	;# 
   561  010D                     	;# 
   562  010E                     	;# 
   563  010F                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566                           
   567                           	psect	idataCOMMON
   568  07FC                     __pidataCOMMON:	
   569                           
   570                           ;initializer for _nroLote
   571  07FC  3401               	retlw	1
   572                           
   573                           	psect	stringtext
   574  0400                     __pstringtext:	
   575  0400                     stringtab:	
   576  0400                     __stringtab:	
   577                           
   578                           ;	String table - string pointers are 2 bytes each
   579  0400  1BFF               	btfsc	btemp+1,7
   580  0401  2C0A               	ljmp	stringcode
   581  0402  1383               	bcf	3,7
   582  0403  187F               	btfsc	btemp+1,0
   583  0404  1783               	bsf	3,7
   584  0405  0800               	movf	0,w
   585  0406  0A84               	incf	4,f
   586  0407  1903               	skipnz
   587  0408  0AFF               	incf	btemp+1,f
   588  0409  0008               	return
   589  040A                     stringcode:	
   590  040A  087F               	movf	btemp+1,w
   591  040B  397F               	andlw	127
   592  040C  008A               	movwf	10
   593  040D  0804               	movf	4,w
   594  040E  0A84               	incf	4,f
   595  040F  1903               	skipnz
   596  0410  0AFF               	incf	btemp+1,f
   597  0411  0082               	movwf	2
   598  0412                     __stringbase:	
   599  0412                     __end_of__stringtab:	
   600  0412                     _dpowers:	
   601  0412  3401               	retlw	1
   602  0413  3400               	retlw	0
   603  0414  340A               	retlw	10
   604  0415  3400               	retlw	0
   605  0416  3464               	retlw	100
   606  0417  3400               	retlw	0
   607  0418  34E8               	retlw	232
   608  0419  3403               	retlw	3
   609  041A  3410               	retlw	16
   610  041B  3427               	retlw	39
   611  041C                     __end_of_dpowers:	
   612  041C                     _BS:	
   613  041C  3400               	retlw	0
   614  041D  3410               	retlw	16
   615  041E  3420               	retlw	32
   616  041F  3430               	retlw	48
   617  0420  3440               	retlw	64
   618  0421  3450               	retlw	80
   619  0422  3460               	retlw	96
   620  0423  3470               	retlw	112
   621  0424  3480               	retlw	128
   622  0425  3490               	retlw	144
   623  0426                     __end_of_BS:	
   624  000E                     _TMR1	set	14
   625  000B                     _INTCONbits	set	11
   626  0003                     _STATUSbits	set	3
   627  0019                     _TXREG	set	25
   628  0008                     _PORTD	set	8
   629  0006                     _PORTB	set	6
   630  001E                     _ADRESH	set	30
   631  001A                     _RCREG	set	26
   632  0018                     _RCSTAbits	set	24
   633  0018                     _RCSTA	set	24
   634  000B                     _INTCON	set	11
   635  001F                     _ADCON0	set	31
   636  0010                     _T1CON	set	16
   637  0064                     _TXIF	set	100
   638  0065                     _RCIF	set	101
   639  00FA                     _GO_nDONE	set	250
   640  0060                     _TMR1IF	set	96
   641  004A                     _RE2	set	74
   642  0049                     _RE1	set	73
   643  0048                     _RE0	set	72
   644  0066                     _ADIF	set	102
   645  002B                     _RA3	set	43
   646  0038                     _RC0	set	56
   647  002D                     _RA5	set	45
   648  009E                     _ADRESL	set	158
   649  008C                     _PIE1bits	set	140
   650  0099                     _SPBRG	set	153
   651  0098                     _TXSTA	set	152
   652  0087                     _TRISC	set	135
   653  009F                     _ADCON1	set	159
   654  0088                     _TRISD	set	136
   655  0086                     _TRISB	set	134
   656  0089                     _TRISE	set	137
   657  0085                     _TRISA	set	133
   658  010C                     _EEDATA	set	268
   659  010D                     _EEADR	set	269
   660  018D                     _EECON2	set	397
   661  018C                     _EECON1	set	396
   662  018C                     _EECON1bits	set	396
   663  0426                     STR_6:	
   664  0426  344F               	retlw	79	;'O'
   665  0427  3463               	retlw	99	;'c'
   666  0428  3475               	retlw	117	;'u'
   667  0429  3472               	retlw	114	;'r'
   668  042A  3472               	retlw	114	;'r'
   669  042B  3469               	retlw	105	;'i'
   670  042C  346F               	retlw	111	;'o'
   671  042D  3420               	retlw	32	;' '
   672  042E  3475               	retlw	117	;'u'
   673  042F  346E               	retlw	110	;'n'
   674  0430  3420               	retlw	32	;' '
   675  0431  3465               	retlw	101	;'e'
   676  0432  3472               	retlw	114	;'r'
   677  0433  3472               	retlw	114	;'r'
   678  0434  346F               	retlw	111	;'o'
   679  0435  3472               	retlw	114	;'r'
   680  0436  3420               	retlw	32	;' '
   681  0437  3465               	retlw	101	;'e'
   682  0438  346E               	retlw	110	;'n'
   683  0439  3420               	retlw	32	;' '
   684  043A  346C               	retlw	108	;'l'
   685  043B  3461               	retlw	97	;'a'
   686  043C  3420               	retlw	32	;' '
   687  043D  3469               	retlw	105	;'i'
   688  043E  346E               	retlw	110	;'n'
   689  043F  3474               	retlw	116	;'t'
   690  0440  3465               	retlw	101	;'e'
   691  0441  3472               	retlw	114	;'r'
   692  0442  3470               	retlw	112	;'p'
   693  0443  3472               	retlw	114	;'r'
   694  0444  3465               	retlw	101	;'e'
   695  0445  3474               	retlw	116	;'t'
   696  0446  3461               	retlw	97	;'a'
   697  0447  3463               	retlw	99	;'c'
   698  0448  3469               	retlw	105	;'i'
   699  0449  346F               	retlw	111	;'o'
   700  044A  346E               	retlw	110	;'n'
   701  044B  342E               	retlw	46	;'.'
   702  044C  340A               	retlw	10
   703  044D  3400               	retlw	0
   704  044E                     STR_16:	
   705  044E  3443               	retlw	67	;'C'
   706  044F  3469               	retlw	105	;'i'
   707  0450  3465               	retlw	101	;'e'
   708  0451  3472               	retlw	114	;'r'
   709  0452  3472               	retlw	114	;'r'
   710  0453  3465               	retlw	101	;'e'
   711  0454  342C               	retlw	44	;','
   712  0455  3420               	retlw	32	;' '
   713  0456  344C               	retlw	76	;'L'
   714  0457  343A               	retlw	58	;':'
   715  0458  3425               	retlw	37	;'%'
   716  0459  3475               	retlw	117	;'u'
   717  045A  342C               	retlw	44	;','
   718  045B  344E               	retlw	78	;'N'
   719  045C  343A               	retlw	58	;':'
   720  045D  3425               	retlw	37	;'%'
   721  045E  3475               	retlw	117	;'u'
   722  045F  342C               	retlw	44	;','
   723  0460  3454               	retlw	84	;'T'
   724  0461  343A               	retlw	58	;':'
   725  0462  3425               	retlw	37	;'%'
   726  0463  3475               	retlw	117	;'u'
   727  0464  3400               	retlw	0
   728  0465                     STR_9:	
   729  0465  3450               	retlw	80	;'P'
   730  0466  3472               	retlw	114	;'r'
   731  0467  346F               	retlw	111	;'o'
   732  0468  3464               	retlw	100	;'d'
   733  0469  3475               	retlw	117	;'u'
   734  046A  3463               	retlw	99	;'c'
   735  046B  3474               	retlw	116	;'t'
   736  046C  346F               	retlw	111	;'o'
   737  046D  3420               	retlw	32	;' '
   738  046E  346E               	retlw	110	;'n'
   739  046F  346F               	retlw	111	;'o'
   740  0470  3420               	retlw	32	;' '
   741  0471  3465               	retlw	101	;'e'
   742  0472  346E               	retlw	110	;'n'
   743  0473  3463               	retlw	99	;'c'
   744  0474  346F               	retlw	111	;'o'
   745  0475  346E               	retlw	110	;'n'
   746  0476  3474               	retlw	116	;'t'
   747  0477  3472               	retlw	114	;'r'
   748  0478  3461               	retlw	97	;'a'
   749  0479  3464               	retlw	100	;'d'
   750  047A  346F               	retlw	111	;'o'
   751  047B  3400               	retlw	0
   752  047C                     STR_7:	
   753  047C  344D               	retlw	77	;'M'
   754  047D  346F               	retlw	111	;'o'
   755  047E  3464               	retlw	100	;'d'
   756  047F  346F               	retlw	111	;'o'
   757  0480  3420               	retlw	32	;' '
   758  0481  3444               	retlw	68	;'D'
   759  0482  3465               	retlw	101	;'e'
   760  0483  3462               	retlw	98	;'b'
   761  0484  3475               	retlw	117	;'u'
   762  0485  3467               	retlw	103	;'g'
   763  0486  3420               	retlw	32	;' '
   764  0487  3464               	retlw	100	;'d'
   765  0488  3465               	retlw	101	;'e'
   766  0489  3473               	retlw	115	;'s'
   767  048A  3461               	retlw	97	;'a'
   768  048B  3463               	retlw	99	;'c'
   769  048C  3474               	retlw	116	;'t'
   770  048D  3469               	retlw	105	;'i'
   771  048E  3476               	retlw	118	;'v'
   772  048F  3461               	retlw	97	;'a'
   773  0490  3464               	retlw	100	;'d'
   774  0491  346F               	retlw	111	;'o'
   775  0492  3400               	retlw	0
   776  0493                     STR_11:	
   777  0493  344E               	retlw	78	;'N'
   778  0494  346F               	retlw	111	;'o'
   779  0495  3420               	retlw	32	;' '
   780  0496  3465               	retlw	101	;'e'
   781  0497  3478               	retlw	120	;'x'
   782  0498  3469               	retlw	105	;'i'
   783  0499  3473               	retlw	115	;'s'
   784  049A  3474               	retlw	116	;'t'
   785  049B  3465               	retlw	101	;'e'
   786  049C  3420               	retlw	32	;' '
   787  049D  3470               	retlw	112	;'p'
   788  049E  3472               	retlw	114	;'r'
   789  049F  346F               	retlw	111	;'o'
   790  04A0  3464               	retlw	100	;'d'
   791  04A1  3475               	retlw	117	;'u'
   792  04A2  3463               	retlw	99	;'c'
   793  04A3  3474               	retlw	116	;'t'
   794  04A4  346F               	retlw	111	;'o'
   795  04A5  3420               	retlw	32	;' '
   796  04A6  3430               	retlw	48	;'0'
   797  04A7  3430               	retlw	48	;'0'
   798  04A8  3400               	retlw	0
   799  04A9                     STR_10:	
   800  04A9  3454               	retlw	84	;'T'
   801  04AA  3450               	retlw	80	;'P'
   802  04AB  343A               	retlw	58	;':'
   803  04AC  3420               	retlw	32	;' '
   804  04AD  3425               	retlw	37	;'%'
   805  04AE  3464               	retlw	100	;'d'
   806  04AF  3420               	retlw	32	;' '
   807  04B0  3450               	retlw	80	;'P'
   808  04B1  343A               	retlw	58	;':'
   809  04B2  3420               	retlw	32	;' '
   810  04B3  3425               	retlw	37	;'%'
   811  04B4  3464               	retlw	100	;'d'
   812  04B5  342C               	retlw	44	;','
   813  04B6  3425               	retlw	37	;'%'
   814  04B7  3464               	retlw	100	;'d'
   815  04B8  3420               	retlw	32	;' '
   816  04B9  3445               	retlw	69	;'E'
   817  04BA  3475               	retlw	117	;'u'
   818  04BB  3472               	retlw	114	;'r'
   819  04BC  346F               	retlw	111	;'o'
   820  04BD  3473               	retlw	115	;'s'
   821  04BE  3400               	retlw	0
   822  04BF                     STR_5:	
   823  04BF  3443               	retlw	67	;'C'
   824  04C0  3469               	retlw	105	;'i'
   825  04C1  3465               	retlw	101	;'e'
   826  04C2  3472               	retlw	114	;'r'
   827  04C3  3472               	retlw	114	;'r'
   828  04C4  3465               	retlw	101	;'e'
   829  04C5  342C               	retlw	44	;','
   830  04C6  344C               	retlw	76	;'L'
   831  04C7  343A               	retlw	58	;':'
   832  04C8  3425               	retlw	37	;'%'
   833  04C9  3475               	retlw	117	;'u'
   834  04CA  342C               	retlw	44	;','
   835  04CB  344E               	retlw	78	;'N'
   836  04CC  343A               	retlw	58	;':'
   837  04CD  3425               	retlw	37	;'%'
   838  04CE  3475               	retlw	117	;'u'
   839  04CF  342C               	retlw	44	;','
   840  04D0  3454               	retlw	84	;'T'
   841  04D1  343A               	retlw	58	;':'
   842  04D2  3425               	retlw	37	;'%'
   843  04D3  3475               	retlw	117	;'u'
   844  04D4  3400               	retlw	0
   845  04D5                     STR_19:	
   846  04D5  344E               	retlw	78	;'N'
   847  04D6  346F               	retlw	111	;'o'
   848  04D7  3420               	retlw	32	;' '
   849  04D8  3468               	retlw	104	;'h'
   850  04D9  3461               	retlw	97	;'a'
   851  04DA  3479               	retlw	121	;'y'
   852  04DB  3420               	retlw	32	;' '
   853  04DC  3470               	retlw	112	;'p'
   854  04DD  3472               	retlw	114	;'r'
   855  04DE  346F               	retlw	111	;'o'
   856  04DF  3464               	retlw	100	;'d'
   857  04E0  3475               	retlw	117	;'u'
   858  04E1  3463               	retlw	99	;'c'
   859  04E2  3474               	retlw	116	;'t'
   860  04E3  346F               	retlw	111	;'o'
   861  04E4  3420               	retlw	32	;' '
   862  04E5  3430               	retlw	48	;'0'
   863  04E6  3430               	retlw	48	;'0'
   864  04E7  3400               	retlw	0
   865  04E8                     STR_4:	
   866  04E8  3450               	retlw	80	;'P'
   867  04E9  3472               	retlw	114	;'r'
   868  04EA  346F               	retlw	111	;'o'
   869  04EB  3464               	retlw	100	;'d'
   870  04EC  3475               	retlw	117	;'u'
   871  04ED  3463               	retlw	99	;'c'
   872  04EE  3474               	retlw	116	;'t'
   873  04EF  346F               	retlw	111	;'o'
   874  04F0  3420               	retlw	32	;' '
   875  04F1  3469               	retlw	105	;'i'
   876  04F2  346E               	retlw	110	;'n'
   877  04F3  3467               	retlw	103	;'g'
   878  04F4  3472               	retlw	114	;'r'
   879  04F5  3465               	retlw	101	;'e'
   880  04F6  3473               	retlw	115	;'s'
   881  04F7  3461               	retlw	97	;'a'
   882  04F8  3464               	retlw	100	;'d'
   883  04F9  346F               	retlw	111	;'o'
   884  04FA  3400               	retlw	0
   885  04FB                     STR_2:	
   886  04FB  3450               	retlw	80	;'P'
   887  04FC  3472               	retlw	114	;'r'
   888  04FD  346F               	retlw	111	;'o'
   889  04FE  3464               	retlw	100	;'d'
   890  04FF  3475               	retlw	117	;'u'
   891  0500  3463               	retlw	99	;'c'
   892  0501  3474               	retlw	116	;'t'
   893  0502  346F               	retlw	111	;'o'
   894  0503  3420               	retlw	32	;' '
   895  0504  3463               	retlw	99	;'c'
   896  0505  3461               	retlw	97	;'a'
   897  0506  346E               	retlw	110	;'n'
   898  0507  3463               	retlw	99	;'c'
   899  0508  3465               	retlw	101	;'e'
   900  0509  346C               	retlw	108	;'l'
   901  050A  3461               	retlw	97	;'a'
   902  050B  3464               	retlw	100	;'d'
   903  050C  346F               	retlw	111	;'o'
   904  050D  3400               	retlw	0
   905  050E                     STR_13:	
   906  050E  3445               	retlw	69	;'E'
   907  050F  3473               	retlw	115	;'s'
   908  0510  3474               	retlw	116	;'t'
   909  0511  3461               	retlw	97	;'a'
   910  0512  3464               	retlw	100	;'d'
   911  0513  346F               	retlw	111	;'o'
   912  0514  343A               	retlw	58	;':'
   913  0515  3420               	retlw	32	;' '
   914  0516  3445               	retlw	69	;'E'
   915  0517  346E               	retlw	110	;'n'
   916  0518  3420               	retlw	32	;' '
   917  0519  3465               	retlw	101	;'e'
   918  051A  3473               	retlw	115	;'s'
   919  051B  3470               	retlw	112	;'p'
   920  051C  3465               	retlw	101	;'e'
   921  051D  3472               	retlw	114	;'r'
   922  051E  3461               	retlw	97	;'a'
   923  051F  3400               	retlw	0
   924  0520                     STR_12:	
   925  0520  3445               	retlw	69	;'E'
   926  0521  3473               	retlw	115	;'s'
   927  0522  3474               	retlw	116	;'t'
   928  0523  3461               	retlw	97	;'a'
   929  0524  3464               	retlw	100	;'d'
   930  0525  346F               	retlw	111	;'o'
   931  0526  343A               	retlw	58	;':'
   932  0527  3420               	retlw	32	;' '
   933  0528  3441               	retlw	65	;'A'
   934  0529  3463               	retlw	99	;'c'
   935  052A  3474               	retlw	116	;'t'
   936  052B  3469               	retlw	105	;'i'
   937  052C  3476               	retlw	118	;'v'
   938  052D  346F               	retlw	111	;'o'
   939  052E  3400               	retlw	0
   940  052F                     STR_17:	
   941  052F  3456               	retlw	86	;'V'
   942  0530  343D               	retlw	61	;'='
   943  0531  3425               	retlw	37	;'%'
   944  0532  3464               	retlw	100	;'d'
   945  0533  342E               	retlw	46	;'.'
   946  0534  3425               	retlw	37	;'%'
   947  0535  3464               	retlw	100	;'d'
   948  0536  3456               	retlw	86	;'V'
   949  0537  340A               	retlw	10
   950  0538  3400               	retlw	0
   951  0539                     STR_20:	
   952  0539  3428               	retlw	40	;'('
   953  053A  346E               	retlw	110	;'n'
   954  053B  3475               	retlw	117	;'u'
   955  053C  346C               	retlw	108	;'l'
   956  053D  346C               	retlw	108	;'l'
   957  053E  3429               	retlw	41	;')'
   958  053F  3400               	retlw	0
   959  0540                     STR_18:	
   960  0540  3450               	retlw	80	;'P'
   961  0541  3425               	retlw	37	;'%'
   962  0542  3464               	retlw	100	;'d'
   963  0543  343D               	retlw	61	;'='
   964  0544  3425               	retlw	37	;'%'
   965  0545  3464               	retlw	100	;'d'
   966  0546  3400               	retlw	0
   967  0547                     STR_3:	
   968  0547  3445               	retlw	69	;'E'
   969  0548  343A               	retlw	58	;':'
   970  0549  3425               	retlw	37	;'%'
   971  054A  3473               	retlw	115	;'s'
   972  054B  3400               	retlw	0
   973  0426                     
   974                           ; #config settings
   975  0000                     
   976                           	psect	cinit
   977  0011                     start_initialization:	
   978  0011                     __initialization:	
   979                           
   980                           ; Initialize objects allocated to COMMON
   981  0011  120A  118A  27FC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   982  0016  00F8               	movwf	__pdataCOMMON& (0+127)
   983                           
   984                           ; Clear objects allocated to BANK3
   985  0017  1783               	bsf	3,7	;select IRP bank2
   986  0018  30D2               	movlw	low __pbssBANK3
   987  0019  0084               	movwf	4
   988  001A  30DA               	movlw	low (__pbssBANK3+8)
   989  001B  120A  158A  200C  120A  118A  	fcall	clear_ram0
   990                           
   991                           ; Clear objects allocated to BANK1
   992  0020  1383               	bcf	3,7	;select IRP bank0
   993  0021  30CD               	movlw	low __pbssBANK1
   994  0022  0084               	movwf	4
   995  0023  30EA               	movlw	low (__pbssBANK1+29)
   996  0024  120A  158A  200C  120A  118A  	fcall	clear_ram0
   997                           
   998                           ; Clear objects allocated to BANK0
   999  0029  01EE               	clrf	__pbssBANK0& (0+127)
  1000                           
  1001                           ; Clear objects allocated to COMMON
  1002  002A  01F0               	clrf	__pbssCOMMON& (0+127)
  1003  002B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1004  002C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1005  002D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1006  002E                     end_of_initialization:	
  1007                           ;End of C runtime variable initialization code
  1008                           
  1009  002E                     __end_of__initialization:	
  1010  002E  0183               	clrf	3
  1011  002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
  1012                           
  1013                           	psect	bssCOMMON
  1014  0070                     __pbssCOMMON:	
  1015  0070                     _cuenta:	
  1016  0070                     	ds	2
  1017  0072                     _modoDebug:	
  1018  0072                     	ds	1
  1019  0073                     _serial:	
  1020  0073                     	ds	1
  1021                           
  1022                           	psect	dataCOMMON
  1023  0078                     __pdataCOMMON:	
  1024  0078                     _nroLote:	
  1025  0078                     	ds	1
  1026                           
  1027                           	psect	bssBANK0
  1028  006E                     __pbssBANK0:	
  1029  006E                     _ventasLote:	
  1030  006E                     	ds	1
  1031                           
  1032                           	psect	bssBANK1
  1033  00CD                     __pbssBANK1:	
  1034  00CD                     _prodIngresados:	
  1035  00CD                     	ds	13
  1036  00DA                     _montosLote:	
  1037  00DA                     	ds	2
  1038  00DC                     _numProd:	
  1039  00DC                     	ds	2
  1040  00DE                     _productoIngresado:	
  1041  00DE                     	ds	2
  1042  00E0                     _codigoEntrada:	
  1043  00E0                     	ds	10
  1044                           
  1045                           	psect	bssBANK3
  1046  01D2                     __pbssBANK3:	
  1047  01D2                     _huboInt:	
  1048  01D2                     	ds	2
  1049  01D4                     _auxCuenta:	
  1050  01D4                     	ds	2
  1051  01D6                     _pedidoVoltaje:	
  1052  01D6                     	ds	1
  1053  01D7                     _cierreLotePedido:	
  1054  01D7                     	ds	1
  1055  01D8                     _adresult:	
  1056  01D8                     	ds	2
  1057                           
  1058                           	psect	clrtext
  1059  080C                     clear_ram0:	
  1060                           ;	Called with FSR containing the base address, and
  1061                           ;	W with the last address+1
  1062                           
  1063  080C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1064  080D                     clrloop0:	
  1065  080D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1066  080E  0A84               	incf	4,f	;increment pointer
  1067  080F  0604               	xorwf	4,w	;XOR with final address
  1068  0810  1903               	btfsc	3,2	;have we reached the end yet?
  1069  0811  3400               	retlw	0	;all done for this memory range, return
  1070  0812  0604               	xorwf	4,w	;XOR again to restore value
  1071  0813  280D               	goto	clrloop0	;do the next byte
  1072                           
  1073                           	psect	cstackBANK3
  1074  0190                     __pcstackBANK3:	
  1075  0190                     accionesPuertoSerial@mensaje:	
  1076                           
  1077                           ; 12 bytes @ 0x0
  1078  0190                     	ds	12
  1079  019C                     main@strLote:	
  1080                           
  1081                           ; 32 bytes @ 0xC
  1082  019C                     	ds	32
  1083  01BC                     main@bufferMsj:	
  1084                           
  1085                           ; 16 bytes @ 0x2C
  1086  01BC                     	ds	16
  1087  01CC                     _main$1098:	
  1088                           
  1089                           ; 2 bytes @ 0x3C
  1090  01CC                     	ds	2
  1091  01CE                     _main$1099:	
  1092                           
  1093                           ; 2 bytes @ 0x3E
  1094  01CE                     	ds	2
  1095  01D0                     main@i:	
  1096                           
  1097                           ; 1 bytes @ 0x40
  1098  01D0                     	ds	1
  1099  01D1                     main@i_308:	
  1100                           
  1101                           ; 1 bytes @ 0x41
  1102  01D1                     	ds	1
  1103                           
  1104                           	psect	cstackBANK1
  1105  00A0                     __pcstackBANK1:	
  1106  00A0                     ??_lecturaConsulta:	
  1107  00A0                     accionesAceptar@strLote:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110                           
  1111                           ; 32 bytes @ 0x0
  1112  00A0                     	ds	4
  1113  00A4                     lecturaConsulta@strLote:	
  1114                           
  1115                           ; 32 bytes @ 0x4
  1116  00A4                     	ds	28
  1117  00C0                     accionesAceptar@i:	
  1118                           
  1119                           ; 2 bytes @ 0x20
  1120  00C0                     	ds	4
  1121  00C4                     lecturaConsulta@articulo:	
  1122                           
  1123                           ; 2 bytes @ 0x24
  1124  00C4                     	ds	2
  1125  00C6                     ??_accionesPuertoSerial:	
  1126                           
  1127                           ; 1 bytes @ 0x26
  1128  00C6                     	ds	3
  1129  00C9                     ??_main:	
  1130                           
  1131                           ; 1 bytes @ 0x29
  1132  00C9                     	ds	4
  1133                           
  1134                           	psect	cstackCOMMON
  1135  0074                     __pcstackCOMMON:	
  1136  0074                     ?_bailenLeds:	
  1137  0074                     ?_lecturaComando:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0074                     ?_lecturaEtiqueta:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0074                     ?_eeprom_read:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0074                     ?_agregarModificarPrecio:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0074                     ?_accionesAceptar:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0074                     ?_accionesDeshacer:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0074                     ?_accionesPuertoSerial:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0074                     ?_escrituraDeCierre:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0074                     ?_verificacionEntrada:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0074                     ?_cierreDeLote:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0074                     ?_lecturaMas:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0074                     ?_lecturaMenos:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0074                     ?_lecturaConsulta:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0074                     ?_main:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0074                     ?_int_usart:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0074                     ??_int_usart:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x0
  1187  0074                     	ds	4
  1188                           
  1189                           	psect	cstackBANK0
  1190  0020                     __pcstackBANK0:	
  1191  0020                     ?_envioTX:	
  1192  0020                     ??_bailenLeds:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0020                     ?_eeprom_write:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0020                     ??_eeprom_read:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0020                     ??_verificacionEntrada:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0020                     ?___bmul:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0020                     ?___wmul:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0020                     ?___awdiv:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213  0020                     ?___awmod:	
  1214                           ; 2 bytes @ 0x0
  1215                           
  1216  0020                     eeprom_write@value:	
  1217                           ; 2 bytes @ 0x0
  1218                           
  1219  0020                     ___bmul@multiplicand:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0020                     envioTX@mensaje:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0020                     ___wmul@multiplier:	
  1226                           ; 2 bytes @ 0x0
  1227                           
  1228  0020                     ___awdiv@divisor:	
  1229                           ; 2 bytes @ 0x0
  1230                           
  1231  0020                     ___awmod@divisor:	
  1232                           ; 2 bytes @ 0x0
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0x0
  1236  0020                     	ds	1
  1237  0021                     ??_eeprom_write:	
  1238  0021                     ??___bmul:	
  1239                           ; 1 bytes @ 0x1
  1240                           
  1241  0021                     verificacionEntrada@ret:	
  1242                           ; 1 bytes @ 0x1
  1243                           
  1244  0021                     eeprom_read@addr:	
  1245                           ; 1 bytes @ 0x1
  1246                           
  1247                           
  1248                           ; 1 bytes @ 0x1
  1249  0021                     	ds	1
  1250  0022                     ??_envioTX:	
  1251  0022                     verificacionEntrada@i:	
  1252                           ; 1 bytes @ 0x2
  1253                           
  1254  0022                     eeprom_write@addr:	
  1255                           ; 1 bytes @ 0x2
  1256                           
  1257  0022                     ___bmul@product:	
  1258                           ; 1 bytes @ 0x2
  1259                           
  1260  0022                     ___wmul@multiplicand:	
  1261                           ; 1 bytes @ 0x2
  1262                           
  1263  0022                     ___awdiv@dividend:	
  1264                           ; 2 bytes @ 0x2
  1265                           
  1266  0022                     ___awmod@dividend:	
  1267                           ; 2 bytes @ 0x2
  1268                           
  1269                           
  1270                           ; 2 bytes @ 0x2
  1271  0022                     	ds	1
  1272  0023                     ??_escrituraDeCierre:	
  1273  0023                     ___bmul@multiplier:	
  1274                           ; 1 bytes @ 0x3
  1275                           
  1276  0023                     bailenLeds@i:	
  1277                           ; 1 bytes @ 0x3
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x3
  1281  0023                     	ds	1
  1282  0024                     ??___wmul:	
  1283  0024                     ??___awdiv:	
  1284                           ; 1 bytes @ 0x4
  1285                           
  1286  0024                     ??___awmod:	
  1287                           ; 1 bytes @ 0x4
  1288                           
  1289  0024                     escrituraDeCierre@lower_8bits:	
  1290                           ; 1 bytes @ 0x4
  1291                           
  1292  0024                     ___wmul@product:	
  1293                           ; 1 bytes @ 0x4
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0x4
  1297  0024                     	ds	1
  1298  0025                     escrituraDeCierre@upper_8bits:	
  1299  0025                     ___awdiv@counter:	
  1300                           ; 1 bytes @ 0x5
  1301                           
  1302  0025                     ___awmod@counter:	
  1303                           ; 1 bytes @ 0x5
  1304                           
  1305  0025                     envioTX@i:	
  1306                           ; 1 bytes @ 0x5
  1307                           
  1308                           
  1309                           ; 2 bytes @ 0x5
  1310  0025                     	ds	1
  1311  0026                     ?_pow:	
  1312  0026                     ?___lwdiv:	
  1313                           ; 2 bytes @ 0x6
  1314                           
  1315  0026                     ___awdiv@sign:	
  1316                           ; 2 bytes @ 0x6
  1317                           
  1318  0026                     ___awmod@sign:	
  1319                           ; 1 bytes @ 0x6
  1320                           
  1321  0026                     pow@numero:	
  1322                           ; 1 bytes @ 0x6
  1323                           
  1324  0026                     ___lwdiv@divisor:	
  1325                           ; 2 bytes @ 0x6
  1326                           
  1327                           
  1328                           ; 2 bytes @ 0x6
  1329  0026                     	ds	1
  1330  0027                     envioTX@transmitir:	
  1331  0027                     ___awdiv@quotient:	
  1332                           ; 1 bytes @ 0x7
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x7
  1336  0027                     	ds	1
  1337  0028                     ??_lecturaMenos:	
  1338  0028                     pow@potencia:	
  1339                           ; 1 bytes @ 0x8
  1340                           
  1341  0028                     ___lwdiv@dividend:	
  1342                           ; 2 bytes @ 0x8
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x8
  1346  0028                     	ds	2
  1347  002A                     ??_pow:	
  1348  002A                     ??___lwdiv:	
  1349                           ; 1 bytes @ 0xA
  1350                           
  1351  002A                     pow@i:	
  1352                           ; 1 bytes @ 0xA
  1353                           
  1354                           
  1355                           ; 2 bytes @ 0xA
  1356  002A                     	ds	1
  1357  002B                     ___lwdiv@counter:	
  1358                           
  1359                           ; 1 bytes @ 0xB
  1360  002B                     	ds	1
  1361  002C                     pow@resultado:	
  1362  002C                     ___lwdiv@quotient:	
  1363                           ; 2 bytes @ 0xC
  1364                           
  1365                           
  1366                           ; 2 bytes @ 0xC
  1367  002C                     	ds	2
  1368  002E                     ?_eliminarProd:	
  1369  002E                     ?_verificarProd:	
  1370                           ; 1 bytes @ 0xE
  1371                           
  1372  002E                     ?_ingresoProd:	
  1373                           ; 1 bytes @ 0xE
  1374                           
  1375  002E                     ?___lwmod:	
  1376                           ; 1 bytes @ 0xE
  1377                           
  1378  002E                     ingresoProd@tp:	
  1379                           ; 2 bytes @ 0xE
  1380                           
  1381  002E                     verificarProd@tp:	
  1382                           ; 2 bytes @ 0xE
  1383                           
  1384  002E                     eliminarProd@tp:	
  1385                           ; 2 bytes @ 0xE
  1386                           
  1387  002E                     ___lwmod@divisor:	
  1388                           ; 2 bytes @ 0xE
  1389                           
  1390                           
  1391                           ; 2 bytes @ 0xE
  1392  002E                     	ds	2
  1393  0030                     ??_eliminarProd:	
  1394  0030                     ??_verificarProd:	
  1395                           ; 1 bytes @ 0x10
  1396                           
  1397  0030                     ??_ingresoProd:	
  1398                           ; 1 bytes @ 0x10
  1399                           
  1400  0030                     ___lwmod@dividend:	
  1401                           ; 1 bytes @ 0x10
  1402                           
  1403                           
  1404                           ; 2 bytes @ 0x10
  1405  0030                     	ds	2
  1406  0032                     ??___lwmod:	
  1407                           
  1408                           ; 1 bytes @ 0x12
  1409  0032                     	ds	1
  1410  0033                     verificarProd@ret:	
  1411  0033                     ___lwmod@counter:	
  1412                           ; 1 bytes @ 0x13
  1413                           
  1414  0033                     ingresoProd@i:	
  1415                           ; 1 bytes @ 0x13
  1416                           
  1417  0033                     eliminarProd@i:	
  1418                           ; 2 bytes @ 0x13
  1419                           
  1420                           
  1421                           ; 2 bytes @ 0x13
  1422  0033                     	ds	1
  1423  0034                     ?_mostrarDigitos:	
  1424  0034                     ?_sprintf:	
  1425                           ; 1 bytes @ 0x14
  1426                           
  1427  0034                     verificarProd@i:	
  1428                           ; 2 bytes @ 0x14
  1429                           
  1430  0034                     mostrarDigitos@num:	
  1431                           ; 2 bytes @ 0x14
  1432                           
  1433  0034                     sprintf@sp:	
  1434                           ; 2 bytes @ 0x14
  1435                           
  1436                           
  1437                           ; 2 bytes @ 0x14
  1438  0034                     	ds	2
  1439  0036                     ??_mostrarDigitos:	
  1440  0036                     ?_EEPROM_search:	
  1441                           ; 1 bytes @ 0x16
  1442                           
  1443  0036                     sprintf@f:	
  1444                           ; 2 bytes @ 0x16
  1445                           
  1446  0036                     _mostrarDigitos$1100:	
  1447                           ; 2 bytes @ 0x16
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x16
  1451  0036                     	ds	2
  1452  0038                     ??_accionesDeshacer:	
  1453  0038                     ??_EEPROM_search:	
  1454                           ; 1 bytes @ 0x18
  1455                           
  1456                           
  1457                           ; 1 bytes @ 0x18
  1458  0038                     	ds	4
  1459  003C                     EEPROM_search@precio:	
  1460                           
  1461                           ; 2 bytes @ 0x1C
  1462  003C                     	ds	2
  1463  003E                     ??_sprintf:	
  1464  003E                     EEPROM_search@tp:	
  1465                           ; 1 bytes @ 0x1E
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x1E
  1469  003E                     	ds	1
  1470  003F                     ??_lecturaEtiqueta:	
  1471                           
  1472                           ; 1 bytes @ 0x1F
  1473  003F                     	ds	3
  1474  0042                     lecturaEtiqueta@letra:	
  1475  0042                     sprintf@prec:	
  1476                           ; 1 bytes @ 0x22
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x22
  1480  0042                     	ds	1
  1481  0043                     lecturaEtiqueta@tp:	
  1482  0043                     sprintf@flag:	
  1483                           ; 1 bytes @ 0x23
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x23
  1487  0043                     	ds	1
  1488  0044                     lecturaEtiqueta@Aux:	
  1489  0044                     sprintf@cp:	
  1490                           ; 2 bytes @ 0x24
  1491                           
  1492                           
  1493                           ; 2 bytes @ 0x24
  1494  0044                     	ds	2
  1495  0046                     sprintf@ap:	
  1496  0046                     lecturaEtiqueta@i:	
  1497                           ; 1 bytes @ 0x26
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x26
  1501  0046                     	ds	1
  1502  0047                     sprintf@val:	
  1503                           
  1504                           ; 2 bytes @ 0x27
  1505  0047                     	ds	2
  1506  0049                     sprintf@c:	
  1507                           
  1508                           ; 1 bytes @ 0x29
  1509  0049                     	ds	1
  1510  004A                     ??_agregarModificarPrecio:	
  1511  004A                     ??_accionesAceptar:	
  1512                           ; 1 bytes @ 0x2A
  1513                           
  1514  004A                     ??_cierreDeLote:	
  1515                           ; 1 bytes @ 0x2A
  1516                           
  1517  004A                     ?_consultaPrecio:	
  1518                           ; 1 bytes @ 0x2A
  1519                           
  1520  004A                     consultaPrecio@articulo:	
  1521                           ; 1 bytes @ 0x2A
  1522                           
  1523                           
  1524                           ; 2 bytes @ 0x2A
  1525  004A                     	ds	2
  1526  004C                     ??_consultaPrecio:	
  1527                           
  1528                           ; 1 bytes @ 0x2C
  1529  004C                     	ds	2
  1530  004E                     cierreDeLote@strLote:	
  1531                           
  1532                           ; 32 bytes @ 0x2E
  1533  004E                     	ds	2
  1534  0050                     consultaPrecio@mensaje:	
  1535                           
  1536                           ; 26 bytes @ 0x30
  1537  0050                     	ds	4
  1538  0054                     agregarModificarPrecio@mensaje:	
  1539                           
  1540                           ; 10 bytes @ 0x34
  1541  0054                     	ds	10
  1542  005E                     agregarModificarPrecio@lower_8bits:	
  1543                           
  1544                           ; 1 bytes @ 0x3E
  1545  005E                     	ds	1
  1546  005F                     agregarModificarPrecio@upper_8bits:	
  1547                           
  1548                           ; 1 bytes @ 0x3F
  1549  005F                     	ds	1
  1550  0060                     agregarModificarPrecio@precio:	
  1551                           
  1552                           ; 2 bytes @ 0x40
  1553  0060                     	ds	2
  1554  0062                     agregarModificarPrecio@tp:	
  1555                           
  1556                           ; 1 bytes @ 0x42
  1557  0062                     	ds	8
  1558  006A                     consultaPrecio@precio:	
  1559                           
  1560                           ; 2 bytes @ 0x4A
  1561  006A                     	ds	4
  1562  006E                     ??_lecturaComando:	
  1563  006E                     ??_lecturaMas:	
  1564                           ; 1 bytes @ 0x4E
  1565                           
  1566                           
  1567                           	psect	maintext
  1568  0032                     __pmaintext:	
  1569                           ; 1 bytes @ 0x4E
  1570 ;;
  1571 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1572 ;;
  1573 ;; *************** function _main *****************
  1574 ;; Defined at:
  1575 ;;		line 8 in file "main.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  i               1   64[BANK3 ] unsigned char 
  1580 ;;  bufferMsj      16   44[BANK3 ] unsigned char [16]
  1581 ;;  i               1   65[BANK3 ] unsigned char 
  1582 ;;  strLote        32   12[BANK3 ] unsigned char [32]
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : B00/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       0       0       0       0
  1593 ;;      Locals:         0       0       0      54       0
  1594 ;;      Temps:          0       0       4       0       0
  1595 ;;      Totals:         0       0       4      54       0
  1596 ;;Total ram usage:       58 bytes
  1597 ;; Hardware stack levels required when called:    7
  1598 ;; This function calls:
  1599 ;;		___lwdiv
  1600 ;;		___lwmod
  1601 ;;		___wmul
  1602 ;;		_accionesAceptar
  1603 ;;		_accionesDeshacer
  1604 ;;		_accionesPuertoSerial
  1605 ;;		_eeprom_read
  1606 ;;		_envioTX
  1607 ;;		_escrituraDeCierre
  1608 ;;		_mostrarDigitos
  1609 ;;		_sprintf
  1610 ;; This function is called by:
  1611 ;;		Startup code after reset
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _main
  1617  0032                     _main:	
  1618  0032                     l3406:	
  1619                           ;incstack = 0
  1620                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1621                           
  1622                           
  1623                           ;main.c: 11:     if(eeprom_read(255) != 0xFF){
  1624  0032  30FF               	movlw	255
  1625  0033  120A  158A  202B  120A  118A  	fcall	_eeprom_read
  1626  0038  3AFF               	xorlw	255
  1627  0039  1903               	skipnz
  1628  003A  283C               	goto	u3871
  1629  003B  283D               	goto	u3870
  1630  003C                     u3871:	
  1631  003C  2872               	goto	l3414
  1632  003D                     u3870:	
  1633  003D                     l3408:	
  1634                           
  1635                           ;main.c: 12:         montosLote = (eeprom_read(252) << 8) | (eeprom_read(253));
  1636  003D  30FD               	movlw	253
  1637  003E  120A  158A  202B  120A  118A  	fcall	_eeprom_read
  1638  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0045  00C9               	movwf	??_main^(0+128)
  1641  0046  01CA               	clrf	(??_main^(0+128)+1)
  1642  0047  30FC               	movlw	252
  1643  0048  120A  158A  202B  120A  118A  	fcall	_eeprom_read
  1644  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1645  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1646  004F  00CB               	movwf	(??_main+2)^(0+128)
  1647  0050  01CC               	clrf	((??_main+2)^(0+128)+1)
  1648  0051  084B               	movf	(??_main+2)^(0+128),w
  1649  0052  00CC               	movwf	((??_main+2)^(0+128)+1)
  1650  0053  01CB               	clrf	(??_main+2)^(0+128)
  1651  0054  0849               	movf	??_main^(0+128),w
  1652  0055  044B               	iorwf	(??_main+2)^(0+128),w
  1653  0056  00DA               	movwf	_montosLote^(0+128)
  1654  0057  084A               	movf	(??_main+1)^(0+128),w
  1655  0058  044C               	iorwf	(??_main+3)^(0+128),w
  1656  0059  00DB               	movwf	(_montosLote+1)^(0+128)
  1657  005A                     l3410:	
  1658                           
  1659                           ;main.c: 13:         ventasLote = eeprom_read(254);
  1660  005A  30FE               	movlw	254
  1661  005B  120A  158A  202B  120A  118A  	fcall	_eeprom_read
  1662  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0062  00C9               	movwf	??_main^(0+128)
  1665  0063  0849               	movf	??_main^(0+128),w
  1666  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0066  00EE               	movwf	_ventasLote
  1669  0067                     l3412:	
  1670                           
  1671                           ;main.c: 14:         nroLote = eeprom_read(255);
  1672  0067  30FF               	movlw	255
  1673  0068  120A  158A  202B  120A  118A  	fcall	_eeprom_read
  1674  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1675  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1676  006F  00C9               	movwf	??_main^(0+128)
  1677  0070  0849               	movf	??_main^(0+128),w
  1678  0071  00F8               	movwf	_nroLote
  1679  0072                     l3414:	
  1680                           
  1681                           ;main.c: 18:     TRISA = 0x01;
  1682  0072  3001               	movlw	1
  1683  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1685  0075  0085               	movwf	5	;volatile
  1686  0076                     l3416:	
  1687                           
  1688                           ;main.c: 19:     TRISE = 0x07;
  1689  0076  3007               	movlw	7
  1690  0077  0089               	movwf	9	;volatile
  1691  0078                     l3418:	
  1692                           
  1693                           ;main.c: 20:     TRISB = 0x00;
  1694  0078  0186               	clrf	6	;volatile
  1695  0079                     l3420:	
  1696                           
  1697                           ;main.c: 21:     TRISD = 0x00;
  1698  0079  0188               	clrf	8	;volatile
  1699  007A                     l3422:	
  1700                           
  1701                           ;main.c: 22:     T1CON = 0b00010001;
  1702  007A  3011               	movlw	17
  1703  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1704  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1705  007D  0090               	movwf	16	;volatile
  1706  007E                     l3424:	
  1707                           
  1708                           ;main.c: 23:     TMR1 = 15536;
  1709  007E  303C               	movlw	60
  1710  007F  008F               	movwf	15	;volatile
  1711  0080  30B0               	movlw	176
  1712  0081  008E               	movwf	14	;volatile
  1713  0082                     l3426:	
  1714                           
  1715                           ;main.c: 25:     ADCON0 = 0b01000001;
  1716  0082  3041               	movlw	65
  1717  0083  009F               	movwf	31	;volatile
  1718  0084                     l3428:	
  1719                           
  1720                           ;main.c: 26:     ADCON1 = 0b10001110;
  1721  0084  308E               	movlw	142
  1722  0085  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0086  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0087  009F               	movwf	31	;volatile
  1725  0088                     l3430:	
  1726                           
  1727                           ;main.c: 27:     INTCON = 0b11000000;
  1728  0088  30C0               	movlw	192
  1729  0089  008B               	movwf	11	;volatile
  1730  008A                     l3432:	
  1731                           
  1732                           ;main.c: 30:     TRISC = 0b10000000;
  1733  008A  3080               	movlw	128
  1734  008B  0087               	movwf	7	;volatile
  1735  008C                     l3434:	
  1736                           
  1737                           ;main.c: 31:     TXSTA = 0b00100110;
  1738  008C  3026               	movlw	38
  1739  008D  0098               	movwf	24	;volatile
  1740  008E                     l3436:	
  1741                           
  1742                           ;main.c: 32:     RCSTA = 0b10010000;
  1743  008E  3090               	movlw	144
  1744  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0091  0098               	movwf	24	;volatile
  1747  0092                     l3438:	
  1748                           
  1749                           ;main.c: 33:     SPBRG = 25;
  1750  0092  3019               	movlw	25
  1751  0093  1683               	bsf	3,5	;RP0=1, select bank1
  1752  0094  1303               	bcf	3,6	;RP1=0, select bank1
  1753  0095  0099               	movwf	25	;volatile
  1754  0096                     l3440:	
  1755                           
  1756                           ;main.c: 36:     ADIF = 0;
  1757  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0098  130C               	bcf	12,6	;volatile
  1760  0099                     l3442:	
  1761                           
  1762                           ;main.c: 37:     PIE1bits.ADIE = 1;
  1763  0099  1683               	bsf	3,5	;RP0=1, select bank1
  1764  009A  1303               	bcf	3,6	;RP1=0, select bank1
  1765  009B  170C               	bsf	12,6	;volatile
  1766  009C                     l3444:	
  1767                           
  1768                           ;main.c: 38:     PIE1bits.RCIE = 1;
  1769  009C  168C               	bsf	12,5	;volatile
  1770  009D                     l3446:	
  1771                           
  1772                           ;main.c: 39:     PIE1bits.TMR1IE = 1;
  1773  009D  140C               	bsf	12,0	;volatile
  1774  009E                     l3448:	
  1775                           
  1776                           ;main.c: 40:     cuenta = 0;
  1777  009E  01F0               	clrf	_cuenta
  1778  009F  01F1               	clrf	_cuenta+1
  1779  00A0                     l3450:	
  1780                           
  1781                           ;main.c: 41:     auxCuenta = 0;
  1782  00A0  1683               	bsf	3,5	;RP0=1, select bank3
  1783  00A1  1703               	bsf	3,6	;RP1=1, select bank3
  1784  00A2  01D4               	clrf	_auxCuenta^(0+384)
  1785  00A3  01D5               	clrf	(_auxCuenta+1)^(0+384)
  1786  00A4                     l3452:	
  1787                           
  1788                           ;main.c: 42:     mostrarDigitos(cuenta);
  1789  00A4  0871               	movf	_cuenta+1,w
  1790  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1791  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1792  00A7  00B5               	movwf	mostrarDigitos@num+1
  1793  00A8  0870               	movf	_cuenta,w
  1794  00A9  00B4               	movwf	mostrarDigitos@num
  1795  00AA  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  1796  00AF                     l3454:	
  1797                           
  1798                           ;main.c: 43:     RC0 = 0;
  1799  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1800  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1801  00B1  1007               	bcf	7,0	;volatile
  1802  00B2                     l3456:	
  1803                           
  1804                           ;main.c: 49:         if(RE0) {
  1805  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1806  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1807  00B4  1C09               	btfss	9,0	;volatile
  1808  00B5  28B7               	goto	u3881
  1809  00B6  28B8               	goto	u3880
  1810  00B7                     u3881:	
  1811  00B7  28C2               	goto	l307
  1812  00B8                     u3880:	
  1813  00B8                     l308:	
  1814  00B8  1809               	btfsc	9,0	;volatile
  1815  00B9  28BB               	goto	u3891
  1816  00BA  28BC               	goto	u3890
  1817  00BB                     u3891:	
  1818  00BB  28B8               	goto	l308
  1819  00BC                     u3890:	
  1820  00BC                     l3460:	
  1821                           
  1822                           ;main.c: 51:             accionesAceptar();
  1823  00BC  120A  118A  2743  120A  118A  	fcall	_accionesAceptar
  1824                           
  1825                           ;main.c: 52:         }
  1826  00C1  28B2               	goto	l3456
  1827  00C2                     l307:	
  1828                           ;main.c: 53:         else if(RE1) {
  1829                           
  1830  00C2  1C89               	btfss	9,1	;volatile
  1831  00C3  28C5               	goto	u3901
  1832  00C4  28C6               	goto	u3900
  1833  00C5                     u3901:	
  1834  00C5  28D0               	goto	l312
  1835  00C6                     u3900:	
  1836  00C6                     l313:	
  1837  00C6  1889               	btfsc	9,1	;volatile
  1838  00C7  28C9               	goto	u3911
  1839  00C8  28CA               	goto	u3910
  1840  00C9                     u3911:	
  1841  00C9  28C6               	goto	l313
  1842  00CA                     u3910:	
  1843  00CA                     l3464:	
  1844                           
  1845                           ;main.c: 55:             accionesDeshacer();
  1846  00CA  120A  118A  27BF  120A  118A  	fcall	_accionesDeshacer
  1847                           
  1848                           ;main.c: 56:         }
  1849  00CF  28B2               	goto	l3456
  1850  00D0                     l312:	
  1851                           ;main.c: 57:         else if(RE2) {
  1852                           
  1853  00D0  1D09               	btfss	9,2	;volatile
  1854  00D1  28D3               	goto	u3921
  1855  00D2  28D4               	goto	u3920
  1856  00D3                     u3921:	
  1857  00D3  2955               	goto	l3490
  1858  00D4                     u3920:	
  1859  00D4                     l318:	
  1860  00D4  1909               	btfsc	9,2	;volatile
  1861  00D5  28D7               	goto	u3931
  1862  00D6  28D8               	goto	u3930
  1863  00D7                     u3931:	
  1864  00D7  28D4               	goto	l318
  1865  00D8                     u3930:	
  1866  00D8                     l3468:	
  1867                           
  1868                           ;main.c: 59:             if (cuenta == 0){
  1869  00D8  0870               	movf	_cuenta,w
  1870  00D9  0471               	iorwf	_cuenta+1,w
  1871  00DA  1D03               	btfss	3,2
  1872  00DB  28DD               	goto	u3941
  1873  00DC  28DE               	goto	u3940
  1874  00DD                     u3941:	
  1875  00DD  2942               	goto	l321
  1876  00DE                     u3940:	
  1877  00DE                     l3470:	
  1878                           
  1879                           ;main.c: 60:                 cierreLotePedido = 1;
  1880  00DE  1683               	bsf	3,5	;RP0=1, select bank3
  1881  00DF  1703               	bsf	3,6	;RP1=1, select bank3
  1882  00E0  01D7               	clrf	_cierreLotePedido^(0+384)
  1883  00E1  0AD7               	incf	_cierreLotePedido^(0+384),f
  1884  00E2                     l3472:	
  1885                           
  1886                           ;main.c: 61:                 char strLote[32];;main.c: 62:                 sprintf(strLo
      +                          te,"Cierre, L:%u,N:%u,T:%u", nroLote, ventasLote, montosLote);
  1887  00E2  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1888  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1889  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1890  00E5  00B4               	movwf	sprintf@sp
  1891  00E6  3001               	movlw	1
  1892  00E7  00B5               	movwf	sprintf@sp+1
  1893  00E8  304E               	movlw	low (STR_16| (0+32768))
  1894  00E9  00B6               	movwf	sprintf@f
  1895  00EA  3084               	movlw	high (STR_16| (0+32768))
  1896  00EB  00B7               	movwf	sprintf@f+1
  1897  00EC  0878               	movf	_nroLote,w
  1898  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1899  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1900  00EF  00C9               	movwf	??_main^(0+128)
  1901  00F0  01CA               	clrf	(??_main^(0+128)+1)
  1902  00F1  0849               	movf	??_main^(0+128),w
  1903  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1904  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1905  00F4  00B8               	movwf	?_sprintf+4
  1906  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1907  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1908  00F7  084A               	movf	(??_main+1)^(0+128),w
  1909  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1910  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1911  00FA  00B9               	movwf	?_sprintf+5
  1912  00FB  086E               	movf	_ventasLote,w
  1913  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1914  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1915  00FE  00CB               	movwf	(??_main+2)^(0+128)
  1916  00FF  01CC               	clrf	((??_main+2)^(0+128)+1)
  1917  0100  084B               	movf	(??_main+2)^(0+128),w
  1918  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0103  00BA               	movwf	?_sprintf+6
  1921  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1922  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1923  0106  084C               	movf	(??_main+3)^(0+128),w
  1924  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0109  00BB               	movwf	?_sprintf+7
  1927  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1928  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1929  010C  085B               	movf	(_montosLote+1)^(0+128),w
  1930  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1931  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1932  010F  00BD               	movwf	?_sprintf+9
  1933  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1935  0112  085A               	movf	_montosLote^(0+128),w
  1936  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0115  00BC               	movwf	?_sprintf+8
  1939  0116  120A  118A  224B  120A  118A  	fcall	_sprintf
  1940                           
  1941                           ;main.c: 63:                 envioTX(strLote);
  1942  011B  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1943  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1944  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1945  011E  00A0               	movwf	envioTX@mensaje
  1946  011F  3001               	movlw	1
  1947  0120  00A1               	movwf	envioTX@mensaje+1
  1948  0121  120A  158A  2190  120A  118A  	fcall	_envioTX
  1949  0126                     l3474:	
  1950                           
  1951                           ;main.c: 64:                 for(char i = 0; i<20; i++){
  1952  0126  1683               	bsf	3,5	;RP0=1, select bank3
  1953  0127  1703               	bsf	3,6	;RP1=1, select bank3
  1954  0128  01D0               	clrf	main@i^(0+384)
  1955  0129                     l3480:	
  1956                           
  1957                           ;main.c: 65:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  1958  0129  3082               	movlw	130
  1959  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1960  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1961  012C  00CA               	movwf	(??_main^(0+128)+1)
  1962  012D  30DD               	movlw	221
  1963  012E  00C9               	movwf	??_main^(0+128)
  1964  012F                     u4017:	
  1965  012F  0BC9               	decfsz	??_main^(0+128),f
  1966  0130  292F               	goto	u4017
  1967  0131  0BCA               	decfsz	(??_main^(0+128)+1),f
  1968  0132  292F               	goto	u4017
  1969  0133                     l3482:	
  1970                           
  1971                           ;main.c: 66:                 }
  1972  0133  3001               	movlw	1
  1973  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1975  0136  00C9               	movwf	??_main^(0+128)
  1976  0137  0849               	movf	??_main^(0+128),w
  1977  0138  1683               	bsf	3,5	;RP0=1, select bank3
  1978  0139  1703               	bsf	3,6	;RP1=1, select bank3
  1979  013A  07D0               	addwf	main@i^(0+384),f
  1980  013B                     l3484:	
  1981  013B  3014               	movlw	20
  1982  013C  0250               	subwf	main@i^(0+384),w
  1983  013D  1C03               	skipc
  1984  013E  2940               	goto	u3951
  1985  013F  2941               	goto	u3950
  1986  0140                     u3951:	
  1987  0140  2929               	goto	l3480
  1988  0141                     u3950:	
  1989  0141  28B2               	goto	l3456
  1990  0142                     l321:	
  1991                           ;main.c: 68:             else{
  1992                           
  1993                           
  1994                           ;main.c: 69:                 RA5 = 1;
  1995  0142  1685               	bsf	5,5	;volatile
  1996  0143                     l3486:	
  1997                           
  1998                           ;main.c: 70:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
  1999  0143  3006               	movlw	6
  2000  0144  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0145  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0146  00CB               	movwf	(??_main^(0+128)+2)
  2003  0147  3013               	movlw	19
  2004  0148  00CA               	movwf	(??_main^(0+128)+1)
  2005  0149  30AD               	movlw	173
  2006  014A  00C9               	movwf	??_main^(0+128)
  2007  014B                     u4027:	
  2008  014B  0BC9               	decfsz	??_main^(0+128),f
  2009  014C  294B               	goto	u4027
  2010  014D  0BCA               	decfsz	(??_main^(0+128)+1),f
  2011  014E  294B               	goto	u4027
  2012  014F  0BCB               	decfsz	(??_main^(0+128)+2),f
  2013  0150  294B               	goto	u4027
  2014  0151                     l3488:	
  2015                           
  2016                           ;main.c: 71:                 RA5 = 0;
  2017  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0153  1285               	bcf	5,5	;volatile
  2020  0154  28B2               	goto	l3456
  2021  0155                     l3490:	
  2022  0155  1683               	bsf	3,5	;RP0=1, select bank3
  2023  0156  1703               	bsf	3,6	;RP1=1, select bank3
  2024  0157  0852               	movf	_huboInt^(0+384),w
  2025  0158  0453               	iorwf	(_huboInt+1)^(0+384),w
  2026  0159  1903               	btfsc	3,2
  2027  015A  295C               	goto	u3961
  2028  015B  295D               	goto	u3960
  2029  015C                     u3961:	
  2030  015C  297B               	goto	l3508
  2031  015D                     u3960:	
  2032  015D                     l3492:	
  2033                           
  2034                           ;main.c: 75:             huboInt = 0;
  2035  015D  01D2               	clrf	_huboInt^(0+384)
  2036  015E  01D3               	clrf	(_huboInt+1)^(0+384)
  2037  015F                     l3494:	
  2038                           
  2039                           ;main.c: 76:             accionesPuertoSerial();
  2040  015F  120A  158A  24BA  120A  118A  	fcall	_accionesPuertoSerial
  2041  0164                     l3496:	
  2042                           
  2043                           ;main.c: 77:             for(char i = 0; i < 10; i++){
  2044  0164  1683               	bsf	3,5	;RP0=1, select bank3
  2045  0165  1703               	bsf	3,6	;RP1=1, select bank3
  2046  0166  01D1               	clrf	main@i_308^(0+384)
  2047  0167                     l3502:	
  2048                           
  2049                           ;main.c: 78:                 codigoEntrada[i] = 0;
  2050  0167  0851               	movf	main@i_308^(0+384),w
  2051  0168  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2052  0169  0084               	movwf	4
  2053  016A  1383               	bcf	3,7	;select IRP bank1
  2054  016B  0180               	clrf	0
  2055  016C                     l3504:	
  2056                           
  2057                           ;main.c: 79:             }
  2058  016C  3001               	movlw	1
  2059  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2060  016E  1303               	bcf	3,6	;RP1=0, select bank1
  2061  016F  00C9               	movwf	??_main^(0+128)
  2062  0170  0849               	movf	??_main^(0+128),w
  2063  0171  1683               	bsf	3,5	;RP0=1, select bank3
  2064  0172  1703               	bsf	3,6	;RP1=1, select bank3
  2065  0173  07D1               	addwf	main@i_308^(0+384),f
  2066  0174                     l3506:	
  2067  0174  300A               	movlw	10
  2068  0175  0251               	subwf	main@i_308^(0+384),w
  2069  0176  1C03               	skipc
  2070  0177  2979               	goto	u3971
  2071  0178  297A               	goto	u3970
  2072  0179                     u3971:	
  2073  0179  2967               	goto	l3502
  2074  017A                     u3970:	
  2075  017A  28B2               	goto	l3456
  2076  017B                     l3508:	
  2077  017B  0858               	movf	_adresult^(0+384),w
  2078  017C  0459               	iorwf	(_adresult+1)^(0+384),w
  2079  017D  1903               	btfsc	3,2
  2080  017E  2980               	goto	u3981
  2081  017F  2981               	goto	u3980
  2082  0180                     u3981:	
  2083  0180  2A47               	goto	l316
  2084  0181                     u3980:	
  2085  0181                     l3510:	
  2086                           
  2087                           ;main.c: 82:             adresult = 2*(adresult*10*5/1023);
  2088  0181  30FF               	movlw	255
  2089  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0184  00A6               	movwf	___lwdiv@divisor
  2092  0185  3003               	movlw	3
  2093  0186  00A7               	movwf	___lwdiv@divisor+1
  2094  0187  1683               	bsf	3,5	;RP0=1, select bank3
  2095  0188  1703               	bsf	3,6	;RP1=1, select bank3
  2096  0189  0859               	movf	(_adresult+1)^(0+384),w
  2097  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2098  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2099  018C  00A1               	movwf	___wmul@multiplier+1
  2100  018D  1683               	bsf	3,5	;RP0=1, select bank3
  2101  018E  1703               	bsf	3,6	;RP1=1, select bank3
  2102  018F  0858               	movf	_adresult^(0+384),w
  2103  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0192  00A0               	movwf	___wmul@multiplier
  2106  0193  3032               	movlw	50
  2107  0194  00A2               	movwf	___wmul@multiplicand
  2108  0195  3000               	movlw	0
  2109  0196  00A3               	movwf	___wmul@multiplicand+1
  2110  0197  120A  158A  208B  120A  118A  	fcall	___wmul
  2111  019C  1283               	bcf	3,5	;RP0=0, select bank0
  2112  019D  1303               	bcf	3,6	;RP1=0, select bank0
  2113  019E  0821               	movf	?___wmul+1,w
  2114  019F  00A9               	movwf	___lwdiv@dividend+1
  2115  01A0  0820               	movf	?___wmul,w
  2116  01A1  00A8               	movwf	___lwdiv@dividend
  2117  01A2  120A  158A  224A  120A  118A  	fcall	___lwdiv
  2118  01A7  1003               	clrc
  2119  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2120  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2121  01AA  0D26               	rlf	?___lwdiv,w
  2122  01AB  1683               	bsf	3,5	;RP0=1, select bank3
  2123  01AC  1703               	bsf	3,6	;RP1=1, select bank3
  2124  01AD  00D8               	movwf	_adresult^(0+384)
  2125  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2126  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2127  01B0  0D27               	rlf	?___lwdiv+1,w
  2128  01B1  1683               	bsf	3,5	;RP0=1, select bank3
  2129  01B2  1703               	bsf	3,6	;RP1=1, select bank3
  2130  01B3  00D9               	movwf	(_adresult+1)^(0+384)
  2131  01B4                     l3512:	
  2132                           
  2133                           ;main.c: 83:             if(adresult < 75){
  2134  01B4  3000               	movlw	0
  2135  01B5  0259               	subwf	(_adresult+1)^(0+384),w
  2136  01B6  304B               	movlw	75
  2137  01B7  1903               	skipnz
  2138  01B8  0258               	subwf	_adresult^(0+384),w
  2139  01B9  1803               	skipnc
  2140  01BA  29BC               	goto	u3991
  2141  01BB  29BD               	goto	u3990
  2142  01BC                     u3991:	
  2143  01BC  29C2               	goto	l3516
  2144  01BD                     u3990:	
  2145  01BD                     l3514:	
  2146                           
  2147                           ;main.c: 84:                 escrituraDeCierre();
  2148  01BD  120A  158A  2208  120A  118A  	fcall	_escrituraDeCierre
  2149  01C2                     l3516:	
  2150                           
  2151                           ;main.c: 86:             if(pedidoVoltaje){
  2152  01C2  1683               	bsf	3,5	;RP0=1, select bank3
  2153  01C3  1703               	bsf	3,6	;RP1=1, select bank3
  2154  01C4  0856               	movf	_pedidoVoltaje^(0+384),w
  2155  01C5  1903               	btfsc	3,2
  2156  01C6  29C8               	goto	u4001
  2157  01C7  29C9               	goto	u4000
  2158  01C8                     u4001:	
  2159  01C8  2A44               	goto	l3526
  2160  01C9                     u4000:	
  2161  01C9                     l3518:	
  2162                           
  2163                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2164  01C9  300A               	movlw	10
  2165  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2166  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2167  01CC  00A6               	movwf	___lwdiv@divisor
  2168  01CD  3000               	movlw	0
  2169  01CE  00A7               	movwf	___lwdiv@divisor+1
  2170  01CF  1683               	bsf	3,5	;RP0=1, select bank3
  2171  01D0  1703               	bsf	3,6	;RP1=1, select bank3
  2172  01D1  0859               	movf	(_adresult+1)^(0+384),w
  2173  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2174  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2175  01D4  00A9               	movwf	___lwdiv@dividend+1
  2176  01D5  1683               	bsf	3,5	;RP0=1, select bank3
  2177  01D6  1703               	bsf	3,6	;RP1=1, select bank3
  2178  01D7  0858               	movf	_adresult^(0+384),w
  2179  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2180  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2181  01DA  00A8               	movwf	___lwdiv@dividend
  2182  01DB  120A  158A  224A  120A  118A  	fcall	___lwdiv
  2183  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2184  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2185  01E2  0827               	movf	?___lwdiv+1,w
  2186  01E3  1683               	bsf	3,5	;RP0=1, select bank3
  2187  01E4  1703               	bsf	3,6	;RP1=1, select bank3
  2188  01E5  00CD               	movwf	(_main$1098+1)^(0+384)
  2189  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2190  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2191  01E8  0826               	movf	?___lwdiv,w
  2192  01E9  1683               	bsf	3,5	;RP0=1, select bank3
  2193  01EA  1703               	bsf	3,6	;RP1=1, select bank3
  2194  01EB  00CC               	movwf	_main$1098^(0+384)
  2195                           
  2196                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2197  01EC  300A               	movlw	10
  2198  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2199  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2200  01EF  00AE               	movwf	___lwmod@divisor
  2201  01F0  3000               	movlw	0
  2202  01F1  00AF               	movwf	___lwmod@divisor+1
  2203  01F2  1683               	bsf	3,5	;RP0=1, select bank3
  2204  01F3  1703               	bsf	3,6	;RP1=1, select bank3
  2205  01F4  0859               	movf	(_adresult+1)^(0+384),w
  2206  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2207  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2208  01F7  00B1               	movwf	___lwmod@dividend+1
  2209  01F8  1683               	bsf	3,5	;RP0=1, select bank3
  2210  01F9  1703               	bsf	3,6	;RP1=1, select bank3
  2211  01FA  0858               	movf	_adresult^(0+384),w
  2212  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2213  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2214  01FD  00B0               	movwf	___lwmod@dividend
  2215  01FE  120A  158A  21CC  120A  118A  	fcall	___lwmod
  2216  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0205  082F               	movf	?___lwmod+1,w
  2219  0206  1683               	bsf	3,5	;RP0=1, select bank3
  2220  0207  1703               	bsf	3,6	;RP1=1, select bank3
  2221  0208  00CF               	movwf	(_main$1099+1)^(0+384)
  2222  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2223  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2224  020B  082E               	movf	?___lwmod,w
  2225  020C  1683               	bsf	3,5	;RP0=1, select bank3
  2226  020D  1703               	bsf	3,6	;RP1=1, select bank3
  2227  020E  00CE               	movwf	_main$1099^(0+384)
  2228  020F                     l3520:	
  2229                           
  2230                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2231  020F  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2232  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0212  00B4               	movwf	sprintf@sp
  2235  0213  3001               	movlw	1
  2236  0214  00B5               	movwf	sprintf@sp+1
  2237  0215  302F               	movlw	low (STR_17| (0+32768))
  2238  0216  00B6               	movwf	sprintf@f
  2239  0217  3085               	movlw	high (STR_17| (0+32768))
  2240  0218  00B7               	movwf	sprintf@f+1
  2241  0219  1683               	bsf	3,5	;RP0=1, select bank3
  2242  021A  1703               	bsf	3,6	;RP1=1, select bank3
  2243  021B  084D               	movf	(_main$1098+1)^(0+384),w
  2244  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2245  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2246  021E  00B9               	movwf	?_sprintf+5
  2247  021F  1683               	bsf	3,5	;RP0=1, select bank3
  2248  0220  1703               	bsf	3,6	;RP1=1, select bank3
  2249  0221  084C               	movf	_main$1098^(0+384),w
  2250  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0224  00B8               	movwf	?_sprintf+4
  2253  0225  1683               	bsf	3,5	;RP0=1, select bank3
  2254  0226  1703               	bsf	3,6	;RP1=1, select bank3
  2255  0227  084F               	movf	(_main$1099+1)^(0+384),w
  2256  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2258  022A  00BB               	movwf	?_sprintf+7
  2259  022B  1683               	bsf	3,5	;RP0=1, select bank3
  2260  022C  1703               	bsf	3,6	;RP1=1, select bank3
  2261  022D  084E               	movf	_main$1099^(0+384),w
  2262  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2263  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0230  00BA               	movwf	?_sprintf+6
  2265  0231  120A  118A  224B  120A  118A  	fcall	_sprintf
  2266  0236                     l3522:	
  2267                           
  2268                           ;main.c: 89:                 envioTX(bufferMsj);
  2269  0236  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2270  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0239  00A0               	movwf	envioTX@mensaje
  2273  023A  3001               	movlw	1
  2274  023B  00A1               	movwf	envioTX@mensaje+1
  2275  023C  120A  158A  2190  120A  118A  	fcall	_envioTX
  2276  0241                     l3524:	
  2277                           
  2278                           ;main.c: 90:                 pedidoVoltaje = 0;
  2279  0241  1683               	bsf	3,5	;RP0=1, select bank3
  2280  0242  1703               	bsf	3,6	;RP1=1, select bank3
  2281  0243  01D6               	clrf	_pedidoVoltaje^(0+384)
  2282  0244                     l3526:	
  2283                           
  2284                           ;main.c: 92:             adresult = 0;
  2285  0244  01D8               	clrf	_adresult^(0+384)
  2286  0245  01D9               	clrf	(_adresult+1)^(0+384)
  2287  0246  28B2               	goto	l3456
  2288  0247                     l316:	
  2289  0247  28B2               	goto	l3456
  2290  0248  120A  118A  280E   	ljmp	start
  2291  024B                     __end_of_main:	
  2292                           
  2293                           	psect	text1
  2294  0A08                     __ptext1:	
  2295 ;; *************** function _escrituraDeCierre *****************
  2296 ;; Defined at:
  2297 ;;		line 56 in file "acciones.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  upper_8bits     1    5[BANK0 ] unsigned char 
  2302 ;;  lower_8bits     1    4[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         0       2       0       0       0
  2314 ;;      Temps:          0       1       0       0       0
  2315 ;;      Totals:         0       3       0       0       0
  2316 ;;Total ram usage:        3 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    2
  2319 ;; This function calls:
  2320 ;;		_eeprom_write
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _escrituraDeCierre
  2328  0A08                     _escrituraDeCierre:	
  2329  0A08                     l3392:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _escrituraDeCierre: [wreg+status,2+status,0+pclath+cstack]
  2332                           
  2333                           
  2334                           ;acciones.c: 58:     char lower_8bits;;acciones.c: 59:     char upper_8bits;;acciones.c:
      +                           60:     lower_8bits = montosLote & 0xff;
  2335  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0A09  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0A0A  085A               	movf	_montosLote^(0+128),w
  2338  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0A0D  00A3               	movwf	??_escrituraDeCierre
  2341  0A0E  0823               	movf	??_escrituraDeCierre,w
  2342  0A0F  00A4               	movwf	escrituraDeCierre@lower_8bits
  2343  0A10                     l3394:	
  2344                           
  2345                           ;acciones.c: 61:     upper_8bits = (montosLote >> 8) & 0xff;
  2346  0A10  1683               	bsf	3,5	;RP0=1, select bank1
  2347  0A11  1303               	bcf	3,6	;RP1=0, select bank1
  2348  0A12  085B               	movf	(_montosLote+1)^(0+128),w
  2349  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0A15  00A3               	movwf	??_escrituraDeCierre
  2352  0A16  0823               	movf	??_escrituraDeCierre,w
  2353  0A17  00A5               	movwf	escrituraDeCierre@upper_8bits
  2354  0A18                     l3396:	
  2355                           
  2356                           ;acciones.c: 62:     eeprom_write(252, upper_8bits);
  2357  0A18  0825               	movf	escrituraDeCierre@upper_8bits,w
  2358  0A19  00A3               	movwf	??_escrituraDeCierre
  2359  0A1A  0823               	movf	??_escrituraDeCierre,w
  2360  0A1B  00A0               	movwf	eeprom_write@value
  2361  0A1C  30FC               	movlw	252
  2362  0A1D  120A  158A  20E7  120A  158A  	fcall	_eeprom_write
  2363  0A22                     l3398:	
  2364                           
  2365                           ;acciones.c: 63:     eeprom_write(253, lower_8bits);
  2366  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0A24  0824               	movf	escrituraDeCierre@lower_8bits,w
  2369  0A25  00A3               	movwf	??_escrituraDeCierre
  2370  0A26  0823               	movf	??_escrituraDeCierre,w
  2371  0A27  00A0               	movwf	eeprom_write@value
  2372  0A28  30FD               	movlw	253
  2373  0A29  120A  158A  20E7  120A  158A  	fcall	_eeprom_write
  2374  0A2E                     l3400:	
  2375                           
  2376                           ;acciones.c: 64:     eeprom_write(254, ventasLote);
  2377  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0A30  086E               	movf	_ventasLote,w
  2380  0A31  00A3               	movwf	??_escrituraDeCierre
  2381  0A32  0823               	movf	??_escrituraDeCierre,w
  2382  0A33  00A0               	movwf	eeprom_write@value
  2383  0A34  30FE               	movlw	254
  2384  0A35  120A  158A  20E7  120A  158A  	fcall	_eeprom_write
  2385  0A3A                     l3402:	
  2386                           
  2387                           ;acciones.c: 65:     eeprom_write(255, nroLote);
  2388  0A3A  0878               	movf	_nroLote,w
  2389  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0A3D  00A3               	movwf	??_escrituraDeCierre
  2392  0A3E  0823               	movf	??_escrituraDeCierre,w
  2393  0A3F  00A0               	movwf	eeprom_write@value
  2394  0A40  30FF               	movlw	255
  2395  0A41  120A  158A  20E7  120A  158A  	fcall	_eeprom_write
  2396  0A46                     l3404:	
  2397                           
  2398                           ;acciones.c: 66:     RC0 = 1;
  2399  0A46  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0A47  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0A48  1407               	bsf	7,0	;volatile
  2402  0A49                     l76:	
  2403  0A49  0008               	return
  2404  0A4A                     __end_of_escrituraDeCierre:	
  2405                           
  2406                           	psect	text2
  2407  0CBA                     __ptext2:	
  2408 ;; *************** function _accionesPuertoSerial *****************
  2409 ;; Defined at:
  2410 ;;		line 35 in file "acciones.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  mensaje        12    0[BANK3 ] unsigned char [12]
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         0       0       0       0       0
  2425 ;;      Locals:         0       0       0      12       0
  2426 ;;      Temps:          0       0       3       0       0
  2427 ;;      Totals:         0       0       3      12       0
  2428 ;;Total ram usage:       15 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    6
  2431 ;; This function calls:
  2432 ;;		_envioTX
  2433 ;;		_lecturaComando
  2434 ;;		_lecturaEtiqueta
  2435 ;;		_sprintf
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           
  2442                           ;psect for function _accionesPuertoSerial
  2443  0CBA                     _accionesPuertoSerial:	
  2444  0CBA                     l3372:	
  2445                           ;incstack = 0
  2446                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2447                           
  2448                           
  2449                           ;acciones.c: 36:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codi
      +                          goEntrada[0] == '-')) {
  2450  0CBA  303F               	movlw	63
  2451  0CBB  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0CBC  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0CBD  0660               	xorwf	_codigoEntrada^(0+128),w
  2454  0CBE  1903               	btfsc	3,2
  2455  0CBF  2CC1               	goto	u3811
  2456  0CC0  2CC2               	goto	u3810
  2457  0CC1                     u3811:	
  2458  0CC1  2CCE               	goto	l3378
  2459  0CC2                     u3810:	
  2460  0CC2                     l3374:	
  2461  0CC2  302B               	movlw	43
  2462  0CC3  0660               	xorwf	_codigoEntrada^(0+128),w
  2463  0CC4  1903               	btfsc	3,2
  2464  0CC5  2CC7               	goto	u3821
  2465  0CC6  2CC8               	goto	u3820
  2466  0CC7                     u3821:	
  2467  0CC7  2CCE               	goto	l3378
  2468  0CC8                     u3820:	
  2469  0CC8                     l3376:	
  2470  0CC8  302D               	movlw	45
  2471  0CC9  0660               	xorwf	_codigoEntrada^(0+128),w
  2472  0CCA  1D03               	btfss	3,2
  2473  0CCB  2CCD               	goto	u3831
  2474  0CCC  2CCE               	goto	u3830
  2475  0CCD                     u3831:	
  2476  0CCD  2CD4               	goto	l3380
  2477  0CCE                     u3830:	
  2478  0CCE                     l3378:	
  2479                           
  2480                           ;acciones.c: 37:         lecturaComando();
  2481  0CCE  120A  158A  204A  120A  158A  	fcall	_lecturaComando
  2482                           
  2483                           ;acciones.c: 38:     }
  2484  0CD3  2D1D               	goto	l73
  2485  0CD4                     l3380:	
  2486  0CD4  303A               	movlw	58
  2487  0CD5  0260               	subwf	_codigoEntrada^(0+128),w
  2488  0CD6  1803               	skipnc
  2489  0CD7  2CD9               	goto	u3841
  2490  0CD8  2CDA               	goto	u3840
  2491  0CD9                     u3841:	
  2492  0CD9  2D09               	goto	l70
  2493  0CDA                     u3840:	
  2494  0CDA                     l3382:	
  2495  0CDA  3030               	movlw	48
  2496  0CDB  0260               	subwf	_codigoEntrada^(0+128),w
  2497  0CDC  1C03               	skipc
  2498  0CDD  2CDF               	goto	u3851
  2499  0CDE  2CE0               	goto	u3850
  2500  0CDF                     u3851:	
  2501  0CDF  2D09               	goto	l70
  2502  0CE0                     u3850:	
  2503  0CE0                     l3384:	
  2504                           
  2505                           ;acciones.c: 40:         if (modoDebug){
  2506  0CE0  0872               	movf	_modoDebug,w
  2507  0CE1  1903               	btfsc	3,2
  2508  0CE2  2CE4               	goto	u3861
  2509  0CE3  2CE5               	goto	u3860
  2510  0CE4                     u3861:	
  2511  0CE4  2D03               	goto	l71
  2512  0CE5                     u3860:	
  2513  0CE5                     l3386:	
  2514                           
  2515                           ;acciones.c: 41:             char mensaje[12];;acciones.c: 42:             sprintf(mensa
      +                          je,"E:%s", codigoEntrada);
  2516  0CE5  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2517  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0CE8  00B4               	movwf	sprintf@sp
  2520  0CE9  3001               	movlw	1
  2521  0CEA  00B5               	movwf	sprintf@sp+1
  2522  0CEB  3047               	movlw	low (STR_3| (0+32768))
  2523  0CEC  00B6               	movwf	sprintf@f
  2524  0CED  3085               	movlw	high (STR_3| (0+32768))
  2525  0CEE  00B7               	movwf	sprintf@f+1
  2526  0CEF  30E0               	movlw	(low (_codigoEntrada| 0))& (0+255)
  2527  0CF0  00B8               	movwf	low ((?_sprintf| 0+4))
  2528  0CF1  3000               	movlw	0
  2529  0CF2  00B9               	movwf	(low ((?_sprintf| 0+4))+1)
  2530  0CF3  120A  118A  224B  120A  158A  	fcall	_sprintf
  2531                           
  2532                           ;acciones.c: 43:             envioTX(mensaje);
  2533  0CF8  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2534  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0CFB  00A0               	movwf	envioTX@mensaje
  2537  0CFC  3001               	movlw	1
  2538  0CFD  00A1               	movwf	envioTX@mensaje+1
  2539  0CFE  120A  158A  2190  120A  158A  	fcall	_envioTX
  2540  0D03                     l71:	
  2541                           ;acciones.c: 44:         }
  2542                           
  2543                           
  2544                           ;acciones.c: 45:         lecturaEtiqueta();
  2545  0D03  120A  118A  254C  120A  158A  	fcall	_lecturaEtiqueta
  2546                           
  2547                           ;acciones.c: 46:     }
  2548  0D08  2D1D               	goto	l73
  2549  0D09                     l70:	
  2550                           ;acciones.c: 47:     else{
  2551                           
  2552                           
  2553                           ;acciones.c: 49:         RA5 = 1;
  2554  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0D0B  1685               	bsf	5,5	;volatile
  2557  0D0C                     l3388:	
  2558                           
  2559                           ;acciones.c: 50:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2560  0D0C  3006               	movlw	6
  2561  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  2562  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  2563  0D0F  00C8               	movwf	(??_accionesPuertoSerial^(0+128)+2)
  2564  0D10  3013               	movlw	19
  2565  0D11  00C7               	movwf	(??_accionesPuertoSerial^(0+128)+1)
  2566  0D12  30AD               	movlw	173
  2567  0D13  00C6               	movwf	??_accionesPuertoSerial^(0+128)
  2568  0D14                     u4037:	
  2569  0D14  0BC6               	decfsz	??_accionesPuertoSerial^(0+128),f
  2570  0D15  2D14               	goto	u4037
  2571  0D16  0BC7               	decfsz	(??_accionesPuertoSerial^(0+128)+1),f
  2572  0D17  2D14               	goto	u4037
  2573  0D18  0BC8               	decfsz	(??_accionesPuertoSerial^(0+128)+2),f
  2574  0D19  2D14               	goto	u4037
  2575  0D1A                     l3390:	
  2576                           
  2577                           ;acciones.c: 51:         RA5 = 0;
  2578  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0D1C  1285               	bcf	5,5	;volatile
  2581  0D1D                     l73:	
  2582  0D1D  0008               	return
  2583  0D1E                     __end_of_accionesPuertoSerial:	
  2584                           
  2585                           	psect	text3
  2586  054C                     __ptext3:	
  2587 ;; *************** function _lecturaEtiqueta *****************
  2588 ;; Defined at:
  2589 ;;		line 22 in file "lectura.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  tp              1   35[BANK0 ] unsigned char 
  2594 ;;  i               2   38[BANK0 ] int 
  2595 ;;  Aux             2   36[BANK0 ] short 
  2596 ;;  letra           1   34[BANK0 ] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       0       0       0       0
  2607 ;;      Locals:         0       6       0       0       0
  2608 ;;      Temps:          0       3       0       0       0
  2609 ;;      Totals:         0       9       0       0       0
  2610 ;;Total ram usage:        9 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    5
  2613 ;; This function calls:
  2614 ;;		_EEPROM_search
  2615 ;;		___awmod
  2616 ;;		___bmul
  2617 ;;		_envioTX
  2618 ;;		_ingresoProd
  2619 ;;		_mostrarDigitos
  2620 ;; This function is called by:
  2621 ;;		_accionesPuertoSerial
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _lecturaEtiqueta
  2627  054C                     _lecturaEtiqueta:	
  2628  054C                     l3276:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2631                           
  2632                           
  2633                           ;lectura.c: 23:     short int Aux = 0;
  2634  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2635  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2636  054E  01C4               	clrf	lecturaEtiqueta@Aux
  2637  054F  01C5               	clrf	lecturaEtiqueta@Aux+1
  2638                           
  2639                           ;lectura.c: 24:     unsigned char letra = 0;
  2640  0550  01C2               	clrf	lecturaEtiqueta@letra
  2641                           
  2642                           ;lectura.c: 27:     for (int i = 0; i < 8; i++ ) {
  2643  0551  01C6               	clrf	lecturaEtiqueta@i
  2644  0552  01C7               	clrf	lecturaEtiqueta@i+1
  2645  0553                     l3282:	
  2646                           
  2647                           ;lectura.c: 28:         if(codigoEntrada[i] >= '0' && codigoEntrada[i] <= '9') {
  2648  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0555  0846               	movf	lecturaEtiqueta@i,w
  2651  0556  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2652  0557  0084               	movwf	4
  2653  0558  3030               	movlw	48
  2654  0559  1383               	bcf	3,7	;select IRP bank1
  2655  055A  0200               	subwf	0,w
  2656  055B  1C03               	skipc
  2657  055C  2D5E               	goto	u3691
  2658  055D  2D5F               	goto	u3690
  2659  055E                     u3691:	
  2660  055E  2D79               	goto	l129
  2661  055F                     u3690:	
  2662  055F                     l3284:	
  2663  055F  0846               	movf	lecturaEtiqueta@i,w
  2664  0560  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2665  0561  0084               	movwf	4
  2666  0562  303A               	movlw	58
  2667  0563  0200               	subwf	0,w
  2668  0564  1803               	skipnc
  2669  0565  2D67               	goto	u3701
  2670  0566  2D68               	goto	u3700
  2671  0567                     u3701:	
  2672  0567  2D79               	goto	l129
  2673  0568                     u3700:	
  2674  0568                     l3286:	
  2675                           
  2676                           ;lectura.c: 29:             Aux += (codigoEntrada[i] - '0');
  2677  0568  0846               	movf	lecturaEtiqueta@i,w
  2678  0569  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2679  056A  0084               	movwf	4
  2680  056B  0800               	movf	0,w
  2681  056C  3ED0               	addlw	208
  2682  056D  00BF               	movwf	??_lecturaEtiqueta
  2683  056E  30FF               	movlw	255
  2684  056F  1803               	skipnc
  2685  0570  3000               	movlw	0
  2686  0571  00C0               	movwf	??_lecturaEtiqueta+1
  2687  0572  083F               	movf	??_lecturaEtiqueta,w
  2688  0573  07C4               	addwf	lecturaEtiqueta@Aux,f
  2689  0574  1803               	skipnc
  2690  0575  0AC5               	incf	lecturaEtiqueta@Aux+1,f
  2691  0576  0840               	movf	??_lecturaEtiqueta+1,w
  2692  0577  07C5               	addwf	lecturaEtiqueta@Aux+1,f
  2693                           
  2694                           ;lectura.c: 30:         }
  2695  0578  2D7B               	goto	l3288
  2696  0579                     l129:	
  2697                           ;lectura.c: 31:         else{
  2698                           
  2699                           
  2700                           ;lectura.c: 32:             letra = 1;
  2701  0579  01C2               	clrf	lecturaEtiqueta@letra
  2702  057A  0AC2               	incf	lecturaEtiqueta@letra,f
  2703  057B                     l3288:	
  2704                           
  2705                           ;lectura.c: 34:     }
  2706  057B  3001               	movlw	1
  2707  057C  07C6               	addwf	lecturaEtiqueta@i,f
  2708  057D  1803               	skipnc
  2709  057E  0AC7               	incf	lecturaEtiqueta@i+1,f
  2710  057F  3000               	movlw	0
  2711  0580  07C7               	addwf	lecturaEtiqueta@i+1,f
  2712  0581                     l3290:	
  2713  0581  0847               	movf	lecturaEtiqueta@i+1,w
  2714  0582  3A80               	xorlw	128
  2715  0583  00FF               	movwf	btemp+1
  2716  0584  3080               	movlw	128
  2717  0585  027F               	subwf	btemp+1,w
  2718  0586  1D03               	skipz
  2719  0587  2D8A               	goto	u3715
  2720  0588  3008               	movlw	8
  2721  0589  0246               	subwf	lecturaEtiqueta@i,w
  2722  058A                     u3715:	
  2723  058A  1C03               	skipc
  2724  058B  2D8D               	goto	u3711
  2725  058C  2D8E               	goto	u3710
  2726  058D                     u3711:	
  2727  058D  2D53               	goto	l3282
  2728  058E                     u3710:	
  2729  058E                     l3292:	
  2730                           
  2731                           ;lectura.c: 36:     if ( ((Aux%10) == (codigoEntrada[8] - '0')) && letra == 0) {
  2732  058E  300A               	movlw	10
  2733  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0591  00A0               	movwf	___awmod@divisor
  2736  0592  3000               	movlw	0
  2737  0593  00A1               	movwf	___awmod@divisor+1
  2738  0594  0845               	movf	lecturaEtiqueta@Aux+1,w
  2739  0595  00A3               	movwf	___awmod@dividend+1
  2740  0596  0844               	movf	lecturaEtiqueta@Aux,w
  2741  0597  00A2               	movwf	___awmod@dividend
  2742  0598  120A  158A  22D9  120A  118A  	fcall	___awmod
  2743  059D  1683               	bsf	3,5	;RP0=1, select bank1
  2744  059E  1303               	bcf	3,6	;RP1=0, select bank1
  2745  059F  0868               	movf	(_codigoEntrada^(0+128)+8),w
  2746  05A0  3ED0               	addlw	208
  2747  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2748  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2749  05A3  00BF               	movwf	??_lecturaEtiqueta
  2750  05A4  30FF               	movlw	255
  2751  05A5  1803               	skipnc
  2752  05A6  3000               	movlw	0
  2753  05A7  00C0               	movwf	??_lecturaEtiqueta+1
  2754  05A8  0821               	movf	?___awmod+1,w
  2755  05A9  0640               	xorwf	??_lecturaEtiqueta+1,w
  2756  05AA  1D03               	skipz
  2757  05AB  2DAE               	goto	u3725
  2758  05AC  0820               	movf	?___awmod,w
  2759  05AD  063F               	xorwf	??_lecturaEtiqueta,w
  2760  05AE                     u3725:	
  2761  05AE  1D03               	skipz
  2762  05AF  2DB1               	goto	u3721
  2763  05B0  2DB2               	goto	u3720
  2764  05B1                     u3721:	
  2765  05B1  2E4A               	goto	l132
  2766  05B2                     u3720:	
  2767  05B2                     l3294:	
  2768  05B2  0842               	movf	lecturaEtiqueta@letra,w
  2769  05B3  1D03               	btfss	3,2
  2770  05B4  2DB6               	goto	u3731
  2771  05B5  2DB7               	goto	u3730
  2772  05B6                     u3731:	
  2773  05B6  2E4A               	goto	l132
  2774  05B7                     u3730:	
  2775  05B7                     l3296:	
  2776                           
  2777                           ;lectura.c: 38:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1]
      +                           - '0');
  2778  05B7  300A               	movlw	10
  2779  05B8  00BF               	movwf	??_lecturaEtiqueta
  2780  05B9  083F               	movf	??_lecturaEtiqueta,w
  2781  05BA  00A0               	movwf	___bmul@multiplicand
  2782  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2783  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2784  05BD  0860               	movf	_codigoEntrada^(0+128),w
  2785  05BE  120A  158A  2014  120A  118A  	fcall	___bmul
  2786  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  2787  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  2788  05C5  0761               	addwf	(_codigoEntrada^(0+128)+1),w
  2789  05C6  3EF0               	addlw	240
  2790  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  2791  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  2792  05C9  00C0               	movwf	??_lecturaEtiqueta+1
  2793  05CA  0840               	movf	??_lecturaEtiqueta+1,w
  2794  05CB  00C3               	movwf	lecturaEtiqueta@tp
  2795  05CC                     l3298:	
  2796                           
  2797                           ;lectura.c: 39:         Aux = EEPROM_search(tp);
  2798  05CC  0843               	movf	lecturaEtiqueta@tp,w
  2799  05CD  120A  158A  2587  120A  118A  	fcall	_EEPROM_search
  2800  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2801  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2802  05D4  0837               	movf	?_EEPROM_search+1,w
  2803  05D5  00C5               	movwf	lecturaEtiqueta@Aux+1
  2804  05D6  0836               	movf	?_EEPROM_search,w
  2805  05D7  00C4               	movwf	lecturaEtiqueta@Aux
  2806  05D8                     l3300:	
  2807                           
  2808                           ;lectura.c: 41:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  2809  05D8  0870               	movf	_cuenta,w
  2810  05D9  0744               	addwf	lecturaEtiqueta@Aux,w
  2811  05DA  00BF               	movwf	??_lecturaEtiqueta
  2812  05DB  0871               	movf	_cuenta+1,w
  2813  05DC  1803               	skipnc
  2814  05DD  0A71               	incf	_cuenta+1,w
  2815  05DE  0745               	addwf	lecturaEtiqueta@Aux+1,w
  2816  05DF  00C0               	movwf	??_lecturaEtiqueta+1
  2817  05E0  3003               	movlw	3
  2818  05E1  0240               	subwf	??_lecturaEtiqueta+1,w
  2819  05E2  30E8               	movlw	232
  2820  05E3  1903               	skipnz
  2821  05E4  023F               	subwf	??_lecturaEtiqueta,w
  2822  05E5  1803               	skipnc
  2823  05E6  2DE8               	goto	u3741
  2824  05E7  2DE9               	goto	u3740
  2825  05E8                     u3741:	
  2826  05E8  2E4A               	goto	l132
  2827  05E9                     u3740:	
  2828  05E9                     l3302:	
  2829  05E9  0A44               	incf	lecturaEtiqueta@Aux,w
  2830  05EA  1D03               	skipz
  2831  05EB  2DF1               	goto	u3750
  2832  05EC  0A45               	incf	lecturaEtiqueta@Aux+1,w
  2833  05ED  1903               	btfsc	3,2
  2834  05EE  2DF0               	goto	u3751
  2835  05EF  2DF1               	goto	u3750
  2836  05F0                     u3751:	
  2837  05F0  2E4A               	goto	l132
  2838  05F1                     u3750:	
  2839  05F1                     l3304:	
  2840                           
  2841                           ;lectura.c: 42:             if(modoDebug){
  2842  05F1  0872               	movf	_modoDebug,w
  2843  05F2  1903               	btfsc	3,2
  2844  05F3  2DF5               	goto	u3761
  2845  05F4  2DF6               	goto	u3760
  2846  05F5                     u3761:	
  2847  05F5  2DFF               	goto	l3308
  2848  05F6                     u3760:	
  2849  05F6                     l3306:	
  2850                           
  2851                           ;lectura.c: 43:                 envioTX("Producto ingresado");
  2852  05F6  30E8               	movlw	low (STR_4| (0+32768))
  2853  05F7  00A0               	movwf	envioTX@mensaje
  2854  05F8  3084               	movlw	high (STR_4| (0+32768))
  2855  05F9  00A1               	movwf	envioTX@mensaje+1
  2856  05FA  120A  158A  2190  120A  118A  	fcall	_envioTX
  2857  05FF                     l3308:	
  2858                           
  2859                           ;lectura.c: 45:             tp--;
  2860  05FF  3001               	movlw	1
  2861  0600  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0601  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0602  02C3               	subwf	lecturaEtiqueta@tp,f
  2864  0603                     l3310:	
  2865                           
  2866                           ;lectura.c: 46:             ingresoProd(tp);
  2867  0603  0843               	movf	lecturaEtiqueta@tp,w
  2868  0604  00BF               	movwf	??_lecturaEtiqueta
  2869  0605  01C0               	clrf	??_lecturaEtiqueta+1
  2870  0606  083F               	movf	??_lecturaEtiqueta,w
  2871  0607  00AE               	movwf	ingresoProd@tp
  2872  0608  0840               	movf	??_lecturaEtiqueta+1,w
  2873  0609  00AF               	movwf	ingresoProd@tp+1
  2874  060A  120A  158A  23F4  120A  118A  	fcall	_ingresoProd
  2875  060F                     l3312:	
  2876                           
  2877                           ;lectura.c: 47:             productoIngresado = tp;
  2878  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0611  0843               	movf	lecturaEtiqueta@tp,w
  2881  0612  00BF               	movwf	??_lecturaEtiqueta
  2882  0613  01C0               	clrf	??_lecturaEtiqueta+1
  2883  0614  083F               	movf	??_lecturaEtiqueta,w
  2884  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2885  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2886  0617  00DE               	movwf	_productoIngresado^(0+128)
  2887  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2889  061A  0840               	movf	??_lecturaEtiqueta+1,w
  2890  061B  1683               	bsf	3,5	;RP0=1, select bank1
  2891  061C  1303               	bcf	3,6	;RP1=0, select bank1
  2892  061D  00DF               	movwf	(_productoIngresado+1)^(0+128)
  2893  061E                     l3314:	
  2894                           
  2895                           ;lectura.c: 48:             auxCuenta = cuenta;
  2896  061E  0871               	movf	_cuenta+1,w
  2897  061F  1683               	bsf	3,5	;RP0=1, select bank3
  2898  0620  1703               	bsf	3,6	;RP1=1, select bank3
  2899  0621  00D5               	movwf	(_auxCuenta+1)^(0+384)
  2900  0622  0870               	movf	_cuenta,w
  2901  0623  00D4               	movwf	_auxCuenta^(0+384)
  2902  0624                     l3316:	
  2903                           
  2904                           ;lectura.c: 49:             cuenta += Aux;
  2905  0624  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0625  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0626  0844               	movf	lecturaEtiqueta@Aux,w
  2908  0627  07F0               	addwf	_cuenta,f
  2909  0628  1803               	skipnc
  2910  0629  0AF1               	incf	_cuenta+1,f
  2911  062A  0845               	movf	lecturaEtiqueta@Aux+1,w
  2912  062B  07F1               	addwf	_cuenta+1,f
  2913  062C                     l3318:	
  2914                           
  2915                           ;lectura.c: 50:             mostrarDigitos(cuenta);
  2916  062C  0871               	movf	_cuenta+1,w
  2917  062D  00B5               	movwf	mostrarDigitos@num+1
  2918  062E  0870               	movf	_cuenta,w
  2919  062F  00B4               	movwf	mostrarDigitos@num
  2920  0630  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  2921  0635                     l3320:	
  2922                           
  2923                           ;lectura.c: 51:             RA3 = 1;
  2924  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0637  1585               	bsf	5,3	;volatile
  2927  0638                     l3322:	
  2928                           
  2929                           ;lectura.c: 52:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2930  0638  3006               	movlw	6
  2931  0639  1283               	bcf	3,5	;RP0=0, select bank0
  2932  063A  1303               	bcf	3,6	;RP1=0, select bank0
  2933  063B  00C1               	movwf	??_lecturaEtiqueta+2
  2934  063C  3013               	movlw	19
  2935  063D  00C0               	movwf	??_lecturaEtiqueta+1
  2936  063E  30AD               	movlw	173
  2937  063F  00BF               	movwf	??_lecturaEtiqueta
  2938  0640                     u4047:	
  2939  0640  0BBF               	decfsz	??_lecturaEtiqueta,f
  2940  0641  2E40               	goto	u4047
  2941  0642  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2942  0643  2E40               	goto	u4047
  2943  0644  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2944  0645  2E40               	goto	u4047
  2945  0646                     l3324:	
  2946                           
  2947                           ;lectura.c: 53:             RA3 = 0;
  2948  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0648  1185               	bcf	5,3	;volatile
  2951                           
  2952                           ;lectura.c: 55:         }
  2953  0649  2E5C               	goto	l136
  2954  064A                     l132:	
  2955                           ;lectura.c: 56:         else {
  2956                           
  2957                           
  2958                           ;lectura.c: 58:             RA5 = 1;
  2959  064A  1685               	bsf	5,5	;volatile
  2960  064B                     l3326:	
  2961                           
  2962                           ;lectura.c: 59:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2963  064B  3006               	movlw	6
  2964  064C  1283               	bcf	3,5	;RP0=0, select bank0
  2965  064D  1303               	bcf	3,6	;RP1=0, select bank0
  2966  064E  00C1               	movwf	??_lecturaEtiqueta+2
  2967  064F  3013               	movlw	19
  2968  0650  00C0               	movwf	??_lecturaEtiqueta+1
  2969  0651  30AD               	movlw	173
  2970  0652  00BF               	movwf	??_lecturaEtiqueta
  2971  0653                     u4057:	
  2972  0653  0BBF               	decfsz	??_lecturaEtiqueta,f
  2973  0654  2E53               	goto	u4057
  2974  0655  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2975  0656  2E53               	goto	u4057
  2976  0657  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2977  0658  2E53               	goto	u4057
  2978  0659                     l3328:	
  2979                           
  2980                           ;lectura.c: 60:             RA5 = 0;
  2981  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2982  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2983  065B  1285               	bcf	5,5	;volatile
  2984  065C                     l136:	
  2985  065C  0008               	return
  2986  065D                     __end_of_lecturaEtiqueta:	
  2987                           
  2988                           	psect	text4
  2989  0BF4                     __ptext4:	
  2990 ;; *************** function _ingresoProd *****************
  2991 ;; Defined at:
  2992 ;;		line 17 in file "manejoProductos.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  tp              2   14[BANK0 ] short 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  i               2   19[BANK0 ] short 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       2       0       0       0
  3007 ;;      Locals:         0       2       0       0       0
  3008 ;;      Temps:          0       3       0       0       0
  3009 ;;      Totals:         0       7       0       0       0
  3010 ;;Total ram usage:        7 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    3
  3013 ;; This function calls:
  3014 ;;		_pow
  3015 ;; This function is called by:
  3016 ;;		_lecturaEtiqueta
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _ingresoProd
  3022  0BF4                     _ingresoProd:	
  3023  0BF4                     l3162:	
  3024                           ;incstack = 0
  3025                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3026                           
  3027                           
  3028                           ;manejoProductos.c: 19:     for(short int i = 12; i>=0; i--) {
  3029  0BF4  300C               	movlw	12
  3030  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0BF7  00B3               	movwf	ingresoProd@i
  3033  0BF8  3000               	movlw	0
  3034  0BF9  00B4               	movwf	ingresoProd@i+1
  3035  0BFA                     l3168:	
  3036                           
  3037                           ;manejoProductos.c: 20:         if( tp >= 8*i) {
  3038  0BFA  0834               	movf	ingresoProd@i+1,w
  3039  0BFB  00B1               	movwf	??_ingresoProd+1
  3040  0BFC  0833               	movf	ingresoProd@i,w
  3041  0BFD  00B0               	movwf	??_ingresoProd
  3042  0BFE  1003               	clrc
  3043  0BFF  0DB0               	rlf	??_ingresoProd,f
  3044  0C00  0DB1               	rlf	??_ingresoProd+1,f
  3045  0C01  1003               	clrc
  3046  0C02  0DB0               	rlf	??_ingresoProd,f
  3047  0C03  0DB1               	rlf	??_ingresoProd+1,f
  3048  0C04  1003               	clrc
  3049  0C05  0DB0               	rlf	??_ingresoProd,f
  3050  0C06  0DB1               	rlf	??_ingresoProd+1,f
  3051  0C07  082F               	movf	ingresoProd@tp+1,w
  3052  0C08  3A80               	xorlw	128
  3053  0C09  00B2               	movwf	??_ingresoProd+2
  3054  0C0A  0831               	movf	??_ingresoProd+1,w
  3055  0C0B  3A80               	xorlw	128
  3056  0C0C  0232               	subwf	??_ingresoProd+2,w
  3057  0C0D  1D03               	skipz
  3058  0C0E  2C11               	goto	u3495
  3059  0C0F  0830               	movf	??_ingresoProd,w
  3060  0C10  022E               	subwf	ingresoProd@tp,w
  3061  0C11                     u3495:	
  3062  0C11  1C03               	skipc
  3063  0C12  2C14               	goto	u3491
  3064  0C13  2C15               	goto	u3490
  3065  0C14                     u3491:	
  3066  0C14  2C49               	goto	l3176
  3067  0C15                     u3490:	
  3068  0C15                     l3170:	
  3069                           
  3070                           ;manejoProductos.c: 22:             tp = tp - 8*i;
  3071  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0C17  0834               	movf	ingresoProd@i+1,w
  3074  0C18  00B1               	movwf	??_ingresoProd+1
  3075  0C19  0833               	movf	ingresoProd@i,w
  3076  0C1A  00B0               	movwf	??_ingresoProd
  3077  0C1B  1003               	clrc
  3078  0C1C  0DB0               	rlf	??_ingresoProd,f
  3079  0C1D  0DB1               	rlf	??_ingresoProd+1,f
  3080  0C1E  1003               	clrc
  3081  0C1F  0DB0               	rlf	??_ingresoProd,f
  3082  0C20  0DB1               	rlf	??_ingresoProd+1,f
  3083  0C21  1003               	clrc
  3084  0C22  0DB0               	rlf	??_ingresoProd,f
  3085  0C23  0DB1               	rlf	??_ingresoProd+1,f
  3086  0C24  0830               	movf	??_ingresoProd,w
  3087  0C25  022E               	subwf	ingresoProd@tp,w
  3088  0C26  00AE               	movwf	ingresoProd@tp
  3089  0C27  0831               	movf	??_ingresoProd+1,w
  3090  0C28  1C03               	skipc
  3091  0C29  0A31               	incf	??_ingresoProd+1,w
  3092  0C2A  022F               	subwf	ingresoProd@tp+1,w
  3093  0C2B  00AF               	movwf	ingresoProd@tp+1
  3094  0C2C                     l3172:	
  3095                           
  3096                           ;manejoProductos.c: 23:             prodIngresados[i] = prodIngresados[i] | pow(2,tp);
  3097  0C2C  0833               	movf	ingresoProd@i,w
  3098  0C2D  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3099  0C2E  0084               	movwf	4
  3100  0C2F  3002               	movlw	2
  3101  0C30  00A6               	movwf	pow@numero
  3102  0C31  3000               	movlw	0
  3103  0C32  00A7               	movwf	pow@numero+1
  3104  0C33  082F               	movf	ingresoProd@tp+1,w
  3105  0C34  00A9               	movwf	pow@potencia+1
  3106  0C35  082E               	movf	ingresoProd@tp,w
  3107  0C36  00A8               	movwf	pow@potencia
  3108  0C37  120A  158A  2156  120A  158A  	fcall	_pow
  3109  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0C3E  0826               	movf	?_pow,w
  3112  0C3F  1383               	bcf	3,7	;select IRP bank1
  3113  0C40  0400               	iorwf	0,w
  3114  0C41  00B0               	movwf	??_ingresoProd
  3115  0C42  0833               	movf	ingresoProd@i,w
  3116  0C43  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3117  0C44  0084               	movwf	4
  3118  0C45  0830               	movf	??_ingresoProd,w
  3119  0C46  0080               	movwf	0
  3120  0C47                     l3174:	
  3121                           
  3122                           ;manejoProductos.c: 24:             i = 0;
  3123  0C47  01B3               	clrf	ingresoProd@i
  3124  0C48  01B4               	clrf	ingresoProd@i+1
  3125  0C49                     l3176:	
  3126                           
  3127                           ;manejoProductos.c: 27:     }
  3128  0C49  30FF               	movlw	255
  3129  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0C4C  07B3               	addwf	ingresoProd@i,f
  3132  0C4D  1803               	skipnc
  3133  0C4E  0AB4               	incf	ingresoProd@i+1,f
  3134  0C4F  30FF               	movlw	255
  3135  0C50  07B4               	addwf	ingresoProd@i+1,f
  3136  0C51                     l3178:	
  3137  0C51  1FB4               	btfss	ingresoProd@i+1,7
  3138  0C52  2C54               	goto	u3501
  3139  0C53  2C55               	goto	u3500
  3140  0C54                     u3501:	
  3141  0C54  2BFA               	goto	l3168
  3142  0C55                     u3500:	
  3143  0C55                     l371:	
  3144  0C55  0008               	return
  3145  0C56                     __end_of_ingresoProd:	
  3146                           
  3147                           	psect	text5
  3148  0D87                     __ptext5:	
  3149 ;; *************** function _EEPROM_search *****************
  3150 ;; Defined at:
  3151 ;;		line 3 in file "lectura.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  tp              1    wreg     unsigned char 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  tp              1   30[BANK0 ] unsigned char 
  3156 ;;  precio          2   28[BANK0 ] short 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2   22[BANK0 ] short 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         0       2       0       0       0
  3167 ;;      Locals:         0       3       0       0       0
  3168 ;;      Temps:          0       4       0       0       0
  3169 ;;      Totals:         0       9       0       0       0
  3170 ;;Total ram usage:        9 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    4
  3173 ;; This function calls:
  3174 ;;		___awdiv
  3175 ;;		_eeprom_read
  3176 ;;		_verificarProd
  3177 ;; This function is called by:
  3178 ;;		_lecturaEtiqueta
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           
  3183                           ;psect for function _EEPROM_search
  3184  0D87                     _EEPROM_search:	
  3185                           
  3186                           ;incstack = 0
  3187                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3188                           ;EEPROM_search@tp stored from wreg
  3189  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0D89  00BE               	movwf	EEPROM_search@tp
  3192  0D8A                     l3144:	
  3193                           
  3194                           ;lectura.c: 5:     short int precio;;lectura.c: 6:     if(tp > 0) {
  3195  0D8A  083E               	movf	EEPROM_search@tp,w
  3196  0D8B  1903               	btfsc	3,2
  3197  0D8C  2D8E               	goto	u3451
  3198  0D8D  2D8F               	goto	u3450
  3199  0D8E                     u3451:	
  3200  0D8E  2DE8               	goto	l3156
  3201  0D8F                     u3450:	
  3202  0D8F                     l3146:	
  3203                           
  3204                           ;lectura.c: 7:         tp--;
  3205  0D8F  3001               	movlw	1
  3206  0D90  02BE               	subwf	EEPROM_search@tp,f
  3207                           
  3208                           ;lectura.c: 8:         tp = tp*2;
  3209  0D91  083E               	movf	EEPROM_search@tp,w
  3210  0D92  00B8               	movwf	??_EEPROM_search
  3211  0D93  0738               	addwf	??_EEPROM_search,w
  3212  0D94  00B9               	movwf	??_EEPROM_search+1
  3213  0D95  0839               	movf	??_EEPROM_search+1,w
  3214  0D96  00BE               	movwf	EEPROM_search@tp
  3215  0D97                     l3148:	
  3216                           
  3217                           ;lectura.c: 9:         precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  3218  0D97  083E               	movf	EEPROM_search@tp,w
  3219  0D98  3E01               	addlw	1
  3220  0D99  120A  158A  202B  120A  158A  	fcall	_eeprom_read
  3221  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0DA0  00B8               	movwf	??_EEPROM_search
  3224  0DA1  01B9               	clrf	??_EEPROM_search+1
  3225  0DA2  083E               	movf	EEPROM_search@tp,w
  3226  0DA3  120A  158A  202B  120A  158A  	fcall	_eeprom_read
  3227  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  3229  0DAA  00BA               	movwf	??_EEPROM_search+2
  3230  0DAB  01BB               	clrf	??_EEPROM_search+3
  3231  0DAC  083A               	movf	??_EEPROM_search+2,w
  3232  0DAD  00BB               	movwf	??_EEPROM_search+3
  3233  0DAE  01BA               	clrf	??_EEPROM_search+2
  3234  0DAF  0838               	movf	??_EEPROM_search,w
  3235  0DB0  043A               	iorwf	??_EEPROM_search+2,w
  3236  0DB1  00BC               	movwf	EEPROM_search@precio
  3237  0DB2  0839               	movf	??_EEPROM_search+1,w
  3238  0DB3  043B               	iorwf	??_EEPROM_search+3,w
  3239  0DB4  00BD               	movwf	EEPROM_search@precio+1
  3240  0DB5                     l3150:	
  3241                           
  3242                           ;lectura.c: 11:         if( (precio < 0 || precio > 999) || verificarProd(tp/2)) {
  3243  0DB5  1BBD               	btfsc	EEPROM_search@precio+1,7
  3244  0DB6  2DB8               	goto	u3461
  3245  0DB7  2DB9               	goto	u3460
  3246  0DB8                     u3461:	
  3247  0DB8  2DE8               	goto	l3156
  3248  0DB9                     u3460:	
  3249  0DB9                     l3152:	
  3250  0DB9  083D               	movf	EEPROM_search@precio+1,w
  3251  0DBA  3A80               	xorlw	128
  3252  0DBB  00FF               	movwf	btemp+1
  3253  0DBC  3083               	movlw	131
  3254  0DBD  027F               	subwf	btemp+1,w
  3255  0DBE  1D03               	skipz
  3256  0DBF  2DC2               	goto	u3475
  3257  0DC0  30E8               	movlw	232
  3258  0DC1  023C               	subwf	EEPROM_search@precio,w
  3259  0DC2                     u3475:	
  3260  0DC2  1803               	skipnc
  3261  0DC3  2DC5               	goto	u3471
  3262  0DC4  2DC6               	goto	u3470
  3263  0DC5                     u3471:	
  3264  0DC5  2DE8               	goto	l3156
  3265  0DC6                     u3470:	
  3266  0DC6                     l3154:	
  3267  0DC6  3002               	movlw	2
  3268  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0DC9  00A0               	movwf	___awdiv@divisor
  3271  0DCA  3000               	movlw	0
  3272  0DCB  00A1               	movwf	___awdiv@divisor+1
  3273  0DCC  083E               	movf	EEPROM_search@tp,w
  3274  0DCD  00B8               	movwf	??_EEPROM_search
  3275  0DCE  01B9               	clrf	??_EEPROM_search+1
  3276  0DCF  0838               	movf	??_EEPROM_search,w
  3277  0DD0  00A2               	movwf	___awdiv@dividend
  3278  0DD1  0839               	movf	??_EEPROM_search+1,w
  3279  0DD2  00A3               	movwf	___awdiv@dividend+1
  3280  0DD3  120A  158A  251E  120A  158A  	fcall	___awdiv
  3281  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  3283  0DDA  0821               	movf	?___awdiv+1,w
  3284  0DDB  00AF               	movwf	verificarProd@tp+1
  3285  0DDC  0820               	movf	?___awdiv,w
  3286  0DDD  00AE               	movwf	verificarProd@tp
  3287  0DDE  120A  158A  2456  120A  158A  	fcall	_verificarProd
  3288  0DE3  3A00               	xorlw	0
  3289  0DE4  1903               	skipnz
  3290  0DE5  2DE7               	goto	u3481
  3291  0DE6  2DE8               	goto	u3480
  3292  0DE7                     u3481:	
  3293  0DE7  2DEE               	goto	l123
  3294  0DE8                     u3480:	
  3295  0DE8                     l3156:	
  3296                           
  3297                           ;lectura.c: 12:             precio = -1;
  3298  0DE8  30FF               	movlw	255
  3299  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  3300  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  3301  0DEB  00BC               	movwf	EEPROM_search@precio
  3302  0DEC  30FF               	movlw	255
  3303  0DED  00BD               	movwf	EEPROM_search@precio+1
  3304  0DEE                     l123:	
  3305                           ;lectura.c: 17:     }
  3306                           
  3307                           
  3308                           ;lectura.c: 19:     return precio;
  3309  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0DF0  083D               	movf	EEPROM_search@precio+1,w
  3312  0DF1  00B7               	movwf	?_EEPROM_search+1
  3313  0DF2  083C               	movf	EEPROM_search@precio,w
  3314  0DF3  00B6               	movwf	?_EEPROM_search
  3315  0DF4                     l124:	
  3316  0DF4  0008               	return
  3317  0DF5                     __end_of_EEPROM_search:	
  3318                           
  3319                           	psect	text6
  3320  0C56                     __ptext6:	
  3321 ;; *************** function _verificarProd *****************
  3322 ;; Defined at:
  3323 ;;		line 30 in file "manejoProductos.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  tp              2   14[BANK0 ] short 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  i               2   20[BANK0 ] short 
  3328 ;;  ret             1   19[BANK0 ] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      unsigned char 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       2       0       0       0
  3339 ;;      Locals:         0       3       0       0       0
  3340 ;;      Temps:          0       3       0       0       0
  3341 ;;      Totals:         0       8       0       0       0
  3342 ;;Total ram usage:        8 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    3
  3345 ;; This function calls:
  3346 ;;		_pow
  3347 ;; This function is called by:
  3348 ;;		_EEPROM_search
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _verificarProd
  3354  0C56                     _verificarProd:	
  3355  0C56                     l3042:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3358                           
  3359                           
  3360                           ;manejoProductos.c: 31:     char ret = 0;
  3361  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0C58  01B3               	clrf	verificarProd@ret
  3364  0C59                     l3044:	
  3365                           
  3366                           ;manejoProductos.c: 32:     for(short int i = 12; i>=0; i--) {
  3367  0C59  300C               	movlw	12
  3368  0C5A  00B4               	movwf	verificarProd@i
  3369  0C5B  3000               	movlw	0
  3370  0C5C  00B5               	movwf	verificarProd@i+1
  3371  0C5D                     l3050:	
  3372                           
  3373                           ;manejoProductos.c: 33:         if( tp >= 8*i) {
  3374  0C5D  0835               	movf	verificarProd@i+1,w
  3375  0C5E  00B1               	movwf	??_verificarProd+1
  3376  0C5F  0834               	movf	verificarProd@i,w
  3377  0C60  00B0               	movwf	??_verificarProd
  3378  0C61  1003               	clrc
  3379  0C62  0DB0               	rlf	??_verificarProd,f
  3380  0C63  0DB1               	rlf	??_verificarProd+1,f
  3381  0C64  1003               	clrc
  3382  0C65  0DB0               	rlf	??_verificarProd,f
  3383  0C66  0DB1               	rlf	??_verificarProd+1,f
  3384  0C67  1003               	clrc
  3385  0C68  0DB0               	rlf	??_verificarProd,f
  3386  0C69  0DB1               	rlf	??_verificarProd+1,f
  3387  0C6A  082F               	movf	verificarProd@tp+1,w
  3388  0C6B  3A80               	xorlw	128
  3389  0C6C  00B2               	movwf	??_verificarProd+2
  3390  0C6D  0831               	movf	??_verificarProd+1,w
  3391  0C6E  3A80               	xorlw	128
  3392  0C6F  0232               	subwf	??_verificarProd+2,w
  3393  0C70  1D03               	skipz
  3394  0C71  2C74               	goto	u3325
  3395  0C72  0830               	movf	??_verificarProd,w
  3396  0C73  022E               	subwf	verificarProd@tp,w
  3397  0C74                     u3325:	
  3398  0C74  1C03               	skipc
  3399  0C75  2C77               	goto	u3321
  3400  0C76  2C78               	goto	u3320
  3401  0C77                     u3321:	
  3402  0C77  2CAC               	goto	l3060
  3403  0C78                     u3320:	
  3404  0C78                     l3052:	
  3405                           
  3406                           ;manejoProductos.c: 35:             tp = tp - 8*i;
  3407  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0C7A  0835               	movf	verificarProd@i+1,w
  3410  0C7B  00B1               	movwf	??_verificarProd+1
  3411  0C7C  0834               	movf	verificarProd@i,w
  3412  0C7D  00B0               	movwf	??_verificarProd
  3413  0C7E  1003               	clrc
  3414  0C7F  0DB0               	rlf	??_verificarProd,f
  3415  0C80  0DB1               	rlf	??_verificarProd+1,f
  3416  0C81  1003               	clrc
  3417  0C82  0DB0               	rlf	??_verificarProd,f
  3418  0C83  0DB1               	rlf	??_verificarProd+1,f
  3419  0C84  1003               	clrc
  3420  0C85  0DB0               	rlf	??_verificarProd,f
  3421  0C86  0DB1               	rlf	??_verificarProd+1,f
  3422  0C87  0830               	movf	??_verificarProd,w
  3423  0C88  022E               	subwf	verificarProd@tp,w
  3424  0C89  00AE               	movwf	verificarProd@tp
  3425  0C8A  0831               	movf	??_verificarProd+1,w
  3426  0C8B  1C03               	skipc
  3427  0C8C  0A31               	incf	??_verificarProd+1,w
  3428  0C8D  022F               	subwf	verificarProd@tp+1,w
  3429  0C8E  00AF               	movwf	verificarProd@tp+1
  3430  0C8F                     l3054:	
  3431                           
  3432                           ;manejoProductos.c: 36:             if(prodIngresados[i] & pow(2,tp)) {
  3433  0C8F  0834               	movf	verificarProd@i,w
  3434  0C90  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3435  0C91  0084               	movwf	4
  3436  0C92  3002               	movlw	2
  3437  0C93  00A6               	movwf	pow@numero
  3438  0C94  3000               	movlw	0
  3439  0C95  00A7               	movwf	pow@numero+1
  3440  0C96  082F               	movf	verificarProd@tp+1,w
  3441  0C97  00A9               	movwf	pow@potencia+1
  3442  0C98  082E               	movf	verificarProd@tp,w
  3443  0C99  00A8               	movwf	pow@potencia
  3444  0C9A  120A  158A  2156  120A  158A  	fcall	_pow
  3445  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0CA1  0826               	movf	?_pow,w
  3448  0CA2  1383               	bcf	3,7	;select IRP bank1
  3449  0CA3  0500               	andwf	0,w
  3450  0CA4  1903               	btfsc	3,2
  3451  0CA5  2CA7               	goto	u3331
  3452  0CA6  2CA8               	goto	u3330
  3453  0CA7                     u3331:	
  3454  0CA7  2CAA               	goto	l3058
  3455  0CA8                     u3330:	
  3456  0CA8                     l3056:	
  3457                           
  3458                           ;manejoProductos.c: 37:                 ret = 1;
  3459  0CA8  01B3               	clrf	verificarProd@ret
  3460  0CA9  0AB3               	incf	verificarProd@ret,f
  3461  0CAA                     l3058:	
  3462                           
  3463                           ;manejoProductos.c: 39:             i = 0;
  3464  0CAA  01B4               	clrf	verificarProd@i
  3465  0CAB  01B5               	clrf	verificarProd@i+1
  3466  0CAC                     l3060:	
  3467                           
  3468                           ;manejoProductos.c: 42:     }
  3469  0CAC  30FF               	movlw	255
  3470  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0CAF  07B4               	addwf	verificarProd@i,f
  3473  0CB0  1803               	skipnc
  3474  0CB1  0AB5               	incf	verificarProd@i+1,f
  3475  0CB2  30FF               	movlw	255
  3476  0CB3  07B5               	addwf	verificarProd@i+1,f
  3477  0CB4                     l3062:	
  3478  0CB4  1FB5               	btfss	verificarProd@i+1,7
  3479  0CB5  2CB7               	goto	u3341
  3480  0CB6  2CB8               	goto	u3340
  3481  0CB7                     u3341:	
  3482  0CB7  2C5D               	goto	l3050
  3483  0CB8                     u3340:	
  3484  0CB8                     l3064:	
  3485                           
  3486                           ;manejoProductos.c: 44:     return ret;
  3487  0CB8  0833               	movf	verificarProd@ret,w
  3488  0CB9                     l378:	
  3489  0CB9  0008               	return
  3490  0CBA                     __end_of_verificarProd:	
  3491                           
  3492                           	psect	text7
  3493  084A                     __ptext7:	
  3494 ;; *************** function _lecturaComando *****************
  3495 ;; Defined at:
  3496 ;;		line 187 in file "lectura.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    5
  3517 ;; This function calls:
  3518 ;;		_lecturaConsulta
  3519 ;;		_lecturaMas
  3520 ;;		_lecturaMenos
  3521 ;; This function is called by:
  3522 ;;		_accionesPuertoSerial
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _lecturaComando
  3528  084A                     _lecturaComando:	
  3529  084A                     l3266:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3532                           
  3533                           
  3534                           ;lectura.c: 188:     if(codigoEntrada[0] == '?') {
  3535  084A  303F               	movlw	63
  3536  084B  1683               	bsf	3,5	;RP0=1, select bank1
  3537  084C  1303               	bcf	3,6	;RP1=0, select bank1
  3538  084D  0660               	xorwf	_codigoEntrada^(0+128),w
  3539  084E  1D03               	btfss	3,2
  3540  084F  2851               	goto	u3671
  3541  0850  2852               	goto	u3670
  3542  0851                     u3671:	
  3543  0851  2858               	goto	l3270
  3544  0852                     u3670:	
  3545  0852                     l3268:	
  3546                           
  3547                           ;lectura.c: 189:         lecturaConsulta();
  3548  0852  120A  118A  265D  120A  158A  	fcall	_lecturaConsulta
  3549                           
  3550                           ;lectura.c: 190:     }
  3551  0857  2869               	goto	l198
  3552  0858                     l3270:	
  3553  0858  302B               	movlw	43
  3554  0859  0660               	xorwf	_codigoEntrada^(0+128),w
  3555  085A  1D03               	btfss	3,2
  3556  085B  285D               	goto	u3681
  3557  085C  285E               	goto	u3680
  3558  085D                     u3681:	
  3559  085D  2864               	goto	l3274
  3560  085E                     u3680:	
  3561  085E                     l3272:	
  3562                           
  3563                           ;lectura.c: 192:         lecturaMas();
  3564  085E  120A  158A  20B2  120A  158A  	fcall	_lecturaMas
  3565                           
  3566                           ;lectura.c: 193:     }
  3567  0863  2869               	goto	l198
  3568  0864                     l3274:	
  3569                           
  3570                           ;lectura.c: 195:         lecturaMenos();
  3571  0864  120A  158A  206A  120A  158A  	fcall	_lecturaMenos
  3572  0869                     l198:	
  3573  0869  0008               	return
  3574  086A                     __end_of_lecturaComando:	
  3575                           
  3576                           	psect	text8
  3577  086A                     __ptext8:	
  3578 ;; *************** function _lecturaMenos *****************
  3579 ;; Defined at:
  3580 ;;		line 115 in file "lectura.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    3
  3601 ;; This function calls:
  3602 ;;		_envioTX
  3603 ;; This function is called by:
  3604 ;;		_lecturaComando
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function _lecturaMenos
  3610  086A                     _lecturaMenos:	
  3611  086A                     l3194:	
  3612                           ;incstack = 0
  3613                           ; Regs used in _lecturaMenos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3614                           
  3615                           
  3616                           ;lectura.c: 116:     if(codigoEntrada[1] == 'D') {
  3617  086A  3044               	movlw	68
  3618  086B  1683               	bsf	3,5	;RP0=1, select bank1
  3619  086C  1303               	bcf	3,6	;RP1=0, select bank1
  3620  086D  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3621  086E  1D03               	btfss	3,2
  3622  086F  2871               	goto	u3541
  3623  0870  2872               	goto	u3540
  3624  0871                     u3541:	
  3625  0871  287F               	goto	l3200
  3626  0872                     u3540:	
  3627  0872                     l3196:	
  3628                           
  3629                           ;lectura.c: 117:         modoDebug = 0;
  3630  0872  01F2               	clrf	_modoDebug
  3631  0873                     l3198:	
  3632                           
  3633                           ;lectura.c: 118:         envioTX("Modo Debug desactivado");
  3634  0873  307C               	movlw	low (STR_7| (0+32768))
  3635  0874  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0875  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0876  00A0               	movwf	envioTX@mensaje
  3638  0877  3084               	movlw	high (STR_7| (0+32768))
  3639  0878  00A1               	movwf	envioTX@mensaje+1
  3640  0879  120A  158A  2190  120A  158A  	fcall	_envioTX
  3641                           
  3642                           ;lectura.c: 119:     }
  3643  087E  288A               	goto	l167
  3644  087F                     l3200:	
  3645                           
  3646                           ;lectura.c: 121:         envioTX("Ocurrio un error en la interpretacion.\n");
  3647  087F  3026               	movlw	low (STR_6| (0+32768))
  3648  0880  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0881  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0882  00A0               	movwf	envioTX@mensaje
  3651  0883  3084               	movlw	high (STR_6| (0+32768))
  3652  0884  00A1               	movwf	envioTX@mensaje+1
  3653  0885  120A  158A  2190  120A  158A  	fcall	_envioTX
  3654  088A                     l167:	
  3655  088A  0008               	return
  3656  088B                     __end_of_lecturaMenos:	
  3657                           
  3658                           	psect	text9
  3659  08B2                     __ptext9:	
  3660 ;; *************** function _lecturaMas *****************
  3661 ;; Defined at:
  3662 ;;		line 100 in file "lectura.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    4
  3683 ;; This function calls:
  3684 ;;		_agregarModificarPrecio
  3685 ;;		_cierreDeLote
  3686 ;;		_envioTX
  3687 ;;		_verificacionEntrada
  3688 ;; This function is called by:
  3689 ;;		_lecturaComando
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _lecturaMas
  3695  08B2                     _lecturaMas:	
  3696  08B2                     l3180:	
  3697                           ;incstack = 0
  3698                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3699                           
  3700                           
  3701                           ;lectura.c: 101:     if (codigoEntrada[1] == 'L') {
  3702  08B2  304C               	movlw	76
  3703  08B3  1683               	bsf	3,5	;RP0=1, select bank1
  3704  08B4  1303               	bcf	3,6	;RP1=0, select bank1
  3705  08B5  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3706  08B6  1D03               	btfss	3,2
  3707  08B7  28B9               	goto	u3511
  3708  08B8  28BA               	goto	u3510
  3709  08B9                     u3511:	
  3710  08B9  28C0               	goto	l3184
  3711  08BA                     u3510:	
  3712  08BA                     l3182:	
  3713                           
  3714                           ;lectura.c: 102:         cierreDeLote();
  3715  08BA  120A  158A  2290  120A  158A  	fcall	_cierreDeLote
  3716                           
  3717                           ;lectura.c: 103:     }
  3718  08BF  28E6               	goto	l162
  3719  08C0                     l3184:	
  3720  08C0  120A  158A  211E  120A  158A  	fcall	_verificacionEntrada
  3721  08C5  3A06               	xorlw	6
  3722  08C6  1D03               	skipz
  3723  08C7  28C9               	goto	u3521
  3724  08C8  28CA               	goto	u3520
  3725  08C9                     u3521:	
  3726  08C9  28D0               	goto	l3188
  3727  08CA                     u3520:	
  3728  08CA                     l3186:	
  3729                           
  3730                           ;lectura.c: 105:         agregarModificarPrecio();
  3731  08CA  120A  158A  272E  120A  158A  	fcall	_agregarModificarPrecio
  3732                           
  3733                           ;lectura.c: 106:     }
  3734  08CF  28E6               	goto	l162
  3735  08D0                     l3188:	
  3736  08D0  3044               	movlw	68
  3737  08D1  1683               	bsf	3,5	;RP0=1, select bank1
  3738  08D2  1303               	bcf	3,6	;RP1=0, select bank1
  3739  08D3  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3740  08D4  1D03               	btfss	3,2
  3741  08D5  28D7               	goto	u3531
  3742  08D6  28D8               	goto	u3530
  3743  08D7                     u3531:	
  3744  08D7  28DB               	goto	l3192
  3745  08D8                     u3530:	
  3746  08D8                     l3190:	
  3747                           
  3748                           ;lectura.c: 108:         modoDebug = 1;
  3749  08D8  01F2               	clrf	_modoDebug
  3750  08D9  0AF2               	incf	_modoDebug,f
  3751                           
  3752                           ;lectura.c: 109:     }
  3753  08DA  28E6               	goto	l162
  3754  08DB                     l3192:	
  3755                           
  3756                           ;lectura.c: 111:         envioTX("Ocurrio un error en la interpretacion.\n");
  3757  08DB  3026               	movlw	low (STR_6| (0+32768))
  3758  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  3759  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  3760  08DE  00A0               	movwf	envioTX@mensaje
  3761  08DF  3084               	movlw	high (STR_6| (0+32768))
  3762  08E0  00A1               	movwf	envioTX@mensaje+1
  3763  08E1  120A  158A  2190  120A  158A  	fcall	_envioTX
  3764  08E6                     l162:	
  3765  08E6  0008               	return
  3766  08E7                     __end_of_lecturaMas:	
  3767                           
  3768                           	psect	text10
  3769  091E                     __ptext10:	
  3770 ;; *************** function _verificacionEntrada *****************
  3771 ;; Defined at:
  3772 ;;		line 73 in file "lectura.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  i               1    2[BANK0 ] unsigned char 
  3777 ;;  ret             1    1[BANK0 ] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      unsigned char 
  3780 ;; Registers used:
  3781 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3787 ;;      Params:         0       0       0       0       0
  3788 ;;      Locals:         0       2       0       0       0
  3789 ;;      Temps:          0       1       0       0       0
  3790 ;;      Totals:         0       3       0       0       0
  3791 ;;Total ram usage:        3 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_lecturaMas
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           
  3802                           ;psect for function _verificacionEntrada
  3803  091E                     _verificacionEntrada:	
  3804  091E                     l3068:	
  3805                           ;incstack = 0
  3806                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  3807                           
  3808                           
  3809                           ;lectura.c: 74:     char i = 1;
  3810  091E  1283               	bcf	3,5	;RP0=0, select bank0
  3811  091F  1303               	bcf	3,6	;RP1=0, select bank0
  3812  0920  01A2               	clrf	verificacionEntrada@i
  3813  0921  0AA2               	incf	verificacionEntrada@i,f
  3814  0922                     l3070:	
  3815                           
  3816                           ;lectura.c: 75:     char ret = 0;
  3817  0922  01A1               	clrf	verificacionEntrada@ret
  3818                           
  3819                           ;lectura.c: 76:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          (codigoEntrada[i] == '=' && i == 3)) && (i<=6) ) {
  3820  0923  292C               	goto	l3074
  3821  0924                     l3072:	
  3822                           
  3823                           ;lectura.c: 77:         i++;
  3824  0924  3001               	movlw	1
  3825  0925  00A0               	movwf	??_verificacionEntrada
  3826  0926  0820               	movf	??_verificacionEntrada,w
  3827  0927  07A2               	addwf	verificacionEntrada@i,f
  3828                           
  3829                           ;lectura.c: 78:         ret++;
  3830  0928  3001               	movlw	1
  3831  0929  00A0               	movwf	??_verificacionEntrada
  3832  092A  0820               	movf	??_verificacionEntrada,w
  3833  092B  07A1               	addwf	verificacionEntrada@ret,f
  3834  092C                     l3074:	
  3835                           
  3836                           ;lectura.c: 76:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          (codigoEntrada[i] == '=' && i == 3)) && (i<=6) ) {
  3837  092C  0822               	movf	verificacionEntrada@i,w
  3838  092D  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3839  092E  0084               	movwf	4
  3840  092F  303A               	movlw	58
  3841  0930  1383               	bcf	3,7	;select IRP bank1
  3842  0931  0200               	subwf	0,w
  3843  0932  1803               	skipnc
  3844  0933  2935               	goto	u3351
  3845  0934  2936               	goto	u3350
  3846  0935                     u3351:	
  3847  0935  293F               	goto	l3078
  3848  0936                     u3350:	
  3849  0936                     l3076:	
  3850  0936  0822               	movf	verificacionEntrada@i,w
  3851  0937  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3852  0938  0084               	movwf	4
  3853  0939  3030               	movlw	48
  3854  093A  0200               	subwf	0,w
  3855  093B  1803               	skipnc
  3856  093C  293E               	goto	u3361
  3857  093D  293F               	goto	u3360
  3858  093E                     u3361:	
  3859  093E  294E               	goto	l3082
  3860  093F                     u3360:	
  3861  093F                     l3078:	
  3862  093F  0822               	movf	verificacionEntrada@i,w
  3863  0940  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3864  0941  0084               	movwf	4
  3865  0942  303D               	movlw	61
  3866  0943  0600               	xorwf	0,w
  3867  0944  1D03               	btfss	3,2
  3868  0945  2947               	goto	u3371
  3869  0946  2948               	goto	u3370
  3870  0947                     u3371:	
  3871  0947  2954               	goto	l3084
  3872  0948                     u3370:	
  3873  0948                     l3080:	
  3874  0948  3003               	movlw	3
  3875  0949  0622               	xorwf	verificacionEntrada@i,w
  3876  094A  1D03               	btfss	3,2
  3877  094B  294D               	goto	u3381
  3878  094C  294E               	goto	u3380
  3879  094D                     u3381:	
  3880  094D  2954               	goto	l3084
  3881  094E                     u3380:	
  3882  094E                     l3082:	
  3883  094E  3007               	movlw	7
  3884  094F  0222               	subwf	verificacionEntrada@i,w
  3885  0950  1C03               	skipc
  3886  0951  2953               	goto	u3391
  3887  0952  2954               	goto	u3390
  3888  0953                     u3391:	
  3889  0953  2924               	goto	l3072
  3890  0954                     u3390:	
  3891  0954                     l3084:	
  3892                           
  3893                           ;lectura.c: 80:     return ret;
  3894  0954  0821               	movf	verificacionEntrada@ret,w
  3895  0955                     l148:	
  3896  0955  0008               	return
  3897  0956                     __end_of_verificacionEntrada:	
  3898                           
  3899                           	psect	text11
  3900  0A90                     __ptext11:	
  3901 ;; *************** function _cierreDeLote *****************
  3902 ;; Defined at:
  3903 ;;		line 83 in file "lectura.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  strLote        32   46[BANK0 ] unsigned char [32]
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       0       0       0       0
  3918 ;;      Locals:         0      32       0       0       0
  3919 ;;      Temps:          0       4       0       0       0
  3920 ;;      Totals:         0      36       0       0       0
  3921 ;;Total ram usage:       36 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    3
  3924 ;; This function calls:
  3925 ;;		_envioTX
  3926 ;;		_sprintf
  3927 ;; This function is called by:
  3928 ;;		_lecturaMas
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           
  3933                           ;psect for function _cierreDeLote
  3934  0A90                     _cierreDeLote:	
  3935  0A90                     l3088:	
  3936                           ;incstack = 0
  3937                           ; Regs used in _cierreDeLote: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3938                           
  3939                           
  3940                           ;lectura.c: 85:     if (cierreLotePedido == 0) {
  3941  0A90  1683               	bsf	3,5	;RP0=1, select bank3
  3942  0A91  1703               	bsf	3,6	;RP1=1, select bank3
  3943  0A92  0857               	movf	_cierreLotePedido^(0+384),w
  3944  0A93  1D03               	btfss	3,2
  3945  0A94  2A96               	goto	u3401
  3946  0A95  2A97               	goto	u3400
  3947  0A96                     u3401:	
  3948  0A96  2ACC               	goto	l3092
  3949  0A97                     u3400:	
  3950  0A97                     l3090:	
  3951                           
  3952                           ;lectura.c: 86:         char strLote[32];;lectura.c: 88:         sprintf(strLote,"Cierre
      +                          ,L:%u,N:%u,T:%u", nroLote, ventasLote, montosLote);
  3953  0A97  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3954  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  3956  0A9A  00B4               	movwf	sprintf@sp
  3957  0A9B  3000               	movlw	0
  3958  0A9C  00B5               	movwf	sprintf@sp+1
  3959  0A9D  30BF               	movlw	low (STR_5| (0+32768))
  3960  0A9E  00B6               	movwf	sprintf@f
  3961  0A9F  3084               	movlw	high (STR_5| (0+32768))
  3962  0AA0  00B7               	movwf	sprintf@f+1
  3963  0AA1  0878               	movf	_nroLote,w
  3964  0AA2  00CA               	movwf	??_cierreDeLote
  3965  0AA3  01CB               	clrf	??_cierreDeLote+1
  3966  0AA4  084A               	movf	??_cierreDeLote,w
  3967  0AA5  00B8               	movwf	?_sprintf+4
  3968  0AA6  084B               	movf	??_cierreDeLote+1,w
  3969  0AA7  00B9               	movwf	?_sprintf+5
  3970  0AA8  086E               	movf	_ventasLote,w
  3971  0AA9  00CC               	movwf	??_cierreDeLote+2
  3972  0AAA  01CD               	clrf	??_cierreDeLote+3
  3973  0AAB  084C               	movf	??_cierreDeLote+2,w
  3974  0AAC  00BA               	movwf	?_sprintf+6
  3975  0AAD  084D               	movf	??_cierreDeLote+3,w
  3976  0AAE  00BB               	movwf	?_sprintf+7
  3977  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  3979  0AB1  085B               	movf	(_montosLote+1)^(0+128),w
  3980  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0AB4  00BD               	movwf	?_sprintf+9
  3983  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  3984  0AB6  1303               	bcf	3,6	;RP1=0, select bank1
  3985  0AB7  085A               	movf	_montosLote^(0+128),w
  3986  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  3988  0ABA  00BC               	movwf	?_sprintf+8
  3989  0ABB  120A  118A  224B  120A  158A  	fcall	_sprintf
  3990                           
  3991                           ;lectura.c: 89:         envioTX(strLote);
  3992  0AC0  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3993  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0AC3  00A0               	movwf	envioTX@mensaje
  3996  0AC4  3000               	movlw	0
  3997  0AC5  00A1               	movwf	envioTX@mensaje+1
  3998  0AC6  120A  158A  2190  120A  158A  	fcall	_envioTX
  3999                           
  4000                           ;lectura.c: 90:     }
  4001  0ACB  2ACD               	goto	l3094
  4002  0ACC                     l3092:	
  4003                           
  4004                           ;lectura.c: 92:         cierreLotePedido = 0;
  4005  0ACC  01D7               	clrf	_cierreLotePedido^(0+384)
  4006  0ACD                     l3094:	
  4007                           
  4008                           ;lectura.c: 95:     nroLote++;
  4009  0ACD  3001               	movlw	1
  4010  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0AD0  00CA               	movwf	??_cierreDeLote
  4013  0AD1  084A               	movf	??_cierreDeLote,w
  4014  0AD2  07F8               	addwf	_nroLote,f
  4015  0AD3                     l3096:	
  4016                           
  4017                           ;lectura.c: 96:     ventasLote=0;
  4018  0AD3  01EE               	clrf	_ventasLote
  4019  0AD4                     l3098:	
  4020                           
  4021                           ;lectura.c: 97:     montosLote=0;
  4022  0AD4  1683               	bsf	3,5	;RP0=1, select bank1
  4023  0AD5  1303               	bcf	3,6	;RP1=0, select bank1
  4024  0AD6  01DA               	clrf	_montosLote^(0+128)
  4025  0AD7  01DB               	clrf	(_montosLote+1)^(0+128)
  4026  0AD8                     l153:	
  4027  0AD8  0008               	return
  4028  0AD9                     __end_of_cierreDeLote:	
  4029                           
  4030                           	psect	text12
  4031  0F2E                     __ptext12:	
  4032 ;; *************** function _agregarModificarPrecio *****************
  4033 ;; Defined at:
  4034 ;;		line 61 in file "manejoProductos.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  mensaje        10   52[BANK0 ] unsigned char [10]
  4039 ;;  precio          2   64[BANK0 ] short 
  4040 ;;  upper_8bits     1   63[BANK0 ] unsigned char 
  4041 ;;  lower_8bits     1   62[BANK0 ] unsigned char 
  4042 ;;  tp              1   66[BANK0 ] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       0       0       0
  4053 ;;      Locals:         0      15       0       0       0
  4054 ;;      Temps:          0      10       0       0       0
  4055 ;;      Totals:         0      25       0       0       0
  4056 ;;Total ram usage:       25 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    3
  4059 ;; This function calls:
  4060 ;;		___awdiv
  4061 ;;		___bmul
  4062 ;;		___wmul
  4063 ;;		_eeprom_write
  4064 ;;		_envioTX
  4065 ;;		_sprintf
  4066 ;; This function is called by:
  4067 ;;		_lecturaMas
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           
  4072                           ;psect for function _agregarModificarPrecio
  4073  0F2E                     _agregarModificarPrecio:	
  4074  0F2E                     l3100:	
  4075                           ;incstack = 0
  4076                           ; Regs used in _agregarModificarPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4077                           
  4078                           
  4079                           ;manejoProductos.c: 62:     unsigned char tp = 10*(codigoEntrada[1]-'0') + (codigoEntrad
      +                          a[2] - '0');
  4080  0F2E  300A               	movlw	10
  4081  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4082  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4083  0F31  00CA               	movwf	??_agregarModificarPrecio
  4084  0F32  084A               	movf	??_agregarModificarPrecio,w
  4085  0F33  00A0               	movwf	___bmul@multiplicand
  4086  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  4087  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  4088  0F36  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4089  0F37  120A  158A  2014  120A  158A  	fcall	___bmul
  4090  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  4091  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  4092  0F3E  0762               	addwf	(_codigoEntrada^(0+128)+2),w
  4093  0F3F  3EF0               	addlw	240
  4094  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0F42  00CB               	movwf	??_agregarModificarPrecio+1
  4097  0F43  084B               	movf	??_agregarModificarPrecio+1,w
  4098  0F44  00E2               	movwf	agregarModificarPrecio@tp
  4099  0F45                     l3102:	
  4100                           
  4101                           ;manejoProductos.c: 63:     if (tp > 0){
  4102  0F45  0862               	movf	agregarModificarPrecio@tp,w
  4103  0F46  1903               	btfsc	3,2
  4104  0F47  2F49               	goto	u3411
  4105  0F48  2F4A               	goto	u3410
  4106  0F49                     u3411:	
  4107  0F49  2FF6               	goto	l3120
  4108  0F4A                     u3410:	
  4109  0F4A                     l3104:	
  4110                           
  4111                           ;manejoProductos.c: 64:         char lower_8bits;;manejoProductos.c: 65:         char up
      +                          per_8bits;;manejoProductos.c: 66:         char mensaje[10];;manejoProductos.c: 67:      
      +                             tp--;
  4112  0F4A  3001               	movlw	1
  4113  0F4B  02E2               	subwf	agregarModificarPrecio@tp,f
  4114                           
  4115                           ;manejoProductos.c: 68:         tp = tp * 2;
  4116  0F4C  0862               	movf	agregarModificarPrecio@tp,w
  4117  0F4D  00CA               	movwf	??_agregarModificarPrecio
  4118  0F4E  074A               	addwf	??_agregarModificarPrecio,w
  4119  0F4F  00CB               	movwf	??_agregarModificarPrecio+1
  4120  0F50  084B               	movf	??_agregarModificarPrecio+1,w
  4121  0F51  00E2               	movwf	agregarModificarPrecio@tp
  4122  0F52                     l3106:	
  4123                           
  4124                           ;manejoProductos.c: 69:         short int precio;;manejoProductos.c: 72:         precio 
      +                          = 100 * (codigoEntrada[4] - '0')+ 10 * (codigoEntrada[5] - '0') + (codigoEntrada[6] - '0
      +                          ');
  4125  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  4126  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  4127  0F54  0864               	movf	(_codigoEntrada^(0+128)+4),w
  4128  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0F57  00CA               	movwf	??_agregarModificarPrecio
  4131  0F58  01CB               	clrf	??_agregarModificarPrecio+1
  4132  0F59  084A               	movf	??_agregarModificarPrecio,w
  4133  0F5A  00A0               	movwf	___wmul@multiplier
  4134  0F5B  084B               	movf	??_agregarModificarPrecio+1,w
  4135  0F5C  00A1               	movwf	___wmul@multiplier+1
  4136  0F5D  3064               	movlw	100
  4137  0F5E  00A2               	movwf	___wmul@multiplicand
  4138  0F5F  3000               	movlw	0
  4139  0F60  00A3               	movwf	___wmul@multiplicand+1
  4140  0F61  120A  158A  208B  120A  158A  	fcall	___wmul
  4141  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0F68  0820               	movf	?___wmul,w
  4144  0F69  00CC               	movwf	??_agregarModificarPrecio+2
  4145  0F6A  0821               	movf	?___wmul+1,w
  4146  0F6B  00CD               	movwf	??_agregarModificarPrecio+3
  4147  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  4148  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  4149  0F6E  0865               	movf	(_codigoEntrada^(0+128)+5),w
  4150  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0F71  00CE               	movwf	??_agregarModificarPrecio+4
  4153  0F72  01CF               	clrf	??_agregarModificarPrecio+5
  4154  0F73  084E               	movf	??_agregarModificarPrecio+4,w
  4155  0F74  00A0               	movwf	___wmul@multiplier
  4156  0F75  084F               	movf	??_agregarModificarPrecio+5,w
  4157  0F76  00A1               	movwf	___wmul@multiplier+1
  4158  0F77  300A               	movlw	10
  4159  0F78  00A2               	movwf	___wmul@multiplicand
  4160  0F79  3000               	movlw	0
  4161  0F7A  00A3               	movwf	___wmul@multiplicand+1
  4162  0F7B  120A  158A  208B  120A  158A  	fcall	___wmul
  4163  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0F82  0820               	movf	?___wmul,w
  4166  0F83  074C               	addwf	??_agregarModificarPrecio+2,w
  4167  0F84  00D0               	movwf	??_agregarModificarPrecio+6
  4168  0F85  0821               	movf	?___wmul+1,w
  4169  0F86  1803               	skipnc
  4170  0F87  0A21               	incf	?___wmul+1,w
  4171  0F88  074D               	addwf	??_agregarModificarPrecio+3,w
  4172  0F89  00D1               	movwf	??_agregarModificarPrecio+7
  4173  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  4174  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  4175  0F8C  0866               	movf	(_codigoEntrada^(0+128)+6),w
  4176  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0F8F  0750               	addwf	??_agregarModificarPrecio+6,w
  4179  0F90  00D2               	movwf	??_agregarModificarPrecio+8
  4180  0F91  3000               	movlw	0
  4181  0F92  1803               	skipnc
  4182  0F93  3001               	movlw	1
  4183  0F94  0751               	addwf	??_agregarModificarPrecio+7,w
  4184  0F95  00D3               	movwf	??_agregarModificarPrecio+9
  4185  0F96  0852               	movf	??_agregarModificarPrecio+8,w
  4186  0F97  3E30               	addlw	48
  4187  0F98  00E0               	movwf	agregarModificarPrecio@precio
  4188  0F99  0853               	movf	??_agregarModificarPrecio+9,w
  4189  0F9A  1803               	skipnc
  4190  0F9B  3E01               	addlw	1
  4191  0F9C  3EEB               	addlw	235
  4192  0F9D  00E1               	movwf	agregarModificarPrecio@precio+1
  4193  0F9E                     l3108:	
  4194                           
  4195                           ;manejoProductos.c: 73:         lower_8bits = precio & 0xff;
  4196  0F9E  0860               	movf	agregarModificarPrecio@precio,w
  4197  0F9F  00CA               	movwf	??_agregarModificarPrecio
  4198  0FA0  084A               	movf	??_agregarModificarPrecio,w
  4199  0FA1  00DE               	movwf	agregarModificarPrecio@lower_8bits
  4200  0FA2                     l3110:	
  4201                           
  4202                           ;manejoProductos.c: 74:         upper_8bits = (precio >> 8) & 0xff;
  4203  0FA2  0861               	movf	agregarModificarPrecio@precio+1,w
  4204  0FA3  00CA               	movwf	??_agregarModificarPrecio
  4205  0FA4  084A               	movf	??_agregarModificarPrecio,w
  4206  0FA5  00DF               	movwf	agregarModificarPrecio@upper_8bits
  4207  0FA6                     l3112:	
  4208                           
  4209                           ;manejoProductos.c: 75:         eeprom_write(tp ,upper_8bits);
  4210  0FA6  085F               	movf	agregarModificarPrecio@upper_8bits,w
  4211  0FA7  00CA               	movwf	??_agregarModificarPrecio
  4212  0FA8  084A               	movf	??_agregarModificarPrecio,w
  4213  0FA9  00A0               	movwf	eeprom_write@value
  4214  0FAA  0862               	movf	agregarModificarPrecio@tp,w
  4215  0FAB  120A  158A  20E7  120A  158A  	fcall	_eeprom_write
  4216  0FB0                     l3114:	
  4217                           
  4218                           ;manejoProductos.c: 76:         eeprom_write(tp + 1,lower_8bits);
  4219  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0FB2  085E               	movf	agregarModificarPrecio@lower_8bits,w
  4222  0FB3  00CA               	movwf	??_agregarModificarPrecio
  4223  0FB4  084A               	movf	??_agregarModificarPrecio,w
  4224  0FB5  00A0               	movwf	eeprom_write@value
  4225  0FB6  0862               	movf	agregarModificarPrecio@tp,w
  4226  0FB7  3E01               	addlw	1
  4227  0FB8  120A  158A  20E7  120A  158A  	fcall	_eeprom_write
  4228  0FBD                     l3116:	
  4229                           
  4230                           ;manejoProductos.c: 77:         sprintf(mensaje, "P%d=%d", tp/2 + 1, precio);
  4231  0FBD  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4232  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0FC0  00B4               	movwf	sprintf@sp
  4235  0FC1  3000               	movlw	0
  4236  0FC2  00B5               	movwf	sprintf@sp+1
  4237  0FC3  3040               	movlw	low (STR_18| (0+32768))
  4238  0FC4  00B6               	movwf	sprintf@f
  4239  0FC5  3085               	movlw	high (STR_18| (0+32768))
  4240  0FC6  00B7               	movwf	sprintf@f+1
  4241  0FC7  3002               	movlw	2
  4242  0FC8  00A0               	movwf	___awdiv@divisor
  4243  0FC9  3000               	movlw	0
  4244  0FCA  00A1               	movwf	___awdiv@divisor+1
  4245  0FCB  0862               	movf	agregarModificarPrecio@tp,w
  4246  0FCC  00CA               	movwf	??_agregarModificarPrecio
  4247  0FCD  01CB               	clrf	??_agregarModificarPrecio+1
  4248  0FCE  084A               	movf	??_agregarModificarPrecio,w
  4249  0FCF  00A2               	movwf	___awdiv@dividend
  4250  0FD0  084B               	movf	??_agregarModificarPrecio+1,w
  4251  0FD1  00A3               	movwf	___awdiv@dividend+1
  4252  0FD2  120A  158A  251E  120A  158A  	fcall	___awdiv
  4253  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0FD9  0820               	movf	?___awdiv,w
  4256  0FDA  3E01               	addlw	1
  4257  0FDB  00B8               	movwf	?_sprintf+4
  4258  0FDC  0821               	movf	?___awdiv+1,w
  4259  0FDD  1803               	skipnc
  4260  0FDE  3E01               	addlw	1
  4261  0FDF  3E00               	addlw	0
  4262  0FE0  00B9               	movwf	?_sprintf+5
  4263  0FE1  0861               	movf	agregarModificarPrecio@precio+1,w
  4264  0FE2  00BB               	movwf	?_sprintf+7
  4265  0FE3  0860               	movf	agregarModificarPrecio@precio,w
  4266  0FE4  00BA               	movwf	?_sprintf+6
  4267  0FE5  120A  118A  224B  120A  158A  	fcall	_sprintf
  4268  0FEA                     l3118:	
  4269                           
  4270                           ;manejoProductos.c: 78:         envioTX(mensaje);
  4271  0FEA  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4272  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0FED  00A0               	movwf	envioTX@mensaje
  4275  0FEE  3000               	movlw	0
  4276  0FEF  00A1               	movwf	envioTX@mensaje+1
  4277  0FF0  120A  158A  2190  120A  158A  	fcall	_envioTX
  4278                           
  4279                           ;manejoProductos.c: 79:     }
  4280  0FF5  2FFF               	goto	l389
  4281  0FF6                     l3120:	
  4282                           
  4283                           ;manejoProductos.c: 81:         envioTX("No hay producto 00");
  4284  0FF6  30D5               	movlw	low (STR_19| (0+32768))
  4285  0FF7  00A0               	movwf	envioTX@mensaje
  4286  0FF8  3084               	movlw	high (STR_19| (0+32768))
  4287  0FF9  00A1               	movwf	envioTX@mensaje+1
  4288  0FFA  120A  158A  2190  120A  158A  	fcall	_envioTX
  4289  0FFF                     l389:	
  4290  0FFF  0008               	return
  4291  1000                     __end_of_agregarModificarPrecio:	
  4292                           
  4293                           	psect	text13
  4294  08E7                     __ptext13:	
  4295 ;; *************** function _eeprom_write *****************
  4296 ;; Defined at:
  4297 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  addr            1    wreg     unsigned char 
  4300 ;;  value           1    0[BANK0 ] unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  addr            1    2[BANK0 ] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4312 ;;      Params:         0       1       0       0       0
  4313 ;;      Locals:         0       1       0       0       0
  4314 ;;      Temps:          0       1       0       0       0
  4315 ;;      Totals:         0       3       0       0       0
  4316 ;;Total ram usage:        3 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_escrituraDeCierre
  4323 ;;		_agregarModificarPrecio
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           
  4328                           ;psect for function _eeprom_write
  4329  08E7                     _eeprom_write:	
  4330                           
  4331                           ;incstack = 0
  4332                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4333                           ;eeprom_write@addr stored from wreg
  4334  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  4335  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  4336  08E9  00A2               	movwf	eeprom_write@addr
  4337  08EA                     l539:	
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.10
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  4339                           
  4340  08EA                     l540:	
  4341  08EA  1683               	bsf	3,5	;RP0=1, select bank3
  4342  08EB  1703               	bsf	3,6	;RP1=1, select bank3
  4343  08EC  188C               	btfsc	12,1	;volsfr
  4344  08ED  28EF               	goto	u3051
  4345  08EE  28F0               	goto	u3050
  4346  08EF                     u3051:	
  4347  08EF  28EA               	goto	l540
  4348  08F0                     u3050:	
  4349  08F0                     l2906:	
  4350  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  4351  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  4352  08F2  0822               	movf	eeprom_write@addr,w
  4353  08F3  1283               	bcf	3,5	;RP0=0, select bank2
  4354  08F4  1703               	bsf	3,6	;RP1=1, select bank2
  4355  08F5  008D               	movwf	13	;volatile
  4356  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  4357  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  4358  08F8  0820               	movf	eeprom_write@value,w
  4359  08F9  1283               	bcf	3,5	;RP0=0, select bank2
  4360  08FA  1703               	bsf	3,6	;RP1=1, select bank2
  4361  08FB  008C               	movwf	12	;volatile
  4362  08FC                     l2908:	
  4363  08FC  303F               	movlw	63
  4364  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  4365  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  4366  08FF  00A1               	movwf	??_eeprom_write
  4367  0900  0821               	movf	??_eeprom_write,w
  4368  0901  1683               	bsf	3,5	;RP0=1, select bank3
  4369  0902  1703               	bsf	3,6	;RP1=1, select bank3
  4370  0903  058C               	andwf	12,f	;volsfr
  4371  0904                     l2910:	
  4372  0904  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0905  1303               	bcf	3,6	;RP1=0, select bank0
  4374  0906  1003               	bcf	3,0	;volatile
  4375  0907                     l2912:	
  4376  0907  1F8B               	btfss	11,7	;volatile
  4377  0908  290A               	goto	u3061
  4378  0909  290B               	goto	u3060
  4379  090A                     u3061:	
  4380  090A  290C               	goto	l543
  4381  090B                     u3060:	
  4382  090B                     l2914:	
  4383  090B  1403               	bsf	3,0	;volatile
  4384  090C                     l543:	
  4385  090C  138B               	bcf	11,7	;volatile
  4386  090D  1683               	bsf	3,5	;RP0=1, select bank3
  4387  090E  1703               	bsf	3,6	;RP1=1, select bank3
  4388  090F  150C               	bsf	12,2	;volsfr
  4389  0910                     l2916:	
  4390  0910  3055               	movlw	85
  4391  0911  008D               	movwf	13	;volsfr
  4392  0912  30AA               	movlw	170
  4393  0913  008D               	movwf	13	;volsfr
  4394  0914                     l2918:	
  4395  0914  148C               	bsf	12,1	;volsfr
  4396  0915                     l2920:	
  4397  0915  110C               	bcf	12,2	;volsfr
  4398  0916                     l2922:	
  4399  0916  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0917  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0918  1C03               	btfss	3,0	;volatile
  4402  0919  291B               	goto	u3071
  4403  091A  291C               	goto	u3070
  4404  091B                     u3071:	
  4405  091B  291D               	goto	l546
  4406  091C                     u3070:	
  4407  091C                     l2924:	
  4408  091C  178B               	bsf	11,7	;volatile
  4409  091D                     l546:	
  4410  091D  0008               	return
  4411  091E                     __end_of_eeprom_write:	
  4412                           
  4413                           	psect	text14
  4414  0814                     __ptext14:	
  4415 ;; *************** function ___bmul *****************
  4416 ;; Defined at:
  4417 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  multiplier      1    wreg     unsigned char 
  4420 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4423 ;;  product         1    2[BANK0 ] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4433 ;;      Params:         0       1       0       0       0
  4434 ;;      Locals:         0       2       0       0       0
  4435 ;;      Temps:          0       1       0       0       0
  4436 ;;      Totals:         0       4       0       0       0
  4437 ;;Total ram usage:        4 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_lecturaEtiqueta
  4444 ;;		_agregarModificarPrecio
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function ___bmul
  4450  0814                     ___bmul:	
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4454                           ;___bmul@multiplier stored from wreg
  4455  0814  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0815  1303               	bcf	3,6	;RP1=0, select bank0
  4457  0816  00A3               	movwf	___bmul@multiplier
  4458  0817                     l2946:	
  4459  0817  01A2               	clrf	___bmul@product
  4460  0818                     l2948:	
  4461  0818  1C23               	btfss	___bmul@multiplier,0
  4462  0819  281B               	goto	u3111
  4463  081A  281C               	goto	u3110
  4464  081B                     u3111:	
  4465  081B  2820               	goto	l2952
  4466  081C                     u3110:	
  4467  081C                     l2950:	
  4468  081C  0820               	movf	___bmul@multiplicand,w
  4469  081D  00A1               	movwf	??___bmul
  4470  081E  0821               	movf	??___bmul,w
  4471  081F  07A2               	addwf	___bmul@product,f
  4472  0820                     l2952:	
  4473  0820  1003               	clrc
  4474  0821  0DA0               	rlf	___bmul@multiplicand,f
  4475  0822                     l2954:	
  4476  0822  1003               	clrc
  4477  0823  0CA3               	rrf	___bmul@multiplier,f
  4478  0824  0823               	movf	___bmul@multiplier,w
  4479  0825  1D03               	btfss	3,2
  4480  0826  2828               	goto	u3121
  4481  0827  2829               	goto	u3120
  4482  0828                     u3121:	
  4483  0828  2818               	goto	l2948
  4484  0829                     u3120:	
  4485  0829                     l2956:	
  4486  0829  0822               	movf	___bmul@product,w
  4487  082A                     l612:	
  4488  082A  0008               	return
  4489  082B                     __end_of___bmul:	
  4490                           
  4491                           	psect	text15
  4492  065D                     __ptext15:	
  4493 ;; *************** function _lecturaConsulta *****************
  4494 ;; Defined at:
  4495 ;;		line 147 in file "lectura.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  articulo        2   36[BANK1 ] unsigned short 
  4500 ;;  strLote        32    4[BANK1 ] unsigned char [32]
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         0       0      34       0       0
  4512 ;;      Temps:          0       0       4       0       0
  4513 ;;      Totals:         0       0      38       0       0
  4514 ;;Total ram usage:       38 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    4
  4517 ;; This function calls:
  4518 ;;		___wmul
  4519 ;;		_consultaPrecio
  4520 ;;		_envioTX
  4521 ;;		_sprintf
  4522 ;; This function is called by:
  4523 ;;		_lecturaComando
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _lecturaConsulta
  4529  065D                     _lecturaConsulta:	
  4530  065D                     l3202:	
  4531                           ;incstack = 0
  4532                           ; Regs used in _lecturaConsulta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4533                           
  4534                           
  4535                           ;lectura.c: 149:     if (codigoEntrada[1] == 0x0D || codigoEntrada[1] == 0x0A) {
  4536  065D  300D               	movlw	13
  4537  065E  1683               	bsf	3,5	;RP0=1, select bank1
  4538  065F  1303               	bcf	3,6	;RP1=0, select bank1
  4539  0660  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4540  0661  1903               	btfsc	3,2
  4541  0662  2E64               	goto	u3551
  4542  0663  2E65               	goto	u3550
  4543  0664                     u3551:	
  4544  0664  2E6B               	goto	l3206
  4545  0665                     u3550:	
  4546  0665                     l3204:	
  4547  0665  300A               	movlw	10
  4548  0666  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4549  0667  1D03               	btfss	3,2
  4550  0668  2E6A               	goto	u3561
  4551  0669  2E6B               	goto	u3560
  4552  066A                     u3561:	
  4553  066A  2E89               	goto	l3212
  4554  066B                     u3560:	
  4555  066B                     l3206:	
  4556                           
  4557                           ;lectura.c: 151:         if (cuenta != 0) {
  4558  066B  0870               	movf	_cuenta,w
  4559  066C  0471               	iorwf	_cuenta+1,w
  4560  066D  1903               	btfsc	3,2
  4561  066E  2E70               	goto	u3571
  4562  066F  2E71               	goto	u3570
  4563  0670                     u3571:	
  4564  0670  2E7D               	goto	l3210
  4565  0671                     u3570:	
  4566  0671                     l3208:	
  4567                           
  4568                           ;lectura.c: 152:             envioTX("Estado: Activo");
  4569  0671  3020               	movlw	low (STR_12| (0+32768))
  4570  0672  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0673  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0674  00A0               	movwf	envioTX@mensaje
  4573  0675  3085               	movlw	high (STR_12| (0+32768))
  4574  0676  00A1               	movwf	envioTX@mensaje+1
  4575  0677  120A  158A  2190  120A  118A  	fcall	_envioTX
  4576                           
  4577                           ;lectura.c: 153:         }
  4578  067C  2F42               	goto	l191
  4579  067D                     l3210:	
  4580                           
  4581                           ;lectura.c: 155:             envioTX("Estado: En espera");
  4582  067D  300E               	movlw	low (STR_13| (0+32768))
  4583  067E  1283               	bcf	3,5	;RP0=0, select bank0
  4584  067F  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0680  00A0               	movwf	envioTX@mensaje
  4586  0681  3085               	movlw	high (STR_13| (0+32768))
  4587  0682  00A1               	movwf	envioTX@mensaje+1
  4588  0683  120A  158A  2190  120A  118A  	fcall	_envioTX
  4589  0688  2F42               	goto	l191
  4590  0689                     l3212:	
  4591  0689  304C               	movlw	76
  4592  068A  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4593  068B  1D03               	btfss	3,2
  4594  068C  2E8E               	goto	u3581
  4595  068D  2E8F               	goto	u3580
  4596  068E                     u3581:	
  4597  068E  2ED4               	goto	l3216
  4598  068F                     u3580:	
  4599  068F                     l3214:	
  4600                           
  4601                           ;lectura.c: 160:         char strLote[32];;lectura.c: 162:         sprintf(strLote,"L:%u
      +                          ,N:%u,T:%u", nroLote, ventasLote, montosLote);
  4602  068F  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4603  0690  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0691  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0692  00B4               	movwf	sprintf@sp
  4606  0693  3000               	movlw	0
  4607  0694  00B5               	movwf	sprintf@sp+1
  4608  0695  3056               	movlw	low ((STR_16+8)| (0+32768))
  4609  0696  00B6               	movwf	sprintf@f
  4610  0697  3084               	movlw	high ((STR_16+8)| (0+32768))
  4611  0698  00B7               	movwf	sprintf@f+1
  4612  0699  0878               	movf	_nroLote,w
  4613  069A  1683               	bsf	3,5	;RP0=1, select bank1
  4614  069B  1303               	bcf	3,6	;RP1=0, select bank1
  4615  069C  00A0               	movwf	??_lecturaConsulta^(0+128)
  4616  069D  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4617  069E  0820               	movf	??_lecturaConsulta^(0+128),w
  4618  069F  1283               	bcf	3,5	;RP0=0, select bank0
  4619  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  4620  06A1  00B8               	movwf	?_sprintf+4
  4621  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  4622  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  4623  06A4  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4624  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  4625  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  4626  06A7  00B9               	movwf	?_sprintf+5
  4627  06A8  086E               	movf	_ventasLote,w
  4628  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  4629  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  4630  06AB  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4631  06AC  01A3               	clrf	((??_lecturaConsulta+2)^(0+128)+1)
  4632  06AD  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4633  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  4634  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  4635  06B0  00BA               	movwf	?_sprintf+6
  4636  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  4637  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  4638  06B3  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4639  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  4640  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  4641  06B6  00BB               	movwf	?_sprintf+7
  4642  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  4643  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  4644  06B9  085B               	movf	(_montosLote+1)^(0+128),w
  4645  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  4646  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  4647  06BC  00BD               	movwf	?_sprintf+9
  4648  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  4649  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  4650  06BF  085A               	movf	_montosLote^(0+128),w
  4651  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  4652  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  4653  06C2  00BC               	movwf	?_sprintf+8
  4654  06C3  120A  118A  224B  120A  118A  	fcall	_sprintf
  4655                           
  4656                           ;lectura.c: 163:         envioTX(strLote);
  4657  06C8  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4658  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  4659  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  4660  06CB  00A0               	movwf	envioTX@mensaje
  4661  06CC  3000               	movlw	0
  4662  06CD  00A1               	movwf	envioTX@mensaje+1
  4663  06CE  120A  158A  2190  120A  118A  	fcall	_envioTX
  4664                           
  4665                           ;lectura.c: 165:     }
  4666  06D3  2F42               	goto	l191
  4667  06D4                     l3216:	
  4668  06D4  3056               	movlw	86
  4669  06D5  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4670  06D6  1D03               	btfss	3,2
  4671  06D7  2ED9               	goto	u3591
  4672  06D8  2EDA               	goto	u3590
  4673  06D9                     u3591:	
  4674  06D9  2EDF               	goto	l3220
  4675  06DA                     u3590:	
  4676  06DA                     l3218:	
  4677                           
  4678                           ;lectura.c: 169:         pedidoVoltaje = 1;
  4679  06DA  1683               	bsf	3,5	;RP0=1, select bank3
  4680  06DB  1703               	bsf	3,6	;RP1=1, select bank3
  4681  06DC  01D6               	clrf	_pedidoVoltaje^(0+384)
  4682  06DD  0AD6               	incf	_pedidoVoltaje^(0+384),f
  4683                           
  4684                           ;lectura.c: 170:     }
  4685  06DE  2F42               	goto	l191
  4686  06DF                     l3220:	
  4687  06DF  303A               	movlw	58
  4688  06E0  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4689  06E1  1803               	skipnc
  4690  06E2  2EE4               	goto	u3601
  4691  06E3  2EE5               	goto	u3600
  4692  06E4                     u3601:	
  4693  06E4  2F37               	goto	l3232
  4694  06E5                     u3600:	
  4695  06E5                     l3222:	
  4696  06E5  3030               	movlw	48
  4697  06E6  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4698  06E7  1C03               	skipc
  4699  06E8  2EEA               	goto	u3611
  4700  06E9  2EEB               	goto	u3610
  4701  06EA                     u3611:	
  4702  06EA  2F37               	goto	l3232
  4703  06EB                     u3610:	
  4704  06EB                     l3224:	
  4705  06EB  303A               	movlw	58
  4706  06EC  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4707  06ED  1803               	skipnc
  4708  06EE  2EF0               	goto	u3621
  4709  06EF  2EF1               	goto	u3620
  4710  06F0                     u3621:	
  4711  06F0  2F37               	goto	l3232
  4712  06F1                     u3620:	
  4713  06F1                     l3226:	
  4714  06F1  3030               	movlw	48
  4715  06F2  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4716  06F3  1C03               	skipc
  4717  06F4  2EF6               	goto	u3631
  4718  06F5  2EF7               	goto	u3630
  4719  06F6                     u3631:	
  4720  06F6  2F37               	goto	l3232
  4721  06F7                     u3630:	
  4722  06F7                     l3228:	
  4723                           
  4724                           ;lectura.c: 174:         unsigned short int articulo = 10*(codigoEntrada[1] - '0') + (co
      +                          digoEntrada[2] - '0');
  4725  06F7  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4726  06F8  00A0               	movwf	??_lecturaConsulta^(0+128)
  4727  06F9  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4728  06FA  0820               	movf	??_lecturaConsulta^(0+128),w
  4729  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  4730  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  4731  06FD  00A0               	movwf	___wmul@multiplier
  4732  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  4733  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  4734  0700  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4735  0701  1283               	bcf	3,5	;RP0=0, select bank0
  4736  0702  1303               	bcf	3,6	;RP1=0, select bank0
  4737  0703  00A1               	movwf	___wmul@multiplier+1
  4738  0704  300A               	movlw	10
  4739  0705  00A2               	movwf	___wmul@multiplicand
  4740  0706  3000               	movlw	0
  4741  0707  00A3               	movwf	___wmul@multiplicand+1
  4742  0708  120A  158A  208B  120A  118A  	fcall	___wmul
  4743  070D  1683               	bsf	3,5	;RP0=1, select bank1
  4744  070E  1303               	bcf	3,6	;RP1=0, select bank1
  4745  070F  0862               	movf	(_codigoEntrada^(0+128)+2),w
  4746  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4747  0711  1303               	bcf	3,6	;RP1=0, select bank0
  4748  0712  0720               	addwf	?___wmul,w
  4749  0713  1683               	bsf	3,5	;RP0=1, select bank1
  4750  0714  1303               	bcf	3,6	;RP1=0, select bank1
  4751  0715  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4752  0716  3000               	movlw	0
  4753  0717  1803               	skipnc
  4754  0718  3001               	movlw	1
  4755  0719  1283               	bcf	3,5	;RP0=0, select bank0
  4756  071A  1303               	bcf	3,6	;RP1=0, select bank0
  4757  071B  0721               	addwf	?___wmul+1,w
  4758  071C  1683               	bsf	3,5	;RP0=1, select bank1
  4759  071D  1303               	bcf	3,6	;RP1=0, select bank1
  4760  071E  00A3               	movwf	(??_lecturaConsulta+3)^(0+128)
  4761  071F  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4762  0720  3EF0               	addlw	240
  4763  0721  00C4               	movwf	lecturaConsulta@articulo^(0+128)
  4764  0722  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4765  0723  1803               	skipnc
  4766  0724  3E01               	addlw	1
  4767  0725  3EFD               	addlw	253
  4768  0726  00C5               	movwf	(lecturaConsulta@articulo+1)^(0+128)
  4769  0727                     l3230:	
  4770                           
  4771                           ;lectura.c: 176:         consultaPrecio(articulo);
  4772  0727  0845               	movf	(lecturaConsulta@articulo+1)^(0+128),w
  4773  0728  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0729  1303               	bcf	3,6	;RP1=0, select bank0
  4775  072A  00CB               	movwf	consultaPrecio@articulo+1
  4776  072B  1683               	bsf	3,5	;RP0=1, select bank1
  4777  072C  1303               	bcf	3,6	;RP1=0, select bank1
  4778  072D  0844               	movf	lecturaConsulta@articulo^(0+128),w
  4779  072E  1283               	bcf	3,5	;RP0=0, select bank0
  4780  072F  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0730  00CA               	movwf	consultaPrecio@articulo
  4782  0731  120A  158A  2664  120A  118A  	fcall	_consultaPrecio
  4783                           
  4784                           ;lectura.c: 178:     }
  4785  0736  2F42               	goto	l191
  4786  0737                     l3232:	
  4787                           
  4788                           ;lectura.c: 181:         envioTX("Ocurrio un error en la interpretacion.\n");
  4789  0737  3026               	movlw	low (STR_6| (0+32768))
  4790  0738  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0739  1303               	bcf	3,6	;RP1=0, select bank0
  4792  073A  00A0               	movwf	envioTX@mensaje
  4793  073B  3084               	movlw	high (STR_6| (0+32768))
  4794  073C  00A1               	movwf	envioTX@mensaje+1
  4795  073D  120A  158A  2190  120A  118A  	fcall	_envioTX
  4796  0742                     l191:	
  4797  0742  0008               	return
  4798  0743                     __end_of_lecturaConsulta:	
  4799                           
  4800                           	psect	text16
  4801  0E64                     __ptext16:	
  4802 ;; *************** function _consultaPrecio *****************
  4803 ;; Defined at:
  4804 ;;		line 125 in file "lectura.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  articulo        2   42[BANK0 ] short 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  precio          2   74[BANK0 ] short 
  4809 ;;  mensaje        26   48[BANK0 ] unsigned char [26]
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       2       0       0       0
  4820 ;;      Locals:         0      28       0       0       0
  4821 ;;      Temps:          0       4       0       0       0
  4822 ;;      Totals:         0      34       0       0       0
  4823 ;;Total ram usage:       34 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    3
  4826 ;; This function calls:
  4827 ;;		___awdiv
  4828 ;;		___awmod
  4829 ;;		_eeprom_read
  4830 ;;		_envioTX
  4831 ;;		_sprintf
  4832 ;; This function is called by:
  4833 ;;		_lecturaConsulta
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           
  4838                           ;psect for function _consultaPrecio
  4839  0E64                     _consultaPrecio:	
  4840  0E64                     l3122:	
  4841                           ;incstack = 0
  4842                           ; Regs used in _consultaPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4843                           
  4844                           
  4845                           ;lectura.c: 126:     char mensaje[26];;lectura.c: 127:     if(articulo > 0){
  4846  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  4847  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  4848  0E66  084B               	movf	consultaPrecio@articulo+1,w
  4849  0E67  3A80               	xorlw	128
  4850  0E68  00FF               	movwf	btemp+1
  4851  0E69  3080               	movlw	128
  4852  0E6A  027F               	subwf	btemp+1,w
  4853  0E6B  1D03               	skipz
  4854  0E6C  2E6F               	goto	u3425
  4855  0E6D  3001               	movlw	1
  4856  0E6E  024A               	subwf	consultaPrecio@articulo,w
  4857  0E6F                     u3425:	
  4858  0E6F  1C03               	skipc
  4859  0E70  2E72               	goto	u3421
  4860  0E71  2E73               	goto	u3420
  4861  0E72                     u3421:	
  4862  0E72  2F22               	goto	l3136
  4863  0E73                     u3420:	
  4864  0E73                     l3124:	
  4865                           
  4866                           ;lectura.c: 128:         articulo--;
  4867  0E73  30FF               	movlw	255
  4868  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  4870  0E76  07CA               	addwf	consultaPrecio@articulo,f
  4871  0E77  1803               	skipnc
  4872  0E78  0ACB               	incf	consultaPrecio@articulo+1,f
  4873  0E79  30FF               	movlw	255
  4874  0E7A  07CB               	addwf	consultaPrecio@articulo+1,f
  4875                           
  4876                           ;lectura.c: 129:         articulo = articulo * 2;
  4877  0E7B  1003               	clrc
  4878  0E7C  0D4A               	rlf	consultaPrecio@articulo,w
  4879  0E7D  00CA               	movwf	consultaPrecio@articulo
  4880  0E7E  0D4B               	rlf	consultaPrecio@articulo+1,w
  4881  0E7F  00CB               	movwf	consultaPrecio@articulo+1
  4882  0E80                     l3126:	
  4883                           
  4884                           ;lectura.c: 130:         short int precio = (eeprom_read(articulo) << 8) | (eeprom_read(
      +                          articulo+1));
  4885  0E80  084A               	movf	consultaPrecio@articulo,w
  4886  0E81  3E01               	addlw	1
  4887  0E82  120A  158A  202B  120A  158A  	fcall	_eeprom_read
  4888  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  4889  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  4890  0E89  00CC               	movwf	??_consultaPrecio
  4891  0E8A  01CD               	clrf	??_consultaPrecio+1
  4892  0E8B  084A               	movf	consultaPrecio@articulo,w
  4893  0E8C  120A  158A  202B  120A  158A  	fcall	_eeprom_read
  4894  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0E93  00CE               	movwf	??_consultaPrecio+2
  4897  0E94  01CF               	clrf	??_consultaPrecio+3
  4898  0E95  084E               	movf	??_consultaPrecio+2,w
  4899  0E96  00CF               	movwf	??_consultaPrecio+3
  4900  0E97  01CE               	clrf	??_consultaPrecio+2
  4901  0E98  084C               	movf	??_consultaPrecio,w
  4902  0E99  044E               	iorwf	??_consultaPrecio+2,w
  4903  0E9A  00EA               	movwf	consultaPrecio@precio
  4904  0E9B  084D               	movf	??_consultaPrecio+1,w
  4905  0E9C  044F               	iorwf	??_consultaPrecio+3,w
  4906  0E9D  00EB               	movwf	consultaPrecio@precio+1
  4907  0E9E                     l3128:	
  4908                           
  4909                           ;lectura.c: 132:         if (precio > 999 || precio < 0) {
  4910  0E9E  086B               	movf	consultaPrecio@precio+1,w
  4911  0E9F  3A80               	xorlw	128
  4912  0EA0  00FF               	movwf	btemp+1
  4913  0EA1  3083               	movlw	131
  4914  0EA2  027F               	subwf	btemp+1,w
  4915  0EA3  1D03               	skipz
  4916  0EA4  2EA7               	goto	u3435
  4917  0EA5  30E8               	movlw	232
  4918  0EA6  026A               	subwf	consultaPrecio@precio,w
  4919  0EA7                     u3435:	
  4920  0EA7  1803               	skipnc
  4921  0EA8  2EAA               	goto	u3431
  4922  0EA9  2EAB               	goto	u3430
  4923  0EAA                     u3431:	
  4924  0EAA  2EB1               	goto	l3132
  4925  0EAB                     u3430:	
  4926  0EAB                     l3130:	
  4927  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4928  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0EAD  1FEB               	btfss	consultaPrecio@precio+1,7
  4930  0EAE  2EB0               	goto	u3441
  4931  0EAF  2EB1               	goto	u3440
  4932  0EB0                     u3441:	
  4933  0EB0  2ECC               	goto	l3134
  4934  0EB1                     u3440:	
  4935  0EB1                     l3132:	
  4936                           
  4937                           ;lectura.c: 133:             sprintf(mensaje, "Producto no encontrado");
  4938  0EB1  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4939  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0EB4  00B4               	movwf	sprintf@sp
  4942  0EB5  3000               	movlw	0
  4943  0EB6  00B5               	movwf	sprintf@sp+1
  4944  0EB7  3065               	movlw	low (STR_9| (0+32768))
  4945  0EB8  00B6               	movwf	sprintf@f
  4946  0EB9  3084               	movlw	high (STR_9| (0+32768))
  4947  0EBA  00B7               	movwf	sprintf@f+1
  4948  0EBB  120A  118A  224B  120A  158A  	fcall	_sprintf
  4949                           
  4950                           ;lectura.c: 134:             envioTX(mensaje);
  4951  0EC0  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4952  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  4953  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  4954  0EC3  00A0               	movwf	envioTX@mensaje
  4955  0EC4  3000               	movlw	0
  4956  0EC5  00A1               	movwf	envioTX@mensaje+1
  4957  0EC6  120A  158A  2190  120A  158A  	fcall	_envioTX
  4958                           
  4959                           ;lectura.c: 135:         }
  4960  0ECB  2F2D               	goto	l176
  4961  0ECC                     l3134:	
  4962                           
  4963                           ;lectura.c: 137:             sprintf(mensaje, "TP: %d P: %d,%d Euros", articulo/2 + 1, p
      +                          recio/10, precio%10);
  4964  0ECC  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4965  0ECD  00B4               	movwf	sprintf@sp
  4966  0ECE  3000               	movlw	0
  4967  0ECF  00B5               	movwf	sprintf@sp+1
  4968  0ED0  30A9               	movlw	low (STR_10| (0+32768))
  4969  0ED1  00B6               	movwf	sprintf@f
  4970  0ED2  3084               	movlw	high (STR_10| (0+32768))
  4971  0ED3  00B7               	movwf	sprintf@f+1
  4972  0ED4  3002               	movlw	2
  4973  0ED5  00A0               	movwf	___awdiv@divisor
  4974  0ED6  3000               	movlw	0
  4975  0ED7  00A1               	movwf	___awdiv@divisor+1
  4976  0ED8  084B               	movf	consultaPrecio@articulo+1,w
  4977  0ED9  00A3               	movwf	___awdiv@dividend+1
  4978  0EDA  084A               	movf	consultaPrecio@articulo,w
  4979  0EDB  00A2               	movwf	___awdiv@dividend
  4980  0EDC  120A  158A  251E  120A  158A  	fcall	___awdiv
  4981  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4982  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4983  0EE3  0820               	movf	?___awdiv,w
  4984  0EE4  3E01               	addlw	1
  4985  0EE5  00B8               	movwf	?_sprintf+4
  4986  0EE6  0821               	movf	?___awdiv+1,w
  4987  0EE7  1803               	skipnc
  4988  0EE8  3E01               	addlw	1
  4989  0EE9  3E00               	addlw	0
  4990  0EEA  00B9               	movwf	?_sprintf+5
  4991  0EEB  300A               	movlw	10
  4992  0EEC  00A0               	movwf	___awdiv@divisor
  4993  0EED  3000               	movlw	0
  4994  0EEE  00A1               	movwf	___awdiv@divisor+1
  4995  0EEF  086B               	movf	consultaPrecio@precio+1,w
  4996  0EF0  00A3               	movwf	___awdiv@dividend+1
  4997  0EF1  086A               	movf	consultaPrecio@precio,w
  4998  0EF2  00A2               	movwf	___awdiv@dividend
  4999  0EF3  120A  158A  251E  120A  158A  	fcall	___awdiv
  5000  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  5001  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  5002  0EFA  0821               	movf	?___awdiv+1,w
  5003  0EFB  00BB               	movwf	?_sprintf+7
  5004  0EFC  0820               	movf	?___awdiv,w
  5005  0EFD  00BA               	movwf	?_sprintf+6
  5006  0EFE  300A               	movlw	10
  5007  0EFF  00A0               	movwf	___awmod@divisor
  5008  0F00  3000               	movlw	0
  5009  0F01  00A1               	movwf	___awmod@divisor+1
  5010  0F02  086B               	movf	consultaPrecio@precio+1,w
  5011  0F03  00A3               	movwf	___awmod@dividend+1
  5012  0F04  086A               	movf	consultaPrecio@precio,w
  5013  0F05  00A2               	movwf	___awmod@dividend
  5014  0F06  120A  158A  22D9  120A  158A  	fcall	___awmod
  5015  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  5016  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  5017  0F0D  0821               	movf	?___awmod+1,w
  5018  0F0E  00BD               	movwf	?_sprintf+9
  5019  0F0F  0820               	movf	?___awmod,w
  5020  0F10  00BC               	movwf	?_sprintf+8
  5021  0F11  120A  118A  224B  120A  158A  	fcall	_sprintf
  5022                           
  5023                           ;lectura.c: 138:             envioTX(mensaje);
  5024  0F16  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  5025  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0F19  00A0               	movwf	envioTX@mensaje
  5028  0F1A  3000               	movlw	0
  5029  0F1B  00A1               	movwf	envioTX@mensaje+1
  5030  0F1C  120A  158A  2190  120A  158A  	fcall	_envioTX
  5031  0F21  2F2D               	goto	l176
  5032  0F22                     l3136:	
  5033                           
  5034                           ;lectura.c: 142:         envioTX("No existe producto 00");
  5035  0F22  3093               	movlw	low (STR_11| (0+32768))
  5036  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0F25  00A0               	movwf	envioTX@mensaje
  5039  0F26  3084               	movlw	high (STR_11| (0+32768))
  5040  0F27  00A1               	movwf	envioTX@mensaje+1
  5041  0F28  120A  158A  2190  120A  158A  	fcall	_envioTX
  5042  0F2D                     l176:	
  5043  0F2D  0008               	return
  5044  0F2E                     __end_of_consultaPrecio:	
  5045                           
  5046                           	psect	text17
  5047  082B                     __ptext17:	
  5048 ;; *************** function _eeprom_read *****************
  5049 ;; Defined at:
  5050 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  addr            1    wreg     unsigned char 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  addr            1    1[BANK0 ] unsigned char 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      unsigned char 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         0       0       0       0       0
  5065 ;;      Locals:         0       1       0       0       0
  5066 ;;      Temps:          0       1       0       0       0
  5067 ;;      Totals:         0       2       0       0       0
  5068 ;;Total ram usage:        2 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    1
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_EEPROM_search
  5075 ;;		_consultaPrecio
  5076 ;;		_main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function _eeprom_read
  5082  082B                     _eeprom_read:	
  5083                           
  5084                           ;incstack = 0
  5085                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5086                           ;eeprom_read@addr stored from wreg
  5087  082B  1283               	bcf	3,5	;RP0=0, select bank0
  5088  082C  1303               	bcf	3,6	;RP1=0, select bank0
  5089  082D  00A1               	movwf	eeprom_read@addr
  5090  082E                     l520:	
  5091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  5092                           
  5093  082E  0064               	clrwdt	;# 
  5094  082F  1683               	bsf	3,5	;RP0=1, select bank3
  5095  0830  1703               	bsf	3,6	;RP1=1, select bank3
  5096  0831  188C               	btfsc	12,1	;volsfr
  5097  0832  2834               	goto	u3081
  5098  0833  2837               	goto	u3080
  5099  0834                     u3081:	
  5100  0834  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0835  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0836  282E               	goto	l520
  5103  0837                     u3080:	
  5104  0837                     l2926:	
  5105                           
  5106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  5107  0837  1283               	bcf	3,5	;RP0=0, select bank0
  5108  0838  1303               	bcf	3,6	;RP1=0, select bank0
  5109  0839  0821               	movf	eeprom_read@addr,w
  5110  083A  1283               	bcf	3,5	;RP0=0, select bank2
  5111  083B  1703               	bsf	3,6	;RP1=1, select bank2
  5112  083C  008D               	movwf	13	;volatile
  5113  083D  303F               	movlw	63
  5114  083E  1283               	bcf	3,5	;RP0=0, select bank0
  5115  083F  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0840  00A0               	movwf	??_eeprom_read
  5117  0841  0820               	movf	??_eeprom_read,w
  5118  0842  1683               	bsf	3,5	;RP0=1, select bank3
  5119  0843  1703               	bsf	3,6	;RP1=1, select bank3
  5120  0844  058C               	andwf	12,f	;volsfr
  5121  0845  140C               	bsf	12,0	;volsfr
  5122  0846  1283               	bcf	3,5	;RP0=0, select bank2
  5123  0847  1703               	bsf	3,6	;RP1=1, select bank2
  5124  0848  080C               	movf	12,w	;volatile
  5125  0849                     l522:	
  5126  0849  0008               	return
  5127  084A                     __end_of_eeprom_read:	
  5128                           
  5129                           	psect	text18
  5130  0AD9                     __ptext18:	
  5131 ;; *************** function ___awmod *****************
  5132 ;; Defined at:
  5133 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  divisor         2    0[BANK0 ] int 
  5136 ;;  dividend        2    2[BANK0 ] int 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  sign            1    6[BANK0 ] unsigned char 
  5139 ;;  counter         1    5[BANK0 ] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  2    0[BANK0 ] int 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5149 ;;      Params:         0       4       0       0       0
  5150 ;;      Locals:         0       2       0       0       0
  5151 ;;      Temps:          0       1       0       0       0
  5152 ;;      Totals:         0       7       0       0       0
  5153 ;;Total ram usage:        7 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    1
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_lecturaEtiqueta
  5160 ;;		_consultaPrecio
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function ___awmod
  5166  0AD9                     ___awmod:	
  5167  0AD9                     l3004:	
  5168                           ;incstack = 0
  5169                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5170                           
  5171  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0ADB  01A6               	clrf	___awmod@sign
  5174  0ADC                     l3006:	
  5175  0ADC  1FA3               	btfss	___awmod@dividend+1,7
  5176  0ADD  2ADF               	goto	u3231
  5177  0ADE  2AE0               	goto	u3230
  5178  0ADF                     u3231:	
  5179  0ADF  2AE7               	goto	l3012
  5180  0AE0                     u3230:	
  5181  0AE0                     l3008:	
  5182  0AE0  09A2               	comf	___awmod@dividend,f
  5183  0AE1  09A3               	comf	___awmod@dividend+1,f
  5184  0AE2  0AA2               	incf	___awmod@dividend,f
  5185  0AE3  1903               	skipnz
  5186  0AE4  0AA3               	incf	___awmod@dividend+1,f
  5187  0AE5                     l3010:	
  5188  0AE5  01A6               	clrf	___awmod@sign
  5189  0AE6  0AA6               	incf	___awmod@sign,f
  5190  0AE7                     l3012:	
  5191  0AE7  1FA1               	btfss	___awmod@divisor+1,7
  5192  0AE8  2AEA               	goto	u3241
  5193  0AE9  2AEB               	goto	u3240
  5194  0AEA                     u3241:	
  5195  0AEA  2AF0               	goto	l3016
  5196  0AEB                     u3240:	
  5197  0AEB                     l3014:	
  5198  0AEB  09A0               	comf	___awmod@divisor,f
  5199  0AEC  09A1               	comf	___awmod@divisor+1,f
  5200  0AED  0AA0               	incf	___awmod@divisor,f
  5201  0AEE  1903               	skipnz
  5202  0AEF  0AA1               	incf	___awmod@divisor+1,f
  5203  0AF0                     l3016:	
  5204  0AF0  0820               	movf	___awmod@divisor,w
  5205  0AF1  0421               	iorwf	___awmod@divisor+1,w
  5206  0AF2  1903               	btfsc	3,2
  5207  0AF3  2AF5               	goto	u3251
  5208  0AF4  2AF6               	goto	u3250
  5209  0AF5                     u3251:	
  5210  0AF5  2B25               	goto	l3034
  5211  0AF6                     u3250:	
  5212  0AF6                     l3018:	
  5213  0AF6  01A5               	clrf	___awmod@counter
  5214  0AF7  0AA5               	incf	___awmod@counter,f
  5215  0AF8  2B04               	goto	l3024
  5216  0AF9                     l3020:	
  5217  0AF9  3001               	movlw	1
  5218  0AFA                     u3265:	
  5219  0AFA  1003               	clrc
  5220  0AFB  0DA0               	rlf	___awmod@divisor,f
  5221  0AFC  0DA1               	rlf	___awmod@divisor+1,f
  5222  0AFD  3EFF               	addlw	-1
  5223  0AFE  1D03               	skipz
  5224  0AFF  2AFA               	goto	u3265
  5225  0B00                     l3022:	
  5226  0B00  3001               	movlw	1
  5227  0B01  00A4               	movwf	??___awmod
  5228  0B02  0824               	movf	??___awmod,w
  5229  0B03  07A5               	addwf	___awmod@counter,f
  5230  0B04                     l3024:	
  5231  0B04  1FA1               	btfss	___awmod@divisor+1,7
  5232  0B05  2B07               	goto	u3271
  5233  0B06  2B08               	goto	u3270
  5234  0B07                     u3271:	
  5235  0B07  2AF9               	goto	l3020
  5236  0B08                     u3270:	
  5237  0B08                     l3026:	
  5238  0B08  0821               	movf	___awmod@divisor+1,w
  5239  0B09  0223               	subwf	___awmod@dividend+1,w
  5240  0B0A  1D03               	skipz
  5241  0B0B  2B0E               	goto	u3285
  5242  0B0C  0820               	movf	___awmod@divisor,w
  5243  0B0D  0222               	subwf	___awmod@dividend,w
  5244  0B0E                     u3285:	
  5245  0B0E  1C03               	skipc
  5246  0B0F  2B11               	goto	u3281
  5247  0B10  2B12               	goto	u3280
  5248  0B11                     u3281:	
  5249  0B11  2B18               	goto	l3030
  5250  0B12                     u3280:	
  5251  0B12                     l3028:	
  5252  0B12  0820               	movf	___awmod@divisor,w
  5253  0B13  02A2               	subwf	___awmod@dividend,f
  5254  0B14  0821               	movf	___awmod@divisor+1,w
  5255  0B15  1C03               	skipc
  5256  0B16  03A3               	decf	___awmod@dividend+1,f
  5257  0B17  02A3               	subwf	___awmod@dividend+1,f
  5258  0B18                     l3030:	
  5259  0B18  3001               	movlw	1
  5260  0B19                     u3295:	
  5261  0B19  1003               	clrc
  5262  0B1A  0CA1               	rrf	___awmod@divisor+1,f
  5263  0B1B  0CA0               	rrf	___awmod@divisor,f
  5264  0B1C  3EFF               	addlw	-1
  5265  0B1D  1D03               	skipz
  5266  0B1E  2B19               	goto	u3295
  5267  0B1F                     l3032:	
  5268  0B1F  3001               	movlw	1
  5269  0B20  02A5               	subwf	___awmod@counter,f
  5270  0B21  1D03               	btfss	3,2
  5271  0B22  2B24               	goto	u3301
  5272  0B23  2B25               	goto	u3300
  5273  0B24                     u3301:	
  5274  0B24  2B08               	goto	l3026
  5275  0B25                     u3300:	
  5276  0B25                     l3034:	
  5277  0B25  0826               	movf	___awmod@sign,w
  5278  0B26  1903               	btfsc	3,2
  5279  0B27  2B29               	goto	u3311
  5280  0B28  2B2A               	goto	u3310
  5281  0B29                     u3311:	
  5282  0B29  2B2F               	goto	l3038
  5283  0B2A                     u3310:	
  5284  0B2A                     l3036:	
  5285  0B2A  09A2               	comf	___awmod@dividend,f
  5286  0B2B  09A3               	comf	___awmod@dividend+1,f
  5287  0B2C  0AA2               	incf	___awmod@dividend,f
  5288  0B2D  1903               	skipnz
  5289  0B2E  0AA3               	incf	___awmod@dividend+1,f
  5290  0B2F                     l3038:	
  5291  0B2F  0823               	movf	___awmod@dividend+1,w
  5292  0B30  00A1               	movwf	?___awmod+1
  5293  0B31  0822               	movf	___awmod@dividend,w
  5294  0B32  00A0               	movwf	?___awmod
  5295  0B33                     l752:	
  5296  0B33  0008               	return
  5297  0B34                     __end_of___awmod:	
  5298                           
  5299                           	psect	text19
  5300  0D1E                     __ptext19:	
  5301 ;; *************** function ___awdiv *****************
  5302 ;; Defined at:
  5303 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  divisor         2    0[BANK0 ] int 
  5306 ;;  dividend        2    2[BANK0 ] int 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  quotient        2    7[BANK0 ] int 
  5309 ;;  sign            1    6[BANK0 ] unsigned char 
  5310 ;;  counter         1    5[BANK0 ] unsigned char 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  2    0[BANK0 ] int 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5320 ;;      Params:         0       4       0       0       0
  5321 ;;      Locals:         0       4       0       0       0
  5322 ;;      Temps:          0       1       0       0       0
  5323 ;;      Totals:         0       9       0       0       0
  5324 ;;Total ram usage:        9 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    1
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_EEPROM_search
  5331 ;;		_consultaPrecio
  5332 ;;		_agregarModificarPrecio
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function ___awdiv
  5338  0D1E                     ___awdiv:	
  5339  0D1E                     l2960:	
  5340                           ;incstack = 0
  5341                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5342                           
  5343  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  5344  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  5345  0D20  01A6               	clrf	___awdiv@sign
  5346  0D21                     l2962:	
  5347  0D21  1FA1               	btfss	___awdiv@divisor+1,7
  5348  0D22  2D24               	goto	u3131
  5349  0D23  2D25               	goto	u3130
  5350  0D24                     u3131:	
  5351  0D24  2D2C               	goto	l2968
  5352  0D25                     u3130:	
  5353  0D25                     l2964:	
  5354  0D25  09A0               	comf	___awdiv@divisor,f
  5355  0D26  09A1               	comf	___awdiv@divisor+1,f
  5356  0D27  0AA0               	incf	___awdiv@divisor,f
  5357  0D28  1903               	skipnz
  5358  0D29  0AA1               	incf	___awdiv@divisor+1,f
  5359  0D2A                     l2966:	
  5360  0D2A  01A6               	clrf	___awdiv@sign
  5361  0D2B  0AA6               	incf	___awdiv@sign,f
  5362  0D2C                     l2968:	
  5363  0D2C  1FA3               	btfss	___awdiv@dividend+1,7
  5364  0D2D  2D2F               	goto	u3141
  5365  0D2E  2D30               	goto	u3140
  5366  0D2F                     u3141:	
  5367  0D2F  2D39               	goto	l2974
  5368  0D30                     u3140:	
  5369  0D30                     l2970:	
  5370  0D30  09A2               	comf	___awdiv@dividend,f
  5371  0D31  09A3               	comf	___awdiv@dividend+1,f
  5372  0D32  0AA2               	incf	___awdiv@dividend,f
  5373  0D33  1903               	skipnz
  5374  0D34  0AA3               	incf	___awdiv@dividend+1,f
  5375  0D35                     l2972:	
  5376  0D35  3001               	movlw	1
  5377  0D36  00A4               	movwf	??___awdiv
  5378  0D37  0824               	movf	??___awdiv,w
  5379  0D38  06A6               	xorwf	___awdiv@sign,f
  5380  0D39                     l2974:	
  5381  0D39  01A7               	clrf	___awdiv@quotient
  5382  0D3A  01A8               	clrf	___awdiv@quotient+1
  5383  0D3B                     l2976:	
  5384  0D3B  0820               	movf	___awdiv@divisor,w
  5385  0D3C  0421               	iorwf	___awdiv@divisor+1,w
  5386  0D3D  1903               	btfsc	3,2
  5387  0D3E  2D40               	goto	u3151
  5388  0D3F  2D41               	goto	u3150
  5389  0D40                     u3151:	
  5390  0D40  2D78               	goto	l2996
  5391  0D41                     u3150:	
  5392  0D41                     l2978:	
  5393  0D41  01A5               	clrf	___awdiv@counter
  5394  0D42  0AA5               	incf	___awdiv@counter,f
  5395  0D43  2D4F               	goto	l2984
  5396  0D44                     l2980:	
  5397  0D44  3001               	movlw	1
  5398  0D45                     u3165:	
  5399  0D45  1003               	clrc
  5400  0D46  0DA0               	rlf	___awdiv@divisor,f
  5401  0D47  0DA1               	rlf	___awdiv@divisor+1,f
  5402  0D48  3EFF               	addlw	-1
  5403  0D49  1D03               	skipz
  5404  0D4A  2D45               	goto	u3165
  5405  0D4B                     l2982:	
  5406  0D4B  3001               	movlw	1
  5407  0D4C  00A4               	movwf	??___awdiv
  5408  0D4D  0824               	movf	??___awdiv,w
  5409  0D4E  07A5               	addwf	___awdiv@counter,f
  5410  0D4F                     l2984:	
  5411  0D4F  1FA1               	btfss	___awdiv@divisor+1,7
  5412  0D50  2D52               	goto	u3171
  5413  0D51  2D53               	goto	u3170
  5414  0D52                     u3171:	
  5415  0D52  2D44               	goto	l2980
  5416  0D53                     u3170:	
  5417  0D53                     l2986:	
  5418  0D53  3001               	movlw	1
  5419  0D54                     u3185:	
  5420  0D54  1003               	clrc
  5421  0D55  0DA7               	rlf	___awdiv@quotient,f
  5422  0D56  0DA8               	rlf	___awdiv@quotient+1,f
  5423  0D57  3EFF               	addlw	-1
  5424  0D58  1D03               	skipz
  5425  0D59  2D54               	goto	u3185
  5426  0D5A  0821               	movf	___awdiv@divisor+1,w
  5427  0D5B  0223               	subwf	___awdiv@dividend+1,w
  5428  0D5C  1D03               	skipz
  5429  0D5D  2D60               	goto	u3195
  5430  0D5E  0820               	movf	___awdiv@divisor,w
  5431  0D5F  0222               	subwf	___awdiv@dividend,w
  5432  0D60                     u3195:	
  5433  0D60  1C03               	skipc
  5434  0D61  2D63               	goto	u3191
  5435  0D62  2D64               	goto	u3190
  5436  0D63                     u3191:	
  5437  0D63  2D6B               	goto	l2992
  5438  0D64                     u3190:	
  5439  0D64                     l2988:	
  5440  0D64  0820               	movf	___awdiv@divisor,w
  5441  0D65  02A2               	subwf	___awdiv@dividend,f
  5442  0D66  0821               	movf	___awdiv@divisor+1,w
  5443  0D67  1C03               	skipc
  5444  0D68  03A3               	decf	___awdiv@dividend+1,f
  5445  0D69  02A3               	subwf	___awdiv@dividend+1,f
  5446  0D6A                     l2990:	
  5447  0D6A  1427               	bsf	___awdiv@quotient,0
  5448  0D6B                     l2992:	
  5449  0D6B  3001               	movlw	1
  5450  0D6C                     u3205:	
  5451  0D6C  1003               	clrc
  5452  0D6D  0CA1               	rrf	___awdiv@divisor+1,f
  5453  0D6E  0CA0               	rrf	___awdiv@divisor,f
  5454  0D6F  3EFF               	addlw	-1
  5455  0D70  1D03               	skipz
  5456  0D71  2D6C               	goto	u3205
  5457  0D72                     l2994:	
  5458  0D72  3001               	movlw	1
  5459  0D73  02A5               	subwf	___awdiv@counter,f
  5460  0D74  1D03               	btfss	3,2
  5461  0D75  2D77               	goto	u3211
  5462  0D76  2D78               	goto	u3210
  5463  0D77                     u3211:	
  5464  0D77  2D53               	goto	l2986
  5465  0D78                     u3210:	
  5466  0D78                     l2996:	
  5467  0D78  0826               	movf	___awdiv@sign,w
  5468  0D79  1903               	btfsc	3,2
  5469  0D7A  2D7C               	goto	u3221
  5470  0D7B  2D7D               	goto	u3220
  5471  0D7C                     u3221:	
  5472  0D7C  2D82               	goto	l3000
  5473  0D7D                     u3220:	
  5474  0D7D                     l2998:	
  5475  0D7D  09A7               	comf	___awdiv@quotient,f
  5476  0D7E  09A8               	comf	___awdiv@quotient+1,f
  5477  0D7F  0AA7               	incf	___awdiv@quotient,f
  5478  0D80  1903               	skipnz
  5479  0D81  0AA8               	incf	___awdiv@quotient+1,f
  5480  0D82                     l3000:	
  5481  0D82  0828               	movf	___awdiv@quotient+1,w
  5482  0D83  00A1               	movwf	?___awdiv+1
  5483  0D84  0827               	movf	___awdiv@quotient,w
  5484  0D85  00A0               	movwf	?___awdiv
  5485  0D86                     l739:	
  5486  0D86  0008               	return
  5487  0D87                     __end_of___awdiv:	
  5488                           
  5489                           	psect	text20
  5490  07BF                     __ptext20:	
  5491 ;; *************** function _accionesDeshacer *****************
  5492 ;; Defined at:
  5493 ;;		line 22 in file "acciones.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5507 ;;      Params:         0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0
  5510 ;;      Totals:         0       0       0       0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    4
  5514 ;; This function calls:
  5515 ;;		_eliminarProd
  5516 ;;		_envioTX
  5517 ;;		_mostrarDigitos
  5518 ;; This function is called by:
  5519 ;;		_main
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function _accionesDeshacer
  5525  07BF                     _accionesDeshacer:	
  5526  07BF                     l3360:	
  5527                           ;incstack = 0
  5528                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5529                           
  5530                           
  5531                           ;acciones.c: 23:     if (cuenta != auxCuenta) {
  5532  07BF  1683               	bsf	3,5	;RP0=1, select bank3
  5533  07C0  1703               	bsf	3,6	;RP1=1, select bank3
  5534  07C1  0855               	movf	(_auxCuenta+1)^(0+384),w
  5535  07C2  0671               	xorwf	_cuenta+1,w
  5536  07C3  1D03               	skipz
  5537  07C4  2FC7               	goto	u3795
  5538  07C5  0854               	movf	_auxCuenta^(0+384),w
  5539  07C6  0670               	xorwf	_cuenta,w
  5540  07C7                     u3795:	
  5541  07C7  1903               	skipnz
  5542  07C8  2FCA               	goto	u3791
  5543  07C9  2FCB               	goto	u3790
  5544  07CA                     u3791:	
  5545  07CA  2FFB               	goto	l63
  5546  07CB                     u3790:	
  5547  07CB                     l3362:	
  5548                           
  5549                           ;acciones.c: 24:         cuenta = auxCuenta;
  5550  07CB  0855               	movf	(_auxCuenta+1)^(0+384),w
  5551  07CC  00F1               	movwf	_cuenta+1
  5552  07CD  0854               	movf	_auxCuenta^(0+384),w
  5553  07CE  00F0               	movwf	_cuenta
  5554  07CF                     l3364:	
  5555                           
  5556                           ;acciones.c: 26:         eliminarProd(productoIngresado);
  5557  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  5558  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  5559  07D1  085F               	movf	(_productoIngresado+1)^(0+128),w
  5560  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  5561  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  5562  07D4  00AF               	movwf	eliminarProd@tp+1
  5563  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  5564  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  5565  07D7  085E               	movf	_productoIngresado^(0+128),w
  5566  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  5567  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  5568  07DA  00AE               	movwf	eliminarProd@tp
  5569  07DB  120A  158A  2392  120A  118A  	fcall	_eliminarProd
  5570  07E0                     l3366:	
  5571                           
  5572                           ;acciones.c: 27:         mostrarDigitos(cuenta);
  5573  07E0  0871               	movf	_cuenta+1,w
  5574  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  5575  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  5576  07E3  00B5               	movwf	mostrarDigitos@num+1
  5577  07E4  0870               	movf	_cuenta,w
  5578  07E5  00B4               	movwf	mostrarDigitos@num
  5579  07E6  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  5580  07EB                     l3368:	
  5581                           
  5582                           ;acciones.c: 28:         if (modoDebug){
  5583  07EB  0872               	movf	_modoDebug,w
  5584  07EC  1903               	btfsc	3,2
  5585  07ED  2FEF               	goto	u3801
  5586  07EE  2FF0               	goto	u3800
  5587  07EF                     u3801:	
  5588  07EF  2FFB               	goto	l63
  5589  07F0                     u3800:	
  5590  07F0                     l3370:	
  5591                           
  5592                           ;acciones.c: 29:             envioTX("Producto cancelado");
  5593  07F0  30FB               	movlw	low (STR_2| (0+32768))
  5594  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  5595  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  5596  07F3  00A0               	movwf	envioTX@mensaje
  5597  07F4  3084               	movlw	high (STR_2| (0+32768))
  5598  07F5  00A1               	movwf	envioTX@mensaje+1
  5599  07F6  120A  158A  2190  120A  118A  	fcall	_envioTX
  5600  07FB                     l63:	
  5601  07FB  0008               	return
  5602  07FC                     __end_of_accionesDeshacer:	
  5603                           
  5604                           	psect	text21
  5605  0B92                     __ptext21:	
  5606 ;; *************** function _eliminarProd *****************
  5607 ;; Defined at:
  5608 ;;		line 47 in file "manejoProductos.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  tp              2   14[BANK0 ] short 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  i               2   19[BANK0 ] short 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5622 ;;      Params:         0       2       0       0       0
  5623 ;;      Locals:         0       2       0       0       0
  5624 ;;      Temps:          0       3       0       0       0
  5625 ;;      Totals:         0       7       0       0       0
  5626 ;;Total ram usage:        7 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    3
  5629 ;; This function calls:
  5630 ;;		_pow
  5631 ;; This function is called by:
  5632 ;;		_accionesDeshacer
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _eliminarProd
  5638  0B92                     _eliminarProd:	
  5639  0B92                     l3248:	
  5640                           ;incstack = 0
  5641                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5642                           
  5643                           
  5644                           ;manejoProductos.c: 48:         for(short int i = 12; i>=0; i--) {
  5645  0B92  300C               	movlw	12
  5646  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  5647  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  5648  0B95  00B3               	movwf	eliminarProd@i
  5649  0B96  3000               	movlw	0
  5650  0B97  00B4               	movwf	eliminarProd@i+1
  5651  0B98                     l3254:	
  5652                           
  5653                           ;manejoProductos.c: 49:         if( tp >= 8*i) {
  5654  0B98  0834               	movf	eliminarProd@i+1,w
  5655  0B99  00B1               	movwf	??_eliminarProd+1
  5656  0B9A  0833               	movf	eliminarProd@i,w
  5657  0B9B  00B0               	movwf	??_eliminarProd
  5658  0B9C  1003               	clrc
  5659  0B9D  0DB0               	rlf	??_eliminarProd,f
  5660  0B9E  0DB1               	rlf	??_eliminarProd+1,f
  5661  0B9F  1003               	clrc
  5662  0BA0  0DB0               	rlf	??_eliminarProd,f
  5663  0BA1  0DB1               	rlf	??_eliminarProd+1,f
  5664  0BA2  1003               	clrc
  5665  0BA3  0DB0               	rlf	??_eliminarProd,f
  5666  0BA4  0DB1               	rlf	??_eliminarProd+1,f
  5667  0BA5  082F               	movf	eliminarProd@tp+1,w
  5668  0BA6  3A80               	xorlw	128
  5669  0BA7  00B2               	movwf	??_eliminarProd+2
  5670  0BA8  0831               	movf	??_eliminarProd+1,w
  5671  0BA9  3A80               	xorlw	128
  5672  0BAA  0232               	subwf	??_eliminarProd+2,w
  5673  0BAB  1D03               	skipz
  5674  0BAC  2BAF               	goto	u3655
  5675  0BAD  0830               	movf	??_eliminarProd,w
  5676  0BAE  022E               	subwf	eliminarProd@tp,w
  5677  0BAF                     u3655:	
  5678  0BAF  1C03               	skipc
  5679  0BB0  2BB2               	goto	u3651
  5680  0BB1  2BB3               	goto	u3650
  5681  0BB2                     u3651:	
  5682  0BB2  2BE7               	goto	l3262
  5683  0BB3                     u3650:	
  5684  0BB3                     l3256:	
  5685                           
  5686                           ;manejoProductos.c: 51:             tp = tp - 8*i;
  5687  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  5688  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  5689  0BB5  0834               	movf	eliminarProd@i+1,w
  5690  0BB6  00B1               	movwf	??_eliminarProd+1
  5691  0BB7  0833               	movf	eliminarProd@i,w
  5692  0BB8  00B0               	movwf	??_eliminarProd
  5693  0BB9  1003               	clrc
  5694  0BBA  0DB0               	rlf	??_eliminarProd,f
  5695  0BBB  0DB1               	rlf	??_eliminarProd+1,f
  5696  0BBC  1003               	clrc
  5697  0BBD  0DB0               	rlf	??_eliminarProd,f
  5698  0BBE  0DB1               	rlf	??_eliminarProd+1,f
  5699  0BBF  1003               	clrc
  5700  0BC0  0DB0               	rlf	??_eliminarProd,f
  5701  0BC1  0DB1               	rlf	??_eliminarProd+1,f
  5702  0BC2  0830               	movf	??_eliminarProd,w
  5703  0BC3  022E               	subwf	eliminarProd@tp,w
  5704  0BC4  00AE               	movwf	eliminarProd@tp
  5705  0BC5  0831               	movf	??_eliminarProd+1,w
  5706  0BC6  1C03               	skipc
  5707  0BC7  0A31               	incf	??_eliminarProd+1,w
  5708  0BC8  022F               	subwf	eliminarProd@tp+1,w
  5709  0BC9  00AF               	movwf	eliminarProd@tp+1
  5710  0BCA                     l3258:	
  5711                           
  5712                           ;manejoProductos.c: 52:             prodIngresados[i] = prodIngresados[i] ^ pow(2,tp);
  5713  0BCA  0833               	movf	eliminarProd@i,w
  5714  0BCB  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5715  0BCC  0084               	movwf	4
  5716  0BCD  3002               	movlw	2
  5717  0BCE  00A6               	movwf	pow@numero
  5718  0BCF  3000               	movlw	0
  5719  0BD0  00A7               	movwf	pow@numero+1
  5720  0BD1  082F               	movf	eliminarProd@tp+1,w
  5721  0BD2  00A9               	movwf	pow@potencia+1
  5722  0BD3  082E               	movf	eliminarProd@tp,w
  5723  0BD4  00A8               	movwf	pow@potencia
  5724  0BD5  120A  158A  2156  120A  158A  	fcall	_pow
  5725  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  5726  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  5727  0BDC  0826               	movf	?_pow,w
  5728  0BDD  1383               	bcf	3,7	;select IRP bank1
  5729  0BDE  0600               	xorwf	0,w
  5730  0BDF  00B0               	movwf	??_eliminarProd
  5731  0BE0  0833               	movf	eliminarProd@i,w
  5732  0BE1  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5733  0BE2  0084               	movwf	4
  5734  0BE3  0830               	movf	??_eliminarProd,w
  5735  0BE4  0080               	movwf	0
  5736  0BE5                     l3260:	
  5737                           
  5738                           ;manejoProductos.c: 53:             i = 0;
  5739  0BE5  01B3               	clrf	eliminarProd@i
  5740  0BE6  01B4               	clrf	eliminarProd@i+1
  5741  0BE7                     l3262:	
  5742                           
  5743                           ;manejoProductos.c: 56:     }
  5744  0BE7  30FF               	movlw	255
  5745  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  5746  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  5747  0BEA  07B3               	addwf	eliminarProd@i,f
  5748  0BEB  1803               	skipnc
  5749  0BEC  0AB4               	incf	eliminarProd@i+1,f
  5750  0BED  30FF               	movlw	255
  5751  0BEE  07B4               	addwf	eliminarProd@i+1,f
  5752  0BEF                     l3264:	
  5753  0BEF  1FB4               	btfss	eliminarProd@i+1,7
  5754  0BF0  2BF2               	goto	u3661
  5755  0BF1  2BF3               	goto	u3660
  5756  0BF2                     u3661:	
  5757  0BF2  2B98               	goto	l3254
  5758  0BF3                     u3660:	
  5759  0BF3                     l384:	
  5760  0BF3  0008               	return
  5761  0BF4                     __end_of_eliminarProd:	
  5762                           
  5763                           	psect	text22
  5764  0956                     __ptext22:	
  5765 ;; *************** function _pow *****************
  5766 ;; Defined at:
  5767 ;;		line 3 in file "manejoProductos.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  numero          2    6[BANK0 ] unsigned int 
  5770 ;;  potencia        2    8[BANK0 ] unsigned int 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  i               2   10[BANK0 ] int 
  5773 ;;  resultado       2   12[BANK0 ] unsigned int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2    6[BANK0 ] unsigned int 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, pclath, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5783 ;;      Params:         0       4       0       0       0
  5784 ;;      Locals:         0       4       0       0       0
  5785 ;;      Temps:          0       0       0       0       0
  5786 ;;      Totals:         0       8       0       0       0
  5787 ;;Total ram usage:        8 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    2
  5790 ;; This function calls:
  5791 ;;		___wmul
  5792 ;; This function is called by:
  5793 ;;		_ingresoProd
  5794 ;;		_verificarProd
  5795 ;;		_eliminarProd
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function _pow
  5801  0956                     _pow:	
  5802  0956                     l2930:	
  5803                           ;incstack = 0
  5804                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  5805                           
  5806                           
  5807                           ;manejoProductos.c: 4:     unsigned int resultado = 0;
  5808  0956  1283               	bcf	3,5	;RP0=0, select bank0
  5809  0957  1303               	bcf	3,6	;RP1=0, select bank0
  5810  0958  01AC               	clrf	pow@resultado
  5811  0959  01AD               	clrf	pow@resultado+1
  5812                           
  5813                           ;manejoProductos.c: 6:     for (int i = 0; i <= potencia; i++) {
  5814  095A  01AA               	clrf	pow@i
  5815  095B  01AB               	clrf	pow@i+1
  5816  095C  2981               	goto	l2940
  5817  095D                     l2932:	
  5818                           
  5819                           ;manejoProductos.c: 7:         if (i == 0) {
  5820  095D  082A               	movf	pow@i,w
  5821  095E  042B               	iorwf	pow@i+1,w
  5822  095F  1D03               	btfss	3,2
  5823  0960  2962               	goto	u3091
  5824  0961  2963               	goto	u3090
  5825  0962                     u3091:	
  5826  0962  2968               	goto	l2936
  5827  0963                     u3090:	
  5828  0963                     l2934:	
  5829                           
  5830                           ;manejoProductos.c: 8:             resultado = 1;
  5831  0963  3001               	movlw	1
  5832  0964  00AC               	movwf	pow@resultado
  5833  0965  3000               	movlw	0
  5834  0966  00AD               	movwf	pow@resultado+1
  5835                           
  5836                           ;manejoProductos.c: 9:         }
  5837  0967  297B               	goto	l2938
  5838  0968                     l2936:	
  5839                           
  5840                           ;manejoProductos.c: 11:             resultado = resultado * numero;
  5841  0968  082D               	movf	pow@resultado+1,w
  5842  0969  00A1               	movwf	___wmul@multiplier+1
  5843  096A  082C               	movf	pow@resultado,w
  5844  096B  00A0               	movwf	___wmul@multiplier
  5845  096C  0827               	movf	pow@numero+1,w
  5846  096D  00A3               	movwf	___wmul@multiplicand+1
  5847  096E  0826               	movf	pow@numero,w
  5848  096F  00A2               	movwf	___wmul@multiplicand
  5849  0970  120A  158A  208B  120A  158A  	fcall	___wmul
  5850  0975  1283               	bcf	3,5	;RP0=0, select bank0
  5851  0976  1303               	bcf	3,6	;RP1=0, select bank0
  5852  0977  0821               	movf	?___wmul+1,w
  5853  0978  00AD               	movwf	pow@resultado+1
  5854  0979  0820               	movf	?___wmul,w
  5855  097A  00AC               	movwf	pow@resultado
  5856  097B                     l2938:	
  5857                           
  5858                           ;manejoProductos.c: 13:     }
  5859  097B  3001               	movlw	1
  5860  097C  07AA               	addwf	pow@i,f
  5861  097D  1803               	skipnc
  5862  097E  0AAB               	incf	pow@i+1,f
  5863  097F  3000               	movlw	0
  5864  0980  07AB               	addwf	pow@i+1,f
  5865  0981                     l2940:	
  5866  0981  082B               	movf	pow@i+1,w
  5867  0982  0229               	subwf	pow@potencia+1,w
  5868  0983  1D03               	skipz
  5869  0984  2987               	goto	u3105
  5870  0985  082A               	movf	pow@i,w
  5871  0986  0228               	subwf	pow@potencia,w
  5872  0987                     u3105:	
  5873  0987  1803               	skipnc
  5874  0988  298A               	goto	u3101
  5875  0989  298B               	goto	u3100
  5876  098A                     u3101:	
  5877  098A  295D               	goto	l2932
  5878  098B                     u3100:	
  5879  098B                     l2942:	
  5880                           
  5881                           ;manejoProductos.c: 14:     return resultado;
  5882  098B  082D               	movf	pow@resultado+1,w
  5883  098C  00A7               	movwf	?_pow+1
  5884  098D  082C               	movf	pow@resultado,w
  5885  098E  00A6               	movwf	?_pow
  5886  098F                     l365:	
  5887  098F  0008               	return
  5888  0990                     __end_of_pow:	
  5889                           
  5890                           	psect	text23
  5891  088B                     __ptext23:	
  5892 ;; *************** function ___wmul *****************
  5893 ;; Defined at:
  5894 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5897 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  product         2    4[BANK0 ] unsigned int 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  2    0[BANK0 ] unsigned int 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         0       4       0       0       0
  5910 ;;      Locals:         0       2       0       0       0
  5911 ;;      Temps:          0       0       0       0       0
  5912 ;;      Totals:         0       6       0       0       0
  5913 ;;Total ram usage:        6 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    1
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_lecturaConsulta
  5920 ;;		_main
  5921 ;;		_pow
  5922 ;;		_agregarModificarPrecio
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function ___wmul
  5928  088B                     ___wmul:	
  5929  088B                     l2748:	
  5930                           ;incstack = 0
  5931                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5932                           
  5933  088B  1283               	bcf	3,5	;RP0=0, select bank0
  5934  088C  1303               	bcf	3,6	;RP1=0, select bank0
  5935  088D  01A4               	clrf	___wmul@product
  5936  088E  01A5               	clrf	___wmul@product+1
  5937  088F                     l2750:	
  5938  088F  1C20               	btfss	___wmul@multiplier,0
  5939  0890  2892               	goto	u2731
  5940  0891  2893               	goto	u2730
  5941  0892                     u2731:	
  5942  0892  2899               	goto	l586
  5943  0893                     u2730:	
  5944  0893                     l2752:	
  5945  0893  0822               	movf	___wmul@multiplicand,w
  5946  0894  07A4               	addwf	___wmul@product,f
  5947  0895  1803               	skipnc
  5948  0896  0AA5               	incf	___wmul@product+1,f
  5949  0897  0823               	movf	___wmul@multiplicand+1,w
  5950  0898  07A5               	addwf	___wmul@product+1,f
  5951  0899                     l586:	
  5952  0899  3001               	movlw	1
  5953  089A                     u2745:	
  5954  089A  1003               	clrc
  5955  089B  0DA2               	rlf	___wmul@multiplicand,f
  5956  089C  0DA3               	rlf	___wmul@multiplicand+1,f
  5957  089D  3EFF               	addlw	-1
  5958  089E  1D03               	skipz
  5959  089F  289A               	goto	u2745
  5960  08A0                     l2754:	
  5961  08A0  3001               	movlw	1
  5962  08A1                     u2755:	
  5963  08A1  1003               	clrc
  5964  08A2  0CA1               	rrf	___wmul@multiplier+1,f
  5965  08A3  0CA0               	rrf	___wmul@multiplier,f
  5966  08A4  3EFF               	addlw	-1
  5967  08A5  1D03               	skipz
  5968  08A6  28A1               	goto	u2755
  5969  08A7                     l2756:	
  5970  08A7  0820               	movf	___wmul@multiplier,w
  5971  08A8  0421               	iorwf	___wmul@multiplier+1,w
  5972  08A9  1D03               	btfss	3,2
  5973  08AA  28AC               	goto	u2761
  5974  08AB  28AD               	goto	u2760
  5975  08AC                     u2761:	
  5976  08AC  288F               	goto	l2750
  5977  08AD                     u2760:	
  5978  08AD                     l2758:	
  5979  08AD  0825               	movf	___wmul@product+1,w
  5980  08AE  00A1               	movwf	?___wmul+1
  5981  08AF  0824               	movf	___wmul@product,w
  5982  08B0  00A0               	movwf	?___wmul
  5983  08B1                     l588:	
  5984  08B1  0008               	return
  5985  08B2                     __end_of___wmul:	
  5986                           
  5987                           	psect	text24
  5988  0743                     __ptext24:	
  5989 ;; *************** function _accionesAceptar *****************
  5990 ;; Defined at:
  5991 ;;		line 4 in file "acciones.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  strLote        32    0[BANK1 ] unsigned char [32]
  5996 ;;  i               2   32[BANK1 ] short 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6006 ;;      Params:         0       0       0       0       0
  6007 ;;      Locals:         0       0      34       0       0
  6008 ;;      Temps:          0       4       0       0       0
  6009 ;;      Totals:         0       4      34       0       0
  6010 ;;Total ram usage:       38 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    3
  6013 ;; This function calls:
  6014 ;;		_bailenLeds
  6015 ;;		_envioTX
  6016 ;;		_mostrarDigitos
  6017 ;;		_sprintf
  6018 ;; This function is called by:
  6019 ;;		_main
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function _accionesAceptar
  6025  0743                     _accionesAceptar:	
  6026  0743                     l3334:	
  6027                           ;incstack = 0
  6028                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6029                           
  6030                           
  6031                           ;acciones.c: 6:     ventasLote++;
  6032  0743  3001               	movlw	1
  6033  0744  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0745  1303               	bcf	3,6	;RP1=0, select bank0
  6035  0746  00CA               	movwf	??_accionesAceptar
  6036  0747  084A               	movf	??_accionesAceptar,w
  6037  0748  07EE               	addwf	_ventasLote,f
  6038  0749                     l3336:	
  6039                           
  6040                           ;acciones.c: 7:     montosLote+=cuenta;
  6041  0749  0870               	movf	_cuenta,w
  6042  074A  1683               	bsf	3,5	;RP0=1, select bank1
  6043  074B  1303               	bcf	3,6	;RP1=0, select bank1
  6044  074C  07DA               	addwf	_montosLote^(0+128),f
  6045  074D  1803               	skipnc
  6046  074E  0ADB               	incf	(_montosLote+1)^(0+128),f
  6047  074F  0871               	movf	_cuenta+1,w
  6048  0750  07DB               	addwf	(_montosLote+1)^(0+128),f
  6049  0751                     l3338:	
  6050                           
  6051                           ;acciones.c: 8:     cuenta = 0;
  6052  0751  01F0               	clrf	_cuenta
  6053  0752  01F1               	clrf	_cuenta+1
  6054  0753                     l3340:	
  6055                           
  6056                           ;acciones.c: 9:     auxCuenta = 0;
  6057  0753  1683               	bsf	3,5	;RP0=1, select bank3
  6058  0754  1703               	bsf	3,6	;RP1=1, select bank3
  6059  0755  01D4               	clrf	_auxCuenta^(0+384)
  6060  0756  01D5               	clrf	(_auxCuenta+1)^(0+384)
  6061  0757                     l3342:	
  6062                           
  6063                           ;acciones.c: 10:     for(short int i = 0; i < 13; i++){
  6064  0757  1683               	bsf	3,5	;RP0=1, select bank1
  6065  0758  1303               	bcf	3,6	;RP1=0, select bank1
  6066  0759  01C0               	clrf	accionesAceptar@i^(0+128)
  6067  075A  01C1               	clrf	(accionesAceptar@i+1)^(0+128)
  6068  075B                     l3348:	
  6069                           
  6070                           ;acciones.c: 11:         prodIngresados[i] = 0;
  6071  075B  1683               	bsf	3,5	;RP0=1, select bank1
  6072  075C  1303               	bcf	3,6	;RP1=0, select bank1
  6073  075D  0840               	movf	accionesAceptar@i^(0+128),w
  6074  075E  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  6075  075F  0084               	movwf	4
  6076  0760  1383               	bcf	3,7	;select IRP bank1
  6077  0761  0180               	clrf	0
  6078  0762                     l3350:	
  6079                           
  6080                           ;acciones.c: 12:     }
  6081  0762  3001               	movlw	1
  6082  0763  07C0               	addwf	accionesAceptar@i^(0+128),f
  6083  0764  1803               	skipnc
  6084  0765  0AC1               	incf	(accionesAceptar@i+1)^(0+128),f
  6085  0766  3000               	movlw	0
  6086  0767  07C1               	addwf	(accionesAceptar@i+1)^(0+128),f
  6087  0768                     l3352:	
  6088  0768  0841               	movf	(accionesAceptar@i+1)^(0+128),w
  6089  0769  3A80               	xorlw	128
  6090  076A  00FF               	movwf	btemp+1
  6091  076B  3080               	movlw	128
  6092  076C  027F               	subwf	btemp+1,w
  6093  076D  1D03               	skipz
  6094  076E  2F71               	goto	u3775
  6095  076F  300D               	movlw	13
  6096  0770  0240               	subwf	accionesAceptar@i^(0+128),w
  6097  0771                     u3775:	
  6098  0771  1C03               	skipc
  6099  0772  2F74               	goto	u3771
  6100  0773  2F75               	goto	u3770
  6101  0774                     u3771:	
  6102  0774  2F5B               	goto	l3348
  6103  0775                     u3770:	
  6104  0775                     l3354:	
  6105                           
  6106                           ;acciones.c: 13:     if(modoDebug){
  6107  0775  0872               	movf	_modoDebug,w
  6108  0776  1903               	btfsc	3,2
  6109  0777  2F79               	goto	u3781
  6110  0778  2F7A               	goto	u3780
  6111  0779                     u3781:	
  6112  0779  2FAE               	goto	l57
  6113  077A                     u3780:	
  6114  077A                     l3356:	
  6115                           
  6116                           ;acciones.c: 14:         char strLote[32];;acciones.c: 15:         sprintf(strLote,"L:%u
      +                          ,N:%u,T:%u", nroLote, ventasLote, montosLote);
  6117  077A  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6118  077B  1283               	bcf	3,5	;RP0=0, select bank0
  6119  077C  1303               	bcf	3,6	;RP1=0, select bank0
  6120  077D  00B4               	movwf	sprintf@sp
  6121  077E  3000               	movlw	0
  6122  077F  00B5               	movwf	sprintf@sp+1
  6123  0780  3056               	movlw	low ((STR_16+8)| (0+32768))
  6124  0781  00B6               	movwf	sprintf@f
  6125  0782  3084               	movlw	high ((STR_16+8)| (0+32768))
  6126  0783  00B7               	movwf	sprintf@f+1
  6127  0784  0878               	movf	_nroLote,w
  6128  0785  00CA               	movwf	??_accionesAceptar
  6129  0786  01CB               	clrf	??_accionesAceptar+1
  6130  0787  084A               	movf	??_accionesAceptar,w
  6131  0788  00B8               	movwf	?_sprintf+4
  6132  0789  084B               	movf	??_accionesAceptar+1,w
  6133  078A  00B9               	movwf	?_sprintf+5
  6134  078B  086E               	movf	_ventasLote,w
  6135  078C  00CC               	movwf	??_accionesAceptar+2
  6136  078D  01CD               	clrf	??_accionesAceptar+3
  6137  078E  084C               	movf	??_accionesAceptar+2,w
  6138  078F  00BA               	movwf	?_sprintf+6
  6139  0790  084D               	movf	??_accionesAceptar+3,w
  6140  0791  00BB               	movwf	?_sprintf+7
  6141  0792  1683               	bsf	3,5	;RP0=1, select bank1
  6142  0793  1303               	bcf	3,6	;RP1=0, select bank1
  6143  0794  085B               	movf	(_montosLote+1)^(0+128),w
  6144  0795  1283               	bcf	3,5	;RP0=0, select bank0
  6145  0796  1303               	bcf	3,6	;RP1=0, select bank0
  6146  0797  00BD               	movwf	?_sprintf+9
  6147  0798  1683               	bsf	3,5	;RP0=1, select bank1
  6148  0799  1303               	bcf	3,6	;RP1=0, select bank1
  6149  079A  085A               	movf	_montosLote^(0+128),w
  6150  079B  1283               	bcf	3,5	;RP0=0, select bank0
  6151  079C  1303               	bcf	3,6	;RP1=0, select bank0
  6152  079D  00BC               	movwf	?_sprintf+8
  6153  079E  120A  118A  224B  120A  118A  	fcall	_sprintf
  6154                           
  6155                           ;acciones.c: 16:         envioTX(strLote);
  6156  07A3  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6157  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  6158  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  6159  07A6  00A0               	movwf	envioTX@mensaje
  6160  07A7  3000               	movlw	0
  6161  07A8  00A1               	movwf	envioTX@mensaje+1
  6162  07A9  120A  158A  2190  120A  118A  	fcall	_envioTX
  6163  07AE                     l57:	
  6164                           ;acciones.c: 17:     }
  6165                           
  6166                           
  6167                           ;acciones.c: 18:     mostrarDigitos(cuenta);
  6168  07AE  0871               	movf	_cuenta+1,w
  6169  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  6170  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  6171  07B1  00B5               	movwf	mostrarDigitos@num+1
  6172  07B2  0870               	movf	_cuenta,w
  6173  07B3  00B4               	movwf	mostrarDigitos@num
  6174  07B4  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  6175  07B9                     l3358:	
  6176                           
  6177                           ;acciones.c: 19:     bailenLeds();
  6178  07B9  120A  118A  23B4  120A  118A  	fcall	_bailenLeds
  6179  07BE                     l58:	
  6180  07BE  0008               	return
  6181  07BF                     __end_of_accionesAceptar:	
  6182                           
  6183                           	psect	text25
  6184  024B                     __ptext25:	
  6185 ;; *************** function _sprintf *****************
  6186 ;; Defined at:
  6187 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  sp              2   20[BANK0 ] PTR unsigned char 
  6190 ;;		 -> agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), lecturaConsulta@strLote(32), 
  6191 ;;		 -> consultaPrecio@mensaje(26), cierreDeLote@strLote(32), accionesPuertoSerial@mensaje(12), accionesAceptar@strLote(
      +32), 
  6192 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  6193 ;;		 -> STR_18(7), STR_17(10), STR_16(23), STR_14(15), 
  6194 ;;		 -> STR_10(22), STR_9(23), STR_5(22), STR_3(5), 
  6195 ;;		 -> STR_1(15), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  tmpval          4    0        struct .
  6198 ;;  val             2   39[BANK0 ] unsigned int 
  6199 ;;  cp              2   36[BANK0 ] PTR const unsigned char 
  6200 ;;		 -> STR_20(7), ?_sprintf(2), adresult(2), codigoEntrada(10), 
  6201 ;;  len             2    0        unsigned int 
  6202 ;;  c               1   41[BANK0 ] unsigned char 
  6203 ;;  ap              1   38[BANK0 ] PTR void [1]
  6204 ;;		 -> ?_sprintf(2), 
  6205 ;;  flag            1   35[BANK0 ] unsigned char 
  6206 ;;  prec            1   34[BANK0 ] char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  2   20[BANK0 ] int 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6216 ;;      Params:         0      10       0       0       0
  6217 ;;      Locals:         0       8       0       0       0
  6218 ;;      Temps:          0       4       0       0       0
  6219 ;;      Totals:         0      22       0       0       0
  6220 ;;Total ram usage:       22 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    2
  6223 ;; This function calls:
  6224 ;;		___lwdiv
  6225 ;;		___lwmod
  6226 ;; This function is called by:
  6227 ;;		_accionesAceptar
  6228 ;;		_accionesPuertoSerial
  6229 ;;		_cierreDeLote
  6230 ;;		_consultaPrecio
  6231 ;;		_lecturaConsulta
  6232 ;;		_main
  6233 ;;		_agregarModificarPrecio
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           
  6238                           ;psect for function _sprintf
  6239  024B                     _sprintf:	
  6240  024B                     l2810:	
  6241                           ;incstack = 0
  6242                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6243                           
  6244                           
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  6246  024B  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6247  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6248  024D  1303               	bcf	3,6	;RP1=0, select bank0
  6249  024E  00BE               	movwf	??_sprintf
  6250  024F  083E               	movf	??_sprintf,w
  6251  0250  00C6               	movwf	sprintf@ap
  6252                           
  6253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6254  0251  2B95               	goto	l2880
  6255  0252                     l2812:	
  6256                           
  6257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  6258  0252  3025               	movlw	37
  6259  0253  0649               	xorwf	sprintf@c,w
  6260  0254  1903               	btfsc	3,2
  6261  0255  2A57               	goto	u2901
  6262  0256  2A58               	goto	u2900
  6263  0257                     u2901:	
  6264  0257  2A68               	goto	l2818
  6265  0258                     u2900:	
  6266  0258                     l2814:	
  6267                           
  6268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  6269  0258  0849               	movf	sprintf@c,w
  6270  0259  00BE               	movwf	??_sprintf
  6271  025A  0834               	movf	sprintf@sp,w
  6272  025B  0084               	movwf	4
  6273  025C  1783               	bsf	3,7
  6274  025D  1C35               	btfss	sprintf@sp+1,0
  6275  025E  1383               	bcf	3,7
  6276  025F  083E               	movf	??_sprintf,w
  6277  0260  0080               	movwf	0
  6278  0261                     l2816:	
  6279  0261  3001               	movlw	1
  6280  0262  07B4               	addwf	sprintf@sp,f
  6281  0263  1803               	skipnc
  6282  0264  0AB5               	incf	sprintf@sp+1,f
  6283  0265  3000               	movlw	0
  6284  0266  07B5               	addwf	sprintf@sp+1,f
  6285                           
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  6287  0267  2B95               	goto	l2880
  6288  0268                     l2818:	
  6289                           
  6290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  6291  0268  01C3               	clrf	sprintf@flag
  6292                           
  6293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  6294  0269  2AB0               	goto	l2836
  6295  026A                     l2820:	
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 760:     cp
      +                           = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  6298  026A  0846               	movf	sprintf@ap,w
  6299  026B  0084               	movwf	4
  6300  026C  1383               	bcf	3,7	;select IRP bank0
  6301  026D  0800               	movf	0,w
  6302  026E  00C4               	movwf	sprintf@cp
  6303  026F  0A84               	incf	4,f
  6304  0270  0800               	movf	0,w
  6305  0271  0384               	decf	4,f
  6306  0272  00C5               	movwf	sprintf@cp+1
  6307  0273                     l2822:	
  6308  0273  3002               	movlw	2
  6309  0274  00BE               	movwf	??_sprintf
  6310  0275  083E               	movf	??_sprintf,w
  6311  0276  07C6               	addwf	sprintf@ap,f
  6312  0277                     l2824:	
  6313                           
  6314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 766:    if(
      +                          !cp)
  6315  0277  0844               	movf	sprintf@cp,w
  6316  0278  0445               	iorwf	sprintf@cp+1,w
  6317  0279  1D03               	btfss	3,2
  6318  027A  2A7C               	goto	u2911
  6319  027B  2A7D               	goto	u2910
  6320  027C                     u2911:	
  6321  027C  2A9F               	goto	l566
  6322  027D                     u2910:	
  6323  027D                     l2826:	
  6324                           
  6325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 767:     cp
      +                           = "(null)";
  6326  027D  3039               	movlw	low (STR_20| (0+32768))
  6327  027E  00C4               	movwf	sprintf@cp
  6328  027F  3085               	movlw	high (STR_20| (0+32768))
  6329  0280  00C5               	movwf	sprintf@cp+1
  6330  0281  2A9F               	goto	l566
  6331  0282                     l2828:	
  6332                           
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 804:     ((
      +                          *sp++ = (*cp++)));
  6334  0282  0845               	movf	sprintf@cp+1,w
  6335  0283  00FF               	movwf	btemp+1
  6336  0284  0844               	movf	sprintf@cp,w
  6337  0285  0084               	movwf	4
  6338  0286  120A  118A  2400  120A  118A  	fcall	stringtab
  6339  028B  00BE               	movwf	??_sprintf
  6340  028C  0834               	movf	sprintf@sp,w
  6341  028D  0084               	movwf	4
  6342  028E  1783               	bsf	3,7
  6343  028F  1C35               	btfss	sprintf@sp+1,0
  6344  0290  1383               	bcf	3,7
  6345  0291  083E               	movf	??_sprintf,w
  6346  0292  0080               	movwf	0
  6347  0293                     l2830:	
  6348  0293  3001               	movlw	1
  6349  0294  07C4               	addwf	sprintf@cp,f
  6350  0295  1803               	skipnc
  6351  0296  0AC5               	incf	sprintf@cp+1,f
  6352  0297  3000               	movlw	0
  6353  0298  07C5               	addwf	sprintf@cp+1,f
  6354  0299                     l2832:	
  6355  0299  3001               	movlw	1
  6356  029A  07B4               	addwf	sprintf@sp,f
  6357  029B  1803               	skipnc
  6358  029C  0AB5               	incf	sprintf@sp+1,f
  6359  029D  3000               	movlw	0
  6360  029E  07B5               	addwf	sprintf@sp+1,f
  6361  029F                     l566:	
  6362                           
  6363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 803:    whi
      +                          le(*cp)
  6364  029F  0845               	movf	sprintf@cp+1,w
  6365  02A0  00FF               	movwf	btemp+1
  6366  02A1  0844               	movf	sprintf@cp,w
  6367  02A2  0084               	movwf	4
  6368  02A3  120A  118A  2400  120A  118A  	fcall	stringtab
  6369  02A8  3A00               	xorlw	0
  6370  02A9  1D03               	skipz
  6371  02AA  2AAC               	goto	u2921
  6372  02AB  2AAD               	goto	u2920
  6373  02AC                     u2921:	
  6374  02AC  2A82               	goto	l2828
  6375  02AD                     u2920:	
  6376  02AD  2B95               	goto	l2880
  6377  02AE                     l570:	
  6378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 843:   case
      +                           'u':
  6379                           
  6380                           
  6381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 844:    fla
      +                          g |= 0x40;
  6382  02AE  1743               	bsf	sprintf@flag,6
  6383                           
  6384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 845:    bre
      +                          ak;
  6385  02AF  2AD9               	goto	l563
  6386  02B0                     l2836:	
  6387  02B0  0837               	movf	sprintf@f+1,w
  6388  02B1  00BF               	movwf	??_sprintf+1
  6389  02B2  0836               	movf	sprintf@f,w
  6390  02B3  00BE               	movwf	??_sprintf
  6391  02B4  0AB6               	incf	sprintf@f,f
  6392  02B5  1903               	skipnz
  6393  02B6  0AB7               	incf	sprintf@f+1,f
  6394  02B7  083F               	movf	??_sprintf+1,w
  6395  02B8  00FF               	movwf	btemp+1
  6396  02B9  083E               	movf	??_sprintf,w
  6397  02BA  0084               	movwf	4
  6398  02BB  120A  118A  2400  120A  118A  	fcall	stringtab
  6399  02C0  00C9               	movwf	sprintf@c
  6400  02C1  00C0               	movwf	??_sprintf+2
  6401  02C2  01C1               	clrf	??_sprintf+3
  6402                           
  6403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6404                           ; Switch size 1, requested type "simple"
  6405                           ; Number of cases is 1, Range of values is 0 to 0
  6406                           ; switch strategies available:
  6407                           ; Name         Instructions Cycles
  6408                           ; simple_byte            4     3 (average)
  6409                           ; direct_byte           11     8 (fixed)
  6410                           ; jumptable            260     6 (fixed)
  6411                           ;	Chosen strategy is simple_byte
  6412  02C3  0841               	movf	??_sprintf+3,w
  6413  02C4  3A00               	xorlw	0	; case 0
  6414  02C5  1903               	skipnz
  6415  02C6  2AC8               	goto	l3548
  6416  02C7  2B95               	goto	l2880
  6417  02C8                     l3548:	
  6418                           
  6419                           ; Switch size 1, requested type "simple"
  6420                           ; Number of cases is 5, Range of values is 0 to 117
  6421                           ; switch strategies available:
  6422                           ; Name         Instructions Cycles
  6423                           ; simple_byte           16     9 (average)
  6424                           ; jumptable            260     6 (fixed)
  6425                           ;	Chosen strategy is simple_byte
  6426  02C8  0840               	movf	??_sprintf+2,w
  6427  02C9  3A00               	xorlw	0	; case 0
  6428  02CA  1903               	skipnz
  6429  02CB  2BAD               	goto	l2882
  6430  02CC  3A64               	xorlw	100	; case 100
  6431  02CD  1903               	skipnz
  6432  02CE  2AD9               	goto	l563
  6433  02CF  3A0D               	xorlw	13	; case 105
  6434  02D0  1903               	skipnz
  6435  02D1  2AD9               	goto	l563
  6436  02D2  3A1A               	xorlw	26	; case 115
  6437  02D3  1903               	skipnz
  6438  02D4  2A6A               	goto	l2820
  6439  02D5  3A06               	xorlw	6	; case 117
  6440  02D6  1903               	skipnz
  6441  02D7  2AAE               	goto	l570
  6442  02D8  2B95               	goto	l2880
  6443  02D9                     l563:	
  6444                           
  6445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1277:   if(
      +                          (flag & 0x40) == 0x00)
  6446  02D9  1B43               	btfsc	sprintf@flag,6
  6447  02DA  2ADC               	goto	u2931
  6448  02DB  2ADD               	goto	u2930
  6449  02DC                     u2931:	
  6450  02DC  2AF7               	goto	l2848
  6451  02DD                     u2930:	
  6452  02DD                     l2838:	
  6453                           
  6454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6455  02DD  0846               	movf	sprintf@ap,w
  6456  02DE  0084               	movwf	4
  6457  02DF  1383               	bcf	3,7	;select IRP bank0
  6458  02E0  0800               	movf	0,w
  6459  02E1  00C7               	movwf	sprintf@val
  6460  02E2  0A84               	incf	4,f
  6461  02E3  0800               	movf	0,w
  6462  02E4  00C8               	movwf	sprintf@val+1
  6463  02E5                     l2840:	
  6464  02E5  3002               	movlw	2
  6465  02E6  00BE               	movwf	??_sprintf
  6466  02E7  083E               	movf	??_sprintf,w
  6467  02E8  07C6               	addwf	sprintf@ap,f
  6468  02E9                     l2842:	
  6469                           
  6470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  6471  02E9  1FC8               	btfss	sprintf@val+1,7
  6472  02EA  2AEC               	goto	u2941
  6473  02EB  2AED               	goto	u2940
  6474  02EC                     u2941:	
  6475  02EC  2B03               	goto	l2852
  6476  02ED                     u2940:	
  6477  02ED                     l2844:	
  6478                           
  6479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  6480  02ED  3003               	movlw	3
  6481  02EE  00BE               	movwf	??_sprintf
  6482  02EF  083E               	movf	??_sprintf,w
  6483  02F0  04C3               	iorwf	sprintf@flag,f
  6484  02F1                     l2846:	
  6485                           
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  6487  02F1  09C7               	comf	sprintf@val,f
  6488  02F2  09C8               	comf	sprintf@val+1,f
  6489  02F3  0AC7               	incf	sprintf@val,f
  6490  02F4  1903               	skipnz
  6491  02F5  0AC8               	incf	sprintf@val+1,f
  6492  02F6  2B03               	goto	l2852
  6493  02F7                     l2848:	
  6494                           
  6495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1299:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1312:     val
      +                           = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6496  02F7  0846               	movf	sprintf@ap,w
  6497  02F8  0084               	movwf	4
  6498  02F9  1383               	bcf	3,7	;select IRP bank0
  6499  02FA  0800               	movf	0,w
  6500  02FB  00C7               	movwf	sprintf@val
  6501  02FC  0A84               	incf	4,f
  6502  02FD  0800               	movf	0,w
  6503  02FE  00C8               	movwf	sprintf@val+1
  6504  02FF                     l2850:	
  6505  02FF  3002               	movlw	2
  6506  0300  00BE               	movwf	??_sprintf
  6507  0301  083E               	movf	??_sprintf,w
  6508  0302  07C6               	addwf	sprintf@ap,f
  6509  0303                     l2852:	
  6510                           
  6511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6512  0303  01C9               	clrf	sprintf@c
  6513  0304  0AC9               	incf	sprintf@c,f
  6514  0305                     l2858:	
  6515                           
  6516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  6517  0305  0849               	movf	sprintf@c,w
  6518  0306  00BE               	movwf	??_sprintf
  6519  0307  073E               	addwf	??_sprintf,w
  6520  0308  3E12               	addlw	low (_dpowers| (0+32768))
  6521  0309  0084               	movwf	4
  6522  030A  3084               	movlw	high (_dpowers| (0+32768))
  6523  030B  1803               	skipnc
  6524  030C  3E01               	addlw	1
  6525  030D  00FF               	movwf	btemp+1
  6526  030E  120A  118A  2400  120A  118A  	fcall	stringtab
  6527  0313  00BF               	movwf	??_sprintf+1
  6528  0314  120A  118A  2400  120A  118A  	fcall	stringtab
  6529  0319  00C0               	movwf	??_sprintf+2
  6530  031A  0840               	movf	??_sprintf+2,w
  6531  031B  0248               	subwf	sprintf@val+1,w
  6532  031C  1D03               	skipz
  6533  031D  2B20               	goto	u2955
  6534  031E  083F               	movf	??_sprintf+1,w
  6535  031F  0247               	subwf	sprintf@val,w
  6536  0320                     u2955:	
  6537  0320  1803               	skipnc
  6538  0321  2B23               	goto	u2951
  6539  0322  2B24               	goto	u2950
  6540  0323                     u2951:	
  6541  0323  2B25               	goto	l2862
  6542  0324                     u2950:	
  6543  0324  2B2F               	goto	l2864
  6544  0325                     l2862:	
  6545  0325  3001               	movlw	1
  6546  0326  00BE               	movwf	??_sprintf
  6547  0327  083E               	movf	??_sprintf,w
  6548  0328  07C9               	addwf	sprintf@c,f
  6549  0329  3005               	movlw	5
  6550  032A  0649               	xorwf	sprintf@c,w
  6551  032B  1D03               	btfss	3,2
  6552  032C  2B2E               	goto	u2961
  6553  032D  2B2F               	goto	u2960
  6554  032E                     u2961:	
  6555  032E  2B05               	goto	l2858
  6556  032F                     u2960:	
  6557  032F                     l2864:	
  6558                           
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  6560  032F  0843               	movf	sprintf@flag,w
  6561  0330  3903               	andlw	3
  6562  0331  1903               	btfsc	3,2
  6563  0332  2B34               	goto	u2971
  6564  0333  2B35               	goto	u2970
  6565  0334                     u2971:	
  6566  0334  2B44               	goto	l2870
  6567  0335                     u2970:	
  6568  0335                     l2866:	
  6569                           
  6570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  6571  0335  302D               	movlw	45
  6572  0336  00BE               	movwf	??_sprintf
  6573  0337  0834               	movf	sprintf@sp,w
  6574  0338  0084               	movwf	4
  6575  0339  1783               	bsf	3,7
  6576  033A  1C35               	btfss	sprintf@sp+1,0
  6577  033B  1383               	bcf	3,7
  6578  033C  083E               	movf	??_sprintf,w
  6579  033D  0080               	movwf	0
  6580  033E                     l2868:	
  6581  033E  3001               	movlw	1
  6582  033F  07B4               	addwf	sprintf@sp,f
  6583  0340  1803               	skipnc
  6584  0341  0AB5               	incf	sprintf@sp+1,f
  6585  0342  3000               	movlw	0
  6586  0343  07B5               	addwf	sprintf@sp+1,f
  6587  0344                     l2870:	
  6588                           
  6589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  6590  0344  0849               	movf	sprintf@c,w
  6591  0345  00BE               	movwf	??_sprintf
  6592  0346  083E               	movf	??_sprintf,w
  6593  0347  00C2               	movwf	sprintf@prec
  6594                           
  6595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6596  0348  2B8C               	goto	l2878
  6597  0349                     l2872:	
  6598                           
  6599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  6600  0349  300A               	movlw	10
  6601  034A  00AE               	movwf	___lwmod@divisor
  6602  034B  3000               	movlw	0
  6603  034C  00AF               	movwf	___lwmod@divisor+1
  6604  034D  0842               	movf	sprintf@prec,w
  6605  034E  00BE               	movwf	??_sprintf
  6606  034F  073E               	addwf	??_sprintf,w
  6607  0350  3E12               	addlw	low (_dpowers| (0+32768))
  6608  0351  0084               	movwf	4
  6609  0352  3084               	movlw	high (_dpowers| (0+32768))
  6610  0353  1803               	skipnc
  6611  0354  3E01               	addlw	1
  6612  0355  00FF               	movwf	btemp+1
  6613  0356  120A  118A  2400  120A  118A  	fcall	stringtab
  6614  035B  00A6               	movwf	___lwdiv@divisor
  6615  035C  120A  118A  2400  120A  118A  	fcall	stringtab
  6616  0361  00A7               	movwf	___lwdiv@divisor+1
  6617  0362  0848               	movf	sprintf@val+1,w
  6618  0363  00A9               	movwf	___lwdiv@dividend+1
  6619  0364  0847               	movf	sprintf@val,w
  6620  0365  00A8               	movwf	___lwdiv@dividend
  6621  0366  120A  158A  224A  120A  118A  	fcall	___lwdiv
  6622  036B  1283               	bcf	3,5	;RP0=0, select bank0
  6623  036C  1303               	bcf	3,6	;RP1=0, select bank0
  6624  036D  0827               	movf	?___lwdiv+1,w
  6625  036E  00B1               	movwf	___lwmod@dividend+1
  6626  036F  0826               	movf	?___lwdiv,w
  6627  0370  00B0               	movwf	___lwmod@dividend
  6628  0371  120A  158A  21CC  120A  118A  	fcall	___lwmod
  6629  0376  1283               	bcf	3,5	;RP0=0, select bank0
  6630  0377  1303               	bcf	3,6	;RP1=0, select bank0
  6631  0378  082E               	movf	?___lwmod,w
  6632  0379  3E30               	addlw	48
  6633  037A  00BF               	movwf	??_sprintf+1
  6634  037B  083F               	movf	??_sprintf+1,w
  6635  037C  00C9               	movwf	sprintf@c
  6636  037D                     l2874:	
  6637                           
  6638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  6639  037D  0849               	movf	sprintf@c,w
  6640  037E  00BE               	movwf	??_sprintf
  6641  037F  0834               	movf	sprintf@sp,w
  6642  0380  0084               	movwf	4
  6643  0381  1783               	bsf	3,7
  6644  0382  1C35               	btfss	sprintf@sp+1,0
  6645  0383  1383               	bcf	3,7
  6646  0384  083E               	movf	??_sprintf,w
  6647  0385  0080               	movwf	0
  6648  0386                     l2876:	
  6649  0386  3001               	movlw	1
  6650  0387  07B4               	addwf	sprintf@sp,f
  6651  0388  1803               	skipnc
  6652  0389  0AB5               	incf	sprintf@sp+1,f
  6653  038A  3000               	movlw	0
  6654  038B  07B5               	addwf	sprintf@sp+1,f
  6655  038C                     l2878:	
  6656                           
  6657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6658  038C  30FF               	movlw	255
  6659  038D  00BE               	movwf	??_sprintf
  6660  038E  083E               	movf	??_sprintf,w
  6661  038F  07C2               	addwf	sprintf@prec,f
  6662  0390  0A42               	incf	sprintf@prec,w
  6663  0391  1D03               	btfss	3,2
  6664  0392  2B94               	goto	u2981
  6665  0393  2B95               	goto	u2980
  6666  0394                     u2981:	
  6667  0394  2B49               	goto	l2872
  6668  0395                     u2980:	
  6669  0395                     l2880:	
  6670                           
  6671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6672  0395  0837               	movf	sprintf@f+1,w
  6673  0396  00BF               	movwf	??_sprintf+1
  6674  0397  0836               	movf	sprintf@f,w
  6675  0398  00BE               	movwf	??_sprintf
  6676  0399  0AB6               	incf	sprintf@f,f
  6677  039A  1903               	skipnz
  6678  039B  0AB7               	incf	sprintf@f+1,f
  6679  039C  083F               	movf	??_sprintf+1,w
  6680  039D  00FF               	movwf	btemp+1
  6681  039E  083E               	movf	??_sprintf,w
  6682  039F  0084               	movwf	4
  6683  03A0  120A  118A  2400  120A  118A  	fcall	stringtab
  6684  03A5  00C0               	movwf	??_sprintf+2
  6685  03A6  0840               	movf	??_sprintf+2,w
  6686  03A7  00C9               	movwf	sprintf@c
  6687  03A8  0849               	movf	sprintf@c,w
  6688  03A9  1D03               	btfss	3,2
  6689  03AA  2BAC               	goto	u2991
  6690  03AB  2BAD               	goto	u2990
  6691  03AC                     u2991:	
  6692  03AC  2A52               	goto	l2812
  6693  03AD                     u2990:	
  6694  03AD                     l2882:	
  6695                           
  6696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  6697  03AD  0834               	movf	sprintf@sp,w
  6698  03AE  0084               	movwf	4
  6699  03AF  1783               	bsf	3,7
  6700  03B0  1C35               	btfss	sprintf@sp+1,0
  6701  03B1  1383               	bcf	3,7
  6702  03B2  0180               	clrf	0
  6703  03B3                     l582:	
  6704  03B3  0008               	return
  6705  03B4                     __end_of_sprintf:	
  6706                           
  6707                           	psect	text26
  6708  0DF5                     __ptext26:	
  6709 ;; *************** function _mostrarDigitos *****************
  6710 ;; Defined at:
  6711 ;;		line 17 in file "mostrarInicializar.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  num             2   20[BANK0 ] unsigned int 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6725 ;;      Params:         0       2       0       0       0
  6726 ;;      Locals:         0       2       0       0       0
  6727 ;;      Temps:          0       0       0       0       0
  6728 ;;      Totals:         0       4       0       0       0
  6729 ;;Total ram usage:        4 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    2
  6732 ;; This function calls:
  6733 ;;		___lwdiv
  6734 ;;		___lwmod
  6735 ;; This function is called by:
  6736 ;;		_accionesAceptar
  6737 ;;		_accionesDeshacer
  6738 ;;		_lecturaEtiqueta
  6739 ;;		_main
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function _mostrarDigitos
  6745  0DF5                     _mostrarDigitos:	
  6746  0DF5                     l3138:	
  6747                           ;incstack = 0
  6748                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6749                           
  6750                           
  6751                           ;mostrarInicializar.c: 19:     PORTB = BS[num/100];
  6752  0DF5  3064               	movlw	100
  6753  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  6754  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  6755  0DF8  00A6               	movwf	___lwdiv@divisor
  6756  0DF9  3000               	movlw	0
  6757  0DFA  00A7               	movwf	___lwdiv@divisor+1
  6758  0DFB  0835               	movf	mostrarDigitos@num+1,w
  6759  0DFC  00A9               	movwf	___lwdiv@dividend+1
  6760  0DFD  0834               	movf	mostrarDigitos@num,w
  6761  0DFE  00A8               	movwf	___lwdiv@dividend
  6762  0DFF  120A  158A  224A  120A  158A  	fcall	___lwdiv
  6763  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  6764  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  6765  0E06  0826               	movf	?___lwdiv,w
  6766  0E07  3E1C               	addlw	low (_BS| (0+32768))
  6767  0E08  0084               	movwf	4
  6768  0E09  3084               	movlw	high (_BS| (0+32768))
  6769  0E0A  1803               	skipnc
  6770  0E0B  3E01               	addlw	1
  6771  0E0C  00FF               	movwf	btemp+1
  6772  0E0D  120A  118A  2400  120A  158A  	fcall	stringtab
  6773  0E12  0086               	movwf	6	;volatile
  6774  0E13                     l3140:	
  6775                           
  6776                           ;mostrarInicializar.c: 20:     PORTB = PORTB | ((num%100)/10);
  6777  0E13  300A               	movlw	10
  6778  0E14  00A6               	movwf	___lwdiv@divisor
  6779  0E15  3000               	movlw	0
  6780  0E16  00A7               	movwf	___lwdiv@divisor+1
  6781  0E17  0835               	movf	mostrarDigitos@num+1,w
  6782  0E18  00B1               	movwf	___lwmod@dividend+1
  6783  0E19  0834               	movf	mostrarDigitos@num,w
  6784  0E1A  00B0               	movwf	___lwmod@dividend
  6785  0E1B  3064               	movlw	100
  6786  0E1C  00AE               	movwf	___lwmod@divisor
  6787  0E1D  3000               	movlw	0
  6788  0E1E  00AF               	movwf	___lwmod@divisor+1
  6789  0E1F  120A  158A  21CC  120A  158A  	fcall	___lwmod
  6790  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  6791  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  6792  0E26  082F               	movf	?___lwmod+1,w
  6793  0E27  00A9               	movwf	___lwdiv@dividend+1
  6794  0E28  082E               	movf	?___lwmod,w
  6795  0E29  00A8               	movwf	___lwdiv@dividend
  6796  0E2A  120A  158A  224A  120A  158A  	fcall	___lwdiv
  6797  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  6798  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  6799  0E31  0826               	movf	?___lwdiv,w
  6800  0E32  0406               	iorwf	6,w
  6801  0E33  0086               	movwf	6	;volatile
  6802  0E34                     l3142:	
  6803                           
  6804                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6805  0E34  0835               	movf	mostrarDigitos@num+1,w
  6806  0E35  00B1               	movwf	___lwmod@dividend+1
  6807  0E36  0834               	movf	mostrarDigitos@num,w
  6808  0E37  00B0               	movwf	___lwmod@dividend
  6809  0E38  3064               	movlw	100
  6810  0E39  00AE               	movwf	___lwmod@divisor
  6811  0E3A  3000               	movlw	0
  6812  0E3B  00AF               	movwf	___lwmod@divisor+1
  6813  0E3C  120A  158A  21CC  120A  158A  	fcall	___lwmod
  6814  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  6815  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  6816  0E43  082F               	movf	?___lwmod+1,w
  6817  0E44  00B7               	movwf	_mostrarDigitos$1100+1
  6818  0E45  082E               	movf	?___lwmod,w
  6819  0E46  00B6               	movwf	_mostrarDigitos$1100
  6820                           
  6821                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6822  0E47  300A               	movlw	10
  6823  0E48  00AE               	movwf	___lwmod@divisor
  6824  0E49  3000               	movlw	0
  6825  0E4A  00AF               	movwf	___lwmod@divisor+1
  6826  0E4B  0837               	movf	_mostrarDigitos$1100+1,w
  6827  0E4C  00B1               	movwf	___lwmod@dividend+1
  6828  0E4D  0836               	movf	_mostrarDigitos$1100,w
  6829  0E4E  00B0               	movwf	___lwmod@dividend
  6830  0E4F  120A  158A  21CC  120A  158A  	fcall	___lwmod
  6831  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  6832  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  6833  0E56  082E               	movf	?___lwmod,w
  6834  0E57  3E1C               	addlw	low (_BS| (0+32768))
  6835  0E58  0084               	movwf	4
  6836  0E59  3084               	movlw	high (_BS| (0+32768))
  6837  0E5A  1803               	skipnc
  6838  0E5B  3E01               	addlw	1
  6839  0E5C  00FF               	movwf	btemp+1
  6840  0E5D  120A  118A  2400  120A  158A  	fcall	stringtab
  6841  0E62  0088               	movwf	8	;volatile
  6842  0E63                     l408:	
  6843  0E63  0008               	return
  6844  0E64                     __end_of_mostrarDigitos:	
  6845                           
  6846                           	psect	text27
  6847  09CC                     __ptext27:	
  6848 ;; *************** function ___lwmod *****************
  6849 ;; Defined at:
  6850 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  divisor         2   14[BANK0 ] unsigned int 
  6853 ;;  dividend        2   16[BANK0 ] unsigned int 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;  counter         1   19[BANK0 ] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  2   14[BANK0 ] unsigned int 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6865 ;;      Params:         0       4       0       0       0
  6866 ;;      Locals:         0       1       0       0       0
  6867 ;;      Temps:          0       1       0       0       0
  6868 ;;      Totals:         0       6       0       0       0
  6869 ;;Total ram usage:        6 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    1
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_main
  6876 ;;		_mostrarDigitos
  6877 ;;		_sprintf
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           
  6882                           ;psect for function ___lwmod
  6883  09CC                     ___lwmod:	
  6884  09CC                     l2788:	
  6885                           ;incstack = 0
  6886                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6887                           
  6888  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6889  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  6890  09CE  082E               	movf	___lwmod@divisor,w
  6891  09CF  042F               	iorwf	___lwmod@divisor+1,w
  6892  09D0  1903               	btfsc	3,2
  6893  09D1  29D3               	goto	u2841
  6894  09D2  29D4               	goto	u2840
  6895  09D3                     u2841:	
  6896  09D3  2A03               	goto	l2806
  6897  09D4                     u2840:	
  6898  09D4                     l2790:	
  6899  09D4  01B3               	clrf	___lwmod@counter
  6900  09D5  0AB3               	incf	___lwmod@counter,f
  6901  09D6  29E2               	goto	l2796
  6902  09D7                     l2792:	
  6903  09D7  3001               	movlw	1
  6904  09D8                     u2855:	
  6905  09D8  1003               	clrc
  6906  09D9  0DAE               	rlf	___lwmod@divisor,f
  6907  09DA  0DAF               	rlf	___lwmod@divisor+1,f
  6908  09DB  3EFF               	addlw	-1
  6909  09DC  1D03               	skipz
  6910  09DD  29D8               	goto	u2855
  6911  09DE                     l2794:	
  6912  09DE  3001               	movlw	1
  6913  09DF  00B2               	movwf	??___lwmod
  6914  09E0  0832               	movf	??___lwmod,w
  6915  09E1  07B3               	addwf	___lwmod@counter,f
  6916  09E2                     l2796:	
  6917  09E2  1FAF               	btfss	___lwmod@divisor+1,7
  6918  09E3  29E5               	goto	u2861
  6919  09E4  29E6               	goto	u2860
  6920  09E5                     u2861:	
  6921  09E5  29D7               	goto	l2792
  6922  09E6                     u2860:	
  6923  09E6                     l2798:	
  6924  09E6  082F               	movf	___lwmod@divisor+1,w
  6925  09E7  0231               	subwf	___lwmod@dividend+1,w
  6926  09E8  1D03               	skipz
  6927  09E9  29EC               	goto	u2875
  6928  09EA  082E               	movf	___lwmod@divisor,w
  6929  09EB  0230               	subwf	___lwmod@dividend,w
  6930  09EC                     u2875:	
  6931  09EC  1C03               	skipc
  6932  09ED  29EF               	goto	u2871
  6933  09EE  29F0               	goto	u2870
  6934  09EF                     u2871:	
  6935  09EF  29F6               	goto	l2802
  6936  09F0                     u2870:	
  6937  09F0                     l2800:	
  6938  09F0  082E               	movf	___lwmod@divisor,w
  6939  09F1  02B0               	subwf	___lwmod@dividend,f
  6940  09F2  082F               	movf	___lwmod@divisor+1,w
  6941  09F3  1C03               	skipc
  6942  09F4  03B1               	decf	___lwmod@dividend+1,f
  6943  09F5  02B1               	subwf	___lwmod@dividend+1,f
  6944  09F6                     l2802:	
  6945  09F6  3001               	movlw	1
  6946  09F7                     u2885:	
  6947  09F7  1003               	clrc
  6948  09F8  0CAF               	rrf	___lwmod@divisor+1,f
  6949  09F9  0CAE               	rrf	___lwmod@divisor,f
  6950  09FA  3EFF               	addlw	-1
  6951  09FB  1D03               	skipz
  6952  09FC  29F7               	goto	u2885
  6953  09FD                     l2804:	
  6954  09FD  3001               	movlw	1
  6955  09FE  02B3               	subwf	___lwmod@counter,f
  6956  09FF  1D03               	btfss	3,2
  6957  0A00  2A02               	goto	u2891
  6958  0A01  2A03               	goto	u2890
  6959  0A02                     u2891:	
  6960  0A02  29E6               	goto	l2798
  6961  0A03                     u2890:	
  6962  0A03                     l2806:	
  6963  0A03  0831               	movf	___lwmod@dividend+1,w
  6964  0A04  00AF               	movwf	?___lwmod+1
  6965  0A05  0830               	movf	___lwmod@dividend,w
  6966  0A06  00AE               	movwf	?___lwmod
  6967  0A07                     l868:	
  6968  0A07  0008               	return
  6969  0A08                     __end_of___lwmod:	
  6970                           
  6971                           	psect	text28
  6972  0A4A                     __ptext28:	
  6973 ;; *************** function ___lwdiv *****************
  6974 ;; Defined at:
  6975 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  divisor         2    6[BANK0 ] unsigned int 
  6978 ;;  dividend        2    8[BANK0 ] unsigned int 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  quotient        2   12[BANK0 ] unsigned int 
  6981 ;;  counter         1   11[BANK0 ] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  2    6[BANK0 ] unsigned int 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6991 ;;      Params:         0       4       0       0       0
  6992 ;;      Locals:         0       3       0       0       0
  6993 ;;      Temps:          0       1       0       0       0
  6994 ;;      Totals:         0       8       0       0       0
  6995 ;;Total ram usage:        8 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_main
  7002 ;;		_mostrarDigitos
  7003 ;;		_sprintf
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function ___lwdiv
  7009  0A4A                     ___lwdiv:	
  7010  0A4A                     l2762:	
  7011                           ;incstack = 0
  7012                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7013                           
  7014  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  7015  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  7016  0A4C  01AC               	clrf	___lwdiv@quotient
  7017  0A4D  01AD               	clrf	___lwdiv@quotient+1
  7018  0A4E                     l2764:	
  7019  0A4E  0826               	movf	___lwdiv@divisor,w
  7020  0A4F  0427               	iorwf	___lwdiv@divisor+1,w
  7021  0A50  1903               	btfsc	3,2
  7022  0A51  2A53               	goto	u2771
  7023  0A52  2A54               	goto	u2770
  7024  0A53                     u2771:	
  7025  0A53  2A8B               	goto	l2784
  7026  0A54                     u2770:	
  7027  0A54                     l2766:	
  7028  0A54  01AB               	clrf	___lwdiv@counter
  7029  0A55  0AAB               	incf	___lwdiv@counter,f
  7030  0A56  2A62               	goto	l2772
  7031  0A57                     l2768:	
  7032  0A57  3001               	movlw	1
  7033  0A58                     u2785:	
  7034  0A58  1003               	clrc
  7035  0A59  0DA6               	rlf	___lwdiv@divisor,f
  7036  0A5A  0DA7               	rlf	___lwdiv@divisor+1,f
  7037  0A5B  3EFF               	addlw	-1
  7038  0A5C  1D03               	skipz
  7039  0A5D  2A58               	goto	u2785
  7040  0A5E                     l2770:	
  7041  0A5E  3001               	movlw	1
  7042  0A5F  00AA               	movwf	??___lwdiv
  7043  0A60  082A               	movf	??___lwdiv,w
  7044  0A61  07AB               	addwf	___lwdiv@counter,f
  7045  0A62                     l2772:	
  7046  0A62  1FA7               	btfss	___lwdiv@divisor+1,7
  7047  0A63  2A65               	goto	u2791
  7048  0A64  2A66               	goto	u2790
  7049  0A65                     u2791:	
  7050  0A65  2A57               	goto	l2768
  7051  0A66                     u2790:	
  7052  0A66                     l2774:	
  7053  0A66  3001               	movlw	1
  7054  0A67                     u2805:	
  7055  0A67  1003               	clrc
  7056  0A68  0DAC               	rlf	___lwdiv@quotient,f
  7057  0A69  0DAD               	rlf	___lwdiv@quotient+1,f
  7058  0A6A  3EFF               	addlw	-1
  7059  0A6B  1D03               	skipz
  7060  0A6C  2A67               	goto	u2805
  7061  0A6D  0827               	movf	___lwdiv@divisor+1,w
  7062  0A6E  0229               	subwf	___lwdiv@dividend+1,w
  7063  0A6F  1D03               	skipz
  7064  0A70  2A73               	goto	u2815
  7065  0A71  0826               	movf	___lwdiv@divisor,w
  7066  0A72  0228               	subwf	___lwdiv@dividend,w
  7067  0A73                     u2815:	
  7068  0A73  1C03               	skipc
  7069  0A74  2A76               	goto	u2811
  7070  0A75  2A77               	goto	u2810
  7071  0A76                     u2811:	
  7072  0A76  2A7E               	goto	l2780
  7073  0A77                     u2810:	
  7074  0A77                     l2776:	
  7075  0A77  0826               	movf	___lwdiv@divisor,w
  7076  0A78  02A8               	subwf	___lwdiv@dividend,f
  7077  0A79  0827               	movf	___lwdiv@divisor+1,w
  7078  0A7A  1C03               	skipc
  7079  0A7B  03A9               	decf	___lwdiv@dividend+1,f
  7080  0A7C  02A9               	subwf	___lwdiv@dividend+1,f
  7081  0A7D                     l2778:	
  7082  0A7D  142C               	bsf	___lwdiv@quotient,0
  7083  0A7E                     l2780:	
  7084  0A7E  3001               	movlw	1
  7085  0A7F                     u2825:	
  7086  0A7F  1003               	clrc
  7087  0A80  0CA7               	rrf	___lwdiv@divisor+1,f
  7088  0A81  0CA6               	rrf	___lwdiv@divisor,f
  7089  0A82  3EFF               	addlw	-1
  7090  0A83  1D03               	skipz
  7091  0A84  2A7F               	goto	u2825
  7092  0A85                     l2782:	
  7093  0A85  3001               	movlw	1
  7094  0A86  02AB               	subwf	___lwdiv@counter,f
  7095  0A87  1D03               	btfss	3,2
  7096  0A88  2A8A               	goto	u2831
  7097  0A89  2A8B               	goto	u2830
  7098  0A8A                     u2831:	
  7099  0A8A  2A66               	goto	l2774
  7100  0A8B                     u2830:	
  7101  0A8B                     l2784:	
  7102  0A8B  082D               	movf	___lwdiv@quotient+1,w
  7103  0A8C  00A7               	movwf	?___lwdiv+1
  7104  0A8D  082C               	movf	___lwdiv@quotient,w
  7105  0A8E  00A6               	movwf	?___lwdiv
  7106  0A8F                     l858:	
  7107  0A8F  0008               	return
  7108  0A90                     __end_of___lwdiv:	
  7109                           
  7110                           	psect	text29
  7111  0990                     __ptext29:	
  7112 ;; *************** function _envioTX *****************
  7113 ;; Defined at:
  7114 ;;		line 39 in file "mostrarInicializar.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  mensaje         2    0[BANK0 ] PTR unsigned char 
  7117 ;;		 -> STR_19(19), agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), 
  7118 ;;		 -> STR_15(40), lecturaConsulta@strLote(32), STR_13(18), STR_12(15), 
  7119 ;;		 -> STR_11(22), consultaPrecio@mensaje(26), STR_8(40), STR_7(23), 
  7120 ;;		 -> STR_6(40), cierreDeLote@strLote(32), STR_4(19), accionesPuertoSerial@mensaje(12), 
  7121 ;;		 -> STR_2(19), accionesAceptar@strLote(32), 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  i               2    5[BANK0 ] int 
  7124 ;;  transmitir      1    7[BANK0 ] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      void 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7134 ;;      Params:         0       2       0       0       0
  7135 ;;      Locals:         0       3       0       0       0
  7136 ;;      Temps:          0       3       0       0       0
  7137 ;;      Totals:         0       8       0       0       0
  7138 ;;Total ram usage:        8 bytes
  7139 ;; Hardware stack levels used:    2
  7140 ;; Hardware stack levels required when called:    1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_accionesAceptar
  7145 ;;		_accionesDeshacer
  7146 ;;		_accionesPuertoSerial
  7147 ;;		_lecturaEtiqueta
  7148 ;;		_cierreDeLote
  7149 ;;		_lecturaMas
  7150 ;;		_lecturaMenos
  7151 ;;		_consultaPrecio
  7152 ;;		_lecturaConsulta
  7153 ;;		_main
  7154 ;;		_agregarModificarPrecio
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           
  7159                           ;psect for function _envioTX
  7160  0990                     _envioTX:	
  7161  0990                     l2890:	
  7162                           ;incstack = 0
  7163                           ; Regs used in _envioTX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7164                           
  7165                           
  7166                           ;mostrarInicializar.c: 40:     int i = 0;
  7167  0990  1283               	bcf	3,5	;RP0=0, select bank0
  7168  0991  1303               	bcf	3,6	;RP1=0, select bank0
  7169  0992  01A5               	clrf	envioTX@i
  7170  0993  01A6               	clrf	envioTX@i+1
  7171  0994                     l2892:	
  7172                           
  7173                           ;mostrarInicializar.c: 41:     char transmitir=1;
  7174  0994  01A7               	clrf	envioTX@transmitir
  7175  0995  0AA7               	incf	envioTX@transmitir,f
  7176                           
  7177                           ;mostrarInicializar.c: 42:  while(transmitir){
  7178  0996  29C0               	goto	l2902
  7179  0997                     l2894:	
  7180                           
  7181                           ;mostrarInicializar.c: 43:   TXREG = mensaje[i];
  7182  0997  0825               	movf	envioTX@i,w
  7183  0998  0720               	addwf	envioTX@mensaje,w
  7184  0999  00A3               	movwf	??_envioTX+1
  7185  099A  0821               	movf	envioTX@mensaje+1,w
  7186  099B  00A2               	movwf	??_envioTX
  7187  099C  1803               	skipnc
  7188  099D  0AA2               	incf	??_envioTX,f
  7189  099E  1FA5               	btfss	envioTX@i,7
  7190  099F  29A1               	goto	u3000
  7191  09A0  03A2               	decf	??_envioTX,f
  7192  09A1                     u3000:	
  7193  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  7194  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  7195  09A3  0822               	movf	??_envioTX,w
  7196  09A4  00A4               	movwf	??_envioTX+2
  7197  09A5  0824               	movf	??_envioTX+2,w
  7198  09A6  00FF               	movwf	btemp+1
  7199  09A7  0823               	movf	??_envioTX+1,w
  7200  09A8  0084               	movwf	4
  7201  09A9  120A  118A  2400  120A  158A  	fcall	stringtab
  7202  09AE  0099               	movwf	25	;volatile
  7203  09AF                     l2896:	
  7204                           
  7205                           ;mostrarInicializar.c: 44:   if (TXREG==0){
  7206  09AF  0819               	movf	25,w	;volatile
  7207  09B0  1D03               	btfss	3,2
  7208  09B1  29B3               	goto	u3011
  7209  09B2  29B4               	goto	u3010
  7210  09B3                     u3011:	
  7211  09B3  29B6               	goto	l2900
  7212  09B4                     u3010:	
  7213  09B4                     l2898:	
  7214                           
  7215                           ;mostrarInicializar.c: 45:    transmitir=0;
  7216  09B4  01A7               	clrf	envioTX@transmitir
  7217                           
  7218                           ;mostrarInicializar.c: 46:         }
  7219  09B5  29BC               	goto	l420
  7220  09B6                     l2900:	
  7221                           
  7222                           ;mostrarInicializar.c: 48:    i++;
  7223  09B6  3001               	movlw	1
  7224  09B7  07A5               	addwf	envioTX@i,f
  7225  09B8  1803               	skipnc
  7226  09B9  0AA6               	incf	envioTX@i+1,f
  7227  09BA  3000               	movlw	0
  7228  09BB  07A6               	addwf	envioTX@i+1,f
  7229  09BC                     l420:	
  7230  09BC  1E0C               	btfss	12,4	;volatile
  7231  09BD  29BF               	goto	u3021
  7232  09BE  29C0               	goto	u3020
  7233  09BF                     u3021:	
  7234  09BF  29BC               	goto	l420
  7235  09C0                     u3020:	
  7236  09C0                     l2902:	
  7237                           
  7238                           ;mostrarInicializar.c: 42:  while(transmitir){
  7239  09C0  0827               	movf	envioTX@transmitir,w
  7240  09C1  1D03               	btfss	3,2
  7241  09C2  29C4               	goto	u3031
  7242  09C3  29C5               	goto	u3030
  7243  09C4                     u3031:	
  7244  09C4  2997               	goto	l2894
  7245  09C5                     u3030:	
  7246  09C5                     l2904:	
  7247                           
  7248                           ;mostrarInicializar.c: 53:     TXREG = 13;
  7249  09C5  300D               	movlw	13
  7250  09C6  0099               	movwf	25	;volatile
  7251  09C7                     l424:	
  7252                           ;mostrarInicializar.c: 54:     while(TXIF == 0);
  7253                           
  7254  09C7  1E0C               	btfss	12,4	;volatile
  7255  09C8  29CA               	goto	u3041
  7256  09C9  29CB               	goto	u3040
  7257  09CA                     u3041:	
  7258  09CA  29C7               	goto	l424
  7259  09CB                     u3040:	
  7260  09CB                     l427:	
  7261  09CB  0008               	return
  7262  09CC                     __end_of_envioTX:	
  7263                           
  7264                           	psect	text30
  7265  03B4                     __ptext30:	
  7266 ;; *************** function _bailenLeds *****************
  7267 ;; Defined at:
  7268 ;;		line 25 in file "mostrarInicializar.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;		None
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  i               2    3[BANK0 ] unsigned short 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      void 
  7275 ;; Registers used:
  7276 ;;		wreg, status,2
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7282 ;;      Params:         0       0       0       0       0
  7283 ;;      Locals:         0       2       0       0       0
  7284 ;;      Temps:          0       3       0       0       0
  7285 ;;      Totals:         0       5       0       0       0
  7286 ;;Total ram usage:        5 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    1
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_accionesAceptar
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           
  7297                           ;psect for function _bailenLeds
  7298  03B4                     _bailenLeds:	
  7299  03B4                     l3234:	
  7300                           ;incstack = 0
  7301                           ; Regs used in _bailenLeds: [wreg+status,2]
  7302                           
  7303                           
  7304                           ;mostrarInicializar.c: 27:     unsigned short int i;;mostrarInicializar.c: 28:     for (
      +                          i = 0; i < 3; i++) {
  7305  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  7306  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  7307  03B6  01A3               	clrf	bailenLeds@i
  7308  03B7  01A4               	clrf	bailenLeds@i+1
  7309  03B8                     l411:	
  7310                           
  7311                           ;mostrarInicializar.c: 29:         RA3 = 1;
  7312  03B8  1585               	bsf	5,3	;volatile
  7313  03B9                     l3240:	
  7314                           
  7315                           ;mostrarInicializar.c: 30:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7316  03B9  3002               	movlw	2
  7317  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  7318  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  7319  03BC  00A2               	movwf	??_bailenLeds+2
  7320  03BD  3004               	movlw	4
  7321  03BE  00A1               	movwf	??_bailenLeds+1
  7322  03BF  30B9               	movlw	185
  7323  03C0  00A0               	movwf	??_bailenLeds
  7324  03C1                     u4067:	
  7325  03C1  0BA0               	decfsz	??_bailenLeds,f
  7326  03C2  2BC1               	goto	u4067
  7327  03C3  0BA1               	decfsz	??_bailenLeds+1,f
  7328  03C4  2BC1               	goto	u4067
  7329  03C5  0BA2               	decfsz	??_bailenLeds+2,f
  7330  03C6  2BC1               	goto	u4067
  7331  03C7  2BC8               	nop2
  7332  03C8                     l3242:	
  7333                           
  7334                           ;mostrarInicializar.c: 31:         RA5 = 1;
  7335  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  7336  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  7337  03CA  1685               	bsf	5,5	;volatile
  7338                           
  7339                           ;mostrarInicializar.c: 32:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7340  03CB  3002               	movlw	2
  7341  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  7342  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  7343  03CE  00A2               	movwf	??_bailenLeds+2
  7344  03CF  3004               	movlw	4
  7345  03D0  00A1               	movwf	??_bailenLeds+1
  7346  03D1  30B9               	movlw	185
  7347  03D2  00A0               	movwf	??_bailenLeds
  7348  03D3                     u4077:	
  7349  03D3  0BA0               	decfsz	??_bailenLeds,f
  7350  03D4  2BD3               	goto	u4077
  7351  03D5  0BA1               	decfsz	??_bailenLeds+1,f
  7352  03D6  2BD3               	goto	u4077
  7353  03D7  0BA2               	decfsz	??_bailenLeds+2,f
  7354  03D8  2BD3               	goto	u4077
  7355  03D9  2BDA               	nop2
  7356  03DA                     l3244:	
  7357                           
  7358                           ;mostrarInicializar.c: 33:         RA3 = 0;
  7359  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  7360  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  7361  03DC  1185               	bcf	5,3	;volatile
  7362                           
  7363                           ;mostrarInicializar.c: 34:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7364  03DD  3002               	movlw	2
  7365  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  7366  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  7367  03E0  00A2               	movwf	??_bailenLeds+2
  7368  03E1  3004               	movlw	4
  7369  03E2  00A1               	movwf	??_bailenLeds+1
  7370  03E3  30B9               	movlw	185
  7371  03E4  00A0               	movwf	??_bailenLeds
  7372  03E5                     u4087:	
  7373  03E5  0BA0               	decfsz	??_bailenLeds,f
  7374  03E6  2BE5               	goto	u4087
  7375  03E7  0BA1               	decfsz	??_bailenLeds+1,f
  7376  03E8  2BE5               	goto	u4087
  7377  03E9  0BA2               	decfsz	??_bailenLeds+2,f
  7378  03EA  2BE5               	goto	u4087
  7379  03EB  2BEC               	nop2
  7380  03EC                     l3246:	
  7381                           
  7382                           ;mostrarInicializar.c: 35:         RA5 = 0;
  7383  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  7384  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  7385  03EE  1285               	bcf	5,5	;volatile
  7386                           
  7387                           ;mostrarInicializar.c: 36:     }
  7388  03EF  3001               	movlw	1
  7389  03F0  07A3               	addwf	bailenLeds@i,f
  7390  03F1  1803               	skipnc
  7391  03F2  0AA4               	incf	bailenLeds@i+1,f
  7392  03F3  3000               	movlw	0
  7393  03F4  07A4               	addwf	bailenLeds@i+1,f
  7394  03F5  3000               	movlw	0
  7395  03F6  0224               	subwf	bailenLeds@i+1,w
  7396  03F7  3003               	movlw	3
  7397  03F8  1903               	skipnz
  7398  03F9  0223               	subwf	bailenLeds@i,w
  7399  03FA  1C03               	skipc
  7400  03FB  2BFD               	goto	u3641
  7401  03FC  2BFE               	goto	u3640
  7402  03FD                     u3641:	
  7403  03FD  2BB8               	goto	l411
  7404  03FE                     u3640:	
  7405  03FE                     l413:	
  7406  03FE  0008               	return
  7407  03FF                     __end_of_bailenLeds:	
  7408                           
  7409                           	psect	text31
  7410  0B34                     __ptext31:	
  7411 ;; *************** function _int_usart *****************
  7412 ;; Defined at:
  7413 ;;		line 99 in file "main.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;		None
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  basura          1    0        unsigned char 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7427 ;;      Params:         0       0       0       0       0
  7428 ;;      Locals:         1       0       0       0       0
  7429 ;;      Temps:          4       0       0       0       0
  7430 ;;      Totals:         5       0       0       0       0
  7431 ;;Total ram usage:        5 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		Interrupt level 1
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           
  7441                           ;psect for function _int_usart
  7442  0B34                     _int_usart:	
  7443  0B34                     i1l2700:	
  7444                           
  7445                           ;main.c: 101:     if(TMR1IF){
  7446  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7447  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7448  0B36  1C0C               	btfss	12,0	;volatile
  7449  0B37  2B39               	goto	u265_21
  7450  0B38  2B3A               	goto	u265_20
  7451  0B39                     u265_21:	
  7452  0B39  2B40               	goto	i1l340
  7453  0B3A                     u265_20:	
  7454  0B3A                     i1l2702:	
  7455                           
  7456                           ;main.c: 102:         GO_nDONE = 1;
  7457  0B3A  151F               	bsf	31,2	;volatile
  7458                           
  7459                           ;main.c: 103:         TMR1 = 15536;
  7460  0B3B  303C               	movlw	60
  7461  0B3C  008F               	movwf	15	;volatile
  7462  0B3D  30B0               	movlw	176
  7463  0B3E  008E               	movwf	14	;volatile
  7464                           
  7465                           ;main.c: 104:         TMR1IF = 0;
  7466  0B3F  100C               	bcf	12,0	;volatile
  7467  0B40                     i1l340:	
  7468                           ;main.c: 105:     }
  7469                           
  7470                           
  7471                           ;main.c: 106:     if(RCSTAbits.FERR){
  7472  0B40  1D18               	btfss	24,2	;volatile
  7473  0B41  2B43               	goto	u266_21
  7474  0B42  2B44               	goto	u266_20
  7475  0B43                     u266_21:	
  7476  0B43  2B45               	goto	i1l2706
  7477  0B44                     u266_20:	
  7478  0B44                     i1l2704:	
  7479  0B44  081A               	movf	26,w	;volatile
  7480  0B45                     i1l2706:	
  7481                           
  7482                           ;main.c: 109:     if (RCSTAbits.OERR){
  7483  0B45  1C98               	btfss	24,1	;volatile
  7484  0B46  2B48               	goto	u267_21
  7485  0B47  2B49               	goto	u267_20
  7486  0B48                     u267_21:	
  7487  0B48  2B4B               	goto	i1l342
  7488  0B49                     u267_20:	
  7489  0B49                     i1l2708:	
  7490                           
  7491                           ;main.c: 110:         RCSTAbits.CREN=0;
  7492  0B49  1218               	bcf	24,4	;volatile
  7493                           
  7494                           ;main.c: 111:         RCSTAbits.CREN=1;
  7495  0B4A  1618               	bsf	24,4	;volatile
  7496  0B4B                     i1l342:	
  7497                           ;main.c: 112:     }
  7498                           
  7499                           
  7500                           ;main.c: 113:     if(RCIF) {
  7501  0B4B  1E8C               	btfss	12,5	;volatile
  7502  0B4C  2B4E               	goto	u268_21
  7503  0B4D  2B4F               	goto	u268_20
  7504  0B4E                     u268_21:	
  7505  0B4E  2B78               	goto	i1l2722
  7506  0B4F                     u268_20:	
  7507  0B4F                     i1l2710:	
  7508                           
  7509                           ;main.c: 114:         if((codigoEntrada[serial] = RCREG) != 0x0D && (codigoEntrada[seria
      +                          l]) != 0x0A && serial < (10 -1)) {
  7510  0B4F  081A               	movf	26,w	;volatile
  7511  0B50  00F4               	movwf	??_int_usart
  7512  0B51  0873               	movf	_serial,w
  7513  0B52  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7514  0B53  0084               	movwf	4
  7515  0B54  0874               	movf	??_int_usart,w
  7516  0B55  1383               	bcf	3,7	;select IRP bank1
  7517  0B56  0080               	movwf	0
  7518  0B57  300D               	movlw	13
  7519  0B58  0600               	xorwf	0,w
  7520  0B59  1903               	btfsc	3,2
  7521  0B5A  2B5C               	goto	u269_21
  7522  0B5B  2B5D               	goto	u269_20
  7523  0B5C                     u269_21:	
  7524  0B5C  2B71               	goto	i1l2718
  7525  0B5D                     u269_20:	
  7526  0B5D                     i1l2712:	
  7527  0B5D  0873               	movf	_serial,w
  7528  0B5E  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7529  0B5F  0084               	movwf	4
  7530  0B60  300A               	movlw	10
  7531  0B61  0600               	xorwf	0,w
  7532  0B62  1903               	btfsc	3,2
  7533  0B63  2B65               	goto	u270_21
  7534  0B64  2B66               	goto	u270_20
  7535  0B65                     u270_21:	
  7536  0B65  2B71               	goto	i1l2718
  7537  0B66                     u270_20:	
  7538  0B66                     i1l2714:	
  7539  0B66  3009               	movlw	9
  7540  0B67  0273               	subwf	_serial,w
  7541  0B68  1803               	skipnc
  7542  0B69  2B6B               	goto	u271_21
  7543  0B6A  2B6C               	goto	u271_20
  7544  0B6B                     u271_21:	
  7545  0B6B  2B71               	goto	i1l2718
  7546  0B6C                     u271_20:	
  7547  0B6C                     i1l2716:	
  7548                           
  7549                           ;main.c: 115:             serial++;
  7550  0B6C  3001               	movlw	1
  7551  0B6D  00F4               	movwf	??_int_usart
  7552  0B6E  0874               	movf	??_int_usart,w
  7553  0B6F  07F3               	addwf	_serial,f
  7554                           
  7555                           ;main.c: 116:         }
  7556  0B70  2B78               	goto	i1l2722
  7557  0B71                     i1l2718:	
  7558                           
  7559                           ;main.c: 118:             serial = 0;
  7560  0B71  01F3               	clrf	_serial
  7561  0B72                     i1l2720:	
  7562                           
  7563                           ;main.c: 119:             huboInt = 1;
  7564  0B72  3001               	movlw	1
  7565  0B73  1683               	bsf	3,5	;RP0=1, select bank3
  7566  0B74  1703               	bsf	3,6	;RP1=1, select bank3
  7567  0B75  00D2               	movwf	_huboInt^(0+384)
  7568  0B76  3000               	movlw	0
  7569  0B77  00D3               	movwf	(_huboInt^(0+384)+1)
  7570  0B78                     i1l2722:	
  7571                           
  7572                           ;main.c: 122:     if(ADIF) {
  7573  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  7574  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  7575  0B7A  1F0C               	btfss	12,6	;volatile
  7576  0B7B  2B7D               	goto	u272_21
  7577  0B7C  2B7E               	goto	u272_20
  7578  0B7D                     u272_21:	
  7579  0B7D  2B89               	goto	i1l347
  7580  0B7E                     u272_20:	
  7581  0B7E                     i1l2724:	
  7582                           
  7583                           ;main.c: 123:         ADIF = 0;
  7584  0B7E  130C               	bcf	12,6	;volatile
  7585  0B7F                     i1l2726:	
  7586                           
  7587                           ;main.c: 124:         adresult = (ADRESH<<8)+ADRESL;
  7588  0B7F  081E               	movf	30,w	;volatile
  7589  0B80  1683               	bsf	3,5	;RP0=1, select bank3
  7590  0B81  1703               	bsf	3,6	;RP1=1, select bank3
  7591  0B82  00D9               	movwf	(_adresult+1)^(0+384)
  7592  0B83  1683               	bsf	3,5	;RP0=1, select bank1
  7593  0B84  1303               	bcf	3,6	;RP1=0, select bank1
  7594  0B85  081E               	movf	30,w	;volatile
  7595  0B86  1683               	bsf	3,5	;RP0=1, select bank3
  7596  0B87  1703               	bsf	3,6	;RP1=1, select bank3
  7597  0B88  00D8               	movwf	_adresult^(0+384)
  7598  0B89                     i1l347:	
  7599  0B89  0877               	movf	??_int_usart+3,w
  7600  0B8A  008A               	movwf	10
  7601  0B8B  0876               	movf	??_int_usart+2,w
  7602  0B8C  0084               	movwf	4
  7603  0B8D  0E75               	swapf	(??_int_usart+1)^(0+4294967168),w
  7604  0B8E  0083               	movwf	3
  7605  0B8F  0EFE               	swapf	btemp,f
  7606  0B90  0E7E               	swapf	btemp,w
  7607  0B91  0009               	retfie
  7608  0B92                     __end_of_int_usart:	
  7609  007E                     btemp	set	126	;btemp
  7610  007E                     wtemp0	set	126
  7611                           
  7612                           	psect	intentry
  7613  0004                     __pintentry:	
  7614                           ;incstack = 0
  7615                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  7616                           
  7617  0004                     interrupt_function:	
  7618  007E                     saved_w	set	btemp
  7619  0004  00FE               	movwf	btemp
  7620  0005  0E03               	swapf	3,w
  7621  0006  00F5               	movwf	??_int_usart+1
  7622  0007  0804               	movf	4,w
  7623  0008  00F6               	movwf	??_int_usart+2
  7624  0009  080A               	movf	10,w
  7625  000A  00F7               	movwf	??_int_usart+3
  7626  000B  120A  158A  2B34   	ljmp	_int_usart


Data Sizes:
    Strings     294
    Constant    20
    Data        1
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     78      79
    BANK1            80     45      74
    BANK3            96     66      74
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_18(CODE[7]), STR_17(CODE[10]), STR_16(CODE[23]), STR_14(CODE[15]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_5(CODE[22]), STR_3(CODE[5]), 
		 -> STR_1(CODE[15]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_20(CODE[7]), ?_sprintf(BANK0[2]), adresult(BANK3[2]), codigoEntrada(BANK1[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), lecturaConsulta@strLote(BANK1[32]), 
		 -> consultaPrecio@mensaje(BANK0[26]), cierreDeLote@strLote(BANK0[32]), accionesPuertoSerial@mensaje(BANK3[12]), accionesAceptar@strLote(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envioTX@mensaje	PTR unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[19]), agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), 
		 -> STR_15(CODE[40]), lecturaConsulta@strLote(BANK1[32]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[22]), consultaPrecio@mensaje(BANK0[26]), STR_8(CODE[40]), STR_7(CODE[23]), 
		 -> STR_6(CODE[40]), cierreDeLote@strLote(BANK0[32]), STR_4(CODE[19]), accionesPuertoSerial@mensaje(BANK3[12]), 
		 -> STR_2(CODE[19]), accionesAceptar@strLote(BANK1[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _escrituraDeCierre->_eeprom_write
    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaMenos->_envioTX
    _lecturaMas->_cierreDeLote
    _cierreDeLote->_sprintf
    _agregarModificarPrecio->_sprintf
    _lecturaConsulta->_consultaPrecio
    _consultaPrecio->_sprintf
    _accionesDeshacer->_mostrarDigitos
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_sprintf
    _sprintf->___lwmod
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_accionesPuertoSerial
    _lecturaComando->_lecturaConsulta

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_accionesPuertoSerial

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   83774
                                             41 BANK1      4     4      0
                                             12 BANK3     54    54      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                        _eeprom_read
                            _envioTX
                  _escrituraDeCierre
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _escrituraDeCierre                                    3     3      0     670
                                              3 BANK0      3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                15    15      0   54344
                                             38 BANK1      3     3      0
                                              0 BANK3     12    12      0
                            _envioTX
                     _lecturaComando
                    _lecturaEtiqueta
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      9     9      0   11895
                                             31 BANK0      9     9      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                            _envioTX
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    3623
                                             22 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    2164
                                             14 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0   36114
                    _lecturaConsulta
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0    1815
                            _envioTX
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0   18130
             _agregarModificarPrecio
                       _cierreDeLote
                            _envioTX
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  3     3      0     198
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cierreDeLote                                        36    36      0    6335
                                             42 BANK0     36    36      0
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _agregarModificarPrecio                              25    25      0    9782
                                             42 BANK0     25    25      0
                            ___awdiv
                             ___bmul
                             ___wmul
                       _eeprom_write
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     602
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _lecturaConsulta                                     38    38      0   16169
                                              0 BANK1     38    38      0
                             ___wmul
                     _consultaPrecio
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _consultaPrecio                                      34    32      2    8764
                                             42 BANK0     34    32      2
                            ___awdiv
                            ___awmod
                        _eeprom_read
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    6733
                       _eliminarProd
                            _envioTX
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    1777
                                              6 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                     38    38      0    9262
                                             42 BANK0      4     4      0
                                              0 BANK1     34    34      0
                         _bailenLeds
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    18     10    4425
                                             20 BANK0     22    12     10
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    2760
                                             20 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1132
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1141
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _envioTX                                              8     6      2    1815
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_usart                                            5     5      0       1
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
       ___wmul (ARG)
   ___wmul
   _accionesAceptar
     _bailenLeds
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesPuertoSerial
     _envioTX
     _lecturaComando
       _lecturaConsulta
         ___wmul
         _consultaPrecio
           ___awdiv
           ___awmod
           _eeprom_read
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _sprintf
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
       _lecturaMas
         _agregarModificarPrecio
           ___awdiv
           ___bmul
           ___wmul
           _eeprom_write
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _cierreDeLote
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _verificacionEntrada
       _lecturaMenos
         _envioTX
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _envioTX
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _eeprom_read
   _envioTX
   _escrituraDeCierre
     _eeprom_write
   _mostrarDigitos
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     42      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      ED      12        0.0%
ABS                  0      0      ED       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 23:49:03 2020

                 ?_lecturaConsulta 0074                      ?_eliminarProd 002E  
                                pc 0002                     ___bmul@product 0022  
                 ?_lecturaEtiqueta 0074                        __CFG_CP$OFF 0000  
                               l70 0D09                                 l63 07FB  
                               l71 0D03                                 l57 07AE  
                               l73 0D1D                                 l58 07BE  
                               _BS 041C                                 l76 0A49  
                     ___awdiv@sign 0026                                 fsr 0004  
              ___wmul@multiplicand 0022            __size_of_consultaPrecio 00CA  
                   ?_verificarProd 002E                                l123 0DEE  
                              l124 0DF4                                l132 064A  
                              l136 065C                                l312 00D0  
                              l153 0AD8                                l129 0579  
                              l321 0142                                l313 00C6  
                              l162 08E6                                l411 03B8  
                              l307 00C2                                l420 09BC  
                              l148 0955                                l316 0247  
                              l308 00B8                                l413 03FE  
                              l318 00D4                                l191 0742  
                              l167 088A                                l424 09C7  
                              l408 0E63                                l520 082E  
                              l176 0F2D                                l522 0849  
                              l427 09CB                                l371 0C55  
                              l612 082A                                l540 08EA  
                              l365 098F                                l198 0869  
                              l543 090C                                l384 0BF3  
                              l570 02AE                                l546 091D  
                              l378 0CB9                                l563 02D9  
                              l539 08EA                                l389 0FFF  
                              l582 03B3                                l566 029F  
                              l752 0B33                                l586 0899  
                              l739 0D86                                l588 08B1  
                              l858 0A8F                                l868 0A07  
                              _RA3 002B                                _RC0 0038  
                              _RA5 002D                                _RE0 0048  
                              _RE1 0049                                _RE2 004A  
                     __CFG_CPD$OFF 0000                                _pow 0956  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0026  agregarModificarPrecio@upper_8bits 005F  
                     __CFG_FOSC$XT 0000                       __CFG_LVP$OFF 0000  
                 ??_mostrarDigitos 0036                               l3000 0D82  
                             l3010 0AE5                               l3020 0AF9  
                             l3012 0AE7                               l3004 0AD9  
                             l3100 0F2E                               l3030 0B18  
                             l3022 0B00                               l3014 0AEB  
                             l3006 0ADC                               l3110 0FA2  
                             l3102 0F45                               l3032 0B1F  
                             l3024 0B04                               l3016 0AF0  
                             l3008 0AE0                               l3112 0FA6  
                             l3104 0F4A                               l3120 0FF6  
                             l3200 087F                               l3026 0B08  
                             l3018 0AF6                               l3034 0B25  
                             l3130 0EAB                               l3122 0E64  
                             l3210 067D                               l3202 065D  
                             l3114 0FB0                               l3106 0F52  
                             l3050 0C5D                               l3042 0C56  
                             l3140 0E13                               l3036 0B2A  
                             l3028 0B12                               l3132 0EB1  
                             l3124 0E73                               l3220 06DF  
                             l3212 0689                               l3204 0665  
                             l3116 0FBD                               l3108 0F9E  
                             l3052 0C78                               l3060 0CAC  
                             l3044 0C59                               l3300 05D8  
                             l3142 0E34                               l3038 0B2F  
                             l3134 0ECC                               l3126 0E80  
                             l3230 0727                               l3222 06E5  
                             l3214 068F                               l3206 066B  
                             l3118 0FEA                               l3070 0922  
                             l3062 0CB4                               l3054 0C8F  
                             l3150 0DB5                               l3310 0603  
                             l3302 05E9                               l3240 03B9  
                             l3128 0E9E                               l3136 0F22  
                             l3224 06EB                               l3232 0737  
                             l3216 06D4                               l3208 0671  
                             l3080 0948                               l3072 0924  
                             l3064 0CB8                               l3056 0CA8  
                             l3152 0DB9                               l3144 0D8A  
                             l3320 0635                               l3312 060F  
                             l3304 05F1                               l3400 0A2E  
                             l3242 03C8                               l3234 03B4  
                             l3138 0DF5                               l3226 06F1  
                             l3218 06DA                               l3090 0A97  
                             l3082 094E                               l3074 092C  
                             l3058 0CAA                               l3154 0DC6  
                             l3146 0D8F                               l3170 0C15  
                             l3162 0BF4                               l3322 0638  
                             l3314 061E                               l3306 05F6  
                             l3402 0A3A                               l3410 005A  
                             l3244 03DA                               l3340 0753  
                             l3260 0BE5                               l3228 06F7  
                             l3092 0ACC                               l3084 0954  
                             l3076 0936                               l3068 091E  
                             l3180 08B2                               l3148 0D97  
                             l3156 0DE8                               l3172 0C2C  
                             l3324 0646                               l3316 0624  
                             l3308 05FF                               l3404 0A46  
                             l3420 0079                               l3412 0067  
                             l3246 03EC                               l3350 0762  
                             l3342 0757                               l3334 0743  
                             l3262 0BE7                               l3254 0B98  
                             l3094 0ACD                               l3078 093F  
                             l3190 08D8                               l3182 08BA  
                             l3270 0858                               l3174 0C47  
                             l3326 064B                               l3318 062C  
                             l3510 0181                               l3502 0167  
                             l3430 0088                               l3422 007A  
                             l3414 0072                               l3406 0032  
                             l2800 09F0                               l3352 0768  
                             l3336 0749                               l3264 0BEF  
                             l3256 0BB3                               l3248 0B92  
                             l3360 07BF                               l3096 0AD3  
                             l3088 0A90                               l3192 08DB  
                             l3184 08C0                               l3272 085E  
                             l3176 0C49                               l3168 0BFA  
                             l3328 0659                               l3520 020F  
                             l3512 01B4                               l3504 016C  
                             l3440 0096                               l3432 008A  
                             l3424 007E                               l3416 0076  
                             l3408 003D                               l2802 09F6  
                             l2810 024B                               l3354 0775  
                             l3338 0751                               l3258 0BCA  
                             l3370 07F0                               l3362 07CB  
                             l3098 0AD4                               l3186 08CA  
                             l3194 086A                               l3274 0864  
                             l3266 084A                               l3178 0C51  
                             l3290 0581                               l3282 0553  
                             l3522 0236                               l3514 01BD  
                             l3506 0174                               l3450 00A0  
                             l3442 0099                               l3434 008C  
                             l3426 0082                               l3418 0078  
                             l2900 09B6                               l2804 09FD  
                             l2820 026A                               l2812 0252  
                             l3356 077A                               l3348 075B  
                             l3364 07CF                               l3188 08D0  
                             l3196 0872                               l3268 0852  
                             l3292 058E                               l3284 055F  
                             l3276 054C                               l3380 0CD4  
                             l3372 0CBA                               l3524 0241  
                             l3516 01C2                               l3508 017B  
                             l3460 00BC                               l3452 00A4  
                             l3444 009C                               l3436 008E  
                             l3428 0084                               l2902 09C0  
                             l2806 0A03                               l2830 0293  
                             l2822 0273                               l2814 0258  
                             l3358 07B9                               l2750 088F  
                             l3366 07E0                               l2910 0904  
                             l3198 0873                               l3294 05B2  
                             l3286 0568                               l3390 0D1A  
                             l3382 0CDA                               l3374 0CC2  
                             l3518 01C9                               l3526 0244  
                             l3470 00DE                               l3454 00AF  
                             l3446 009D                               l3438 0092  
                             l2904 09C5                               l2840 02E5  
                             l2832 0299                               l2824 0277  
                             l2816 0261                               l2752 0893  
                             l3368 07EB                               l2920 0915  
                             l2912 0907                               l3296 05B7  
                             l3288 057B                               l3384 0CE0  
                             l3376 0CC8                               l3392 0A08  
                             l3480 0129                               l3472 00E2  
                             l3464 00CA                               l3456 00B2  
                             l3448 009E                               l2770 0A5E  
                             l2762 0A4A                               l2850 02FF  
                             l2842 02E9                               l2826 027D  
                             l2818 0268                               l2754 08A0  
                             l2930 0956                               l2922 0916  
                             l2914 090B                               l2906 08F0  
                             l3298 05CC                               l3386 0CE5  
                             l3378 0CCE                               l3394 0A10  
                             l3482 0133                               l3474 0126  
                             l3490 0155                               l2780 0A7E  
                             l2772 0A62                               l2764 0A4E  
                             l2844 02ED                               l2852 0303  
                             l3548 02C8                               l2828 0282  
                             l2836 02B0                               l2756 08A7  
                             l2748 088B                               l2932 095D  
                             l2940 0981                               l2924 091C  
                             l2916 0910                               l2908 08FC  
                             l3388 0D0C                               l3396 0A18  
                             l3492 015D                               l3484 013B  
                             l3468 00D8                               l2782 0A85  
                             l2774 0A66                               l2766 0A54  
                             l2790 09D4                               l2870 0344  
                             l2862 0325                               l2846 02F1  
                             l2838 02DD                               l2758 08AD  
                             l2942 098B                               l2934 0963  
                             l2926 0837                               l2950 081C  
                             l2918 0914                               l3398 0A22  
                             l3494 015F                               l3486 0143  
                             l2776 0A77                               l2768 0A57  
                             l2784 0A8B                               l2792 09D7  
                             l2872 0349                               l2864 032F  
                             l2848 02F7                               l2880 0395  
                             l2936 0968                               l2960 0D1E  
                             l2952 0820                               l3496 0164  
                             l3488 0151                               l2890 0990  
                             l2778 0A7D                               l2794 09DE  
                             l2874 037D                               l2866 0335  
                             l2858 0305                               l2882 03AD  
                             l2938 097B                               l2970 0D30  
                             l2962 0D21                               l2954 0822  
                             l2946 0817                               l2892 0994  
                             l2796 09E2                               l2788 09CC  
                             l2876 0386                               l2868 033E  
                             l2980 0D44                               l2972 0D35  
                             l2964 0D25                               l2956 0829  
                             l2948 0818                               l2894 0997  
                             l2798 09E6                               l2878 038C  
                             l2990 0D6A                               l2982 0D4B  
                             l2974 0D39                               l2966 0D2A  
                             l2896 09AF                               l2992 0D6B  
                             l2984 0D4F                               l2976 0D3B  
                             l2968 0D2C                               l2898 09B4  
                             l2994 0D72                               l2986 0D53  
                             l2978 0D41                               l2988 0D64  
                             l2996 0D78                               l2998 0D7D  
                             _ADIF 0066                               ?_pow 0026  
                             STR_1 0456                               STR_2 04FB  
                             STR_3 0547                               STR_4 04E8  
                             STR_5 04BF                               STR_6 0426  
                             STR_7 047C                               STR_8 0426  
                             STR_9 0465                               u3000 09A1  
                             u3010 09B4                               u3011 09B3  
                             u3020 09C0                               u3100 098B  
                             u3021 09BF                               u3101 098A  
                             u3030 09C5                               u3110 081C  
                             u3031 09C4                               u3111 081B  
                             u3040 09CB                               u3120 0829  
                             u4000 01C9                               u3041 09CA  
                             u3105 0987                               u3121 0828  
                             u4001 01C8                               u3210 0D78  
                             u3130 0D25                               u3050 08F0  
                             u3211 0D77                               u3131 0D24  
                             u3051 08EF                               u3220 0D7D  
                             u3140 0D30                               u3300 0B25  
                             u3060 090B                               u3221 0D7C  
                             u3205 0D6C                               u3141 0D2F  
                             u3301 0B24                               u3061 090A  
                             u3150 0D41                               u3310 0B2A  
                             u3230 0AE0                               u3070 091C  
                             u3151 0D40                               u3311 0B29  
                             u3231 0ADF                               u3071 091B  
                             u3240 0AEB                               u3080 0837  
                             u3400 0A97                               u3320 0C78  
                             u3241 0AEA                               u3081 0834  
                             u3401 0A96                               u3321 0C77  
                             u4017 012F                               u3090 0963  
                             u3170 0D53                               u3250 0AF6  
                             u3410 0F4A                               u3330 0CA8  
                             u3091 0962                               u3171 0D52  
                             u3251 0AF5                               u3411 0F49  
                             u3331 0CA7                               u4027 014B  
                             u3420 0E73                               u3340 0CB8  
                             u3500 0C55                               u3165 0D45  
                             u3421 0E72                               u3341 0CB7  
                             u3325 0C74                               u3501 0C54  
                             u4037 0D14                               u3190 0D64  
                             u3270 0B08                               u3430 0EAB  
                             u3350 0936                               u3510 08BA  
                             u3191 0D63                               u3271 0B07  
                             u3431 0EAA                               u3351 0935  
                             u3511 08B9                               u4047 0640  
                             u3280 0B12                               u3440 0EB1  
                             u3600 06E5                               u3360 093F  
                             u3520 08CA                               u3185 0D54  
                             u3281 0B11                               u3265 0AFA  
                             u3441 0EB0                               u3425 0E6F  
                             u3601 06E4                               u3361 093E  
                             u3521 08C9                               u4057 0653  
                             u2810 0A77                               u2730 0893  
                             u3610 06EB                               u3370 0948  
                             u3530 08D8                               u3450 0D8F  
                             u4067 03C1                               u2811 0A76  
                             u2731 0892                               u3195 0D60  
                             u3435 0EA7                               u3611 06EA  
                             u3371 0947                               u3531 08D7  
                             u3451 0D8E                               u2900 0258  
                             u3620 06F1                               u3380 094E  
                             u3540 0872                               u3460 0DB9  
                             u3700 0568                               u4077 03D3  
                             u2805 0A67                               u2901 0257  
                             u3285 0B0E                               u3621 06F0  
                             u3381 094D                               u3541 0871  
                             u3461 0DB8                               u3701 0567  
                             u2830 0A8B                               u2910 027D  
                             u3630 06F7                               u3550 0665  
                             u3390 0954                               u3470 0DC6  
                             u3710 058E                               u4087 03E5  
                             u2831 0A8A                               u2815 0A73  
                             u2911 027C                               u3295 0B19  
                             u3631 06F6                               u3551 0664  
                             u3391 0953                               u3471 0DC5  
                             u3711 058D                               u3640 03FE  
                             u2840 09D4                               u2920 02AD  
                             u2760 08AD                               u3800 07F0  
                             u3560 066B                               u3480 0DE8  
                             u3720 05B2                               u3641 03FD  
                             u2825 0A7F                               u2841 09D3  
                             u2921 02AC                               u2761 08AC  
                             u2745 089A                               u3801 07EF  
                             u3561 066A                               u3481 0DE7  
                             u3721 05B1                               u2770 0A54  
                             u2930 02DD                               u3650 0BB3  
                             u3570 0671                               u3490 0C15  
                             u3730 05B7                               u3810 0CC2  
                             u2771 0A53                               u2931 02DC  
                             u2755 08A1                               u3651 0BB2  
                             u3571 0670                               u3475 0DC2  
                             u3491 0C14                               u3731 05B6  
                             u3715 058A                               u3811 0CC1  
                             u2860 09E6                               u2940 02ED  
                             u3660 0BF3                               u3580 068F  
                             u3740 05E9                               u3820 0CC8  
                             u3900 00C6                               u2861 09E5  
                             u2941 02EC                               u3661 0BF2  
                             u3581 068E                               u3741 05E8  
                             u3725 05AE                               u3821 0CC7  
                             u3901 00C5                               u2790 0A66  
                             u2870 09F0                               u2950 0324  
                             u3590 06DA                               u3670 0852  
                             u3750 05F1                               u3830 0CCE  
                             u3910 00CA                               u2791 0A65  
                             u2871 09EF                               u2855 09D8  
                             u2951 0323                               u3655 0BAF  
                             u3591 06D9                               u3671 0851  
                             u3495 0C11                               u3751 05F0  
                             u3831 0CCD                               u3911 00C9  
                             u2960 032F                               u3680 085E  
                             u3760 05F6                               u3840 0CDA  
                             u3920 00D4                               u2785 0A58  
                             u2961 032E                               u3681 085D  
                             u3761 05F5                               u3841 0CD9  
                             u3921 00D3                               u2890 0A03  
                             u2970 0335                               u3770 0775  
                             u3690 055F                               u3850 0CE0  
                             u3930 00D8                               u2891 0A02  
                             u2875 09EC                               u2971 0334  
                             u2955 0320                               u3771 0774  
                             u3691 055E                               u3851 0CDF  
                             u3931 00D7                               u2980 0395  
                             u3780 077A                               u3860 0CE5  
                             u3940 00DE                               _RCIF 0065  
                             u2885 09F7                               u2981 0394  
                             u3781 0779                               u3861 0CE4  
                             u3941 00DD                               u2990 03AD  
                             u3790 07CB                               u3950 0141  
                             u3870 003D                               u2991 03AC  
                             u3775 0771                               u3791 07CA  
                             u3951 0140                               u3871 003C  
                             u3960 015D                               u3880 00B8  
                             u3961 015C                               u3881 00B7  
                             u3970 017A                               u3890 00BC  
                             u3795 07C7                               u3971 0179  
                             u3891 00BB                               u3980 0181  
                             u3981 0180                               u3990 01BD  
                             u3991 01BC                               _TMR1 000E  
                             _TXIF 0064                     ??_eeprom_write 0021  
                     __CFG_WRT$OFF 0000                  envioTX@transmitir 0027  
                             _main 0032                    _accionesAceptar 0743  
                             btemp 007E                      __CFG_BOREN$ON 0000  
           accionesAceptar@strLote 00A0                               pow@i 002A  
                             start 000E                        main@strLote 019C  
                ___bmul@multiplier 0023               lecturaEtiqueta@letra 0042  
                   ??_eliminarProd 0030                              ??_pow 002A  
    __size_of_accionesPuertoSerial 0064                              ?_main 0074  
                  __end_of___awdiv 0D87                              _EEADR 010D  
                            STR_10 04A9                              STR_11 0493  
                            STR_20 0539                              STR_12 0520  
                            STR_13 050E                              STR_14 0456  
                            STR_15 0426                              STR_16 044E  
                            STR_17 052F                      __CFG_WDTE$OFF 0000  
                            STR_18 0540                              STR_19 04D5  
                  __end_of___awmod 0B34                    ___awdiv@divisor 0020  
                            _T1CON 0010                       ?_ingresoProd 002E  
                  __end_of___lwdiv 0A90                              i1l340 0B40  
                            i1l342 0B4B                    __end_of___lwmod 0A08  
                            i1l347 0B89                    ___awdiv@counter 0025  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTB 0006  
                            _PORTD 0008                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _TRISE 0089  
                            _TXREG 0019                              _TXSTA 0098  
             __end_of_cierreDeLote 0AD9                    __end_of_envioTX 09CC  
                  __end_of_dpowers 041C                              main@i 01D0  
                            pclath 000A                   _accionesDeshacer 07BF  
                            status 0003                     envioTX@mensaje 0020  
                            wtemp0 007E                    __end_of_sprintf 03B4  
                    ?_lecturaMenos 0074                    __initialization 0011  
                     __end_of_main 024B                    ??_verificarProd 0030  
                  EEPROM_search@tp 003E                             ??_main 00C9  
            __end_of_EEPROM_search 0DF5                      main@bufferMsj 01BC  
         ??_agregarModificarPrecio 004A                      eliminarProd@i 0033  
          __end_of_accionesAceptar 07BF                             _ADCON0 001F  
                           _ADCON1 009F                             _ADRESH 001E  
                           _ADRESL 009E                             _EEDATA 010C  
                           _EECON1 018C                             _EECON2 018D  
                 ___awdiv@dividend 0022            __size_of_lecturaComando 0020  
                           i1l2700 0B34                             i1l2710 0B4F  
                           i1l2702 0B3A                             i1l2720 0B72  
                           i1l2712 0B5D                             i1l2704 0B44  
                           i1l2714 0B66                             i1l2722 0B78  
                           i1l2706 0B45                             i1l2724 0B7E  
                           i1l2716 0B6C                             i1l2708 0B49  
                           i1l2726 0B7F                             i1l2718 0B71  
                           _INTCON 000B                             u270_20 0B66  
                           u270_21 0B65                             u271_20 0B6C  
                           u271_21 0B6B                             u272_20 0B7E  
                           u272_21 0B7D                             u265_20 0B3A  
                           u265_21 0B39                             u266_20 0B44  
                           u266_21 0B43                             u267_20 0B49  
                           u267_21 0B48                             u268_20 0B4F  
                           u268_21 0B4E                             u269_20 0B5D  
                           u269_21 0B5C                             _TMR1IF 0060  
                   ??_lecturaMenos 0028                   lecturaEtiqueta@i 0046  
                   __CFG_PWRTE$OFF 0000               __size_of_eeprom_read 001F  
                           ___bmul 0814                             ___wmul 088B  
                        ??___awdiv 0024                _mostrarDigitos$1100 0036  
                        ??___awmod 0024                          ??___lwdiv 002A  
                        ??___lwmod 0032                             _cuenta 0070  
              _verificacionEntrada 091E                   ___awdiv@quotient 0027  
                  ___awmod@divisor 0020                             _serial 0073  
             __end_of_eeprom_write 091E                     _consultaPrecio 0E64  
                  ___awmod@counter 0025                          ??_envioTX 0022  
                     __pdataCOMMON 0078                             saved_w 007E  
             __end_of_eliminarProd 0BF4                          ??_sprintf 003E  
             ?_verificacionEntrada 0074            __end_of__initialization 002E  
                  eeprom_read@addr 0021                ___bmul@multiplicand 0020  
                   __pcstackCOMMON 0074             __end_of_consultaPrecio 0F2E  
                       __end_of_BS 0426              __size_of_cierreDeLote 0049  
                       _bailenLeds 03B4               __size_of_ingresoProd 0062  
                eeprom_write@value 0020    __size_of_agregarModificarPrecio 00D2  
      accionesPuertoSerial@mensaje 0190                   ?_accionesAceptar 0074  
            ??_verificacionEntrada 0020                         __pbssBANK0 006E  
                       __pbssBANK1 00CD                         __pbssBANK3 01D2  
                    _pedidoVoltaje 01D6                 __size_of_int_usart 005E  
                       __pmaintext 0032                       _cierreDeLote 0A90  
         agregarModificarPrecio@tp 0062                            ?___bmul 0020  
                   eliminarProd@tp 002E                            ?___wmul 0020  
                       __pintentry 0004                    ?_consultaPrecio 004A  
              EEPROM_search@precio 003C           __end_of_accionesDeshacer 07FC  
         __size_of_lecturaConsulta 00E6               __end_of_lecturaMenos 088B  
         __size_of_lecturaEtiqueta 0111                     verificarProd@i 0034  
                   _lecturaComando 084A                   accionesAceptar@i 00C0  
                       __stringtab 0400       __end_of_accionesPuertoSerial 0D1E  
                lecturaEtiqueta@tp 0043                         _lecturaMas 08B2  
           _agregarModificarPrecio 0F2E              __size_of_eeprom_write 0037  
                  __size_of___bmul 0017                            ___awdiv 0D1E  
                          ___awmod 0AD9                    __size_of___wmul 0027  
                          ___lwdiv 0A4A                            ___lwmod 09CC  
                          __ptext1 0A08                            __ptext2 0CBA  
                          __ptext3 054C                            __ptext4 0BF4  
                      pow@potencia 0028                            __ptext5 0D87  
                          __ptext6 0C56                            __ptext7 084A  
                          __ptext8 086A                            __ptext9 08B2  
                      ?_bailenLeds 0074                            _envioTX 0990  
                          _dpowers 0412                            _huboInt 01D2  
            __size_of_eliminarProd 0062                       __size_of_pow 003A  
             consultaPrecio@precio 006A               verificacionEntrada@i 0022  
                 ___awmod@dividend 0022                       ingresoProd@i 0033  
           __end_of_lecturaComando 086A                            _nroLote 0078  
                          _numProd 00DC                  __end_of_int_usart 0B92  
                          _sprintf 024B                            clrloop0 080D  
     agregarModificarPrecio@precio 0060               end_of_initialization 002E  
                     _eeprom_write 08E7      agregarModificarPrecio@mensaje 0054  
          __size_of_mostrarDigitos 006F                          _RCSTAbits 0018  
                       _montosLote 00DA                       _eliminarProd 0B92  
                     __pstringtext 0400                  _productoIngresado 00DE  
                 verificarProd@ret 0033              __end_of_verificarProd 0CBA  
                       _ventasLote 006E                    ?_lecturaComando 0074  
          lecturaConsulta@articulo 00C4                  ??_lecturaConsulta 00A0  
                 _cierreLotePedido 01D7                  ??_lecturaEtiqueta 003F  
                    ??_eeprom_read 0020                __size_of_bailenLeds 004B  
                      ?_lecturaMas 0074             __size_of_EEPROM_search 006E  
                _escrituraDeCierre 0A08                     __end_of___bmul 082B  
            __size_of_lecturaMenos 0021                     __end_of___wmul 08B2  
               ?_escrituraDeCierre 0074                      __pidataCOMMON 07FC  
             _accionesPuertoSerial 0CBA                ??_escrituraDeCierre 0023  
              start_initialization 0011                        __end_of_pow 0990  
                     _lecturaMenos 086A                   ??_consultaPrecio 004C  
        __end_of_escrituraDeCierre 0A4A                     _prodIngresados 00CD  
                         ??___bmul 0021                           ??___wmul 0024  
              __end_of_eeprom_read 084A              ?_accionesPuertoSerial 0074  
                    ??_ingresoProd 0030                  ?_accionesDeshacer 0074  
                      __pbssCOMMON 0070        __end_of_verificacionEntrada 0956  
                        ___latbits 0002                 ??_accionesDeshacer 0038  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                    __pcstackBANK3 0190                      _EEPROM_search 0D87  
              __size_of_lecturaMas 0035                   eeprom_write@addr 0022  
                      sprintf@flag 0043                        sprintf@prec 0042  
          ?_agregarModificarPrecio 0074           __size_of_accionesAceptar 007C  
                        _main$1098 01CC                          _main$1099 01CE  
                   _mostrarDigitos 0DF5                   ___lwdiv@dividend 0028  
                         ?___awdiv 0020                           ?___awmod 0020  
                         ?___lwdiv 0026                           ?___lwmod 002E  
                        _auxCuenta 01D4                       ??_bailenLeds 0020  
                         ?_envioTX 0020             consultaPrecio@articulo 004A  
                   ?_EEPROM_search 0036                   ___lwdiv@quotient 002C  
              __end_of_ingresoProd 0C56                           ?_sprintf 0034  
     escrituraDeCierre@lower_8bits 0024                          _modoDebug 0072  
                        _int_usart 0B34             verificacionEntrada@ret 0021  
   __end_of_agregarModificarPrecio 1000                  interrupt_function 0004  
                   ___wmul@product 0024             __end_of_mostrarDigitos 0E64  
                        clear_ram0 080C                        _eeprom_read 082B  
                         _PIE1bits 008C                        bailenLeds@i 0023  
       __size_of_escrituraDeCierre 0042                 __end_of_bailenLeds 03FF  
                         _GO_nDONE 00FA                    verificarProd@tp 002E  
           ??_accionesPuertoSerial 00C6                   ??_lecturaComando 006E  
                  _lecturaConsulta 065D                        __stringbase 0412  
                        main@i_308 01D1                  ___wmul@multiplier 0020  
                  _lecturaEtiqueta 054C                 lecturaEtiqueta@Aux 0044  
                    _codigoEntrada 00E0             lecturaConsulta@strLote 00A4  
              cierreDeLote@strLote 004E                         ?_int_usart 0074  
                  ?_mostrarDigitos 0034                         _EECON1bits 018C  
                     ??_lecturaMas 006E                  ??_accionesAceptar 004A  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
               __end_of__stringtab 0412                    ??_EEPROM_search 0038  
                      _ingresoProd 0BF4                         sprintf@val 0047  
                 __size_of_envioTX 003C                           _adresult 01D8  
                  ___lwdiv@divisor 0026                       pow@resultado 002C  
                  ___lwdiv@counter 002B                           __ptext10 091E  
                         __ptext11 0A90                           __ptext20 07BF  
                         __ptext12 0F2E                           __ptext21 0B92  
                         __ptext13 08E7                           __ptext30 03B4  
                         __ptext22 0956                           __ptext14 0814  
                         __ptext31 0B34                           __ptext23 088B  
                         __ptext15 065D                           __ptext24 0743  
                         __ptext16 0E64                           __ptext25 024B  
                         __ptext17 082B                           __ptext26 0DF5  
                         __ptext18 0AD9                           __ptext27 09CC  
                         __ptext19 0D1E                           __ptext28 0A4A  
                         __ptext29 0990                 __end_of_lecturaMas 08E7  
     escrituraDeCierre@upper_8bits 0025                   __size_of_sprintf 0169  
            consultaPrecio@mensaje 0050                      __size_of_main 0219  
                        pow@numero 0026             __size_of_verificarProd 0064  
                    ingresoProd@tp 002E                      ?_cierreDeLote 0074  
          __end_of_lecturaConsulta 0743            __end_of_lecturaEtiqueta 065D  
                         envioTX@i 0025                         _INTCONbits 000B  
agregarModificarPrecio@lower_8bits 005E                           intlevel1 0000  
                        sprintf@ap 0046                          sprintf@cp 0044  
                      ??_int_usart 0074                          sprintf@sp 0034  
                 ___lwmod@dividend 0030          __size_of_accionesDeshacer 003D  
                   ??_cierreDeLote 004A                          stringcode 040A  
                mostrarDigitos@num 0034                           sprintf@c 0049  
                         sprintf@f 0036                      _verificarProd 0C56  
                  ___lwmod@divisor 002E                    ___lwmod@counter 0033  
                         stringtab 0400       __size_of_verificacionEntrada 0038  
                    ?_eeprom_write 0020                         _STATUSbits 0003  
                     ?_eeprom_read 0074  
