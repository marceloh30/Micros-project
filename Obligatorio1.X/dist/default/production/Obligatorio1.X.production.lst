

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 03 17:31:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0094                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  010F                     	;# 
   263  018C                     	;# 
   264  018D                     	;# 
   265  0000                     	;# 
   266  0001                     	;# 
   267  0002                     	;# 
   268  0003                     	;# 
   269  0004                     	;# 
   270  0005                     	;# 
   271  0006                     	;# 
   272  0007                     	;# 
   273  0008                     	;# 
   274  0009                     	;# 
   275  000A                     	;# 
   276  000B                     	;# 
   277  000C                     	;# 
   278  000D                     	;# 
   279  000E                     	;# 
   280  000E                     	;# 
   281  000F                     	;# 
   282  0010                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0013                     	;# 
   286  0014                     	;# 
   287  0015                     	;# 
   288  0015                     	;# 
   289  0016                     	;# 
   290  0017                     	;# 
   291  0018                     	;# 
   292  0019                     	;# 
   293  001A                     	;# 
   294  001B                     	;# 
   295  001B                     	;# 
   296  001C                     	;# 
   297  001D                     	;# 
   298  001E                     	;# 
   299  001F                     	;# 
   300  0081                     	;# 
   301  0085                     	;# 
   302  0086                     	;# 
   303  0087                     	;# 
   304  0088                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0098                     	;# 
   314  0099                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  009F                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  000E                     	;# 
   341  000F                     	;# 
   342  0010                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0013                     	;# 
   346  0014                     	;# 
   347  0015                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001D                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  0081                     	;# 
   361  0085                     	;# 
   362  0086                     	;# 
   363  0087                     	;# 
   364  0088                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000E                     	;# 
   461  000F                     	;# 
   462  0010                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0013                     	;# 
   466  0014                     	;# 
   467  0015                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  0081                     	;# 
   481  0085                     	;# 
   482  0086                     	;# 
   483  0087                     	;# 
   484  0088                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0094                     	;# 
   493  0098                     	;# 
   494  0099                     	;# 
   495  009C                     	;# 
   496  009D                     	;# 
   497  009E                     	;# 
   498  009F                     	;# 
   499  010C                     	;# 
   500  010D                     	;# 
   501  010E                     	;# 
   502  010F                     	;# 
   503  018C                     	;# 
   504  018D                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  000E                     	;# 
   520  000E                     	;# 
   521  000F                     	;# 
   522  0010                     	;# 
   523  0011                     	;# 
   524  0012                     	;# 
   525  0013                     	;# 
   526  0014                     	;# 
   527  0015                     	;# 
   528  0015                     	;# 
   529  0016                     	;# 
   530  0017                     	;# 
   531  0018                     	;# 
   532  0019                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001B                     	;# 
   536  001C                     	;# 
   537  001D                     	;# 
   538  001E                     	;# 
   539  001F                     	;# 
   540  0081                     	;# 
   541  0085                     	;# 
   542  0086                     	;# 
   543  0087                     	;# 
   544  0088                     	;# 
   545  0089                     	;# 
   546  008C                     	;# 
   547  008D                     	;# 
   548  008E                     	;# 
   549  0091                     	;# 
   550  0092                     	;# 
   551  0093                     	;# 
   552  0094                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  009F                     	;# 
   559  010C                     	;# 
   560  010D                     	;# 
   561  010E                     	;# 
   562  010F                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565                           
   566                           	psect	idataCOMMON
   567  07FF                     __pidataCOMMON:	
   568                           
   569                           ;initializer for _nroLote
   570  07FF  3401               	retlw	1
   571                           
   572                           	psect	stringtext
   573  0400                     __pstringtext:	
   574  0400                     stringtab:	
   575  0400                     __stringtab:	
   576                           
   577                           ;	String table - string pointers are 2 bytes each
   578  0400  1BFF               	btfsc	btemp+1,7
   579  0401  2C0A               	ljmp	stringcode
   580  0402  1383               	bcf	3,7
   581  0403  187F               	btfsc	btemp+1,0
   582  0404  1783               	bsf	3,7
   583  0405  0800               	movf	0,w
   584  0406  0A84               	incf	4,f
   585  0407  1903               	skipnz
   586  0408  0AFF               	incf	btemp+1,f
   587  0409  0008               	return
   588  040A                     stringcode:	
   589  040A  087F               	movf	btemp+1,w
   590  040B  397F               	andlw	127
   591  040C  008A               	movwf	10
   592  040D  0804               	movf	4,w
   593  040E  0A84               	incf	4,f
   594  040F  1903               	skipnz
   595  0410  0AFF               	incf	btemp+1,f
   596  0411  0082               	movwf	2
   597  0412                     __stringbase:	
   598  0412                     __end_of__stringtab:	
   599  0412                     _dpowers:	
   600  0412  3401               	retlw	1
   601  0413  3400               	retlw	0
   602  0414  340A               	retlw	10
   603  0415  3400               	retlw	0
   604  0416  3464               	retlw	100
   605  0417  3400               	retlw	0
   606  0418  34E8               	retlw	232
   607  0419  3403               	retlw	3
   608  041A  3410               	retlw	16
   609  041B  3427               	retlw	39
   610  041C                     __end_of_dpowers:	
   611  041C                     _BMS:	
   612  041C  3400               	retlw	0
   613  041D  3410               	retlw	16
   614  041E  3420               	retlw	32
   615  041F  3430               	retlw	48
   616  0420  3440               	retlw	64
   617  0421  3450               	retlw	80
   618  0422  3460               	retlw	96
   619  0423  3470               	retlw	112
   620  0424  3480               	retlw	128
   621  0425  3490               	retlw	144
   622  0426                     __end_of_BMS:	
   623  000B                     _INTCONbits	set	11
   624  0003                     _STATUSbits	set	3
   625  0019                     _TXREG	set	25
   626  0008                     _PORTD	set	8
   627  0006                     _PORTB	set	6
   628  001E                     _ADRESH	set	30
   629  001A                     _RCREG	set	26
   630  0018                     _RCSTAbits	set	24
   631  0018                     _RCSTA	set	24
   632  000B                     _INTCON	set	11
   633  001F                     _ADCON0	set	31
   634  0064                     _TXIF	set	100
   635  0065                     _RCIF	set	101
   636  004A                     _RE2	set	74
   637  0049                     _RE1	set	73
   638  0048                     _RE0	set	72
   639  0066                     _ADIF	set	102
   640  00FA                     _GO_nDONE	set	250
   641  002B                     _RA3	set	43
   642  002D                     _RA5	set	45
   643  009E                     _ADRESL	set	158
   644  0099                     _SPBRG	set	153
   645  0098                     _TXSTA	set	152
   646  0087                     _TRISC	set	135
   647  009F                     _ADCON1	set	159
   648  0088                     _TRISD	set	136
   649  0086                     _TRISB	set	134
   650  0089                     _TRISE	set	137
   651  0085                     _TRISA	set	133
   652  0465                     _RCIE	set	1125
   653  0466                     _ADIE	set	1126
   654  010C                     _EEDATA	set	268
   655  010D                     _EEADR	set	269
   656  018D                     _EECON2	set	397
   657  018C                     _EECON1	set	396
   658  018C                     _EECON1bits	set	396
   659  0426                     STR_7:	
   660  0426  344F               	retlw	79	;'O'
   661  0427  3463               	retlw	99	;'c'
   662  0428  3475               	retlw	117	;'u'
   663  0429  3472               	retlw	114	;'r'
   664  042A  3472               	retlw	114	;'r'
   665  042B  3469               	retlw	105	;'i'
   666  042C  346F               	retlw	111	;'o'
   667  042D  3420               	retlw	32	;' '
   668  042E  3475               	retlw	117	;'u'
   669  042F  346E               	retlw	110	;'n'
   670  0430  3420               	retlw	32	;' '
   671  0431  3465               	retlw	101	;'e'
   672  0432  3472               	retlw	114	;'r'
   673  0433  3472               	retlw	114	;'r'
   674  0434  346F               	retlw	111	;'o'
   675  0435  3472               	retlw	114	;'r'
   676  0436  3420               	retlw	32	;' '
   677  0437  3465               	retlw	101	;'e'
   678  0438  346E               	retlw	110	;'n'
   679  0439  3420               	retlw	32	;' '
   680  043A  346C               	retlw	108	;'l'
   681  043B  3461               	retlw	97	;'a'
   682  043C  3420               	retlw	32	;' '
   683  043D  3469               	retlw	105	;'i'
   684  043E  346E               	retlw	110	;'n'
   685  043F  3474               	retlw	116	;'t'
   686  0440  3465               	retlw	101	;'e'
   687  0441  3472               	retlw	114	;'r'
   688  0442  3470               	retlw	112	;'p'
   689  0443  3472               	retlw	114	;'r'
   690  0444  3465               	retlw	101	;'e'
   691  0445  3474               	retlw	116	;'t'
   692  0446  3461               	retlw	97	;'a'
   693  0447  3463               	retlw	99	;'c'
   694  0448  3469               	retlw	105	;'i'
   695  0449  346F               	retlw	111	;'o'
   696  044A  346E               	retlw	110	;'n'
   697  044B  342E               	retlw	46	;'.'
   698  044C  340A               	retlw	10
   699  044D  3400               	retlw	0
   700  044E                     STR_13:	
   701  044E  340A               	retlw	10
   702  044F  3443               	retlw	67	;'C'
   703  0450  3469               	retlw	105	;'i'
   704  0451  3465               	retlw	101	;'e'
   705  0452  3472               	retlw	114	;'r'
   706  0453  3472               	retlw	114	;'r'
   707  0454  3465               	retlw	101	;'e'
   708  0455  342C               	retlw	44	;','
   709  0456  3420               	retlw	32	;' '
   710  0457  344C               	retlw	76	;'L'
   711  0458  343A               	retlw	58	;':'
   712  0459  3425               	retlw	37	;'%'
   713  045A  3464               	retlw	100	;'d'
   714  045B  342C               	retlw	44	;','
   715  045C  344E               	retlw	78	;'N'
   716  045D  343A               	retlw	58	;':'
   717  045E  3425               	retlw	37	;'%'
   718  045F  3464               	retlw	100	;'d'
   719  0460  342C               	retlw	44	;','
   720  0461  3454               	retlw	84	;'T'
   721  0462  343A               	retlw	58	;':'
   722  0463  3425               	retlw	37	;'%'
   723  0464  3464               	retlw	100	;'d'
   724  0465  340A               	retlw	10
   725  0466  3400               	retlw	0
   726  0467                     STR_6:	
   727  0467  340A               	retlw	10
   728  0468  3450               	retlw	80	;'P'
   729  0469  3472               	retlw	114	;'r'
   730  046A  346F               	retlw	111	;'o'
   731  046B  3464               	retlw	100	;'d'
   732  046C  3475               	retlw	117	;'u'
   733  046D  3463               	retlw	99	;'c'
   734  046E  3474               	retlw	116	;'t'
   735  046F  346F               	retlw	111	;'o'
   736  0470  3420               	retlw	32	;' '
   737  0471  346E               	retlw	110	;'n'
   738  0472  346F               	retlw	111	;'o'
   739  0473  3420               	retlw	32	;' '
   740  0474  3465               	retlw	101	;'e'
   741  0475  346E               	retlw	110	;'n'
   742  0476  3463               	retlw	99	;'c'
   743  0477  346F               	retlw	111	;'o'
   744  0478  346E               	retlw	110	;'n'
   745  0479  3474               	retlw	116	;'t'
   746  047A  3472               	retlw	114	;'r'
   747  047B  3461               	retlw	97	;'a'
   748  047C  3464               	retlw	100	;'d'
   749  047D  346F               	retlw	111	;'o'
   750  047E  340A               	retlw	10
   751  047F  3400               	retlw	0
   752  0480                     STR_5:	
   753  0480  340A               	retlw	10
   754  0481  3443               	retlw	67	;'C'
   755  0482  3469               	retlw	105	;'i'
   756  0483  3465               	retlw	101	;'e'
   757  0484  3472               	retlw	114	;'r'
   758  0485  3472               	retlw	114	;'r'
   759  0486  3465               	retlw	101	;'e'
   760  0487  342C               	retlw	44	;','
   761  0488  344C               	retlw	76	;'L'
   762  0489  343A               	retlw	58	;':'
   763  048A  3425               	retlw	37	;'%'
   764  048B  3464               	retlw	100	;'d'
   765  048C  342C               	retlw	44	;','
   766  048D  344E               	retlw	78	;'N'
   767  048E  343A               	retlw	58	;':'
   768  048F  3425               	retlw	37	;'%'
   769  0490  3464               	retlw	100	;'d'
   770  0491  342C               	retlw	44	;','
   771  0492  3454               	retlw	84	;'T'
   772  0493  343A               	retlw	58	;':'
   773  0494  3425               	retlw	37	;'%'
   774  0495  3464               	retlw	100	;'d'
   775  0496  340A               	retlw	10
   776  0497  3400               	retlw	0
   777  0498                     STR_11:	
   778  0498  340A               	retlw	10
   779  0499  3445               	retlw	69	;'E'
   780  049A  3473               	retlw	115	;'s'
   781  049B  3474               	retlw	116	;'t'
   782  049C  3461               	retlw	97	;'a'
   783  049D  3464               	retlw	100	;'d'
   784  049E  346F               	retlw	111	;'o'
   785  049F  343A               	retlw	58	;':'
   786  04A0  3420               	retlw	32	;' '
   787  04A1  3445               	retlw	69	;'E'
   788  04A2  346E               	retlw	110	;'n'
   789  04A3  3420               	retlw	32	;' '
   790  04A4  3465               	retlw	101	;'e'
   791  04A5  3473               	retlw	115	;'s'
   792  04A6  3470               	retlw	112	;'p'
   793  04A7  3465               	retlw	101	;'e'
   794  04A8  3472               	retlw	114	;'r'
   795  04A9  3461               	retlw	97	;'a'
   796  04AA  340A               	retlw	10
   797  04AB  3400               	retlw	0
   798  04AC                     STR_4:	
   799  04AC  3450               	retlw	80	;'P'
   800  04AD  3472               	retlw	114	;'r'
   801  04AE  346F               	retlw	111	;'o'
   802  04AF  3464               	retlw	100	;'d'
   803  04B0  3475               	retlw	117	;'u'
   804  04B1  3463               	retlw	99	;'c'
   805  04B2  3474               	retlw	116	;'t'
   806  04B3  346F               	retlw	111	;'o'
   807  04B4  3420               	retlw	32	;' '
   808  04B5  3469               	retlw	105	;'i'
   809  04B6  346E               	retlw	110	;'n'
   810  04B7  3467               	retlw	103	;'g'
   811  04B8  3472               	retlw	114	;'r'
   812  04B9  3465               	retlw	101	;'e'
   813  04BA  3473               	retlw	115	;'s'
   814  04BB  3461               	retlw	97	;'a'
   815  04BC  3464               	retlw	100	;'d'
   816  04BD  346F               	retlw	111	;'o'
   817  04BE  340A               	retlw	10
   818  04BF  3400               	retlw	0
   819  04C0                     STR_9:	
   820  04C0  340A               	retlw	10
   821  04C1  3454               	retlw	84	;'T'
   822  04C2  3450               	retlw	80	;'P'
   823  04C3  343A               	retlw	58	;':'
   824  04C4  3420               	retlw	32	;' '
   825  04C5  3425               	retlw	37	;'%'
   826  04C6  3464               	retlw	100	;'d'
   827  04C7  3420               	retlw	32	;' '
   828  04C8  3450               	retlw	80	;'P'
   829  04C9  343A               	retlw	58	;':'
   830  04CA  3420               	retlw	32	;' '
   831  04CB  343F               	retlw	63	;'?'
   832  04CC  3425               	retlw	37	;'%'
   833  04CD  3464               	retlw	100	;'d'
   834  04CE  342C               	retlw	44	;','
   835  04CF  3425               	retlw	37	;'%'
   836  04D0  3464               	retlw	100	;'d'
   837  04D1  340A               	retlw	10
   838  04D2  3400               	retlw	0
   839  04D3                     STR_2:	
   840  04D3  3450               	retlw	80	;'P'
   841  04D4  3472               	retlw	114	;'r'
   842  04D5  346F               	retlw	111	;'o'
   843  04D6  3464               	retlw	100	;'d'
   844  04D7  3475               	retlw	117	;'u'
   845  04D8  3463               	retlw	99	;'c'
   846  04D9  3474               	retlw	116	;'t'
   847  04DA  346F               	retlw	111	;'o'
   848  04DB  3420               	retlw	32	;' '
   849  04DC  3463               	retlw	99	;'c'
   850  04DD  3461               	retlw	97	;'a'
   851  04DE  346E               	retlw	110	;'n'
   852  04DF  3463               	retlw	99	;'c'
   853  04E0  3465               	retlw	101	;'e'
   854  04E1  346C               	retlw	108	;'l'
   855  04E2  3461               	retlw	97	;'a'
   856  04E3  3464               	retlw	100	;'d'
   857  04E4  346F               	retlw	111	;'o'
   858  04E5  3400               	retlw	0
   859  04E6                     STR_10:	
   860  04E6  340A               	retlw	10
   861  04E7  3445               	retlw	69	;'E'
   862  04E8  3473               	retlw	115	;'s'
   863  04E9  3474               	retlw	116	;'t'
   864  04EA  3461               	retlw	97	;'a'
   865  04EB  3464               	retlw	100	;'d'
   866  04EC  346F               	retlw	111	;'o'
   867  04ED  343A               	retlw	58	;':'
   868  04EE  3420               	retlw	32	;' '
   869  04EF  3441               	retlw	65	;'A'
   870  04F0  3463               	retlw	99	;'c'
   871  04F1  3474               	retlw	116	;'t'
   872  04F2  3469               	retlw	105	;'i'
   873  04F3  3476               	retlw	118	;'v'
   874  04F4  346F               	retlw	111	;'o'
   875  04F5  340A               	retlw	10
   876  04F6  3400               	retlw	0
   877  04F7                     STR_1:	
   878  04F7  340A               	retlw	10
   879  04F8  344C               	retlw	76	;'L'
   880  04F9  343A               	retlw	58	;':'
   881  04FA  3425               	retlw	37	;'%'
   882  04FB  3464               	retlw	100	;'d'
   883  04FC  342C               	retlw	44	;','
   884  04FD  344E               	retlw	78	;'N'
   885  04FE  343A               	retlw	58	;':'
   886  04FF  3425               	retlw	37	;'%'
   887  0500  3464               	retlw	100	;'d'
   888  0501  342C               	retlw	44	;','
   889  0502  3454               	retlw	84	;'T'
   890  0503  343A               	retlw	58	;':'
   891  0504  3425               	retlw	37	;'%'
   892  0505  3464               	retlw	100	;'d'
   893  0506  340A               	retlw	10
   894  0507  3400               	retlw	0
   895  0508                     STR_14:	
   896  0508  3456               	retlw	86	;'V'
   897  0509  343D               	retlw	61	;'='
   898  050A  3425               	retlw	37	;'%'
   899  050B  3464               	retlw	100	;'d'
   900  050C  342E               	retlw	46	;'.'
   901  050D  3425               	retlw	37	;'%'
   902  050E  3464               	retlw	100	;'d'
   903  050F  3456               	retlw	86	;'V'
   904  0510  340A               	retlw	10
   905  0511  3400               	retlw	0
   906  0512                     STR_15:	
   907  0512  340A               	retlw	10
   908  0513  3450               	retlw	80	;'P'
   909  0514  3425               	retlw	37	;'%'
   910  0515  3464               	retlw	100	;'d'
   911  0516  343D               	retlw	61	;'='
   912  0517  3425               	retlw	37	;'%'
   913  0518  3464               	retlw	100	;'d'
   914  0519  340A               	retlw	10
   915  051A  3400               	retlw	0
   916  051B                     STR_16:	
   917  051B  3428               	retlw	40	;'('
   918  051C  346E               	retlw	110	;'n'
   919  051D  3475               	retlw	117	;'u'
   920  051E  346C               	retlw	108	;'l'
   921  051F  346C               	retlw	108	;'l'
   922  0520  3429               	retlw	41	;')'
   923  0521  3400               	retlw	0
   924  0522                     STR_3:	
   925  0522  3445               	retlw	69	;'E'
   926  0523  343A               	retlw	58	;':'
   927  0524  3425               	retlw	37	;'%'
   928  0525  3473               	retlw	115	;'s'
   929  0526  3400               	retlw	0
   930  04F7                     
   931                           ; #config settings
   932  0000                     
   933                           	psect	cinit
   934  0011                     start_initialization:	
   935  0011                     __initialization:	
   936                           
   937                           ; Initialize objects allocated to COMMON
   938  0011  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   939  0016  00F8               	movwf	__pdataCOMMON& (0+127)
   940                           
   941                           ; Clear objects allocated to BANK3
   942  0017  1683               	bsf	3,5	;RP0=1, select bank3
   943  0018  1703               	bsf	3,6	;RP1=1, select bank3
   944  0019  01D2               	clrf	__pbssBANK3& (0+127)
   945  001A  01D3               	clrf	(__pbssBANK3+1)& (0+127)
   946  001B  01D4               	clrf	(__pbssBANK3+2)& (0+127)
   947  001C  01D5               	clrf	(__pbssBANK3+3)& (0+127)
   948  001D  01D6               	clrf	(__pbssBANK3+4)& (0+127)
   949  001E  01D7               	clrf	(__pbssBANK3+5)& (0+127)
   950  001F  01D8               	clrf	(__pbssBANK3+6)& (0+127)
   951                           
   952                           ; Clear objects allocated to BANK1
   953  0020  1383               	bcf	3,7	;select IRP bank0
   954  0021  30CD               	movlw	low __pbssBANK1
   955  0022  0084               	movwf	4
   956  0023  30EA               	movlw	low (__pbssBANK1+29)
   957  0024  120A  158A  2162  120A  118A  	fcall	clear_ram0
   958                           
   959                           ; Clear objects allocated to BANK0
   960  0029  1283               	bcf	3,5	;RP0=0, select bank0
   961  002A  1303               	bcf	3,6	;RP1=0, select bank0
   962  002B  01EE               	clrf	__pbssBANK0& (0+127)
   963                           
   964                           ; Clear objects allocated to COMMON
   965  002C  01F0               	clrf	__pbssCOMMON& (0+127)
   966  002D  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   967  002E  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   968  002F  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   969  0030                     end_of_initialization:	
   970                           ;End of C runtime variable initialization code
   971                           
   972  0030                     __end_of__initialization:	
   973  0030  0183               	clrf	3
   974  0031  120A  118A  2834   	ljmp	_main	;jump to C main() function
   975                           
   976                           	psect	bssCOMMON
   977  0070                     __pbssCOMMON:	
   978  0070                     _cuenta:	
   979  0070                     	ds	2
   980  0072                     _ventasLote:	
   981  0072                     	ds	1
   982  0073                     _serial:	
   983  0073                     	ds	1
   984                           
   985                           	psect	dataCOMMON
   986  0078                     __pdataCOMMON:	
   987  0078                     _nroLote:	
   988  0078                     	ds	1
   989                           
   990                           	psect	bssBANK0
   991  006E                     __pbssBANK0:	
   992  006E                     _modoDebug:	
   993  006E                     	ds	1
   994                           
   995                           	psect	bssBANK1
   996  00CD                     __pbssBANK1:	
   997  00CD                     _prodIngresados:	
   998  00CD                     	ds	13
   999  00DA                     _montosLote:	
  1000  00DA                     	ds	2
  1001  00DC                     _numProd:	
  1002  00DC                     	ds	2
  1003  00DE                     _productoIngresado:	
  1004  00DE                     	ds	2
  1005  00E0                     _codigoEntrada:	
  1006  00E0                     	ds	10
  1007                           
  1008                           	psect	bssBANK3
  1009  01D2                     __pbssBANK3:	
  1010  01D2                     _huboInt:	
  1011  01D2                     	ds	2
  1012  01D4                     _auxCuenta:	
  1013  01D4                     	ds	2
  1014  01D6                     _cierreLotePedido:	
  1015  01D6                     	ds	1
  1016  01D7                     _adresult:	
  1017  01D7                     	ds	2
  1018                           
  1019                           	psect	clrtext
  1020  0962                     clear_ram0:	
  1021                           ;	Called with FSR containing the base address, and
  1022                           ;	W with the last address+1
  1023                           
  1024  0962  0064               	clrwdt	;clear the watchdog before getting into this loop
  1025  0963                     clrloop0:	
  1026  0963  0180               	clrf	0	;clear RAM location pointed to by FSR
  1027  0964  0A84               	incf	4,f	;increment pointer
  1028  0965  0604               	xorwf	4,w	;XOR with final address
  1029  0966  1903               	btfsc	3,2	;have we reached the end yet?
  1030  0967  3400               	retlw	0	;all done for this memory range, return
  1031  0968  0604               	xorwf	4,w	;XOR again to restore value
  1032  0969  2963               	goto	clrloop0	;do the next byte
  1033                           
  1034                           	psect	cstackBANK3
  1035  0190                     __pcstackBANK3:	
  1036  0190                     accionesPuertoSerial@mensaje:	
  1037                           
  1038                           ; 12 bytes @ 0x0
  1039  0190                     	ds	12
  1040  019C                     main@strLote:	
  1041                           
  1042                           ; 32 bytes @ 0xC
  1043  019C                     	ds	32
  1044  01BC                     main@bufferMsj:	
  1045                           
  1046                           ; 16 bytes @ 0x2C
  1047  01BC                     	ds	16
  1048  01CC                     _main$1049:	
  1049                           
  1050                           ; 2 bytes @ 0x3C
  1051  01CC                     	ds	2
  1052  01CE                     _main$1050:	
  1053                           
  1054                           ; 2 bytes @ 0x3E
  1055  01CE                     	ds	2
  1056  01D0                     main@i:	
  1057                           
  1058                           ; 1 bytes @ 0x40
  1059  01D0                     	ds	1
  1060  01D1                     main@i_257:	
  1061                           
  1062                           ; 1 bytes @ 0x41
  1063  01D1                     	ds	1
  1064                           
  1065                           	psect	cstackBANK1
  1066  00A0                     __pcstackBANK1:	
  1067  00A0                     ??_lecturaConsulta:	
  1068  00A0                     accionesAceptar@strLote:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071                           
  1072                           ; 32 bytes @ 0x0
  1073  00A0                     	ds	4
  1074  00A4                     lecturaConsulta@strLote:	
  1075                           
  1076                           ; 32 bytes @ 0x4
  1077  00A4                     	ds	28
  1078  00C0                     accionesAceptar@i:	
  1079                           
  1080                           ; 2 bytes @ 0x20
  1081  00C0                     	ds	4
  1082  00C4                     lecturaConsulta@articulo:	
  1083                           
  1084                           ; 2 bytes @ 0x24
  1085  00C4                     	ds	2
  1086  00C6                     ??_accionesPuertoSerial:	
  1087                           
  1088                           ; 1 bytes @ 0x26
  1089  00C6                     	ds	3
  1090  00C9                     ??_main:	
  1091                           
  1092                           ; 1 bytes @ 0x29
  1093  00C9                     	ds	4
  1094                           
  1095                           	psect	cstackCOMMON
  1096  0074                     __pcstackCOMMON:	
  1097  0074                     ?_bailenLeds:	
  1098  0074                     ?_lecturaComando:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0074                     ?_lecturaEtiqueta:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0074                     ?_eeprom_read:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0074                     ?_agregarModificarPrecio:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0074                     ?_accionesAceptar:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0074                     ?_accionesDeshacer:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0074                     ?_accionesPuertoSerial:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0074                     ?_verificacionEntrada:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0074                     ?_cierreDeLote:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0074                     ?_lecturaMas:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0074                     ?_lecturaMenos:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0074                     ?_lecturaConsulta:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0074                     ?_main:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0074                     ?_int_usart:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0074                     ??_int_usart:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143                           
  1144                           ; 1 bytes @ 0x0
  1145  0074                     	ds	4
  1146                           
  1147                           	psect	cstackBANK0
  1148  0020                     __pcstackBANK0:	
  1149  0020                     ?_envioTX:	
  1150  0020                     ??_bailenLeds:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0020                     ??_eeprom_read:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0020                     ?_eeprom_write:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0020                     ??_verificacionEntrada:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0020                     ?___bmul:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0020                     ?___wmul:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0020                     ?___awdiv:	
  1169                           ; 2 bytes @ 0x0
  1170                           
  1171  0020                     ?___awmod:	
  1172                           ; 2 bytes @ 0x0
  1173                           
  1174  0020                     eeprom_write@value:	
  1175                           ; 2 bytes @ 0x0
  1176                           
  1177  0020                     ___bmul@multiplicand:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0020                     envioTX@mensaje:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0020                     ___wmul@multiplier:	
  1184                           ; 2 bytes @ 0x0
  1185                           
  1186  0020                     ___awdiv@divisor:	
  1187                           ; 2 bytes @ 0x0
  1188                           
  1189  0020                     ___awmod@divisor:	
  1190                           ; 2 bytes @ 0x0
  1191                           
  1192                           
  1193                           ; 2 bytes @ 0x0
  1194  0020                     	ds	1
  1195  0021                     ??_eeprom_write:	
  1196  0021                     ??___bmul:	
  1197                           ; 1 bytes @ 0x1
  1198                           
  1199  0021                     verificacionEntrada@ret:	
  1200                           ; 1 bytes @ 0x1
  1201                           
  1202  0021                     eeprom_read@addr:	
  1203                           ; 1 bytes @ 0x1
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0x1
  1207  0021                     	ds	1
  1208  0022                     ??_envioTX:	
  1209  0022                     verificacionEntrada@i:	
  1210                           ; 1 bytes @ 0x2
  1211                           
  1212  0022                     eeprom_write@addr:	
  1213                           ; 1 bytes @ 0x2
  1214                           
  1215  0022                     ___bmul@product:	
  1216                           ; 1 bytes @ 0x2
  1217                           
  1218  0022                     ___wmul@multiplicand:	
  1219                           ; 1 bytes @ 0x2
  1220                           
  1221  0022                     ___awdiv@dividend:	
  1222                           ; 2 bytes @ 0x2
  1223                           
  1224  0022                     ___awmod@dividend:	
  1225                           ; 2 bytes @ 0x2
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0x2
  1229  0022                     	ds	1
  1230  0023                     ___bmul@multiplier:	
  1231  0023                     bailenLeds@i:	
  1232                           ; 1 bytes @ 0x3
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0x3
  1236  0023                     	ds	1
  1237  0024                     ??___wmul:	
  1238  0024                     ??___awdiv:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241  0024                     ??___awmod:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244  0024                     ___wmul@product:	
  1245                           ; 1 bytes @ 0x4
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0x4
  1249  0024                     	ds	1
  1250  0025                     ___awdiv@counter:	
  1251  0025                     ___awmod@counter:	
  1252                           ; 1 bytes @ 0x5
  1253                           
  1254  0025                     envioTX@i:	
  1255                           ; 1 bytes @ 0x5
  1256                           
  1257                           
  1258                           ; 2 bytes @ 0x5
  1259  0025                     	ds	1
  1260  0026                     ?_pow:	
  1261  0026                     ?___lwdiv:	
  1262                           ; 2 bytes @ 0x6
  1263                           
  1264  0026                     ___awdiv@sign:	
  1265                           ; 2 bytes @ 0x6
  1266                           
  1267  0026                     ___awmod@sign:	
  1268                           ; 1 bytes @ 0x6
  1269                           
  1270  0026                     pow@numero:	
  1271                           ; 1 bytes @ 0x6
  1272                           
  1273  0026                     ___lwdiv@divisor:	
  1274                           ; 2 bytes @ 0x6
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x6
  1278  0026                     	ds	1
  1279  0027                     envioTX@transmitir:	
  1280  0027                     ___awdiv@quotient:	
  1281                           ; 1 bytes @ 0x7
  1282                           
  1283                           
  1284                           ; 2 bytes @ 0x7
  1285  0027                     	ds	1
  1286  0028                     ??_lecturaMenos:	
  1287  0028                     pow@potencia:	
  1288                           ; 1 bytes @ 0x8
  1289                           
  1290  0028                     ___lwdiv@dividend:	
  1291                           ; 2 bytes @ 0x8
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x8
  1295  0028                     	ds	2
  1296  002A                     ??_pow:	
  1297  002A                     ??___lwdiv:	
  1298                           ; 1 bytes @ 0xA
  1299                           
  1300  002A                     pow@i:	
  1301                           ; 1 bytes @ 0xA
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0xA
  1305  002A                     	ds	1
  1306  002B                     ___lwdiv@counter:	
  1307                           
  1308                           ; 1 bytes @ 0xB
  1309  002B                     	ds	1
  1310  002C                     pow@resultado:	
  1311  002C                     ___lwdiv@quotient:	
  1312                           ; 2 bytes @ 0xC
  1313                           
  1314                           
  1315                           ; 2 bytes @ 0xC
  1316  002C                     	ds	2
  1317  002E                     ?_eliminarProd:	
  1318  002E                     ?_verificarProd:	
  1319                           ; 1 bytes @ 0xE
  1320                           
  1321  002E                     ?_ingresoProd:	
  1322                           ; 1 bytes @ 0xE
  1323                           
  1324  002E                     ?___lwmod:	
  1325                           ; 1 bytes @ 0xE
  1326                           
  1327  002E                     ingresoProd@tp:	
  1328                           ; 2 bytes @ 0xE
  1329                           
  1330  002E                     verificarProd@tp:	
  1331                           ; 2 bytes @ 0xE
  1332                           
  1333  002E                     eliminarProd@tp:	
  1334                           ; 2 bytes @ 0xE
  1335                           
  1336  002E                     ___lwmod@divisor:	
  1337                           ; 2 bytes @ 0xE
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0xE
  1341  002E                     	ds	2
  1342  0030                     ??_eliminarProd:	
  1343  0030                     ??_verificarProd:	
  1344                           ; 1 bytes @ 0x10
  1345                           
  1346  0030                     ??_ingresoProd:	
  1347                           ; 1 bytes @ 0x10
  1348                           
  1349  0030                     ___lwmod@dividend:	
  1350                           ; 1 bytes @ 0x10
  1351                           
  1352                           
  1353                           ; 2 bytes @ 0x10
  1354  0030                     	ds	2
  1355  0032                     ??___lwmod:	
  1356                           
  1357                           ; 1 bytes @ 0x12
  1358  0032                     	ds	1
  1359  0033                     verificarProd@ret:	
  1360  0033                     ___lwmod@counter:	
  1361                           ; 1 bytes @ 0x13
  1362                           
  1363  0033                     ingresoProd@i:	
  1364                           ; 1 bytes @ 0x13
  1365                           
  1366  0033                     eliminarProd@i:	
  1367                           ; 2 bytes @ 0x13
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x13
  1371  0033                     	ds	1
  1372  0034                     ?_mostrarDigitos:	
  1373  0034                     ?_sprintf:	
  1374                           ; 1 bytes @ 0x14
  1375                           
  1376  0034                     verificarProd@i:	
  1377                           ; 2 bytes @ 0x14
  1378                           
  1379  0034                     mostrarDigitos@num:	
  1380                           ; 2 bytes @ 0x14
  1381                           
  1382  0034                     sprintf@sp:	
  1383                           ; 2 bytes @ 0x14
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x14
  1387  0034                     	ds	2
  1388  0036                     ??_mostrarDigitos:	
  1389  0036                     ?_EEPROM_search:	
  1390                           ; 1 bytes @ 0x16
  1391                           
  1392  0036                     sprintf@f:	
  1393                           ; 2 bytes @ 0x16
  1394                           
  1395  0036                     _mostrarDigitos$1051:	
  1396                           ; 2 bytes @ 0x16
  1397                           
  1398                           
  1399                           ; 2 bytes @ 0x16
  1400  0036                     	ds	2
  1401  0038                     ??_accionesDeshacer:	
  1402  0038                     ??_EEPROM_search:	
  1403                           ; 1 bytes @ 0x18
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0x18
  1407  0038                     	ds	4
  1408  003C                     EEPROM_search@precio:	
  1409                           
  1410                           ; 2 bytes @ 0x1C
  1411  003C                     	ds	2
  1412  003E                     ??_sprintf:	
  1413  003E                     EEPROM_search@tp:	
  1414                           ; 1 bytes @ 0x1E
  1415                           
  1416                           
  1417                           ; 1 bytes @ 0x1E
  1418  003E                     	ds	1
  1419  003F                     ??_lecturaEtiqueta:	
  1420                           
  1421                           ; 1 bytes @ 0x1F
  1422  003F                     	ds	3
  1423  0042                     sprintf@flag:	
  1424  0042                     lecturaEtiqueta@i:	
  1425                           ; 1 bytes @ 0x22
  1426                           
  1427                           
  1428                           ; 2 bytes @ 0x22
  1429  0042                     	ds	1
  1430  0043                     sprintf@prec:	
  1431                           
  1432                           ; 1 bytes @ 0x23
  1433  0043                     	ds	1
  1434  0044                     lecturaEtiqueta@tp:	
  1435  0044                     sprintf@ap:	
  1436                           ; 1 bytes @ 0x24
  1437                           
  1438                           
  1439                           ; 1 bytes @ 0x24
  1440  0044                     	ds	1
  1441  0045                     lecturaEtiqueta@Aux:	
  1442  0045                     sprintf@cp:	
  1443                           ; 2 bytes @ 0x25
  1444                           
  1445                           
  1446                           ; 2 bytes @ 0x25
  1447  0045                     	ds	2
  1448  0047                     sprintf@val:	
  1449                           
  1450                           ; 2 bytes @ 0x27
  1451  0047                     	ds	2
  1452  0049                     sprintf@c:	
  1453                           
  1454                           ; 1 bytes @ 0x29
  1455  0049                     	ds	1
  1456  004A                     ??_agregarModificarPrecio:	
  1457  004A                     ??_accionesAceptar:	
  1458                           ; 1 bytes @ 0x2A
  1459                           
  1460  004A                     ??_cierreDeLote:	
  1461                           ; 1 bytes @ 0x2A
  1462                           
  1463  004A                     ?_consultaPrecio:	
  1464                           ; 1 bytes @ 0x2A
  1465                           
  1466  004A                     consultaPrecio@articulo:	
  1467                           ; 1 bytes @ 0x2A
  1468                           
  1469                           
  1470                           ; 2 bytes @ 0x2A
  1471  004A                     	ds	2
  1472  004C                     ??_consultaPrecio:	
  1473                           
  1474                           ; 1 bytes @ 0x2C
  1475  004C                     	ds	2
  1476  004E                     cierreDeLote@strLote:	
  1477                           
  1478                           ; 32 bytes @ 0x2E
  1479  004E                     	ds	2
  1480  0050                     consultaPrecio@mensaje:	
  1481                           
  1482                           ; 26 bytes @ 0x30
  1483  0050                     	ds	4
  1484  0054                     agregarModificarPrecio@mensaje:	
  1485                           
  1486                           ; 10 bytes @ 0x34
  1487  0054                     	ds	10
  1488  005E                     agregarModificarPrecio@lower_8bits:	
  1489                           
  1490                           ; 1 bytes @ 0x3E
  1491  005E                     	ds	1
  1492  005F                     agregarModificarPrecio@upper_8bits:	
  1493                           
  1494                           ; 1 bytes @ 0x3F
  1495  005F                     	ds	1
  1496  0060                     agregarModificarPrecio@precio:	
  1497                           
  1498                           ; 2 bytes @ 0x40
  1499  0060                     	ds	2
  1500  0062                     agregarModificarPrecio@tp:	
  1501                           
  1502                           ; 1 bytes @ 0x42
  1503  0062                     	ds	8
  1504  006A                     consultaPrecio@precio:	
  1505                           
  1506                           ; 2 bytes @ 0x4A
  1507  006A                     	ds	4
  1508  006E                     ??_lecturaComando:	
  1509  006E                     ??_lecturaMas:	
  1510                           ; 1 bytes @ 0x4E
  1511                           
  1512                           
  1513                           	psect	maintext
  1514  0034                     __pmaintext:	
  1515                           ; 1 bytes @ 0x4E
  1516 ;;
  1517 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1518 ;;
  1519 ;; *************** function _main *****************
  1520 ;; Defined at:
  1521 ;;		line 9 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  i               1   64[BANK3 ] unsigned char 
  1526 ;;  i               1   65[BANK3 ] unsigned char 
  1527 ;;  strLote        32   12[BANK3 ] unsigned char [32]
  1528 ;;  bufferMsj      16   44[BANK3 ] unsigned char [16]
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : B00/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1538 ;;      Params:         0       0       0       0       0
  1539 ;;      Locals:         0       0       0      54       0
  1540 ;;      Temps:          0       0       4       0       0
  1541 ;;      Totals:         0       0       4      54       0
  1542 ;;Total ram usage:       58 bytes
  1543 ;; Hardware stack levels required when called:    7
  1544 ;; This function calls:
  1545 ;;		___lwdiv
  1546 ;;		___lwmod
  1547 ;;		___wmul
  1548 ;;		_accionesAceptar
  1549 ;;		_accionesDeshacer
  1550 ;;		_accionesPuertoSerial
  1551 ;;		_envioTX
  1552 ;;		_mostrarDigitos
  1553 ;;		_sprintf
  1554 ;; This function is called by:
  1555 ;;		Startup code after reset
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _main
  1561  0034                     _main:	
  1562  0034                     l3153:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1565                           
  1566                           
  1567                           ;main.c: 13:     TRISA = 0x01;
  1568  0034  3001               	movlw	1
  1569  0035  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0036  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0037  0085               	movwf	5	;volatile
  1572                           
  1573                           ;main.c: 14:     TRISE = 0x07;
  1574  0038  3007               	movlw	7
  1575  0039  0089               	movwf	9	;volatile
  1576  003A                     l3155:	
  1577                           
  1578                           ;main.c: 15:     TRISB = 0x00;
  1579  003A  0186               	clrf	6	;volatile
  1580  003B                     l3157:	
  1581                           
  1582                           ;main.c: 16:     TRISD = 0x00;
  1583  003B  0188               	clrf	8	;volatile
  1584                           
  1585                           ;main.c: 19:     ADCON0 = 0b10000001;
  1586  003C  3081               	movlw	129
  1587  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1588  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1589  003F  009F               	movwf	31	;volatile
  1590                           
  1591                           ;main.c: 20:     ADCON1 = 0b10001110;
  1592  0040  308E               	movlw	142
  1593  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0043  009F               	movwf	31	;volatile
  1596                           
  1597                           ;main.c: 21:     INTCON = 0b11000000;
  1598  0044  30C0               	movlw	192
  1599  0045  008B               	movwf	11	;volatile
  1600                           
  1601                           ;main.c: 24:     TRISC = 0b10000000;
  1602  0046  3080               	movlw	128
  1603  0047  0087               	movwf	7	;volatile
  1604                           
  1605                           ;main.c: 25:     TXSTA = 0b00100110;
  1606  0048  3026               	movlw	38
  1607  0049  0098               	movwf	24	;volatile
  1608                           
  1609                           ;main.c: 26:     RCSTA = 0b10010000;
  1610  004A  3090               	movlw	144
  1611  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1612  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1613  004D  0098               	movwf	24	;volatile
  1614                           
  1615                           ;main.c: 27:     SPBRG = 25;
  1616  004E  3019               	movlw	25
  1617  004F  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0050  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0051  0099               	movwf	25	;volatile
  1620  0052                     l3159:	
  1621                           
  1622                           ;main.c: 30:     ADIF = 0;
  1623  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0054  130C               	bcf	12,6	;volatile
  1626  0055                     l3161:	
  1627                           
  1628                           ;main.c: 31:     ADIE = 1;
  1629  0055  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0056  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0057  170C               	bsf	12,6	;volatile
  1632  0058                     l3163:	
  1633                           
  1634                           ;main.c: 32:     RCIE = 1;
  1635  0058  168C               	bsf	12,5	;volatile
  1636  0059                     l3165:	
  1637                           
  1638                           ;main.c: 33:     cuenta = 0;
  1639  0059  01F0               	clrf	_cuenta
  1640  005A  01F1               	clrf	_cuenta+1
  1641  005B                     l3167:	
  1642                           
  1643                           ;main.c: 34:     auxCuenta = 0;
  1644  005B  1683               	bsf	3,5	;RP0=1, select bank3
  1645  005C  1703               	bsf	3,6	;RP1=1, select bank3
  1646  005D  01D4               	clrf	_auxCuenta^(0+384)
  1647  005E  01D5               	clrf	(_auxCuenta+1)^(0+384)
  1648  005F                     l3169:	
  1649                           
  1650                           ;main.c: 35:     mostrarDigitos(cuenta);
  1651  005F  0871               	movf	_cuenta+1,w
  1652  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0062  00B5               	movwf	mostrarDigitos@num+1
  1655  0063  0870               	movf	_cuenta,w
  1656  0064  00B4               	movwf	mostrarDigitos@num
  1657  0065  120A  158A  2715  120A  118A  	fcall	_mostrarDigitos
  1658  006A                     l3171:	
  1659                           
  1660                           ;main.c: 41:         if(RE0) {
  1661  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1662  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1663  006C  1C09               	btfss	9,0	;volatile
  1664  006D  286F               	goto	u3521
  1665  006E  2870               	goto	u3520
  1666  006F                     u3521:	
  1667  006F  287A               	goto	l274
  1668  0070                     u3520:	
  1669  0070                     l275:	
  1670  0070  1809               	btfsc	9,0	;volatile
  1671  0071  2873               	goto	u3531
  1672  0072  2874               	goto	u3530
  1673  0073                     u3531:	
  1674  0073  2870               	goto	l275
  1675  0074                     u3530:	
  1676  0074                     l3175:	
  1677                           
  1678                           ;main.c: 43:             accionesAceptar();
  1679  0074  120A  158A  2784  120A  118A  	fcall	_accionesAceptar
  1680                           
  1681                           ;main.c: 44:         }
  1682  0079  286A               	goto	l3171
  1683  007A                     l274:	
  1684                           ;main.c: 45:         else if(RE1) {
  1685                           
  1686  007A  1C89               	btfss	9,1	;volatile
  1687  007B  287D               	goto	u3541
  1688  007C  287E               	goto	u3540
  1689  007D                     u3541:	
  1690  007D  2888               	goto	l279
  1691  007E                     u3540:	
  1692  007E                     l280:	
  1693  007E  1889               	btfsc	9,1	;volatile
  1694  007F  2881               	goto	u3551
  1695  0080  2882               	goto	u3550
  1696  0081                     u3551:	
  1697  0081  287E               	goto	l280
  1698  0082                     u3550:	
  1699  0082                     l3179:	
  1700                           
  1701                           ;main.c: 47:             accionesDeshacer();
  1702  0082  120A  158A  22ED  120A  118A  	fcall	_accionesDeshacer
  1703                           
  1704                           ;main.c: 48:         }
  1705  0087  286A               	goto	l3171
  1706  0088                     l279:	
  1707                           ;main.c: 49:         else if(RE2) {
  1708                           
  1709  0088  1D09               	btfss	9,2	;volatile
  1710  0089  288B               	goto	u3561
  1711  008A  288C               	goto	u3560
  1712  008B                     u3561:	
  1713  008B  28FA               	goto	l3201
  1714  008C                     u3560:	
  1715  008C                     l285:	
  1716  008C  1909               	btfsc	9,2	;volatile
  1717  008D  288F               	goto	u3571
  1718  008E  2890               	goto	u3570
  1719  008F                     u3571:	
  1720  008F  288C               	goto	l285
  1721  0090                     u3570:	
  1722  0090                     l3183:	
  1723                           
  1724                           ;main.c: 51:             if (cuenta == 0){
  1725  0090  0870               	movf	_cuenta,w
  1726  0091  0471               	iorwf	_cuenta+1,w
  1727  0092  1D03               	btfss	3,2
  1728  0093  2895               	goto	u3581
  1729  0094  2896               	goto	u3580
  1730  0095                     u3581:	
  1731  0095  286A               	goto	l3171
  1732  0096                     u3580:	
  1733  0096                     l3185:	
  1734                           
  1735                           ;main.c: 52:                 cierreLotePedido = 1;
  1736  0096  1683               	bsf	3,5	;RP0=1, select bank3
  1737  0097  1703               	bsf	3,6	;RP1=1, select bank3
  1738  0098  01D6               	clrf	_cierreLotePedido^(0+384)
  1739  0099  0AD6               	incf	_cierreLotePedido^(0+384),f
  1740  009A                     l3187:	
  1741                           
  1742                           ;main.c: 53:                 char strLote[32];;main.c: 54:                 sprintf(strLo
      +                          te,"\nCierre, L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  1743  009A  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1744  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1745  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1746  009D  00B4               	movwf	sprintf@sp
  1747  009E  3001               	movlw	1
  1748  009F  00B5               	movwf	sprintf@sp+1
  1749  00A0  304E               	movlw	low (STR_13| (0+32768))
  1750  00A1  00B6               	movwf	sprintf@f
  1751  00A2  3084               	movlw	high (STR_13| (0+32768))
  1752  00A3  00B7               	movwf	sprintf@f+1
  1753  00A4  0878               	movf	_nroLote,w
  1754  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  1755  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  1756  00A7  00C9               	movwf	??_main^(0+128)
  1757  00A8  01CA               	clrf	(??_main^(0+128)+1)
  1758  00A9  0849               	movf	??_main^(0+128),w
  1759  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1760  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1761  00AC  00B8               	movwf	?_sprintf+4
  1762  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  1763  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  1764  00AF  084A               	movf	(??_main+1)^(0+128),w
  1765  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1766  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1767  00B2  00B9               	movwf	?_sprintf+5
  1768  00B3  0872               	movf	_ventasLote,w
  1769  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1770  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1771  00B6  00CB               	movwf	(??_main+2)^(0+128)
  1772  00B7  01CC               	clrf	((??_main+2)^(0+128)+1)
  1773  00B8  084B               	movf	(??_main+2)^(0+128),w
  1774  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1775  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1776  00BB  00BA               	movwf	?_sprintf+6
  1777  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1778  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1779  00BE  084C               	movf	(??_main+3)^(0+128),w
  1780  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1781  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1782  00C1  00BB               	movwf	?_sprintf+7
  1783  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1784  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1785  00C4  085B               	movf	(_montosLote+1)^(0+128),w
  1786  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1787  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1788  00C7  00BD               	movwf	?_sprintf+9
  1789  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1790  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1791  00CA  085A               	movf	_montosLote^(0+128),w
  1792  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1793  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1794  00CD  00BC               	movwf	?_sprintf+8
  1795  00CE  120A  118A  21D9  120A  118A  	fcall	_sprintf
  1796                           
  1797                           ;main.c: 55:                 envioTX(strLote);
  1798  00D3  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1799  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1800  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1801  00D6  00A0               	movwf	envioTX@mensaje
  1802  00D7  3001               	movlw	1
  1803  00D8  00A1               	movwf	envioTX@mensaje+1
  1804  00D9  120A  158A  220A  120A  118A  	fcall	_envioTX
  1805  00DE                     l3189:	
  1806                           
  1807                           ;main.c: 56:                 for(char i = 0; i<10; i++){
  1808  00DE  1683               	bsf	3,5	;RP0=1, select bank3
  1809  00DF  1703               	bsf	3,6	;RP1=1, select bank3
  1810  00E0  01D0               	clrf	main@i^(0+384)
  1811  00E1                     l3195:	
  1812                           
  1813                           ;main.c: 57:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  1814  00E1  3082               	movlw	130
  1815  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1816  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1817  00E4  00CA               	movwf	(??_main^(0+128)+1)
  1818  00E5  30DD               	movlw	221
  1819  00E6  00C9               	movwf	??_main^(0+128)
  1820  00E7                     u3637:	
  1821  00E7  0BC9               	decfsz	??_main^(0+128),f
  1822  00E8  28E7               	goto	u3637
  1823  00E9  0BCA               	decfsz	(??_main^(0+128)+1),f
  1824  00EA  28E7               	goto	u3637
  1825  00EB                     l3197:	
  1826                           
  1827                           ;main.c: 58:                 }
  1828  00EB  3001               	movlw	1
  1829  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1830  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1831  00EE  00C9               	movwf	??_main^(0+128)
  1832  00EF  0849               	movf	??_main^(0+128),w
  1833  00F0  1683               	bsf	3,5	;RP0=1, select bank3
  1834  00F1  1703               	bsf	3,6	;RP1=1, select bank3
  1835  00F2  07D0               	addwf	main@i^(0+384),f
  1836  00F3                     l3199:	
  1837  00F3  300A               	movlw	10
  1838  00F4  0250               	subwf	main@i^(0+384),w
  1839  00F5  1C03               	skipc
  1840  00F6  28F8               	goto	u3591
  1841  00F7  28F9               	goto	u3590
  1842  00F8                     u3591:	
  1843  00F8  28E1               	goto	l3195
  1844  00F9                     u3590:	
  1845  00F9  286A               	goto	l3171
  1846  00FA                     l3201:	
  1847  00FA  1683               	bsf	3,5	;RP0=1, select bank3
  1848  00FB  1703               	bsf	3,6	;RP1=1, select bank3
  1849  00FC  0852               	movf	_huboInt^(0+384),w
  1850  00FD  0453               	iorwf	(_huboInt+1)^(0+384),w
  1851  00FE  1903               	btfsc	3,2
  1852  00FF  2901               	goto	u3601
  1853  0100  2902               	goto	u3600
  1854  0101                     u3601:	
  1855  0101  2920               	goto	l3219
  1856  0102                     u3600:	
  1857  0102                     l3203:	
  1858                           
  1859                           ;main.c: 62:             huboInt = 0;
  1860  0102  01D2               	clrf	_huboInt^(0+384)
  1861  0103  01D3               	clrf	(_huboInt+1)^(0+384)
  1862  0104                     l3205:	
  1863                           
  1864                           ;main.c: 63:             accionesPuertoSerial();
  1865  0104  120A  158A  25DB  120A  118A  	fcall	_accionesPuertoSerial
  1866  0109                     l3207:	
  1867                           
  1868                           ;main.c: 64:             for(char i = 0; i < 10; i++){
  1869  0109  1683               	bsf	3,5	;RP0=1, select bank3
  1870  010A  1703               	bsf	3,6	;RP1=1, select bank3
  1871  010B  01D1               	clrf	main@i_257^(0+384)
  1872  010C                     l3213:	
  1873                           
  1874                           ;main.c: 65:                 codigoEntrada[i] = 0;
  1875  010C  0851               	movf	main@i_257^(0+384),w
  1876  010D  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  1877  010E  0084               	movwf	4
  1878  010F  1383               	bcf	3,7	;select IRP bank1
  1879  0110  0180               	clrf	0
  1880  0111                     l3215:	
  1881                           
  1882                           ;main.c: 66:             }
  1883  0111  3001               	movlw	1
  1884  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1886  0114  00C9               	movwf	??_main^(0+128)
  1887  0115  0849               	movf	??_main^(0+128),w
  1888  0116  1683               	bsf	3,5	;RP0=1, select bank3
  1889  0117  1703               	bsf	3,6	;RP1=1, select bank3
  1890  0118  07D1               	addwf	main@i_257^(0+384),f
  1891  0119                     l3217:	
  1892  0119  300A               	movlw	10
  1893  011A  0251               	subwf	main@i_257^(0+384),w
  1894  011B  1C03               	skipc
  1895  011C  291E               	goto	u3611
  1896  011D  291F               	goto	u3610
  1897  011E                     u3611:	
  1898  011E  290C               	goto	l3213
  1899  011F                     u3610:	
  1900  011F  286A               	goto	l3171
  1901  0120                     l3219:	
  1902  0120  0857               	movf	_adresult^(0+384),w
  1903  0121  0458               	iorwf	(_adresult+1)^(0+384),w
  1904  0122  1903               	btfsc	3,2
  1905  0123  2925               	goto	u3621
  1906  0124  2926               	goto	u3620
  1907  0125                     u3621:	
  1908  0125  29D5               	goto	l283
  1909  0126                     u3620:	
  1910  0126                     l3221:	
  1911                           
  1912                           ;main.c: 70:             adresult = adresult*10*5/1023;
  1913  0126  30FF               	movlw	255
  1914  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0129  00A6               	movwf	___lwdiv@divisor
  1917  012A  3003               	movlw	3
  1918  012B  00A7               	movwf	___lwdiv@divisor+1
  1919  012C  1683               	bsf	3,5	;RP0=1, select bank3
  1920  012D  1703               	bsf	3,6	;RP1=1, select bank3
  1921  012E  0858               	movf	(_adresult+1)^(0+384),w
  1922  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0131  00A1               	movwf	___wmul@multiplier+1
  1925  0132  1683               	bsf	3,5	;RP0=1, select bank3
  1926  0133  1703               	bsf	3,6	;RP1=1, select bank3
  1927  0134  0857               	movf	_adresult^(0+384),w
  1928  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0137  00A0               	movwf	___wmul@multiplier
  1931  0138  3032               	movlw	50
  1932  0139  00A2               	movwf	___wmul@multiplicand
  1933  013A  3000               	movlw	0
  1934  013B  00A3               	movwf	___wmul@multiplicand+1
  1935  013C  120A  118A  23D9  120A  118A  	fcall	___wmul
  1936  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0143  0821               	movf	?___wmul+1,w
  1939  0144  00A9               	movwf	___lwdiv@dividend+1
  1940  0145  0820               	movf	?___wmul,w
  1941  0146  00A8               	movwf	___lwdiv@dividend
  1942  0147  120A  158A  232A  120A  118A  	fcall	___lwdiv
  1943  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1944  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1945  014E  0827               	movf	?___lwdiv+1,w
  1946  014F  1683               	bsf	3,5	;RP0=1, select bank3
  1947  0150  1703               	bsf	3,6	;RP1=1, select bank3
  1948  0151  00D8               	movwf	(_adresult+1)^(0+384)
  1949  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0154  0826               	movf	?___lwdiv,w
  1952  0155  1683               	bsf	3,5	;RP0=1, select bank3
  1953  0156  1703               	bsf	3,6	;RP1=1, select bank3
  1954  0157  00D7               	movwf	_adresult^(0+384)
  1955                           
  1956                           ;main.c: 71:             char bufferMsj[16];;main.c: 72:             sprintf(bufferMsj,"
      +                          V=%d.%dV\n", adresult/10, adresult%10);
  1957  0158  300A               	movlw	10
  1958  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1959  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1960  015B  00A6               	movwf	___lwdiv@divisor
  1961  015C  3000               	movlw	0
  1962  015D  00A7               	movwf	___lwdiv@divisor+1
  1963  015E  1683               	bsf	3,5	;RP0=1, select bank3
  1964  015F  1703               	bsf	3,6	;RP1=1, select bank3
  1965  0160  0858               	movf	(_adresult+1)^(0+384),w
  1966  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0163  00A9               	movwf	___lwdiv@dividend+1
  1969  0164  1683               	bsf	3,5	;RP0=1, select bank3
  1970  0165  1703               	bsf	3,6	;RP1=1, select bank3
  1971  0166  0857               	movf	_adresult^(0+384),w
  1972  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0169  00A8               	movwf	___lwdiv@dividend
  1975  016A  120A  158A  232A  120A  118A  	fcall	___lwdiv
  1976  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0171  0827               	movf	?___lwdiv+1,w
  1979  0172  1683               	bsf	3,5	;RP0=1, select bank3
  1980  0173  1703               	bsf	3,6	;RP1=1, select bank3
  1981  0174  00CD               	movwf	(_main$1049+1)^(0+384)
  1982  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0177  0826               	movf	?___lwdiv,w
  1985  0178  1683               	bsf	3,5	;RP0=1, select bank3
  1986  0179  1703               	bsf	3,6	;RP1=1, select bank3
  1987  017A  00CC               	movwf	_main$1049^(0+384)
  1988                           
  1989                           ;main.c: 71:             char bufferMsj[16];;main.c: 72:             sprintf(bufferMsj,"
      +                          V=%d.%dV\n", adresult/10, adresult%10);
  1990  017B  300A               	movlw	10
  1991  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1992  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1993  017E  00AE               	movwf	___lwmod@divisor
  1994  017F  3000               	movlw	0
  1995  0180  00AF               	movwf	___lwmod@divisor+1
  1996  0181  1683               	bsf	3,5	;RP0=1, select bank3
  1997  0182  1703               	bsf	3,6	;RP1=1, select bank3
  1998  0183  0858               	movf	(_adresult+1)^(0+384),w
  1999  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0186  00B1               	movwf	___lwmod@dividend+1
  2002  0187  1683               	bsf	3,5	;RP0=1, select bank3
  2003  0188  1703               	bsf	3,6	;RP1=1, select bank3
  2004  0189  0857               	movf	_adresult^(0+384),w
  2005  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2006  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2007  018C  00B0               	movwf	___lwmod@dividend
  2008  018D  120A  158A  22B1  120A  118A  	fcall	___lwmod
  2009  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0194  082F               	movf	?___lwmod+1,w
  2012  0195  1683               	bsf	3,5	;RP0=1, select bank3
  2013  0196  1703               	bsf	3,6	;RP1=1, select bank3
  2014  0197  00CF               	movwf	(_main$1050+1)^(0+384)
  2015  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0199  1303               	bcf	3,6	;RP1=0, select bank0
  2017  019A  082E               	movf	?___lwmod,w
  2018  019B  1683               	bsf	3,5	;RP0=1, select bank3
  2019  019C  1703               	bsf	3,6	;RP1=1, select bank3
  2020  019D  00CE               	movwf	_main$1050^(0+384)
  2021  019E                     l3223:	
  2022                           
  2023                           ;main.c: 71:             char bufferMsj[16];;main.c: 72:             sprintf(bufferMsj,"
      +                          V=%d.%dV\n", adresult/10, adresult%10);
  2024  019E  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2025  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2026  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2027  01A1  00B4               	movwf	sprintf@sp
  2028  01A2  3001               	movlw	1
  2029  01A3  00B5               	movwf	sprintf@sp+1
  2030  01A4  3008               	movlw	low (STR_14| (0+32768))
  2031  01A5  00B6               	movwf	sprintf@f
  2032  01A6  3085               	movlw	high (STR_14| (0+32768))
  2033  01A7  00B7               	movwf	sprintf@f+1
  2034  01A8  1683               	bsf	3,5	;RP0=1, select bank3
  2035  01A9  1703               	bsf	3,6	;RP1=1, select bank3
  2036  01AA  084D               	movf	(_main$1049+1)^(0+384),w
  2037  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2038  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2039  01AD  00B9               	movwf	?_sprintf+5
  2040  01AE  1683               	bsf	3,5	;RP0=1, select bank3
  2041  01AF  1703               	bsf	3,6	;RP1=1, select bank3
  2042  01B0  084C               	movf	_main$1049^(0+384),w
  2043  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2044  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2045  01B3  00B8               	movwf	?_sprintf+4
  2046  01B4  1683               	bsf	3,5	;RP0=1, select bank3
  2047  01B5  1703               	bsf	3,6	;RP1=1, select bank3
  2048  01B6  084F               	movf	(_main$1050+1)^(0+384),w
  2049  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2050  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2051  01B9  00BB               	movwf	?_sprintf+7
  2052  01BA  1683               	bsf	3,5	;RP0=1, select bank3
  2053  01BB  1703               	bsf	3,6	;RP1=1, select bank3
  2054  01BC  084E               	movf	_main$1050^(0+384),w
  2055  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2056  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2057  01BF  00BA               	movwf	?_sprintf+6
  2058  01C0  120A  118A  21D9  120A  118A  	fcall	_sprintf
  2059  01C5                     l3225:	
  2060                           
  2061                           ;main.c: 73:             envioTX(bufferMsj);
  2062  01C5  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2063  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2064  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2065  01C8  00A0               	movwf	envioTX@mensaje
  2066  01C9  3001               	movlw	1
  2067  01CA  00A1               	movwf	envioTX@mensaje+1
  2068  01CB  120A  158A  220A  120A  118A  	fcall	_envioTX
  2069  01D0                     l3227:	
  2070                           
  2071                           ;main.c: 74:             adresult = 0;
  2072  01D0  1683               	bsf	3,5	;RP0=1, select bank3
  2073  01D1  1703               	bsf	3,6	;RP1=1, select bank3
  2074  01D2  01D7               	clrf	_adresult^(0+384)
  2075  01D3  01D8               	clrf	(_adresult+1)^(0+384)
  2076  01D4  286A               	goto	l3171
  2077  01D5                     l283:	
  2078  01D5  286A               	goto	l3171
  2079  01D6  120A  118A  280E   	ljmp	start
  2080  01D9                     __end_of_main:	
  2081                           
  2082                           	psect	text1
  2083  0DDB                     __ptext1:	
  2084 ;; *************** function _accionesPuertoSerial *****************
  2085 ;; Defined at:
  2086 ;;		line 35 in file "acciones.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  mensaje        12    0[BANK3 ] unsigned char [12]
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       0       0       0       0
  2101 ;;      Locals:         0       0       0      12       0
  2102 ;;      Temps:          0       0       3       0       0
  2103 ;;      Totals:         0       0       3      12       0
  2104 ;;Total ram usage:       15 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    6
  2107 ;; This function calls:
  2108 ;;		_envioTX
  2109 ;;		_lecturaComando
  2110 ;;		_lecturaEtiqueta
  2111 ;;		_sprintf
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _accionesPuertoSerial
  2119  0DDB                     _accionesPuertoSerial:	
  2120  0DDB                     l3133:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2123                           
  2124                           
  2125                           ;acciones.c: 36:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codi
      +                          goEntrada[0] == '-')) {
  2126  0DDB  303F               	movlw	63
  2127  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  2128  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  2129  0DDE  0660               	xorwf	_codigoEntrada^(0+128),w
  2130  0DDF  1903               	btfsc	3,2
  2131  0DE0  2DE2               	goto	u3461
  2132  0DE1  2DE3               	goto	u3460
  2133  0DE2                     u3461:	
  2134  0DE2  2DEF               	goto	l3139
  2135  0DE3                     u3460:	
  2136  0DE3                     l3135:	
  2137  0DE3  302B               	movlw	43
  2138  0DE4  0660               	xorwf	_codigoEntrada^(0+128),w
  2139  0DE5  1903               	btfsc	3,2
  2140  0DE6  2DE8               	goto	u3471
  2141  0DE7  2DE9               	goto	u3470
  2142  0DE8                     u3471:	
  2143  0DE8  2DEF               	goto	l3139
  2144  0DE9                     u3470:	
  2145  0DE9                     l3137:	
  2146  0DE9  302D               	movlw	45
  2147  0DEA  0660               	xorwf	_codigoEntrada^(0+128),w
  2148  0DEB  1D03               	btfss	3,2
  2149  0DEC  2DEE               	goto	u3481
  2150  0DED  2DEF               	goto	u3480
  2151  0DEE                     u3481:	
  2152  0DEE  2DF5               	goto	l3141
  2153  0DEF                     u3480:	
  2154  0DEF                     l3139:	
  2155                           
  2156                           ;acciones.c: 37:         lecturaComando();
  2157  0DEF  120A  158A  21B8  120A  158A  	fcall	_lecturaComando
  2158                           
  2159                           ;acciones.c: 38:     }
  2160  0DF4  2E42               	goto	l67
  2161  0DF5                     l3141:	
  2162  0DF5  303A               	movlw	58
  2163  0DF6  0260               	subwf	_codigoEntrada^(0+128),w
  2164  0DF7  1803               	skipnc
  2165  0DF8  2DFA               	goto	u3491
  2166  0DF9  2DFB               	goto	u3490
  2167  0DFA                     u3491:	
  2168  0DFA  2E2E               	goto	l64
  2169  0DFB                     u3490:	
  2170  0DFB                     l3143:	
  2171  0DFB  3030               	movlw	48
  2172  0DFC  0260               	subwf	_codigoEntrada^(0+128),w
  2173  0DFD  1C03               	skipc
  2174  0DFE  2E00               	goto	u3501
  2175  0DFF  2E01               	goto	u3500
  2176  0E00                     u3501:	
  2177  0E00  2E2E               	goto	l64
  2178  0E01                     u3500:	
  2179  0E01                     l3145:	
  2180                           
  2181                           ;acciones.c: 40:         if (modoDebug){
  2182  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0E03  086E               	movf	_modoDebug,w
  2185  0E04  1903               	btfsc	3,2
  2186  0E05  2E07               	goto	u3511
  2187  0E06  2E08               	goto	u3510
  2188  0E07                     u3511:	
  2189  0E07  2E28               	goto	l65
  2190  0E08                     u3510:	
  2191  0E08                     l3147:	
  2192                           
  2193                           ;acciones.c: 41:             char mensaje[12];;acciones.c: 42:             sprintf(mensa
      +                          je,"E:%s", codigoEntrada);
  2194  0E08  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2195  0E09  00B4               	movwf	sprintf@sp
  2196  0E0A  3001               	movlw	1
  2197  0E0B  00B5               	movwf	sprintf@sp+1
  2198  0E0C  3022               	movlw	low (STR_3| (0+32768))
  2199  0E0D  00B6               	movwf	sprintf@f
  2200  0E0E  3085               	movlw	high (STR_3| (0+32768))
  2201  0E0F  00B7               	movwf	sprintf@f+1
  2202  0E10  30E0               	movlw	(low (_codigoEntrada| 0))& (0+255)
  2203  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0E13  00C6               	movwf	??_accionesPuertoSerial^(0+128)
  2206  0E14  0846               	movf	??_accionesPuertoSerial^(0+128),w
  2207  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0E17  00B8               	movwf	low ((?_sprintf| 0+4))
  2210  0E18  120A  118A  21D9  120A  158A  	fcall	_sprintf
  2211                           
  2212                           ;acciones.c: 43:             envioTX(mensaje);
  2213  0E1D  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2214  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0E20  00A0               	movwf	envioTX@mensaje
  2217  0E21  3001               	movlw	1
  2218  0E22  00A1               	movwf	envioTX@mensaje+1
  2219  0E23  120A  158A  220A  120A  158A  	fcall	_envioTX
  2220  0E28                     l65:	
  2221                           ;acciones.c: 44:         }
  2222                           
  2223                           
  2224                           ;acciones.c: 45:         lecturaEtiqueta();
  2225  0E28  120A  118A  2527  120A  158A  	fcall	_lecturaEtiqueta
  2226                           
  2227                           ;acciones.c: 46:     }
  2228  0E2D  2E42               	goto	l67
  2229  0E2E                     l64:	
  2230                           ;acciones.c: 47:     else{
  2231                           
  2232                           
  2233                           ;acciones.c: 49:         RA5 = 1;
  2234  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0E30  1685               	bsf	5,5	;volatile
  2237  0E31                     l3149:	
  2238                           
  2239                           ;acciones.c: 50:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2240  0E31  3006               	movlw	6
  2241  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0E34  00C8               	movwf	(??_accionesPuertoSerial^(0+128)+2)
  2244  0E35  3013               	movlw	19
  2245  0E36  00C7               	movwf	(??_accionesPuertoSerial^(0+128)+1)
  2246  0E37  30AD               	movlw	173
  2247  0E38  00C6               	movwf	??_accionesPuertoSerial^(0+128)
  2248  0E39                     u3647:	
  2249  0E39  0BC6               	decfsz	??_accionesPuertoSerial^(0+128),f
  2250  0E3A  2E39               	goto	u3647
  2251  0E3B  0BC7               	decfsz	(??_accionesPuertoSerial^(0+128)+1),f
  2252  0E3C  2E39               	goto	u3647
  2253  0E3D  0BC8               	decfsz	(??_accionesPuertoSerial^(0+128)+2),f
  2254  0E3E  2E39               	goto	u3647
  2255  0E3F                     l3151:	
  2256                           
  2257                           ;acciones.c: 51:         RA5 = 0;
  2258  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0E41  1285               	bcf	5,5	;volatile
  2261  0E42                     l67:	
  2262  0E42  0008               	return
  2263  0E43                     __end_of_accionesPuertoSerial:	
  2264                           
  2265                           	psect	text2
  2266  0527                     __ptext2:	
  2267 ;; *************** function _lecturaEtiqueta *****************
  2268 ;; Defined at:
  2269 ;;		line 17 in file "lectura.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  tp              1   36[BANK0 ] unsigned char 
  2274 ;;  i               2   34[BANK0 ] int 
  2275 ;;  Aux             2   37[BANK0 ] short 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         0       5       0       0       0
  2287 ;;      Temps:          0       3       0       0       0
  2288 ;;      Totals:         0       8       0       0       0
  2289 ;;Total ram usage:        8 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    5
  2292 ;; This function calls:
  2293 ;;		_EEPROM_search
  2294 ;;		___awmod
  2295 ;;		___bmul
  2296 ;;		_envioTX
  2297 ;;		_ingresoProd
  2298 ;;		_mostrarDigitos
  2299 ;; This function is called by:
  2300 ;;		_accionesPuertoSerial
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _lecturaEtiqueta
  2306  0527                     _lecturaEtiqueta:	
  2307  0527                     l3043:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2310                           
  2311                           
  2312                           ;lectura.c: 18:     short int Aux = 0;
  2313  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0529  01C5               	clrf	lecturaEtiqueta@Aux
  2316  052A  01C6               	clrf	lecturaEtiqueta@Aux+1
  2317                           
  2318                           ;lectura.c: 21:     for (int i = 0; i < 8; i++ ) {
  2319  052B  01C2               	clrf	lecturaEtiqueta@i
  2320  052C  01C3               	clrf	lecturaEtiqueta@i+1
  2321  052D                     l3049:	
  2322                           
  2323                           ;lectura.c: 22:         Aux += (codigoEntrada[i] - '0');
  2324  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2325  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2326  052F  0842               	movf	lecturaEtiqueta@i,w
  2327  0530  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2328  0531  0084               	movwf	4
  2329  0532  1383               	bcf	3,7	;select IRP bank1
  2330  0533  0800               	movf	0,w
  2331  0534  3ED0               	addlw	208
  2332  0535  00BF               	movwf	??_lecturaEtiqueta
  2333  0536  30FF               	movlw	255
  2334  0537  1803               	skipnc
  2335  0538  3000               	movlw	0
  2336  0539  00C0               	movwf	??_lecturaEtiqueta+1
  2337  053A  083F               	movf	??_lecturaEtiqueta,w
  2338  053B  07C5               	addwf	lecturaEtiqueta@Aux,f
  2339  053C  1803               	skipnc
  2340  053D  0AC6               	incf	lecturaEtiqueta@Aux+1,f
  2341  053E  0840               	movf	??_lecturaEtiqueta+1,w
  2342  053F  07C6               	addwf	lecturaEtiqueta@Aux+1,f
  2343  0540                     l3051:	
  2344                           
  2345                           ;lectura.c: 23:     }
  2346  0540  3001               	movlw	1
  2347  0541  07C2               	addwf	lecturaEtiqueta@i,f
  2348  0542  1803               	skipnc
  2349  0543  0AC3               	incf	lecturaEtiqueta@i+1,f
  2350  0544  3000               	movlw	0
  2351  0545  07C3               	addwf	lecturaEtiqueta@i+1,f
  2352  0546                     l3053:	
  2353  0546  0843               	movf	lecturaEtiqueta@i+1,w
  2354  0547  3A80               	xorlw	128
  2355  0548  00FF               	movwf	btemp+1
  2356  0549  3080               	movlw	128
  2357  054A  027F               	subwf	btemp+1,w
  2358  054B  1D03               	skipz
  2359  054C  2D4F               	goto	u3375
  2360  054D  3008               	movlw	8
  2361  054E  0242               	subwf	lecturaEtiqueta@i,w
  2362  054F                     u3375:	
  2363  054F  1C03               	skipc
  2364  0550  2D52               	goto	u3371
  2365  0551  2D53               	goto	u3370
  2366  0552                     u3371:	
  2367  0552  2D2D               	goto	l3049
  2368  0553                     u3370:	
  2369  0553                     l3055:	
  2370                           
  2371                           ;lectura.c: 25:     if ( (Aux%10) == (codigoEntrada[8] - '0')) {
  2372  0553  300A               	movlw	10
  2373  0554  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0555  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0556  00A0               	movwf	___awmod@divisor
  2376  0557  3000               	movlw	0
  2377  0558  00A1               	movwf	___awmod@divisor+1
  2378  0559  0846               	movf	lecturaEtiqueta@Aux+1,w
  2379  055A  00A3               	movwf	___awmod@dividend+1
  2380  055B  0845               	movf	lecturaEtiqueta@Aux,w
  2381  055C  00A2               	movwf	___awmod@dividend
  2382  055D  120A  158A  2458  120A  118A  	fcall	___awmod
  2383  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0563  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0564  0868               	movf	(_codigoEntrada^(0+128)+8),w
  2386  0565  3ED0               	addlw	208
  2387  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0568  00BF               	movwf	??_lecturaEtiqueta
  2390  0569  30FF               	movlw	255
  2391  056A  1803               	skipnc
  2392  056B  3000               	movlw	0
  2393  056C  00C0               	movwf	??_lecturaEtiqueta+1
  2394  056D  0821               	movf	?___awmod+1,w
  2395  056E  0640               	xorwf	??_lecturaEtiqueta+1,w
  2396  056F  1D03               	skipz
  2397  0570  2D73               	goto	u3385
  2398  0571  0820               	movf	?___awmod,w
  2399  0572  063F               	xorwf	??_lecturaEtiqueta,w
  2400  0573                     u3385:	
  2401  0573  1D03               	skipz
  2402  0574  2D76               	goto	u3381
  2403  0575  2D77               	goto	u3380
  2404  0576                     u3381:	
  2405  0576  2E0A               	goto	l119
  2406  0577                     u3380:	
  2407  0577                     l3057:	
  2408                           
  2409                           ;lectura.c: 27:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1]
      +                           - '0');
  2410  0577  300A               	movlw	10
  2411  0578  00BF               	movwf	??_lecturaEtiqueta
  2412  0579  083F               	movf	??_lecturaEtiqueta,w
  2413  057A  00A0               	movwf	___bmul@multiplicand
  2414  057B  1683               	bsf	3,5	;RP0=1, select bank1
  2415  057C  1303               	bcf	3,6	;RP1=0, select bank1
  2416  057D  0860               	movf	_codigoEntrada^(0+128),w
  2417  057E  120A  158A  216A  120A  118A  	fcall	___bmul
  2418  0583  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0584  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0585  0761               	addwf	(_codigoEntrada^(0+128)+1),w
  2421  0586  3EF0               	addlw	240
  2422  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0589  00C0               	movwf	??_lecturaEtiqueta+1
  2425  058A  0840               	movf	??_lecturaEtiqueta+1,w
  2426  058B  00C4               	movwf	lecturaEtiqueta@tp
  2427  058C                     l3059:	
  2428                           
  2429                           ;lectura.c: 28:         Aux = EEPROM_search(tp);
  2430  058C  0844               	movf	lecturaEtiqueta@tp,w
  2431  058D  120A  158A  26AC  120A  118A  	fcall	_EEPROM_search
  2432  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0594  0837               	movf	?_EEPROM_search+1,w
  2435  0595  00C6               	movwf	lecturaEtiqueta@Aux+1
  2436  0596  0836               	movf	?_EEPROM_search,w
  2437  0597  00C5               	movwf	lecturaEtiqueta@Aux
  2438  0598                     l3061:	
  2439                           
  2440                           ;lectura.c: 30:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  2441  0598  0870               	movf	_cuenta,w
  2442  0599  0745               	addwf	lecturaEtiqueta@Aux,w
  2443  059A  00BF               	movwf	??_lecturaEtiqueta
  2444  059B  0871               	movf	_cuenta+1,w
  2445  059C  1803               	skipnc
  2446  059D  0A71               	incf	_cuenta+1,w
  2447  059E  0746               	addwf	lecturaEtiqueta@Aux+1,w
  2448  059F  00C0               	movwf	??_lecturaEtiqueta+1
  2449  05A0  3003               	movlw	3
  2450  05A1  0240               	subwf	??_lecturaEtiqueta+1,w
  2451  05A2  30E8               	movlw	232
  2452  05A3  1903               	skipnz
  2453  05A4  023F               	subwf	??_lecturaEtiqueta,w
  2454  05A5  1803               	skipnc
  2455  05A6  2DA8               	goto	u3391
  2456  05A7  2DA9               	goto	u3390
  2457  05A8                     u3391:	
  2458  05A8  2E0A               	goto	l119
  2459  05A9                     u3390:	
  2460  05A9                     l3063:	
  2461  05A9  0A45               	incf	lecturaEtiqueta@Aux,w
  2462  05AA  1D03               	skipz
  2463  05AB  2DB1               	goto	u3400
  2464  05AC  0A46               	incf	lecturaEtiqueta@Aux+1,w
  2465  05AD  1903               	btfsc	3,2
  2466  05AE  2DB0               	goto	u3401
  2467  05AF  2DB1               	goto	u3400
  2468  05B0                     u3401:	
  2469  05B0  2E0A               	goto	l119
  2470  05B1                     u3400:	
  2471  05B1                     l3065:	
  2472                           
  2473                           ;lectura.c: 31:             if(modoDebug){
  2474  05B1  086E               	movf	_modoDebug,w
  2475  05B2  1903               	btfsc	3,2
  2476  05B3  2DB5               	goto	u3411
  2477  05B4  2DB6               	goto	u3410
  2478  05B5                     u3411:	
  2479  05B5  2DBF               	goto	l3069
  2480  05B6                     u3410:	
  2481  05B6                     l3067:	
  2482                           
  2483                           ;lectura.c: 32:                 envioTX("Producto ingresado\n");
  2484  05B6  30AC               	movlw	low (STR_4| (0+32768))
  2485  05B7  00A0               	movwf	envioTX@mensaje
  2486  05B8  3084               	movlw	high (STR_4| (0+32768))
  2487  05B9  00A1               	movwf	envioTX@mensaje+1
  2488  05BA  120A  158A  220A  120A  118A  	fcall	_envioTX
  2489  05BF                     l3069:	
  2490                           
  2491                           ;lectura.c: 34:             tp--;
  2492  05BF  3001               	movlw	1
  2493  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2494  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2495  05C2  02C4               	subwf	lecturaEtiqueta@tp,f
  2496  05C3                     l3071:	
  2497                           
  2498                           ;lectura.c: 35:             ingresoProd(tp);
  2499  05C3  0844               	movf	lecturaEtiqueta@tp,w
  2500  05C4  00BF               	movwf	??_lecturaEtiqueta
  2501  05C5  01C0               	clrf	??_lecturaEtiqueta+1
  2502  05C6  083F               	movf	??_lecturaEtiqueta,w
  2503  05C7  00AE               	movwf	ingresoProd@tp
  2504  05C8  0840               	movf	??_lecturaEtiqueta+1,w
  2505  05C9  00AF               	movwf	ingresoProd@tp+1
  2506  05CA  120A  158A  2515  120A  118A  	fcall	_ingresoProd
  2507  05CF                     l3073:	
  2508                           
  2509                           ;lectura.c: 36:             productoIngresado = tp;
  2510  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2511  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2512  05D1  0844               	movf	lecturaEtiqueta@tp,w
  2513  05D2  00BF               	movwf	??_lecturaEtiqueta
  2514  05D3  01C0               	clrf	??_lecturaEtiqueta+1
  2515  05D4  083F               	movf	??_lecturaEtiqueta,w
  2516  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  2517  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  2518  05D7  00DE               	movwf	_productoIngresado^(0+128)
  2519  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  2520  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  2521  05DA  0840               	movf	??_lecturaEtiqueta+1,w
  2522  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  2523  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  2524  05DD  00DF               	movwf	(_productoIngresado+1)^(0+128)
  2525  05DE                     l3075:	
  2526                           
  2527                           ;lectura.c: 37:             auxCuenta = cuenta;
  2528  05DE  0871               	movf	_cuenta+1,w
  2529  05DF  1683               	bsf	3,5	;RP0=1, select bank3
  2530  05E0  1703               	bsf	3,6	;RP1=1, select bank3
  2531  05E1  00D5               	movwf	(_auxCuenta+1)^(0+384)
  2532  05E2  0870               	movf	_cuenta,w
  2533  05E3  00D4               	movwf	_auxCuenta^(0+384)
  2534  05E4                     l3077:	
  2535                           
  2536                           ;lectura.c: 38:             cuenta += Aux;
  2537  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2538  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2539  05E6  0845               	movf	lecturaEtiqueta@Aux,w
  2540  05E7  07F0               	addwf	_cuenta,f
  2541  05E8  1803               	skipnc
  2542  05E9  0AF1               	incf	_cuenta+1,f
  2543  05EA  0846               	movf	lecturaEtiqueta@Aux+1,w
  2544  05EB  07F1               	addwf	_cuenta+1,f
  2545  05EC                     l3079:	
  2546                           
  2547                           ;lectura.c: 39:             mostrarDigitos(cuenta);
  2548  05EC  0871               	movf	_cuenta+1,w
  2549  05ED  00B5               	movwf	mostrarDigitos@num+1
  2550  05EE  0870               	movf	_cuenta,w
  2551  05EF  00B4               	movwf	mostrarDigitos@num
  2552  05F0  120A  158A  2715  120A  118A  	fcall	_mostrarDigitos
  2553  05F5                     l3081:	
  2554                           
  2555                           ;lectura.c: 40:             RA3 = 1;
  2556  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  2557  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  2558  05F7  1585               	bsf	5,3	;volatile
  2559  05F8                     l3083:	
  2560                           
  2561                           ;lectura.c: 41:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2562  05F8  3006               	movlw	6
  2563  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  2564  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  2565  05FB  00C1               	movwf	??_lecturaEtiqueta+2
  2566  05FC  3013               	movlw	19
  2567  05FD  00C0               	movwf	??_lecturaEtiqueta+1
  2568  05FE  30AD               	movlw	173
  2569  05FF  00BF               	movwf	??_lecturaEtiqueta
  2570  0600                     u3657:	
  2571  0600  0BBF               	decfsz	??_lecturaEtiqueta,f
  2572  0601  2E00               	goto	u3657
  2573  0602  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2574  0603  2E00               	goto	u3657
  2575  0604  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2576  0605  2E00               	goto	u3657
  2577  0606                     l3085:	
  2578                           
  2579                           ;lectura.c: 42:             RA3 = 0;
  2580  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0608  1185               	bcf	5,3	;volatile
  2583                           
  2584                           ;lectura.c: 44:         }
  2585  0609  2E1C               	goto	l123
  2586  060A                     l119:	
  2587                           ;lectura.c: 45:         else {
  2588                           
  2589                           
  2590                           ;lectura.c: 47:             RA5 = 1;
  2591  060A  1685               	bsf	5,5	;volatile
  2592  060B                     l3087:	
  2593                           
  2594                           ;lectura.c: 48:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2595  060B  3006               	movlw	6
  2596  060C  1283               	bcf	3,5	;RP0=0, select bank0
  2597  060D  1303               	bcf	3,6	;RP1=0, select bank0
  2598  060E  00C1               	movwf	??_lecturaEtiqueta+2
  2599  060F  3013               	movlw	19
  2600  0610  00C0               	movwf	??_lecturaEtiqueta+1
  2601  0611  30AD               	movlw	173
  2602  0612  00BF               	movwf	??_lecturaEtiqueta
  2603  0613                     u3667:	
  2604  0613  0BBF               	decfsz	??_lecturaEtiqueta,f
  2605  0614  2E13               	goto	u3667
  2606  0615  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2607  0616  2E13               	goto	u3667
  2608  0617  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2609  0618  2E13               	goto	u3667
  2610  0619                     l3089:	
  2611                           
  2612                           ;lectura.c: 49:             RA5 = 0;
  2613  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2614  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2615  061B  1285               	bcf	5,5	;volatile
  2616  061C                     l123:	
  2617  061C  0008               	return
  2618  061D                     __end_of_lecturaEtiqueta:	
  2619                           
  2620                           	psect	text3
  2621  0D15                     __ptext3:	
  2622 ;; *************** function _ingresoProd *****************
  2623 ;; Defined at:
  2624 ;;		line 17 in file "manejoProductos.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  tp              2   14[BANK0 ] short 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  i               2   19[BANK0 ] short 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       2       0       0       0
  2639 ;;      Locals:         0       2       0       0       0
  2640 ;;      Temps:          0       3       0       0       0
  2641 ;;      Totals:         0       7       0       0       0
  2642 ;;Total ram usage:        7 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    3
  2645 ;; This function calls:
  2646 ;;		_pow
  2647 ;; This function is called by:
  2648 ;;		_lecturaEtiqueta
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function _ingresoProd
  2654  0D15                     _ingresoProd:	
  2655  0D15                     l2933:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2658                           
  2659                           
  2660                           ;manejoProductos.c: 19:     for(short int i = 12; i>=0; i--) {
  2661  0D15  300C               	movlw	12
  2662  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  2664  0D18  00B3               	movwf	ingresoProd@i
  2665  0D19  3000               	movlw	0
  2666  0D1A  00B4               	movwf	ingresoProd@i+1
  2667  0D1B                     l2939:	
  2668                           
  2669                           ;manejoProductos.c: 20:         if( tp >= 8*i) {
  2670  0D1B  0834               	movf	ingresoProd@i+1,w
  2671  0D1C  00B1               	movwf	??_ingresoProd+1
  2672  0D1D  0833               	movf	ingresoProd@i,w
  2673  0D1E  00B0               	movwf	??_ingresoProd
  2674  0D1F  1003               	clrc
  2675  0D20  0DB0               	rlf	??_ingresoProd,f
  2676  0D21  0DB1               	rlf	??_ingresoProd+1,f
  2677  0D22  1003               	clrc
  2678  0D23  0DB0               	rlf	??_ingresoProd,f
  2679  0D24  0DB1               	rlf	??_ingresoProd+1,f
  2680  0D25  1003               	clrc
  2681  0D26  0DB0               	rlf	??_ingresoProd,f
  2682  0D27  0DB1               	rlf	??_ingresoProd+1,f
  2683  0D28  082F               	movf	ingresoProd@tp+1,w
  2684  0D29  3A80               	xorlw	128
  2685  0D2A  00B2               	movwf	??_ingresoProd+2
  2686  0D2B  0831               	movf	??_ingresoProd+1,w
  2687  0D2C  3A80               	xorlw	128
  2688  0D2D  0232               	subwf	??_ingresoProd+2,w
  2689  0D2E  1D03               	skipz
  2690  0D2F  2D32               	goto	u3175
  2691  0D30  0830               	movf	??_ingresoProd,w
  2692  0D31  022E               	subwf	ingresoProd@tp,w
  2693  0D32                     u3175:	
  2694  0D32  1C03               	skipc
  2695  0D33  2D35               	goto	u3171
  2696  0D34  2D36               	goto	u3170
  2697  0D35                     u3171:	
  2698  0D35  2D6A               	goto	l2947
  2699  0D36                     u3170:	
  2700  0D36                     l2941:	
  2701                           
  2702                           ;manejoProductos.c: 22:             tp = tp - 8*i;
  2703  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0D38  0834               	movf	ingresoProd@i+1,w
  2706  0D39  00B1               	movwf	??_ingresoProd+1
  2707  0D3A  0833               	movf	ingresoProd@i,w
  2708  0D3B  00B0               	movwf	??_ingresoProd
  2709  0D3C  1003               	clrc
  2710  0D3D  0DB0               	rlf	??_ingresoProd,f
  2711  0D3E  0DB1               	rlf	??_ingresoProd+1,f
  2712  0D3F  1003               	clrc
  2713  0D40  0DB0               	rlf	??_ingresoProd,f
  2714  0D41  0DB1               	rlf	??_ingresoProd+1,f
  2715  0D42  1003               	clrc
  2716  0D43  0DB0               	rlf	??_ingresoProd,f
  2717  0D44  0DB1               	rlf	??_ingresoProd+1,f
  2718  0D45  0830               	movf	??_ingresoProd,w
  2719  0D46  022E               	subwf	ingresoProd@tp,w
  2720  0D47  00AE               	movwf	ingresoProd@tp
  2721  0D48  0831               	movf	??_ingresoProd+1,w
  2722  0D49  1C03               	skipc
  2723  0D4A  0A31               	incf	??_ingresoProd+1,w
  2724  0D4B  022F               	subwf	ingresoProd@tp+1,w
  2725  0D4C  00AF               	movwf	ingresoProd@tp+1
  2726  0D4D                     l2943:	
  2727                           
  2728                           ;manejoProductos.c: 23:             prodIngresados[i] = prodIngresados[i] | pow(2,tp);
  2729  0D4D  0833               	movf	ingresoProd@i,w
  2730  0D4E  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  2731  0D4F  0084               	movwf	4
  2732  0D50  3002               	movlw	2
  2733  0D51  00A6               	movwf	pow@numero
  2734  0D52  3000               	movlw	0
  2735  0D53  00A7               	movwf	pow@numero+1
  2736  0D54  082F               	movf	ingresoProd@tp+1,w
  2737  0D55  00A9               	movwf	pow@potencia+1
  2738  0D56  082E               	movf	ingresoProd@tp,w
  2739  0D57  00A8               	movwf	pow@potencia
  2740  0D58  120A  158A  2277  120A  158A  	fcall	_pow
  2741  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0D5F  0826               	movf	?_pow,w
  2744  0D60  1383               	bcf	3,7	;select IRP bank1
  2745  0D61  0400               	iorwf	0,w
  2746  0D62  00B0               	movwf	??_ingresoProd
  2747  0D63  0833               	movf	ingresoProd@i,w
  2748  0D64  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  2749  0D65  0084               	movwf	4
  2750  0D66  0830               	movf	??_ingresoProd,w
  2751  0D67  0080               	movwf	0
  2752  0D68                     l2945:	
  2753                           
  2754                           ;manejoProductos.c: 24:             i = 0;
  2755  0D68  01B3               	clrf	ingresoProd@i
  2756  0D69  01B4               	clrf	ingresoProd@i+1
  2757  0D6A                     l2947:	
  2758                           
  2759                           ;manejoProductos.c: 27:     }
  2760  0D6A  30FF               	movlw	255
  2761  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0D6D  07B3               	addwf	ingresoProd@i,f
  2764  0D6E  1803               	skipnc
  2765  0D6F  0AB4               	incf	ingresoProd@i+1,f
  2766  0D70  30FF               	movlw	255
  2767  0D71  07B4               	addwf	ingresoProd@i+1,f
  2768  0D72                     l2949:	
  2769  0D72  1FB4               	btfss	ingresoProd@i+1,7
  2770  0D73  2D75               	goto	u3181
  2771  0D74  2D76               	goto	u3180
  2772  0D75                     u3181:	
  2773  0D75  2D1B               	goto	l2939
  2774  0D76                     u3180:	
  2775  0D76                     l336:	
  2776  0D76  0008               	return
  2777  0D77                     __end_of_ingresoProd:	
  2778                           
  2779                           	psect	text4
  2780  0EAC                     __ptext4:	
  2781 ;; *************** function _EEPROM_search *****************
  2782 ;; Defined at:
  2783 ;;		line 3 in file "lectura.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  tp              1    wreg     unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  tp              1   30[BANK0 ] unsigned char 
  2788 ;;  precio          2   28[BANK0 ] short 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  2   22[BANK0 ] short 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       2       0       0       0
  2799 ;;      Locals:         0       3       0       0       0
  2800 ;;      Temps:          0       4       0       0       0
  2801 ;;      Totals:         0       9       0       0       0
  2802 ;;Total ram usage:        9 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    4
  2805 ;; This function calls:
  2806 ;;		___awdiv
  2807 ;;		_eeprom_read
  2808 ;;		_verificarProd
  2809 ;; This function is called by:
  2810 ;;		_lecturaEtiqueta
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _EEPROM_search
  2816  0EAC                     _EEPROM_search:	
  2817                           
  2818                           ;incstack = 0
  2819                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2820                           ;EEPROM_search@tp stored from wreg
  2821  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  2822  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  2823  0EAE  00BE               	movwf	EEPROM_search@tp
  2824  0EAF                     l2917:	
  2825                           
  2826                           ;lectura.c: 5:     short int precio;;lectura.c: 6:     tp--;
  2827  0EAF  3001               	movlw	1
  2828  0EB0  02BE               	subwf	EEPROM_search@tp,f
  2829  0EB1                     l2919:	
  2830                           
  2831                           ;lectura.c: 7:     tp = tp*2;
  2832  0EB1  083E               	movf	EEPROM_search@tp,w
  2833  0EB2  00B8               	movwf	??_EEPROM_search
  2834  0EB3  0738               	addwf	??_EEPROM_search,w
  2835  0EB4  00B9               	movwf	??_EEPROM_search+1
  2836  0EB5  0839               	movf	??_EEPROM_search+1,w
  2837  0EB6  00BE               	movwf	EEPROM_search@tp
  2838  0EB7                     l2921:	
  2839                           
  2840                           ;lectura.c: 8:     precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  2841  0EB7  083E               	movf	EEPROM_search@tp,w
  2842  0EB8  3E01               	addlw	1
  2843  0EB9  120A  158A  2199  120A  158A  	fcall	_eeprom_read
  2844  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0EC0  00B8               	movwf	??_EEPROM_search
  2847  0EC1  01B9               	clrf	??_EEPROM_search+1
  2848  0EC2  083E               	movf	EEPROM_search@tp,w
  2849  0EC3  120A  158A  2199  120A  158A  	fcall	_eeprom_read
  2850  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0ECA  00BA               	movwf	??_EEPROM_search+2
  2853  0ECB  01BB               	clrf	??_EEPROM_search+3
  2854  0ECC  083A               	movf	??_EEPROM_search+2,w
  2855  0ECD  00BB               	movwf	??_EEPROM_search+3
  2856  0ECE  01BA               	clrf	??_EEPROM_search+2
  2857  0ECF  0838               	movf	??_EEPROM_search,w
  2858  0ED0  043A               	iorwf	??_EEPROM_search+2,w
  2859  0ED1  00BC               	movwf	EEPROM_search@precio
  2860  0ED2  0839               	movf	??_EEPROM_search+1,w
  2861  0ED3  043B               	iorwf	??_EEPROM_search+3,w
  2862  0ED4  00BD               	movwf	EEPROM_search@precio+1
  2863  0ED5                     l2923:	
  2864                           
  2865                           ;lectura.c: 10:     if( (precio < 0 || precio > 999) || verificarProd(tp/2)) {
  2866  0ED5  1BBD               	btfsc	EEPROM_search@precio+1,7
  2867  0ED6  2ED8               	goto	u3141
  2868  0ED7  2ED9               	goto	u3140
  2869  0ED8                     u3141:	
  2870  0ED8  2F08               	goto	l2929
  2871  0ED9                     u3140:	
  2872  0ED9                     l2925:	
  2873  0ED9  083D               	movf	EEPROM_search@precio+1,w
  2874  0EDA  3A80               	xorlw	128
  2875  0EDB  00FF               	movwf	btemp+1
  2876  0EDC  3083               	movlw	131
  2877  0EDD  027F               	subwf	btemp+1,w
  2878  0EDE  1D03               	skipz
  2879  0EDF  2EE2               	goto	u3155
  2880  0EE0  30E8               	movlw	232
  2881  0EE1  023C               	subwf	EEPROM_search@precio,w
  2882  0EE2                     u3155:	
  2883  0EE2  1803               	skipnc
  2884  0EE3  2EE5               	goto	u3151
  2885  0EE4  2EE6               	goto	u3150
  2886  0EE5                     u3151:	
  2887  0EE5  2F08               	goto	l2929
  2888  0EE6                     u3150:	
  2889  0EE6                     l2927:	
  2890  0EE6  3002               	movlw	2
  2891  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0EE9  00A0               	movwf	___awdiv@divisor
  2894  0EEA  3000               	movlw	0
  2895  0EEB  00A1               	movwf	___awdiv@divisor+1
  2896  0EEC  083E               	movf	EEPROM_search@tp,w
  2897  0EED  00B8               	movwf	??_EEPROM_search
  2898  0EEE  01B9               	clrf	??_EEPROM_search+1
  2899  0EEF  0838               	movf	??_EEPROM_search,w
  2900  0EF0  00A2               	movwf	___awdiv@dividend
  2901  0EF1  0839               	movf	??_EEPROM_search+1,w
  2902  0EF2  00A3               	movwf	___awdiv@dividend+1
  2903  0EF3  120A  158A  2643  120A  158A  	fcall	___awdiv
  2904  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0EFA  0821               	movf	?___awdiv+1,w
  2907  0EFB  00AF               	movwf	verificarProd@tp+1
  2908  0EFC  0820               	movf	?___awdiv,w
  2909  0EFD  00AE               	movwf	verificarProd@tp
  2910  0EFE  120A  158A  2577  120A  158A  	fcall	_verificarProd
  2911  0F03  3A00               	xorlw	0
  2912  0F04  1903               	skipnz
  2913  0F05  2F07               	goto	u3161
  2914  0F06  2F08               	goto	u3160
  2915  0F07                     u3161:	
  2916  0F07  2F0E               	goto	l110
  2917  0F08                     u3160:	
  2918  0F08                     l2929:	
  2919                           
  2920                           ;lectura.c: 11:         precio = -1;
  2921  0F08  30FF               	movlw	255
  2922  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0F0B  00BC               	movwf	EEPROM_search@precio
  2925  0F0C  30FF               	movlw	255
  2926  0F0D  00BD               	movwf	EEPROM_search@precio+1
  2927  0F0E                     l110:	
  2928                           ;lectura.c: 12:     }
  2929                           
  2930                           
  2931                           ;lectura.c: 14:     return precio;
  2932  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0F10  083D               	movf	EEPROM_search@precio+1,w
  2935  0F11  00B7               	movwf	?_EEPROM_search+1
  2936  0F12  083C               	movf	EEPROM_search@precio,w
  2937  0F13  00B6               	movwf	?_EEPROM_search
  2938  0F14                     l113:	
  2939  0F14  0008               	return
  2940  0F15                     __end_of_EEPROM_search:	
  2941                           
  2942                           	psect	text5
  2943  0D77                     __ptext5:	
  2944 ;; *************** function _verificarProd *****************
  2945 ;; Defined at:
  2946 ;;		line 30 in file "manejoProductos.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  tp              2   14[BANK0 ] short 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  i               2   20[BANK0 ] short 
  2951 ;;  ret             1   19[BANK0 ] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      unsigned char 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2961 ;;      Params:         0       2       0       0       0
  2962 ;;      Locals:         0       3       0       0       0
  2963 ;;      Temps:          0       3       0       0       0
  2964 ;;      Totals:         0       8       0       0       0
  2965 ;;Total ram usage:        8 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    3
  2968 ;; This function calls:
  2969 ;;		_pow
  2970 ;; This function is called by:
  2971 ;;		_EEPROM_search
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _verificarProd
  2977  0D77                     _verificarProd:	
  2978  0D77                     l2821:	
  2979                           ;incstack = 0
  2980                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2981                           
  2982                           
  2983                           ;manejoProductos.c: 31:     char ret = 0;
  2984  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0D79  01B3               	clrf	verificarProd@ret
  2987  0D7A                     l2823:	
  2988                           
  2989                           ;manejoProductos.c: 32:     for(short int i = 12; i>=0; i--) {
  2990  0D7A  300C               	movlw	12
  2991  0D7B  00B4               	movwf	verificarProd@i
  2992  0D7C  3000               	movlw	0
  2993  0D7D  00B5               	movwf	verificarProd@i+1
  2994  0D7E                     l2829:	
  2995                           
  2996                           ;manejoProductos.c: 33:         if( tp >= 8*i) {
  2997  0D7E  0835               	movf	verificarProd@i+1,w
  2998  0D7F  00B1               	movwf	??_verificarProd+1
  2999  0D80  0834               	movf	verificarProd@i,w
  3000  0D81  00B0               	movwf	??_verificarProd
  3001  0D82  1003               	clrc
  3002  0D83  0DB0               	rlf	??_verificarProd,f
  3003  0D84  0DB1               	rlf	??_verificarProd+1,f
  3004  0D85  1003               	clrc
  3005  0D86  0DB0               	rlf	??_verificarProd,f
  3006  0D87  0DB1               	rlf	??_verificarProd+1,f
  3007  0D88  1003               	clrc
  3008  0D89  0DB0               	rlf	??_verificarProd,f
  3009  0D8A  0DB1               	rlf	??_verificarProd+1,f
  3010  0D8B  082F               	movf	verificarProd@tp+1,w
  3011  0D8C  3A80               	xorlw	128
  3012  0D8D  00B2               	movwf	??_verificarProd+2
  3013  0D8E  0831               	movf	??_verificarProd+1,w
  3014  0D8F  3A80               	xorlw	128
  3015  0D90  0232               	subwf	??_verificarProd+2,w
  3016  0D91  1D03               	skipz
  3017  0D92  2D95               	goto	u3045
  3018  0D93  0830               	movf	??_verificarProd,w
  3019  0D94  022E               	subwf	verificarProd@tp,w
  3020  0D95                     u3045:	
  3021  0D95  1C03               	skipc
  3022  0D96  2D98               	goto	u3041
  3023  0D97  2D99               	goto	u3040
  3024  0D98                     u3041:	
  3025  0D98  2DCD               	goto	l2839
  3026  0D99                     u3040:	
  3027  0D99                     l2831:	
  3028                           
  3029                           ;manejoProductos.c: 35:             tp = tp - 8*i;
  3030  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0D9B  0835               	movf	verificarProd@i+1,w
  3033  0D9C  00B1               	movwf	??_verificarProd+1
  3034  0D9D  0834               	movf	verificarProd@i,w
  3035  0D9E  00B0               	movwf	??_verificarProd
  3036  0D9F  1003               	clrc
  3037  0DA0  0DB0               	rlf	??_verificarProd,f
  3038  0DA1  0DB1               	rlf	??_verificarProd+1,f
  3039  0DA2  1003               	clrc
  3040  0DA3  0DB0               	rlf	??_verificarProd,f
  3041  0DA4  0DB1               	rlf	??_verificarProd+1,f
  3042  0DA5  1003               	clrc
  3043  0DA6  0DB0               	rlf	??_verificarProd,f
  3044  0DA7  0DB1               	rlf	??_verificarProd+1,f
  3045  0DA8  0830               	movf	??_verificarProd,w
  3046  0DA9  022E               	subwf	verificarProd@tp,w
  3047  0DAA  00AE               	movwf	verificarProd@tp
  3048  0DAB  0831               	movf	??_verificarProd+1,w
  3049  0DAC  1C03               	skipc
  3050  0DAD  0A31               	incf	??_verificarProd+1,w
  3051  0DAE  022F               	subwf	verificarProd@tp+1,w
  3052  0DAF  00AF               	movwf	verificarProd@tp+1
  3053  0DB0                     l2833:	
  3054                           
  3055                           ;manejoProductos.c: 36:             if(prodIngresados[i] & pow(2,tp)) {
  3056  0DB0  0834               	movf	verificarProd@i,w
  3057  0DB1  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3058  0DB2  0084               	movwf	4
  3059  0DB3  3002               	movlw	2
  3060  0DB4  00A6               	movwf	pow@numero
  3061  0DB5  3000               	movlw	0
  3062  0DB6  00A7               	movwf	pow@numero+1
  3063  0DB7  082F               	movf	verificarProd@tp+1,w
  3064  0DB8  00A9               	movwf	pow@potencia+1
  3065  0DB9  082E               	movf	verificarProd@tp,w
  3066  0DBA  00A8               	movwf	pow@potencia
  3067  0DBB  120A  158A  2277  120A  158A  	fcall	_pow
  3068  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0DC2  0826               	movf	?_pow,w
  3071  0DC3  1383               	bcf	3,7	;select IRP bank1
  3072  0DC4  0500               	andwf	0,w
  3073  0DC5  1903               	btfsc	3,2
  3074  0DC6  2DC8               	goto	u3051
  3075  0DC7  2DC9               	goto	u3050
  3076  0DC8                     u3051:	
  3077  0DC8  2DCB               	goto	l2837
  3078  0DC9                     u3050:	
  3079  0DC9                     l2835:	
  3080                           
  3081                           ;manejoProductos.c: 37:                 ret = 1;
  3082  0DC9  01B3               	clrf	verificarProd@ret
  3083  0DCA  0AB3               	incf	verificarProd@ret,f
  3084  0DCB                     l2837:	
  3085                           
  3086                           ;manejoProductos.c: 39:             i = 0;
  3087  0DCB  01B4               	clrf	verificarProd@i
  3088  0DCC  01B5               	clrf	verificarProd@i+1
  3089  0DCD                     l2839:	
  3090                           
  3091                           ;manejoProductos.c: 42:     }
  3092  0DCD  30FF               	movlw	255
  3093  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0DD0  07B4               	addwf	verificarProd@i,f
  3096  0DD1  1803               	skipnc
  3097  0DD2  0AB5               	incf	verificarProd@i+1,f
  3098  0DD3  30FF               	movlw	255
  3099  0DD4  07B5               	addwf	verificarProd@i+1,f
  3100  0DD5                     l2841:	
  3101  0DD5  1FB5               	btfss	verificarProd@i+1,7
  3102  0DD6  2DD8               	goto	u3061
  3103  0DD7  2DD9               	goto	u3060
  3104  0DD8                     u3061:	
  3105  0DD8  2D7E               	goto	l2829
  3106  0DD9                     u3060:	
  3107  0DD9                     l2843:	
  3108                           
  3109                           ;manejoProductos.c: 44:     return ret;
  3110  0DD9  0833               	movf	verificarProd@ret,w
  3111  0DDA                     l343:	
  3112  0DDA  0008               	return
  3113  0DDB                     __end_of_verificarProd:	
  3114                           
  3115                           	psect	text6
  3116  09B8                     __ptext6:	
  3117 ;; *************** function _lecturaComando *****************
  3118 ;; Defined at:
  3119 ;;		line 165 in file "lectura.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    5
  3140 ;; This function calls:
  3141 ;;		_lecturaConsulta
  3142 ;;		_lecturaMas
  3143 ;;		_lecturaMenos
  3144 ;; This function is called by:
  3145 ;;		_accionesPuertoSerial
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function _lecturaComando
  3151  09B8                     _lecturaComando:	
  3152  09B8                     l3033:	
  3153                           ;incstack = 0
  3154                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3155                           
  3156                           
  3157                           ;lectura.c: 166:     if(codigoEntrada[0] == '?') {
  3158  09B8  303F               	movlw	63
  3159  09B9  1683               	bsf	3,5	;RP0=1, select bank1
  3160  09BA  1303               	bcf	3,6	;RP1=0, select bank1
  3161  09BB  0660               	xorwf	_codigoEntrada^(0+128),w
  3162  09BC  1D03               	btfss	3,2
  3163  09BD  29BF               	goto	u3351
  3164  09BE  29C0               	goto	u3350
  3165  09BF                     u3351:	
  3166  09BF  29C6               	goto	l3037
  3167  09C0                     u3350:	
  3168  09C0                     l3035:	
  3169                           
  3170                           ;lectura.c: 167:         lecturaConsulta();
  3171  09C0  120A  118A  261D  120A  158A  	fcall	_lecturaConsulta
  3172                           
  3173                           ;lectura.c: 168:     }
  3174  09C5  29D7               	goto	l182
  3175  09C6                     l3037:	
  3176  09C6  302B               	movlw	43
  3177  09C7  0660               	xorwf	_codigoEntrada^(0+128),w
  3178  09C8  1D03               	btfss	3,2
  3179  09C9  29CB               	goto	u3361
  3180  09CA  29CC               	goto	u3360
  3181  09CB                     u3361:	
  3182  09CB  29D2               	goto	l3041
  3183  09CC                     u3360:	
  3184  09CC                     l3039:	
  3185                           
  3186                           ;lectura.c: 170:         lecturaMas();
  3187  09CC  120A  118A  27C8  120A  158A  	fcall	_lecturaMas
  3188                           
  3189                           ;lectura.c: 171:     }
  3190  09D1  29D7               	goto	l182
  3191  09D2                     l3041:	
  3192                           
  3193                           ;lectura.c: 173:         lecturaMenos();
  3194  09D2  120A  158A  2181  120A  158A  	fcall	_lecturaMenos
  3195  09D7                     l182:	
  3196  09D7  0008               	return
  3197  09D8                     __end_of_lecturaComando:	
  3198                           
  3199                           	psect	text7
  3200  0981                     __ptext7:	
  3201 ;; *************** function _lecturaMenos *****************
  3202 ;; Defined at:
  3203 ;;		line 104 in file "lectura.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    3
  3224 ;; This function calls:
  3225 ;;		_envioTX
  3226 ;; This function is called by:
  3227 ;;		_lecturaComando
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _lecturaMenos
  3233  0981                     _lecturaMenos:	
  3234  0981                     l2965:	
  3235                           ;incstack = 0
  3236                           ; Regs used in _lecturaMenos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3237                           
  3238                           
  3239                           ;lectura.c: 105:     if(codigoEntrada[1] == 'D') {
  3240  0981  3044               	movlw	68
  3241  0982  1683               	bsf	3,5	;RP0=1, select bank1
  3242  0983  1303               	bcf	3,6	;RP1=0, select bank1
  3243  0984  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3244  0985  1D03               	btfss	3,2
  3245  0986  2988               	goto	u3221
  3246  0987  2989               	goto	u3220
  3247  0988                     u3221:	
  3248  0988  298D               	goto	l2969
  3249  0989                     u3220:	
  3250  0989                     l2967:	
  3251                           
  3252                           ;lectura.c: 106:         modoDebug = 0;
  3253  0989  1283               	bcf	3,5	;RP0=0, select bank0
  3254  098A  1303               	bcf	3,6	;RP1=0, select bank0
  3255  098B  01EE               	clrf	_modoDebug
  3256                           
  3257                           ;lectura.c: 108:     }
  3258  098C  2998               	goto	l154
  3259  098D                     l2969:	
  3260                           
  3261                           ;lectura.c: 110:         envioTX("Ocurrio un error en la interpretacion.\n");
  3262  098D  3026               	movlw	low (STR_7| (0+32768))
  3263  098E  1283               	bcf	3,5	;RP0=0, select bank0
  3264  098F  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0990  00A0               	movwf	envioTX@mensaje
  3266  0991  3084               	movlw	high (STR_7| (0+32768))
  3267  0992  00A1               	movwf	envioTX@mensaje+1
  3268  0993  120A  158A  220A  120A  158A  	fcall	_envioTX
  3269  0998                     l154:	
  3270  0998  0008               	return
  3271  0999                     __end_of_lecturaMenos:	
  3272                           
  3273                           	psect	text8
  3274  07C8                     __ptext8:	
  3275 ;; *************** function _lecturaMas *****************
  3276 ;; Defined at:
  3277 ;;		line 89 in file "lectura.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    4
  3298 ;; This function calls:
  3299 ;;		_agregarModificarPrecio
  3300 ;;		_cierreDeLote
  3301 ;;		_envioTX
  3302 ;;		_verificacionEntrada
  3303 ;; This function is called by:
  3304 ;;		_lecturaComando
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _lecturaMas
  3310  07C8                     _lecturaMas:	
  3311  07C8                     l2951:	
  3312                           ;incstack = 0
  3313                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3314                           
  3315                           
  3316                           ;lectura.c: 90:     if (codigoEntrada[1] == 'L') {
  3317  07C8  304C               	movlw	76
  3318  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  3319  07CA  1303               	bcf	3,6	;RP1=0, select bank1
  3320  07CB  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3321  07CC  1D03               	btfss	3,2
  3322  07CD  2FCF               	goto	u3191
  3323  07CE  2FD0               	goto	u3190
  3324  07CF                     u3191:	
  3325  07CF  2FD6               	goto	l2955
  3326  07D0                     u3190:	
  3327  07D0                     l2953:	
  3328                           
  3329                           ;lectura.c: 91:         cierreDeLote();
  3330  07D0  120A  158A  2370  120A  118A  	fcall	_cierreDeLote
  3331                           
  3332                           ;lectura.c: 92:     }
  3333  07D5  2FFE               	goto	l149
  3334  07D6                     l2955:	
  3335  07D6  120A  158A  21D8  120A  118A  	fcall	_verificacionEntrada
  3336  07DB  3A06               	xorlw	6
  3337  07DC  1D03               	skipz
  3338  07DD  2FDF               	goto	u3201
  3339  07DE  2FE0               	goto	u3200
  3340  07DF                     u3201:	
  3341  07DF  2FE6               	goto	l2959
  3342  07E0                     u3200:	
  3343  07E0                     l2957:	
  3344                           
  3345                           ;lectura.c: 94:         agregarModificarPrecio();
  3346  07E0  120A  118A  26F6  120A  118A  	fcall	_agregarModificarPrecio
  3347                           
  3348                           ;lectura.c: 95:     }
  3349  07E5  2FFE               	goto	l149
  3350  07E6                     l2959:	
  3351  07E6  3044               	movlw	68
  3352  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  3353  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  3354  07E9  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3355  07EA  1D03               	btfss	3,2
  3356  07EB  2FED               	goto	u3211
  3357  07EC  2FEE               	goto	u3210
  3358  07ED                     u3211:	
  3359  07ED  2FF3               	goto	l2963
  3360  07EE                     u3210:	
  3361  07EE                     l2961:	
  3362                           
  3363                           ;lectura.c: 97:         modoDebug = 1;
  3364  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3365  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3366  07F0  01EE               	clrf	_modoDebug
  3367  07F1  0AEE               	incf	_modoDebug,f
  3368                           
  3369                           ;lectura.c: 98:     }
  3370  07F2  2FFE               	goto	l149
  3371  07F3                     l2963:	
  3372                           
  3373                           ;lectura.c: 100:         envioTX("\nProducto no encontrado\n");
  3374  07F3  3067               	movlw	low (STR_6| (0+32768))
  3375  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3376  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3377  07F6  00A0               	movwf	envioTX@mensaje
  3378  07F7  3084               	movlw	high (STR_6| (0+32768))
  3379  07F8  00A1               	movwf	envioTX@mensaje+1
  3380  07F9  120A  158A  220A  120A  118A  	fcall	_envioTX
  3381  07FE                     l149:	
  3382  07FE  0008               	return
  3383  07FF                     __end_of_lecturaMas:	
  3384                           
  3385                           	psect	text9
  3386  09D8                     __ptext9:	
  3387 ;; *************** function _verificacionEntrada *****************
  3388 ;; Defined at:
  3389 ;;		line 62 in file "lectura.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  i               1    2[BANK0 ] unsigned char 
  3394 ;;  ret             1    1[BANK0 ] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      unsigned char 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3404 ;;      Params:         0       0       0       0       0
  3405 ;;      Locals:         0       2       0       0       0
  3406 ;;      Temps:          0       1       0       0       0
  3407 ;;      Totals:         0       3       0       0       0
  3408 ;;Total ram usage:        3 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_lecturaMas
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _verificacionEntrada
  3420  09D8                     _verificacionEntrada:	
  3421  09D8                     l2847:	
  3422                           ;incstack = 0
  3423                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  3424                           
  3425                           
  3426                           ;lectura.c: 63:     char i = 1;
  3427  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  3428  09D9  1303               	bcf	3,6	;RP1=0, select bank0
  3429  09DA  01A2               	clrf	verificacionEntrada@i
  3430  09DB  0AA2               	incf	verificacionEntrada@i,f
  3431  09DC                     l2849:	
  3432                           
  3433                           ;lectura.c: 64:     char ret = 0;
  3434  09DC  01A1               	clrf	verificacionEntrada@ret
  3435                           
  3436                           ;lectura.c: 65:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3437  09DD  29E6               	goto	l2853
  3438  09DE                     l2851:	
  3439                           
  3440                           ;lectura.c: 66:         i++;
  3441  09DE  3001               	movlw	1
  3442  09DF  00A0               	movwf	??_verificacionEntrada
  3443  09E0  0820               	movf	??_verificacionEntrada,w
  3444  09E1  07A2               	addwf	verificacionEntrada@i,f
  3445                           
  3446                           ;lectura.c: 67:         ret++;
  3447  09E2  3001               	movlw	1
  3448  09E3  00A0               	movwf	??_verificacionEntrada
  3449  09E4  0820               	movf	??_verificacionEntrada,w
  3450  09E5  07A1               	addwf	verificacionEntrada@ret,f
  3451  09E6                     l2853:	
  3452                           
  3453                           ;lectura.c: 65:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3454  09E6  0822               	movf	verificacionEntrada@i,w
  3455  09E7  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3456  09E8  0084               	movwf	4
  3457  09E9  303A               	movlw	58
  3458  09EA  1383               	bcf	3,7	;select IRP bank1
  3459  09EB  0200               	subwf	0,w
  3460  09EC  1803               	skipnc
  3461  09ED  29EF               	goto	u3071
  3462  09EE  29F0               	goto	u3070
  3463  09EF                     u3071:	
  3464  09EF  29F9               	goto	l2857
  3465  09F0                     u3070:	
  3466  09F0                     l2855:	
  3467  09F0  0822               	movf	verificacionEntrada@i,w
  3468  09F1  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3469  09F2  0084               	movwf	4
  3470  09F3  3030               	movlw	48
  3471  09F4  0200               	subwf	0,w
  3472  09F5  1803               	skipnc
  3473  09F6  29F8               	goto	u3081
  3474  09F7  29F9               	goto	u3080
  3475  09F8                     u3081:	
  3476  09F8  2A02               	goto	l2859
  3477  09F9                     u3080:	
  3478  09F9                     l2857:	
  3479  09F9  0822               	movf	verificacionEntrada@i,w
  3480  09FA  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3481  09FB  0084               	movwf	4
  3482  09FC  303D               	movlw	61
  3483  09FD  0600               	xorwf	0,w
  3484  09FE  1D03               	btfss	3,2
  3485  09FF  2A01               	goto	u3091
  3486  0A00  2A02               	goto	u3090
  3487  0A01                     u3091:	
  3488  0A01  2A08               	goto	l2861
  3489  0A02                     u3090:	
  3490  0A02                     l2859:	
  3491  0A02  3007               	movlw	7
  3492  0A03  0222               	subwf	verificacionEntrada@i,w
  3493  0A04  1C03               	skipc
  3494  0A05  2A07               	goto	u3101
  3495  0A06  2A08               	goto	u3100
  3496  0A07                     u3101:	
  3497  0A07  29DE               	goto	l2851
  3498  0A08                     u3100:	
  3499  0A08                     l2861:	
  3500                           
  3501                           ;lectura.c: 69:     return ret;
  3502  0A08  0821               	movf	verificacionEntrada@ret,w
  3503  0A09                     l135:	
  3504  0A09  0008               	return
  3505  0A0A                     __end_of_verificacionEntrada:	
  3506                           
  3507                           	psect	text10
  3508  0B70                     __ptext10:	
  3509 ;; *************** function _cierreDeLote *****************
  3510 ;; Defined at:
  3511 ;;		line 72 in file "lectura.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  strLote        32   46[BANK0 ] unsigned char [32]
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         0      32       0       0       0
  3527 ;;      Temps:          0       4       0       0       0
  3528 ;;      Totals:         0      36       0       0       0
  3529 ;;Total ram usage:       36 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    3
  3532 ;; This function calls:
  3533 ;;		_envioTX
  3534 ;;		_sprintf
  3535 ;; This function is called by:
  3536 ;;		_lecturaMas
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _cierreDeLote
  3542  0B70                     _cierreDeLote:	
  3543  0B70                     l2865:	
  3544                           ;incstack = 0
  3545                           ; Regs used in _cierreDeLote: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3546                           
  3547                           
  3548                           ;lectura.c: 74:     if (cierreLotePedido == 0) {
  3549  0B70  1683               	bsf	3,5	;RP0=1, select bank3
  3550  0B71  1703               	bsf	3,6	;RP1=1, select bank3
  3551  0B72  0856               	movf	_cierreLotePedido^(0+384),w
  3552  0B73  1D03               	btfss	3,2
  3553  0B74  2B76               	goto	u3111
  3554  0B75  2B77               	goto	u3110
  3555  0B76                     u3111:	
  3556  0B76  2BAC               	goto	l2869
  3557  0B77                     u3110:	
  3558  0B77                     l2867:	
  3559                           
  3560                           ;lectura.c: 75:         char strLote[32];;lectura.c: 77:         sprintf(strLote,"\nCier
      +                          re,L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  3561  0B77  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3562  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0B7A  00B4               	movwf	sprintf@sp
  3565  0B7B  3000               	movlw	0
  3566  0B7C  00B5               	movwf	sprintf@sp+1
  3567  0B7D  3080               	movlw	low (STR_5| (0+32768))
  3568  0B7E  00B6               	movwf	sprintf@f
  3569  0B7F  3084               	movlw	high (STR_5| (0+32768))
  3570  0B80  00B7               	movwf	sprintf@f+1
  3571  0B81  0878               	movf	_nroLote,w
  3572  0B82  00CA               	movwf	??_cierreDeLote
  3573  0B83  01CB               	clrf	??_cierreDeLote+1
  3574  0B84  084A               	movf	??_cierreDeLote,w
  3575  0B85  00B8               	movwf	?_sprintf+4
  3576  0B86  084B               	movf	??_cierreDeLote+1,w
  3577  0B87  00B9               	movwf	?_sprintf+5
  3578  0B88  0872               	movf	_ventasLote,w
  3579  0B89  00CC               	movwf	??_cierreDeLote+2
  3580  0B8A  01CD               	clrf	??_cierreDeLote+3
  3581  0B8B  084C               	movf	??_cierreDeLote+2,w
  3582  0B8C  00BA               	movwf	?_sprintf+6
  3583  0B8D  084D               	movf	??_cierreDeLote+3,w
  3584  0B8E  00BB               	movwf	?_sprintf+7
  3585  0B8F  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0B90  1303               	bcf	3,6	;RP1=0, select bank1
  3587  0B91  085B               	movf	(_montosLote+1)^(0+128),w
  3588  0B92  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0B93  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0B94  00BD               	movwf	?_sprintf+9
  3591  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  3592  0B96  1303               	bcf	3,6	;RP1=0, select bank1
  3593  0B97  085A               	movf	_montosLote^(0+128),w
  3594  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0B9A  00BC               	movwf	?_sprintf+8
  3597  0B9B  120A  118A  21D9  120A  158A  	fcall	_sprintf
  3598                           
  3599                           ;lectura.c: 78:         envioTX(strLote);
  3600  0BA0  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3601  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0BA3  00A0               	movwf	envioTX@mensaje
  3604  0BA4  3000               	movlw	0
  3605  0BA5  00A1               	movwf	envioTX@mensaje+1
  3606  0BA6  120A  158A  220A  120A  158A  	fcall	_envioTX
  3607                           
  3608                           ;lectura.c: 79:     }
  3609  0BAB  2BAD               	goto	l2871
  3610  0BAC                     l2869:	
  3611                           
  3612                           ;lectura.c: 81:         cierreLotePedido = 0;
  3613  0BAC  01D6               	clrf	_cierreLotePedido^(0+384)
  3614  0BAD                     l2871:	
  3615                           
  3616                           ;lectura.c: 84:     nroLote++;
  3617  0BAD  3001               	movlw	1
  3618  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0BB0  00CA               	movwf	??_cierreDeLote
  3621  0BB1  084A               	movf	??_cierreDeLote,w
  3622  0BB2  07F8               	addwf	_nroLote,f
  3623  0BB3                     l2873:	
  3624                           
  3625                           ;lectura.c: 85:     ventasLote=0;
  3626  0BB3  01F2               	clrf	_ventasLote
  3627  0BB4                     l2875:	
  3628                           
  3629                           ;lectura.c: 86:     montosLote=0;
  3630  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  3631  0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  3632  0BB6  01DA               	clrf	_montosLote^(0+128)
  3633  0BB7  01DB               	clrf	(_montosLote+1)^(0+128)
  3634  0BB8                     l140:	
  3635  0BB8  0008               	return
  3636  0BB9                     __end_of_cierreDeLote:	
  3637                           
  3638                           	psect	text11
  3639  06F6                     __ptext11:	
  3640 ;; *************** function _agregarModificarPrecio *****************
  3641 ;; Defined at:
  3642 ;;		line 61 in file "manejoProductos.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  mensaje        10   52[BANK0 ] unsigned char [10]
  3647 ;;  precio          2   64[BANK0 ] short 
  3648 ;;  tp              1   66[BANK0 ] unsigned char 
  3649 ;;  upper_8bits     1   63[BANK0 ] unsigned char 
  3650 ;;  lower_8bits     1   62[BANK0 ] unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3660 ;;      Params:         0       0       0       0       0
  3661 ;;      Locals:         0      15       0       0       0
  3662 ;;      Temps:          0      10       0       0       0
  3663 ;;      Totals:         0      25       0       0       0
  3664 ;;Total ram usage:       25 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    3
  3667 ;; This function calls:
  3668 ;;		___awdiv
  3669 ;;		___bmul
  3670 ;;		___wmul
  3671 ;;		_eeprom_read
  3672 ;;		_eeprom_write
  3673 ;;		_envioTX
  3674 ;;		_sprintf
  3675 ;; This function is called by:
  3676 ;;		_lecturaMas
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _agregarModificarPrecio
  3682  06F6                     _agregarModificarPrecio:	
  3683  06F6                     l2877:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _agregarModificarPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3686                           
  3687                           
  3688                           ;manejoProductos.c: 62:     unsigned char tp = 10*(codigoEntrada[1]-'0') + (codigoEntrad
      +                          a[2] - '0');
  3689  06F6  300A               	movlw	10
  3690  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3691  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3692  06F9  00CA               	movwf	??_agregarModificarPrecio
  3693  06FA  084A               	movf	??_agregarModificarPrecio,w
  3694  06FB  00A0               	movwf	___bmul@multiplicand
  3695  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  3696  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  3697  06FE  0861               	movf	(_codigoEntrada^(0+128)+1),w
  3698  06FF  120A  158A  216A  120A  118A  	fcall	___bmul
  3699  0704  1683               	bsf	3,5	;RP0=1, select bank1
  3700  0705  1303               	bcf	3,6	;RP1=0, select bank1
  3701  0706  0762               	addwf	(_codigoEntrada^(0+128)+2),w
  3702  0707  3EF0               	addlw	240
  3703  0708  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0709  1303               	bcf	3,6	;RP1=0, select bank0
  3705  070A  00CB               	movwf	??_agregarModificarPrecio+1
  3706  070B  084B               	movf	??_agregarModificarPrecio+1,w
  3707  070C  00E2               	movwf	agregarModificarPrecio@tp
  3708  070D                     l2879:	
  3709                           
  3710                           ;manejoProductos.c: 63:     char lower_8bits;;manejoProductos.c: 64:     char upper_8bit
      +                          s;;manejoProductos.c: 65:     char mensaje[10];;manejoProductos.c: 66:     tp--;
  3711  070D  3001               	movlw	1
  3712  070E  02E2               	subwf	agregarModificarPrecio@tp,f
  3713  070F                     l2881:	
  3714                           
  3715                           ;manejoProductos.c: 67:     tp = tp * 2;
  3716  070F  0862               	movf	agregarModificarPrecio@tp,w
  3717  0710  00CA               	movwf	??_agregarModificarPrecio
  3718  0711  074A               	addwf	??_agregarModificarPrecio,w
  3719  0712  00CB               	movwf	??_agregarModificarPrecio+1
  3720  0713  084B               	movf	??_agregarModificarPrecio+1,w
  3721  0714  00E2               	movwf	agregarModificarPrecio@tp
  3722  0715                     l2883:	
  3723  0715  0862               	movf	agregarModificarPrecio@tp,w
  3724  0716  120A  158A  2199  120A  118A  	fcall	_eeprom_read
  3725  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3726  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3727  071D  0862               	movf	agregarModificarPrecio@tp,w
  3728  071E  3E01               	addlw	1
  3729  071F  120A  158A  2199  120A  118A  	fcall	_eeprom_read
  3730  0724                     l2885:	
  3731                           
  3732                           ;manejoProductos.c: 71:     precio = 100 * (codigoEntrada[4] - '0')+ 10 * (codigoEntrada
      +                          [5] - '0') + (codigoEntrada[6] - '0');
  3733  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0725  1303               	bcf	3,6	;RP1=0, select bank1
  3735  0726  0864               	movf	(_codigoEntrada^(0+128)+4),w
  3736  0727  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0728  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0729  00CA               	movwf	??_agregarModificarPrecio
  3739  072A  01CB               	clrf	??_agregarModificarPrecio+1
  3740  072B  084A               	movf	??_agregarModificarPrecio,w
  3741  072C  00A0               	movwf	___wmul@multiplier
  3742  072D  084B               	movf	??_agregarModificarPrecio+1,w
  3743  072E  00A1               	movwf	___wmul@multiplier+1
  3744  072F  3064               	movlw	100
  3745  0730  00A2               	movwf	___wmul@multiplicand
  3746  0731  3000               	movlw	0
  3747  0732  00A3               	movwf	___wmul@multiplicand+1
  3748  0733  120A  118A  23D9  120A  118A  	fcall	___wmul
  3749  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3751  073A  0820               	movf	?___wmul,w
  3752  073B  00CC               	movwf	??_agregarModificarPrecio+2
  3753  073C  0821               	movf	?___wmul+1,w
  3754  073D  00CD               	movwf	??_agregarModificarPrecio+3
  3755  073E  1683               	bsf	3,5	;RP0=1, select bank1
  3756  073F  1303               	bcf	3,6	;RP1=0, select bank1
  3757  0740  0865               	movf	(_codigoEntrada^(0+128)+5),w
  3758  0741  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0742  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0743  00CE               	movwf	??_agregarModificarPrecio+4
  3761  0744  01CF               	clrf	??_agregarModificarPrecio+5
  3762  0745  084E               	movf	??_agregarModificarPrecio+4,w
  3763  0746  00A0               	movwf	___wmul@multiplier
  3764  0747  084F               	movf	??_agregarModificarPrecio+5,w
  3765  0748  00A1               	movwf	___wmul@multiplier+1
  3766  0749  300A               	movlw	10
  3767  074A  00A2               	movwf	___wmul@multiplicand
  3768  074B  3000               	movlw	0
  3769  074C  00A3               	movwf	___wmul@multiplicand+1
  3770  074D  120A  118A  23D9  120A  118A  	fcall	___wmul
  3771  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0753  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0754  0820               	movf	?___wmul,w
  3774  0755  074C               	addwf	??_agregarModificarPrecio+2,w
  3775  0756  00D0               	movwf	??_agregarModificarPrecio+6
  3776  0757  0821               	movf	?___wmul+1,w
  3777  0758  1803               	skipnc
  3778  0759  0A21               	incf	?___wmul+1,w
  3779  075A  074D               	addwf	??_agregarModificarPrecio+3,w
  3780  075B  00D1               	movwf	??_agregarModificarPrecio+7
  3781  075C  1683               	bsf	3,5	;RP0=1, select bank1
  3782  075D  1303               	bcf	3,6	;RP1=0, select bank1
  3783  075E  0866               	movf	(_codigoEntrada^(0+128)+6),w
  3784  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3786  0761  0750               	addwf	??_agregarModificarPrecio+6,w
  3787  0762  00D2               	movwf	??_agregarModificarPrecio+8
  3788  0763  3000               	movlw	0
  3789  0764  1803               	skipnc
  3790  0765  3001               	movlw	1
  3791  0766  0751               	addwf	??_agregarModificarPrecio+7,w
  3792  0767  00D3               	movwf	??_agregarModificarPrecio+9
  3793  0768  0852               	movf	??_agregarModificarPrecio+8,w
  3794  0769  3E30               	addlw	48
  3795  076A  00E0               	movwf	agregarModificarPrecio@precio
  3796  076B  0853               	movf	??_agregarModificarPrecio+9,w
  3797  076C  1803               	skipnc
  3798  076D  3E01               	addlw	1
  3799  076E  3EEB               	addlw	235
  3800  076F  00E1               	movwf	agregarModificarPrecio@precio+1
  3801  0770                     l2887:	
  3802                           
  3803                           ;manejoProductos.c: 72:     lower_8bits = precio & 0xff;
  3804  0770  0860               	movf	agregarModificarPrecio@precio,w
  3805  0771  00CA               	movwf	??_agregarModificarPrecio
  3806  0772  084A               	movf	??_agregarModificarPrecio,w
  3807  0773  00DE               	movwf	agregarModificarPrecio@lower_8bits
  3808  0774                     l2889:	
  3809                           
  3810                           ;manejoProductos.c: 73:     upper_8bits = (precio >> 8) & 0xff;
  3811  0774  0861               	movf	agregarModificarPrecio@precio+1,w
  3812  0775  00CA               	movwf	??_agregarModificarPrecio
  3813  0776  084A               	movf	??_agregarModificarPrecio,w
  3814  0777  00DF               	movwf	agregarModificarPrecio@upper_8bits
  3815  0778                     l2891:	
  3816                           
  3817                           ;manejoProductos.c: 74:     eeprom_write(tp ,upper_8bits);
  3818  0778  085F               	movf	agregarModificarPrecio@upper_8bits,w
  3819  0779  00CA               	movwf	??_agregarModificarPrecio
  3820  077A  084A               	movf	??_agregarModificarPrecio,w
  3821  077B  00A0               	movwf	eeprom_write@value
  3822  077C  0862               	movf	agregarModificarPrecio@tp,w
  3823  077D  120A  158A  2240  120A  118A  	fcall	_eeprom_write
  3824  0782                     l2893:	
  3825                           
  3826                           ;manejoProductos.c: 75:     eeprom_write(tp + 1,lower_8bits);
  3827  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0783  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0784  085E               	movf	agregarModificarPrecio@lower_8bits,w
  3830  0785  00CA               	movwf	??_agregarModificarPrecio
  3831  0786  084A               	movf	??_agregarModificarPrecio,w
  3832  0787  00A0               	movwf	eeprom_write@value
  3833  0788  0862               	movf	agregarModificarPrecio@tp,w
  3834  0789  3E01               	addlw	1
  3835  078A  120A  158A  2240  120A  118A  	fcall	_eeprom_write
  3836  078F                     l2895:	
  3837                           
  3838                           ;manejoProductos.c: 76:     sprintf(mensaje, "\nP%d=%d\n", tp/2 + 1, precio);
  3839  078F  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  3840  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3842  0792  00B4               	movwf	sprintf@sp
  3843  0793  3000               	movlw	0
  3844  0794  00B5               	movwf	sprintf@sp+1
  3845  0795  3012               	movlw	low (STR_15| (0+32768))
  3846  0796  00B6               	movwf	sprintf@f
  3847  0797  3085               	movlw	high (STR_15| (0+32768))
  3848  0798  00B7               	movwf	sprintf@f+1
  3849  0799  3002               	movlw	2
  3850  079A  00A0               	movwf	___awdiv@divisor
  3851  079B  3000               	movlw	0
  3852  079C  00A1               	movwf	___awdiv@divisor+1
  3853  079D  0862               	movf	agregarModificarPrecio@tp,w
  3854  079E  00CA               	movwf	??_agregarModificarPrecio
  3855  079F  01CB               	clrf	??_agregarModificarPrecio+1
  3856  07A0  084A               	movf	??_agregarModificarPrecio,w
  3857  07A1  00A2               	movwf	___awdiv@dividend
  3858  07A2  084B               	movf	??_agregarModificarPrecio+1,w
  3859  07A3  00A3               	movwf	___awdiv@dividend+1
  3860  07A4  120A  158A  2643  120A  118A  	fcall	___awdiv
  3861  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  3862  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  3863  07AB  0820               	movf	?___awdiv,w
  3864  07AC  3E01               	addlw	1
  3865  07AD  00B8               	movwf	?_sprintf+4
  3866  07AE  0821               	movf	?___awdiv+1,w
  3867  07AF  1803               	skipnc
  3868  07B0  3E01               	addlw	1
  3869  07B1  3E00               	addlw	0
  3870  07B2  00B9               	movwf	?_sprintf+5
  3871  07B3  0861               	movf	agregarModificarPrecio@precio+1,w
  3872  07B4  00BB               	movwf	?_sprintf+7
  3873  07B5  0860               	movf	agregarModificarPrecio@precio,w
  3874  07B6  00BA               	movwf	?_sprintf+6
  3875  07B7  120A  118A  21D9  120A  118A  	fcall	_sprintf
  3876  07BC                     l2897:	
  3877                           
  3878                           ;manejoProductos.c: 77:     envioTX(mensaje);
  3879  07BC  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  3880  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  3881  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  3882  07BF  00A0               	movwf	envioTX@mensaje
  3883  07C0  3000               	movlw	0
  3884  07C1  00A1               	movwf	envioTX@mensaje+1
  3885  07C2  120A  158A  220A  120A  118A  	fcall	_envioTX
  3886  07C7                     l352:	
  3887  07C7  0008               	return
  3888  07C8                     __end_of_agregarModificarPrecio:	
  3889                           
  3890                           	psect	text12
  3891  0A40                     __ptext12:	
  3892 ;; *************** function _eeprom_write *****************
  3893 ;; Defined at:
  3894 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  addr            1    wreg     unsigned char 
  3897 ;;  value           1    0[BANK0 ] unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  addr            1    2[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3909 ;;      Params:         0       1       0       0       0
  3910 ;;      Locals:         0       1       0       0       0
  3911 ;;      Temps:          0       1       0       0       0
  3912 ;;      Totals:         0       3       0       0       0
  3913 ;;Total ram usage:        3 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    1
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_agregarModificarPrecio
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _eeprom_write
  3925  0A40                     _eeprom_write:	
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3929                           ;eeprom_write@addr stored from wreg
  3930  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0A42  00A2               	movwf	eeprom_write@addr
  3933  0A43                     l499:	
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.10
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  3935                           
  3936  0A43                     l500:	
  3937  0A43  1683               	bsf	3,5	;RP0=1, select bank3
  3938  0A44  1703               	bsf	3,6	;RP1=1, select bank3
  3939  0A45  188C               	btfsc	12,1	;volsfr
  3940  0A46  2A48               	goto	u2801
  3941  0A47  2A49               	goto	u2800
  3942  0A48                     u2801:	
  3943  0A48  2A43               	goto	l500
  3944  0A49                     u2800:	
  3945  0A49                     l2705:	
  3946  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0A4B  0822               	movf	eeprom_write@addr,w
  3949  0A4C  1283               	bcf	3,5	;RP0=0, select bank2
  3950  0A4D  1703               	bsf	3,6	;RP1=1, select bank2
  3951  0A4E  008D               	movwf	13	;volatile
  3952  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0A51  0820               	movf	eeprom_write@value,w
  3955  0A52  1283               	bcf	3,5	;RP0=0, select bank2
  3956  0A53  1703               	bsf	3,6	;RP1=1, select bank2
  3957  0A54  008C               	movwf	12	;volatile
  3958  0A55                     l2707:	
  3959  0A55  303F               	movlw	63
  3960  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0A58  00A1               	movwf	??_eeprom_write
  3963  0A59  0821               	movf	??_eeprom_write,w
  3964  0A5A  1683               	bsf	3,5	;RP0=1, select bank3
  3965  0A5B  1703               	bsf	3,6	;RP1=1, select bank3
  3966  0A5C  058C               	andwf	12,f	;volsfr
  3967  0A5D                     l2709:	
  3968  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0A5E  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0A5F  1003               	bcf	3,0	;volatile
  3971  0A60                     l2711:	
  3972  0A60  1F8B               	btfss	11,7	;volatile
  3973  0A61  2A63               	goto	u2811
  3974  0A62  2A64               	goto	u2810
  3975  0A63                     u2811:	
  3976  0A63  2A65               	goto	l503
  3977  0A64                     u2810:	
  3978  0A64                     l2713:	
  3979  0A64  1403               	bsf	3,0	;volatile
  3980  0A65                     l503:	
  3981  0A65  138B               	bcf	11,7	;volatile
  3982  0A66  1683               	bsf	3,5	;RP0=1, select bank3
  3983  0A67  1703               	bsf	3,6	;RP1=1, select bank3
  3984  0A68  150C               	bsf	12,2	;volsfr
  3985  0A69                     l2715:	
  3986  0A69  3055               	movlw	85
  3987  0A6A  008D               	movwf	13	;volsfr
  3988  0A6B  30AA               	movlw	170
  3989  0A6C  008D               	movwf	13	;volsfr
  3990  0A6D                     l2717:	
  3991  0A6D  148C               	bsf	12,1	;volsfr
  3992  0A6E                     l2719:	
  3993  0A6E  110C               	bcf	12,2	;volsfr
  3994  0A6F                     l2721:	
  3995  0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0A70  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0A71  1C03               	btfss	3,0	;volatile
  3998  0A72  2A74               	goto	u2821
  3999  0A73  2A75               	goto	u2820
  4000  0A74                     u2821:	
  4001  0A74  2A76               	goto	l506
  4002  0A75                     u2820:	
  4003  0A75                     l2723:	
  4004  0A75  178B               	bsf	11,7	;volatile
  4005  0A76                     l506:	
  4006  0A76  0008               	return
  4007  0A77                     __end_of_eeprom_write:	
  4008                           
  4009                           	psect	text13
  4010  096A                     __ptext13:	
  4011 ;; *************** function ___bmul *****************
  4012 ;; Defined at:
  4013 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  multiplier      1    wreg     unsigned char 
  4016 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4019 ;;  product         1    2[BANK0 ] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      unsigned char 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4029 ;;      Params:         0       1       0       0       0
  4030 ;;      Locals:         0       2       0       0       0
  4031 ;;      Temps:          0       1       0       0       0
  4032 ;;      Totals:         0       4       0       0       0
  4033 ;;Total ram usage:        4 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_lecturaEtiqueta
  4040 ;;		_agregarModificarPrecio
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function ___bmul
  4046  096A                     ___bmul:	
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4050                           ;___bmul@multiplier stored from wreg
  4051  096A  1283               	bcf	3,5	;RP0=0, select bank0
  4052  096B  1303               	bcf	3,6	;RP1=0, select bank0
  4053  096C  00A3               	movwf	___bmul@multiplier
  4054  096D                     l2725:	
  4055  096D  01A2               	clrf	___bmul@product
  4056  096E                     l2727:	
  4057  096E  1C23               	btfss	___bmul@multiplier,0
  4058  096F  2971               	goto	u2831
  4059  0970  2972               	goto	u2830
  4060  0971                     u2831:	
  4061  0971  2976               	goto	l2731
  4062  0972                     u2830:	
  4063  0972                     l2729:	
  4064  0972  0820               	movf	___bmul@multiplicand,w
  4065  0973  00A1               	movwf	??___bmul
  4066  0974  0821               	movf	??___bmul,w
  4067  0975  07A2               	addwf	___bmul@product,f
  4068  0976                     l2731:	
  4069  0976  1003               	clrc
  4070  0977  0DA0               	rlf	___bmul@multiplicand,f
  4071  0978                     l2733:	
  4072  0978  1003               	clrc
  4073  0979  0CA3               	rrf	___bmul@multiplier,f
  4074  097A  0823               	movf	___bmul@multiplier,w
  4075  097B  1D03               	btfss	3,2
  4076  097C  297E               	goto	u2841
  4077  097D  297F               	goto	u2840
  4078  097E                     u2841:	
  4079  097E  296E               	goto	l2727
  4080  097F                     u2840:	
  4081  097F                     l2735:	
  4082  097F  0822               	movf	___bmul@product,w
  4083  0980                     l569:	
  4084  0980  0008               	return
  4085  0981                     __end_of___bmul:	
  4086                           
  4087                           	psect	text14
  4088  061D                     __ptext14:	
  4089 ;; *************** function _lecturaConsulta *****************
  4090 ;; Defined at:
  4091 ;;		line 130 in file "lectura.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  articulo        2   36[BANK1 ] unsigned short 
  4096 ;;  strLote        32    4[BANK1 ] unsigned char [32]
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       0       0       0       0
  4107 ;;      Locals:         0       0      34       0       0
  4108 ;;      Temps:          0       0       4       0       0
  4109 ;;      Totals:         0       0      38       0       0
  4110 ;;Total ram usage:       38 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    4
  4113 ;; This function calls:
  4114 ;;		___wmul
  4115 ;;		_consultaPrecio
  4116 ;;		_envioTX
  4117 ;;		_sprintf
  4118 ;; This function is called by:
  4119 ;;		_lecturaComando
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function _lecturaConsulta
  4125  061D                     _lecturaConsulta:	
  4126  061D                     l2971:	
  4127                           ;incstack = 0
  4128                           ; Regs used in _lecturaConsulta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4129                           
  4130                           
  4131                           ;lectura.c: 132:     if (codigoEntrada[1] == 0x0D || codigoEntrada[1] == 0x0A) {
  4132  061D  300D               	movlw	13
  4133  061E  1683               	bsf	3,5	;RP0=1, select bank1
  4134  061F  1303               	bcf	3,6	;RP1=0, select bank1
  4135  0620  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4136  0621  1903               	btfsc	3,2
  4137  0622  2E24               	goto	u3231
  4138  0623  2E25               	goto	u3230
  4139  0624                     u3231:	
  4140  0624  2E2B               	goto	l2975
  4141  0625                     u3230:	
  4142  0625                     l2973:	
  4143  0625  300A               	movlw	10
  4144  0626  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4145  0627  1D03               	btfss	3,2
  4146  0628  2E2A               	goto	u3241
  4147  0629  2E2B               	goto	u3240
  4148  062A                     u3241:	
  4149  062A  2E49               	goto	l2981
  4150  062B                     u3240:	
  4151  062B                     l2975:	
  4152                           
  4153                           ;lectura.c: 134:         if (cuenta != 0) {
  4154  062B  0870               	movf	_cuenta,w
  4155  062C  0471               	iorwf	_cuenta+1,w
  4156  062D  1903               	btfsc	3,2
  4157  062E  2E30               	goto	u3251
  4158  062F  2E31               	goto	u3250
  4159  0630                     u3251:	
  4160  0630  2E3D               	goto	l2979
  4161  0631                     u3250:	
  4162  0631                     l2977:	
  4163                           
  4164                           ;lectura.c: 135:             envioTX("\nEstado: Activo\n");
  4165  0631  30E6               	movlw	low (STR_10| (0+32768))
  4166  0632  1283               	bcf	3,5	;RP0=0, select bank0
  4167  0633  1303               	bcf	3,6	;RP1=0, select bank0
  4168  0634  00A0               	movwf	envioTX@mensaje
  4169  0635  3084               	movlw	high (STR_10| (0+32768))
  4170  0636  00A1               	movwf	envioTX@mensaje+1
  4171  0637  120A  158A  220A  120A  118A  	fcall	_envioTX
  4172                           
  4173                           ;lectura.c: 136:         }
  4174  063C  2EF5               	goto	l175
  4175  063D                     l2979:	
  4176                           
  4177                           ;lectura.c: 138:             envioTX("\nEstado: En espera\n");
  4178  063D  3098               	movlw	low (STR_11| (0+32768))
  4179  063E  1283               	bcf	3,5	;RP0=0, select bank0
  4180  063F  1303               	bcf	3,6	;RP1=0, select bank0
  4181  0640  00A0               	movwf	envioTX@mensaje
  4182  0641  3084               	movlw	high (STR_11| (0+32768))
  4183  0642  00A1               	movwf	envioTX@mensaje+1
  4184  0643  120A  158A  220A  120A  118A  	fcall	_envioTX
  4185  0648  2EF5               	goto	l175
  4186  0649                     l2981:	
  4187  0649  304C               	movlw	76
  4188  064A  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4189  064B  1D03               	btfss	3,2
  4190  064C  2E4E               	goto	u3261
  4191  064D  2E4F               	goto	u3260
  4192  064E                     u3261:	
  4193  064E  2E94               	goto	l2985
  4194  064F                     u3260:	
  4195  064F                     l2983:	
  4196                           
  4197                           ;lectura.c: 142:         char strLote[32];;lectura.c: 144:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  4198  064F  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4199  0650  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0651  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0652  00B4               	movwf	sprintf@sp
  4202  0653  3000               	movlw	0
  4203  0654  00B5               	movwf	sprintf@sp+1
  4204  0655  30F7               	movlw	low (STR_1| (0+32768))
  4205  0656  00B6               	movwf	sprintf@f
  4206  0657  3084               	movlw	high (STR_1| (0+32768))
  4207  0658  00B7               	movwf	sprintf@f+1
  4208  0659  0878               	movf	_nroLote,w
  4209  065A  1683               	bsf	3,5	;RP0=1, select bank1
  4210  065B  1303               	bcf	3,6	;RP1=0, select bank1
  4211  065C  00A0               	movwf	??_lecturaConsulta^(0+128)
  4212  065D  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4213  065E  0820               	movf	??_lecturaConsulta^(0+128),w
  4214  065F  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0660  1303               	bcf	3,6	;RP1=0, select bank0
  4216  0661  00B8               	movwf	?_sprintf+4
  4217  0662  1683               	bsf	3,5	;RP0=1, select bank1
  4218  0663  1303               	bcf	3,6	;RP1=0, select bank1
  4219  0664  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4220  0665  1283               	bcf	3,5	;RP0=0, select bank0
  4221  0666  1303               	bcf	3,6	;RP1=0, select bank0
  4222  0667  00B9               	movwf	?_sprintf+5
  4223  0668  0872               	movf	_ventasLote,w
  4224  0669  1683               	bsf	3,5	;RP0=1, select bank1
  4225  066A  1303               	bcf	3,6	;RP1=0, select bank1
  4226  066B  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4227  066C  01A3               	clrf	((??_lecturaConsulta+2)^(0+128)+1)
  4228  066D  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4229  066E  1283               	bcf	3,5	;RP0=0, select bank0
  4230  066F  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0670  00BA               	movwf	?_sprintf+6
  4232  0671  1683               	bsf	3,5	;RP0=1, select bank1
  4233  0672  1303               	bcf	3,6	;RP1=0, select bank1
  4234  0673  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4235  0674  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0675  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0676  00BB               	movwf	?_sprintf+7
  4238  0677  1683               	bsf	3,5	;RP0=1, select bank1
  4239  0678  1303               	bcf	3,6	;RP1=0, select bank1
  4240  0679  085B               	movf	(_montosLote+1)^(0+128),w
  4241  067A  1283               	bcf	3,5	;RP0=0, select bank0
  4242  067B  1303               	bcf	3,6	;RP1=0, select bank0
  4243  067C  00BD               	movwf	?_sprintf+9
  4244  067D  1683               	bsf	3,5	;RP0=1, select bank1
  4245  067E  1303               	bcf	3,6	;RP1=0, select bank1
  4246  067F  085A               	movf	_montosLote^(0+128),w
  4247  0680  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0681  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0682  00BC               	movwf	?_sprintf+8
  4250  0683  120A  118A  21D9  120A  118A  	fcall	_sprintf
  4251                           
  4252                           ;lectura.c: 145:         envioTX(strLote);
  4253  0688  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4254  0689  1283               	bcf	3,5	;RP0=0, select bank0
  4255  068A  1303               	bcf	3,6	;RP1=0, select bank0
  4256  068B  00A0               	movwf	envioTX@mensaje
  4257  068C  3000               	movlw	0
  4258  068D  00A1               	movwf	envioTX@mensaje+1
  4259  068E  120A  158A  220A  120A  118A  	fcall	_envioTX
  4260                           
  4261                           ;lectura.c: 147:     }
  4262  0693  2EF5               	goto	l175
  4263  0694                     l2985:	
  4264  0694  3056               	movlw	86
  4265  0695  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4266  0696  1D03               	btfss	3,2
  4267  0697  2E99               	goto	u3271
  4268  0698  2E9A               	goto	u3270
  4269  0699                     u3271:	
  4270  0699  2E9E               	goto	l2989
  4271  069A                     u3270:	
  4272  069A                     l2987:	
  4273                           
  4274                           ;lectura.c: 150:         GO_nDONE = 1;
  4275  069A  1283               	bcf	3,5	;RP0=0, select bank0
  4276  069B  1303               	bcf	3,6	;RP1=0, select bank0
  4277  069C  151F               	bsf	31,2	;volatile
  4278                           
  4279                           ;lectura.c: 151:     }
  4280  069D  2EF5               	goto	l175
  4281  069E                     l2989:	
  4282  069E  303A               	movlw	58
  4283  069F  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4284  06A0  1803               	skipnc
  4285  06A1  2EA3               	goto	u3281
  4286  06A2  2EA4               	goto	u3280
  4287  06A3                     u3281:	
  4288  06A3  2EF5               	goto	l175
  4289  06A4                     u3280:	
  4290  06A4                     l2991:	
  4291  06A4  3030               	movlw	48
  4292  06A5  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4293  06A6  1C03               	skipc
  4294  06A7  2EA9               	goto	u3291
  4295  06A8  2EAA               	goto	u3290
  4296  06A9                     u3291:	
  4297  06A9  2EF5               	goto	l175
  4298  06AA                     u3290:	
  4299  06AA                     l2993:	
  4300  06AA  303A               	movlw	58
  4301  06AB  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4302  06AC  1803               	skipnc
  4303  06AD  2EAF               	goto	u3301
  4304  06AE  2EB0               	goto	u3300
  4305  06AF                     u3301:	
  4306  06AF  2EF5               	goto	l175
  4307  06B0                     u3300:	
  4308  06B0                     l2995:	
  4309  06B0  3030               	movlw	48
  4310  06B1  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4311  06B2  1C03               	skipc
  4312  06B3  2EB5               	goto	u3311
  4313  06B4  2EB6               	goto	u3310
  4314  06B5                     u3311:	
  4315  06B5  2EF5               	goto	l175
  4316  06B6                     u3310:	
  4317  06B6                     l2997:	
  4318                           
  4319                           ;lectura.c: 155:         unsigned short int articulo = 10*(codigoEntrada[1] - '0') + (co
      +                          digoEntrada[2] - '0');
  4320  06B6  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4321  06B7  00A0               	movwf	??_lecturaConsulta^(0+128)
  4322  06B8  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4323  06B9  0820               	movf	??_lecturaConsulta^(0+128),w
  4324  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  4325  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  4326  06BC  00A0               	movwf	___wmul@multiplier
  4327  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  4328  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  4329  06BF  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4330  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  4331  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  4332  06C2  00A1               	movwf	___wmul@multiplier+1
  4333  06C3  300A               	movlw	10
  4334  06C4  00A2               	movwf	___wmul@multiplicand
  4335  06C5  3000               	movlw	0
  4336  06C6  00A3               	movwf	___wmul@multiplicand+1
  4337  06C7  120A  118A  23D9  120A  118A  	fcall	___wmul
  4338  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  4339  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  4340  06CE  0862               	movf	(_codigoEntrada^(0+128)+2),w
  4341  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  4342  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  4343  06D1  0720               	addwf	?___wmul,w
  4344  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  4345  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  4346  06D4  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4347  06D5  3000               	movlw	0
  4348  06D6  1803               	skipnc
  4349  06D7  3001               	movlw	1
  4350  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4351  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4352  06DA  0721               	addwf	?___wmul+1,w
  4353  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  4354  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  4355  06DD  00A3               	movwf	(??_lecturaConsulta+3)^(0+128)
  4356  06DE  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4357  06DF  3EF0               	addlw	240
  4358  06E0  00C4               	movwf	lecturaConsulta@articulo^(0+128)
  4359  06E1  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4360  06E2  1803               	skipnc
  4361  06E3  3E01               	addlw	1
  4362  06E4  3EFD               	addlw	253
  4363  06E5  00C5               	movwf	(lecturaConsulta@articulo+1)^(0+128)
  4364  06E6                     l2999:	
  4365                           
  4366                           ;lectura.c: 157:         consultaPrecio(articulo);
  4367  06E6  0845               	movf	(lecturaConsulta@articulo+1)^(0+128),w
  4368  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  4369  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  4370  06E9  00CB               	movwf	consultaPrecio@articulo+1
  4371  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  4372  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  4373  06EC  0844               	movf	lecturaConsulta@articulo^(0+128),w
  4374  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  4375  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  4376  06EF  00CA               	movwf	consultaPrecio@articulo
  4377  06F0  120A  118A  232A  120A  118A  	fcall	_consultaPrecio
  4378  06F5                     l175:	
  4379  06F5  0008               	return
  4380  06F6                     __end_of_lecturaConsulta:	
  4381                           
  4382                           	psect	text15
  4383  032A                     __ptext15:	
  4384 ;; *************** function _consultaPrecio *****************
  4385 ;; Defined at:
  4386 ;;		line 114 in file "lectura.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  articulo        2   42[BANK0 ] short 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  mensaje        26   48[BANK0 ] unsigned char [26]
  4391 ;;  precio          2   74[BANK0 ] short 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       2       0       0       0
  4402 ;;      Locals:         0      28       0       0       0
  4403 ;;      Temps:          0       4       0       0       0
  4404 ;;      Totals:         0      34       0       0       0
  4405 ;;Total ram usage:       34 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    3
  4408 ;; This function calls:
  4409 ;;		___awdiv
  4410 ;;		___awmod
  4411 ;;		_eeprom_read
  4412 ;;		_envioTX
  4413 ;;		_sprintf
  4414 ;; This function is called by:
  4415 ;;		_lecturaConsulta
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _consultaPrecio
  4421  032A                     _consultaPrecio:	
  4422  032A                     l2899:	
  4423                           ;incstack = 0
  4424                           ; Regs used in _consultaPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4425                           
  4426                           
  4427                           ;lectura.c: 115:     char mensaje[26];;lectura.c: 116:     articulo--;
  4428  032A  30FF               	movlw	255
  4429  032B  1283               	bcf	3,5	;RP0=0, select bank0
  4430  032C  1303               	bcf	3,6	;RP1=0, select bank0
  4431  032D  07CA               	addwf	consultaPrecio@articulo,f
  4432  032E  1803               	skipnc
  4433  032F  0ACB               	incf	consultaPrecio@articulo+1,f
  4434  0330  30FF               	movlw	255
  4435  0331  07CB               	addwf	consultaPrecio@articulo+1,f
  4436                           
  4437                           ;lectura.c: 117:     articulo = articulo * 2;
  4438  0332  1003               	clrc
  4439  0333  0D4A               	rlf	consultaPrecio@articulo,w
  4440  0334  00CA               	movwf	consultaPrecio@articulo
  4441  0335  0D4B               	rlf	consultaPrecio@articulo+1,w
  4442  0336  00CB               	movwf	consultaPrecio@articulo+1
  4443  0337                     l2901:	
  4444                           
  4445                           ;lectura.c: 118:     short int precio = (eeprom_read(articulo) << 8) | (eeprom_read(arti
      +                          culo+1));
  4446  0337  084A               	movf	consultaPrecio@articulo,w
  4447  0338  3E01               	addlw	1
  4448  0339  120A  158A  2199  120A  118A  	fcall	_eeprom_read
  4449  033E  1283               	bcf	3,5	;RP0=0, select bank0
  4450  033F  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0340  00CC               	movwf	??_consultaPrecio
  4452  0341  01CD               	clrf	??_consultaPrecio+1
  4453  0342  084A               	movf	consultaPrecio@articulo,w
  4454  0343  120A  158A  2199  120A  118A  	fcall	_eeprom_read
  4455  0348  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0349  1303               	bcf	3,6	;RP1=0, select bank0
  4457  034A  00CE               	movwf	??_consultaPrecio+2
  4458  034B  01CF               	clrf	??_consultaPrecio+3
  4459  034C  084E               	movf	??_consultaPrecio+2,w
  4460  034D  00CF               	movwf	??_consultaPrecio+3
  4461  034E  01CE               	clrf	??_consultaPrecio+2
  4462  034F  084C               	movf	??_consultaPrecio,w
  4463  0350  044E               	iorwf	??_consultaPrecio+2,w
  4464  0351  00EA               	movwf	consultaPrecio@precio
  4465  0352  084D               	movf	??_consultaPrecio+1,w
  4466  0353  044F               	iorwf	??_consultaPrecio+3,w
  4467  0354  00EB               	movwf	consultaPrecio@precio+1
  4468  0355                     l2903:	
  4469                           
  4470                           ;lectura.c: 120:     if (precio > 999 || precio < 0) {
  4471  0355  086B               	movf	consultaPrecio@precio+1,w
  4472  0356  3A80               	xorlw	128
  4473  0357  00FF               	movwf	btemp+1
  4474  0358  3083               	movlw	131
  4475  0359  027F               	subwf	btemp+1,w
  4476  035A  1D03               	skipz
  4477  035B  2B5E               	goto	u3125
  4478  035C  30E8               	movlw	232
  4479  035D  026A               	subwf	consultaPrecio@precio,w
  4480  035E                     u3125:	
  4481  035E  1803               	skipnc
  4482  035F  2B61               	goto	u3121
  4483  0360  2B62               	goto	u3120
  4484  0361                     u3121:	
  4485  0361  2B68               	goto	l2907
  4486  0362                     u3120:	
  4487  0362                     l2905:	
  4488  0362  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0363  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0364  1FEB               	btfss	consultaPrecio@precio+1,7
  4491  0365  2B67               	goto	u3131
  4492  0366  2B68               	goto	u3130
  4493  0367                     u3131:	
  4494  0367  2B83               	goto	l2909
  4495  0368                     u3130:	
  4496  0368                     l2907:	
  4497                           
  4498                           ;lectura.c: 121:         sprintf(mensaje, "\nProducto no encontrado\n");
  4499  0368  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4500  0369  1283               	bcf	3,5	;RP0=0, select bank0
  4501  036A  1303               	bcf	3,6	;RP1=0, select bank0
  4502  036B  00B4               	movwf	sprintf@sp
  4503  036C  3000               	movlw	0
  4504  036D  00B5               	movwf	sprintf@sp+1
  4505  036E  3067               	movlw	low (STR_6| (0+32768))
  4506  036F  00B6               	movwf	sprintf@f
  4507  0370  3084               	movlw	high (STR_6| (0+32768))
  4508  0371  00B7               	movwf	sprintf@f+1
  4509  0372  120A  118A  21D9  120A  118A  	fcall	_sprintf
  4510                           
  4511                           ;lectura.c: 122:         envioTX(mensaje);
  4512  0377  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4513  0378  1283               	bcf	3,5	;RP0=0, select bank0
  4514  0379  1303               	bcf	3,6	;RP1=0, select bank0
  4515  037A  00A0               	movwf	envioTX@mensaje
  4516  037B  3000               	movlw	0
  4517  037C  00A1               	movwf	envioTX@mensaje+1
  4518  037D  120A  158A  220A  120A  118A  	fcall	_envioTX
  4519                           
  4520                           ;lectura.c: 123:     }
  4521  0382  2BD8               	goto	l161
  4522  0383                     l2909:	
  4523                           
  4524                           ;lectura.c: 125:         sprintf(mensaje, "\nTP: %d P: ?%d,%d\n", articulo/2 + 1, precio
      +                          /10, precio%10);
  4525  0383  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4526  0384  00B4               	movwf	sprintf@sp
  4527  0385  3000               	movlw	0
  4528  0386  00B5               	movwf	sprintf@sp+1
  4529  0387  30C0               	movlw	low (STR_9| (0+32768))
  4530  0388  00B6               	movwf	sprintf@f
  4531  0389  3084               	movlw	high (STR_9| (0+32768))
  4532  038A  00B7               	movwf	sprintf@f+1
  4533  038B  3002               	movlw	2
  4534  038C  00A0               	movwf	___awdiv@divisor
  4535  038D  3000               	movlw	0
  4536  038E  00A1               	movwf	___awdiv@divisor+1
  4537  038F  084B               	movf	consultaPrecio@articulo+1,w
  4538  0390  00A3               	movwf	___awdiv@dividend+1
  4539  0391  084A               	movf	consultaPrecio@articulo,w
  4540  0392  00A2               	movwf	___awdiv@dividend
  4541  0393  120A  158A  2643  120A  118A  	fcall	___awdiv
  4542  0398  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0399  1303               	bcf	3,6	;RP1=0, select bank0
  4544  039A  0820               	movf	?___awdiv,w
  4545  039B  3E01               	addlw	1
  4546  039C  00B8               	movwf	?_sprintf+4
  4547  039D  0821               	movf	?___awdiv+1,w
  4548  039E  1803               	skipnc
  4549  039F  3E01               	addlw	1
  4550  03A0  3E00               	addlw	0
  4551  03A1  00B9               	movwf	?_sprintf+5
  4552  03A2  300A               	movlw	10
  4553  03A3  00A0               	movwf	___awdiv@divisor
  4554  03A4  3000               	movlw	0
  4555  03A5  00A1               	movwf	___awdiv@divisor+1
  4556  03A6  086B               	movf	consultaPrecio@precio+1,w
  4557  03A7  00A3               	movwf	___awdiv@dividend+1
  4558  03A8  086A               	movf	consultaPrecio@precio,w
  4559  03A9  00A2               	movwf	___awdiv@dividend
  4560  03AA  120A  158A  2643  120A  118A  	fcall	___awdiv
  4561  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  4562  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  4563  03B1  0821               	movf	?___awdiv+1,w
  4564  03B2  00BB               	movwf	?_sprintf+7
  4565  03B3  0820               	movf	?___awdiv,w
  4566  03B4  00BA               	movwf	?_sprintf+6
  4567  03B5  300A               	movlw	10
  4568  03B6  00A0               	movwf	___awmod@divisor
  4569  03B7  3000               	movlw	0
  4570  03B8  00A1               	movwf	___awmod@divisor+1
  4571  03B9  086B               	movf	consultaPrecio@precio+1,w
  4572  03BA  00A3               	movwf	___awmod@dividend+1
  4573  03BB  086A               	movf	consultaPrecio@precio,w
  4574  03BC  00A2               	movwf	___awmod@dividend
  4575  03BD  120A  158A  2458  120A  118A  	fcall	___awmod
  4576  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  4577  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  4578  03C4  0821               	movf	?___awmod+1,w
  4579  03C5  00BD               	movwf	?_sprintf+9
  4580  03C6  0820               	movf	?___awmod,w
  4581  03C7  00BC               	movwf	?_sprintf+8
  4582  03C8  120A  118A  21D9  120A  118A  	fcall	_sprintf
  4583                           
  4584                           ;lectura.c: 126:         envioTX(mensaje);
  4585  03CD  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4586  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  4587  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  4588  03D0  00A0               	movwf	envioTX@mensaje
  4589  03D1  3000               	movlw	0
  4590  03D2  00A1               	movwf	envioTX@mensaje+1
  4591  03D3  120A  158A  220A  120A  118A  	fcall	_envioTX
  4592  03D8                     l161:	
  4593  03D8  0008               	return
  4594  03D9                     __end_of_consultaPrecio:	
  4595                           
  4596                           	psect	text16
  4597  0999                     __ptext16:	
  4598 ;; *************** function _eeprom_read *****************
  4599 ;; Defined at:
  4600 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  addr            1    wreg     unsigned char 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  addr            1    1[BANK0 ] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      unsigned char 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4614 ;;      Params:         0       0       0       0       0
  4615 ;;      Locals:         0       1       0       0       0
  4616 ;;      Temps:          0       1       0       0       0
  4617 ;;      Totals:         0       2       0       0       0
  4618 ;;Total ram usage:        2 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_EEPROM_search
  4625 ;;		_consultaPrecio
  4626 ;;		_agregarModificarPrecio
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           
  4631                           ;psect for function _eeprom_read
  4632  0999                     _eeprom_read:	
  4633                           
  4634                           ;incstack = 0
  4635                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4636                           ;eeprom_read@addr stored from wreg
  4637  0999  1283               	bcf	3,5	;RP0=0, select bank0
  4638  099A  1303               	bcf	3,6	;RP1=0, select bank0
  4639  099B  00A1               	movwf	eeprom_read@addr
  4640  099C                     l480:	
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  4642                           
  4643  099C  0064               	clrwdt	;# 
  4644  099D  1683               	bsf	3,5	;RP0=1, select bank3
  4645  099E  1703               	bsf	3,6	;RP1=1, select bank3
  4646  099F  188C               	btfsc	12,1	;volsfr
  4647  09A0  29A2               	goto	u2771
  4648  09A1  29A5               	goto	u2770
  4649  09A2                     u2771:	
  4650  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4651  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4652  09A4  299C               	goto	l480
  4653  09A5                     u2770:	
  4654  09A5                     l2685:	
  4655                           
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4657  09A5  1283               	bcf	3,5	;RP0=0, select bank0
  4658  09A6  1303               	bcf	3,6	;RP1=0, select bank0
  4659  09A7  0821               	movf	eeprom_read@addr,w
  4660  09A8  1283               	bcf	3,5	;RP0=0, select bank2
  4661  09A9  1703               	bsf	3,6	;RP1=1, select bank2
  4662  09AA  008D               	movwf	13	;volatile
  4663  09AB  303F               	movlw	63
  4664  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  4665  09AD  1303               	bcf	3,6	;RP1=0, select bank0
  4666  09AE  00A0               	movwf	??_eeprom_read
  4667  09AF  0820               	movf	??_eeprom_read,w
  4668  09B0  1683               	bsf	3,5	;RP0=1, select bank3
  4669  09B1  1703               	bsf	3,6	;RP1=1, select bank3
  4670  09B2  058C               	andwf	12,f	;volsfr
  4671  09B3  140C               	bsf	12,0	;volsfr
  4672  09B4  1283               	bcf	3,5	;RP0=0, select bank2
  4673  09B5  1703               	bsf	3,6	;RP1=1, select bank2
  4674  09B6  080C               	movf	12,w	;volatile
  4675  09B7                     l482:	
  4676  09B7  0008               	return
  4677  09B8                     __end_of_eeprom_read:	
  4678                           
  4679                           	psect	text17
  4680  0C58                     __ptext17:	
  4681 ;; *************** function ___awmod *****************
  4682 ;; Defined at:
  4683 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  divisor         2    0[BANK0 ] int 
  4686 ;;  dividend        2    2[BANK0 ] int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  sign            1    6[BANK0 ] unsigned char 
  4689 ;;  counter         1    5[BANK0 ] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  2    0[BANK0 ] int 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       4       0       0       0
  4700 ;;      Locals:         0       2       0       0       0
  4701 ;;      Temps:          0       1       0       0       0
  4702 ;;      Totals:         0       7       0       0       0
  4703 ;;Total ram usage:        7 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_lecturaEtiqueta
  4710 ;;		_consultaPrecio
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function ___awmod
  4716  0C58                     ___awmod:	
  4717  0C58                     l2783:	
  4718                           ;incstack = 0
  4719                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4720                           
  4721  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0C5A  01A6               	clrf	___awmod@sign
  4724  0C5B                     l2785:	
  4725  0C5B  1FA3               	btfss	___awmod@dividend+1,7
  4726  0C5C  2C5E               	goto	u2951
  4727  0C5D  2C5F               	goto	u2950
  4728  0C5E                     u2951:	
  4729  0C5E  2C66               	goto	l2791
  4730  0C5F                     u2950:	
  4731  0C5F                     l2787:	
  4732  0C5F  09A2               	comf	___awmod@dividend,f
  4733  0C60  09A3               	comf	___awmod@dividend+1,f
  4734  0C61  0AA2               	incf	___awmod@dividend,f
  4735  0C62  1903               	skipnz
  4736  0C63  0AA3               	incf	___awmod@dividend+1,f
  4737  0C64                     l2789:	
  4738  0C64  01A6               	clrf	___awmod@sign
  4739  0C65  0AA6               	incf	___awmod@sign,f
  4740  0C66                     l2791:	
  4741  0C66  1FA1               	btfss	___awmod@divisor+1,7
  4742  0C67  2C69               	goto	u2961
  4743  0C68  2C6A               	goto	u2960
  4744  0C69                     u2961:	
  4745  0C69  2C6F               	goto	l2795
  4746  0C6A                     u2960:	
  4747  0C6A                     l2793:	
  4748  0C6A  09A0               	comf	___awmod@divisor,f
  4749  0C6B  09A1               	comf	___awmod@divisor+1,f
  4750  0C6C  0AA0               	incf	___awmod@divisor,f
  4751  0C6D  1903               	skipnz
  4752  0C6E  0AA1               	incf	___awmod@divisor+1,f
  4753  0C6F                     l2795:	
  4754  0C6F  0820               	movf	___awmod@divisor,w
  4755  0C70  0421               	iorwf	___awmod@divisor+1,w
  4756  0C71  1903               	btfsc	3,2
  4757  0C72  2C74               	goto	u2971
  4758  0C73  2C75               	goto	u2970
  4759  0C74                     u2971:	
  4760  0C74  2CA4               	goto	l2813
  4761  0C75                     u2970:	
  4762  0C75                     l2797:	
  4763  0C75  01A5               	clrf	___awmod@counter
  4764  0C76  0AA5               	incf	___awmod@counter,f
  4765  0C77  2C83               	goto	l2803
  4766  0C78                     l2799:	
  4767  0C78  3001               	movlw	1
  4768  0C79                     u2985:	
  4769  0C79  1003               	clrc
  4770  0C7A  0DA0               	rlf	___awmod@divisor,f
  4771  0C7B  0DA1               	rlf	___awmod@divisor+1,f
  4772  0C7C  3EFF               	addlw	-1
  4773  0C7D  1D03               	skipz
  4774  0C7E  2C79               	goto	u2985
  4775  0C7F                     l2801:	
  4776  0C7F  3001               	movlw	1
  4777  0C80  00A4               	movwf	??___awmod
  4778  0C81  0824               	movf	??___awmod,w
  4779  0C82  07A5               	addwf	___awmod@counter,f
  4780  0C83                     l2803:	
  4781  0C83  1FA1               	btfss	___awmod@divisor+1,7
  4782  0C84  2C86               	goto	u2991
  4783  0C85  2C87               	goto	u2990
  4784  0C86                     u2991:	
  4785  0C86  2C78               	goto	l2799
  4786  0C87                     u2990:	
  4787  0C87                     l2805:	
  4788  0C87  0821               	movf	___awmod@divisor+1,w
  4789  0C88  0223               	subwf	___awmod@dividend+1,w
  4790  0C89  1D03               	skipz
  4791  0C8A  2C8D               	goto	u3005
  4792  0C8B  0820               	movf	___awmod@divisor,w
  4793  0C8C  0222               	subwf	___awmod@dividend,w
  4794  0C8D                     u3005:	
  4795  0C8D  1C03               	skipc
  4796  0C8E  2C90               	goto	u3001
  4797  0C8F  2C91               	goto	u3000
  4798  0C90                     u3001:	
  4799  0C90  2C97               	goto	l2809
  4800  0C91                     u3000:	
  4801  0C91                     l2807:	
  4802  0C91  0820               	movf	___awmod@divisor,w
  4803  0C92  02A2               	subwf	___awmod@dividend,f
  4804  0C93  0821               	movf	___awmod@divisor+1,w
  4805  0C94  1C03               	skipc
  4806  0C95  03A3               	decf	___awmod@dividend+1,f
  4807  0C96  02A3               	subwf	___awmod@dividend+1,f
  4808  0C97                     l2809:	
  4809  0C97  3001               	movlw	1
  4810  0C98                     u3015:	
  4811  0C98  1003               	clrc
  4812  0C99  0CA1               	rrf	___awmod@divisor+1,f
  4813  0C9A  0CA0               	rrf	___awmod@divisor,f
  4814  0C9B  3EFF               	addlw	-1
  4815  0C9C  1D03               	skipz
  4816  0C9D  2C98               	goto	u3015
  4817  0C9E                     l2811:	
  4818  0C9E  3001               	movlw	1
  4819  0C9F  02A5               	subwf	___awmod@counter,f
  4820  0CA0  1D03               	btfss	3,2
  4821  0CA1  2CA3               	goto	u3021
  4822  0CA2  2CA4               	goto	u3020
  4823  0CA3                     u3021:	
  4824  0CA3  2C87               	goto	l2805
  4825  0CA4                     u3020:	
  4826  0CA4                     l2813:	
  4827  0CA4  0826               	movf	___awmod@sign,w
  4828  0CA5  1903               	btfsc	3,2
  4829  0CA6  2CA8               	goto	u3031
  4830  0CA7  2CA9               	goto	u3030
  4831  0CA8                     u3031:	
  4832  0CA8  2CAE               	goto	l2817
  4833  0CA9                     u3030:	
  4834  0CA9                     l2815:	
  4835  0CA9  09A2               	comf	___awmod@dividend,f
  4836  0CAA  09A3               	comf	___awmod@dividend+1,f
  4837  0CAB  0AA2               	incf	___awmod@dividend,f
  4838  0CAC  1903               	skipnz
  4839  0CAD  0AA3               	incf	___awmod@dividend+1,f
  4840  0CAE                     l2817:	
  4841  0CAE  0823               	movf	___awmod@dividend+1,w
  4842  0CAF  00A1               	movwf	?___awmod+1
  4843  0CB0  0822               	movf	___awmod@dividend,w
  4844  0CB1  00A0               	movwf	?___awmod
  4845  0CB2                     l709:	
  4846  0CB2  0008               	return
  4847  0CB3                     __end_of___awmod:	
  4848                           
  4849                           	psect	text18
  4850  0E43                     __ptext18:	
  4851 ;; *************** function ___awdiv *****************
  4852 ;; Defined at:
  4853 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  divisor         2    0[BANK0 ] int 
  4856 ;;  dividend        2    2[BANK0 ] int 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  quotient        2    7[BANK0 ] int 
  4859 ;;  sign            1    6[BANK0 ] unsigned char 
  4860 ;;  counter         1    5[BANK0 ] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    0[BANK0 ] int 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         0       4       0       0       0
  4871 ;;      Locals:         0       4       0       0       0
  4872 ;;      Temps:          0       1       0       0       0
  4873 ;;      Totals:         0       9       0       0       0
  4874 ;;Total ram usage:        9 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_EEPROM_search
  4881 ;;		_consultaPrecio
  4882 ;;		_agregarModificarPrecio
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function ___awdiv
  4888  0E43                     ___awdiv:	
  4889  0E43                     l2739:	
  4890                           ;incstack = 0
  4891                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4892                           
  4893  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0E45  01A6               	clrf	___awdiv@sign
  4896  0E46                     l2741:	
  4897  0E46  1FA1               	btfss	___awdiv@divisor+1,7
  4898  0E47  2E49               	goto	u2851
  4899  0E48  2E4A               	goto	u2850
  4900  0E49                     u2851:	
  4901  0E49  2E51               	goto	l2747
  4902  0E4A                     u2850:	
  4903  0E4A                     l2743:	
  4904  0E4A  09A0               	comf	___awdiv@divisor,f
  4905  0E4B  09A1               	comf	___awdiv@divisor+1,f
  4906  0E4C  0AA0               	incf	___awdiv@divisor,f
  4907  0E4D  1903               	skipnz
  4908  0E4E  0AA1               	incf	___awdiv@divisor+1,f
  4909  0E4F                     l2745:	
  4910  0E4F  01A6               	clrf	___awdiv@sign
  4911  0E50  0AA6               	incf	___awdiv@sign,f
  4912  0E51                     l2747:	
  4913  0E51  1FA3               	btfss	___awdiv@dividend+1,7
  4914  0E52  2E54               	goto	u2861
  4915  0E53  2E55               	goto	u2860
  4916  0E54                     u2861:	
  4917  0E54  2E5E               	goto	l2753
  4918  0E55                     u2860:	
  4919  0E55                     l2749:	
  4920  0E55  09A2               	comf	___awdiv@dividend,f
  4921  0E56  09A3               	comf	___awdiv@dividend+1,f
  4922  0E57  0AA2               	incf	___awdiv@dividend,f
  4923  0E58  1903               	skipnz
  4924  0E59  0AA3               	incf	___awdiv@dividend+1,f
  4925  0E5A                     l2751:	
  4926  0E5A  3001               	movlw	1
  4927  0E5B  00A4               	movwf	??___awdiv
  4928  0E5C  0824               	movf	??___awdiv,w
  4929  0E5D  06A6               	xorwf	___awdiv@sign,f
  4930  0E5E                     l2753:	
  4931  0E5E  01A7               	clrf	___awdiv@quotient
  4932  0E5F  01A8               	clrf	___awdiv@quotient+1
  4933  0E60                     l2755:	
  4934  0E60  0820               	movf	___awdiv@divisor,w
  4935  0E61  0421               	iorwf	___awdiv@divisor+1,w
  4936  0E62  1903               	btfsc	3,2
  4937  0E63  2E65               	goto	u2871
  4938  0E64  2E66               	goto	u2870
  4939  0E65                     u2871:	
  4940  0E65  2E9D               	goto	l2775
  4941  0E66                     u2870:	
  4942  0E66                     l2757:	
  4943  0E66  01A5               	clrf	___awdiv@counter
  4944  0E67  0AA5               	incf	___awdiv@counter,f
  4945  0E68  2E74               	goto	l2763
  4946  0E69                     l2759:	
  4947  0E69  3001               	movlw	1
  4948  0E6A                     u2885:	
  4949  0E6A  1003               	clrc
  4950  0E6B  0DA0               	rlf	___awdiv@divisor,f
  4951  0E6C  0DA1               	rlf	___awdiv@divisor+1,f
  4952  0E6D  3EFF               	addlw	-1
  4953  0E6E  1D03               	skipz
  4954  0E6F  2E6A               	goto	u2885
  4955  0E70                     l2761:	
  4956  0E70  3001               	movlw	1
  4957  0E71  00A4               	movwf	??___awdiv
  4958  0E72  0824               	movf	??___awdiv,w
  4959  0E73  07A5               	addwf	___awdiv@counter,f
  4960  0E74                     l2763:	
  4961  0E74  1FA1               	btfss	___awdiv@divisor+1,7
  4962  0E75  2E77               	goto	u2891
  4963  0E76  2E78               	goto	u2890
  4964  0E77                     u2891:	
  4965  0E77  2E69               	goto	l2759
  4966  0E78                     u2890:	
  4967  0E78                     l2765:	
  4968  0E78  3001               	movlw	1
  4969  0E79                     u2905:	
  4970  0E79  1003               	clrc
  4971  0E7A  0DA7               	rlf	___awdiv@quotient,f
  4972  0E7B  0DA8               	rlf	___awdiv@quotient+1,f
  4973  0E7C  3EFF               	addlw	-1
  4974  0E7D  1D03               	skipz
  4975  0E7E  2E79               	goto	u2905
  4976  0E7F  0821               	movf	___awdiv@divisor+1,w
  4977  0E80  0223               	subwf	___awdiv@dividend+1,w
  4978  0E81  1D03               	skipz
  4979  0E82  2E85               	goto	u2915
  4980  0E83  0820               	movf	___awdiv@divisor,w
  4981  0E84  0222               	subwf	___awdiv@dividend,w
  4982  0E85                     u2915:	
  4983  0E85  1C03               	skipc
  4984  0E86  2E88               	goto	u2911
  4985  0E87  2E89               	goto	u2910
  4986  0E88                     u2911:	
  4987  0E88  2E90               	goto	l2771
  4988  0E89                     u2910:	
  4989  0E89                     l2767:	
  4990  0E89  0820               	movf	___awdiv@divisor,w
  4991  0E8A  02A2               	subwf	___awdiv@dividend,f
  4992  0E8B  0821               	movf	___awdiv@divisor+1,w
  4993  0E8C  1C03               	skipc
  4994  0E8D  03A3               	decf	___awdiv@dividend+1,f
  4995  0E8E  02A3               	subwf	___awdiv@dividend+1,f
  4996  0E8F                     l2769:	
  4997  0E8F  1427               	bsf	___awdiv@quotient,0
  4998  0E90                     l2771:	
  4999  0E90  3001               	movlw	1
  5000  0E91                     u2925:	
  5001  0E91  1003               	clrc
  5002  0E92  0CA1               	rrf	___awdiv@divisor+1,f
  5003  0E93  0CA0               	rrf	___awdiv@divisor,f
  5004  0E94  3EFF               	addlw	-1
  5005  0E95  1D03               	skipz
  5006  0E96  2E91               	goto	u2925
  5007  0E97                     l2773:	
  5008  0E97  3001               	movlw	1
  5009  0E98  02A5               	subwf	___awdiv@counter,f
  5010  0E99  1D03               	btfss	3,2
  5011  0E9A  2E9C               	goto	u2931
  5012  0E9B  2E9D               	goto	u2930
  5013  0E9C                     u2931:	
  5014  0E9C  2E78               	goto	l2765
  5015  0E9D                     u2930:	
  5016  0E9D                     l2775:	
  5017  0E9D  0826               	movf	___awdiv@sign,w
  5018  0E9E  1903               	btfsc	3,2
  5019  0E9F  2EA1               	goto	u2941
  5020  0EA0  2EA2               	goto	u2940
  5021  0EA1                     u2941:	
  5022  0EA1  2EA7               	goto	l2779
  5023  0EA2                     u2940:	
  5024  0EA2                     l2777:	
  5025  0EA2  09A7               	comf	___awdiv@quotient,f
  5026  0EA3  09A8               	comf	___awdiv@quotient+1,f
  5027  0EA4  0AA7               	incf	___awdiv@quotient,f
  5028  0EA5  1903               	skipnz
  5029  0EA6  0AA8               	incf	___awdiv@quotient+1,f
  5030  0EA7                     l2779:	
  5031  0EA7  0828               	movf	___awdiv@quotient+1,w
  5032  0EA8  00A1               	movwf	?___awdiv+1
  5033  0EA9  0827               	movf	___awdiv@quotient,w
  5034  0EAA  00A0               	movwf	?___awdiv
  5035  0EAB                     l696:	
  5036  0EAB  0008               	return
  5037  0EAC                     __end_of___awdiv:	
  5038                           
  5039                           	psect	text19
  5040  0AED                     __ptext19:	
  5041 ;; *************** function _accionesDeshacer *****************
  5042 ;; Defined at:
  5043 ;;		line 23 in file "acciones.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5057 ;;      Params:         0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    4
  5064 ;; This function calls:
  5065 ;;		_eliminarProd
  5066 ;;		_envioTX
  5067 ;;		_mostrarDigitos
  5068 ;; This function is called by:
  5069 ;;		_main
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function _accionesDeshacer
  5075  0AED                     _accionesDeshacer:	
  5076  0AED                     l3121:	
  5077                           ;incstack = 0
  5078                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5079                           
  5080                           
  5081                           ;acciones.c: 24:     if (cuenta != auxCuenta) {
  5082  0AED  1683               	bsf	3,5	;RP0=1, select bank3
  5083  0AEE  1703               	bsf	3,6	;RP1=1, select bank3
  5084  0AEF  0855               	movf	(_auxCuenta+1)^(0+384),w
  5085  0AF0  0671               	xorwf	_cuenta+1,w
  5086  0AF1  1D03               	skipz
  5087  0AF2  2AF5               	goto	u3445
  5088  0AF3  0854               	movf	_auxCuenta^(0+384),w
  5089  0AF4  0670               	xorwf	_cuenta,w
  5090  0AF5                     u3445:	
  5091  0AF5  1903               	skipnz
  5092  0AF6  2AF8               	goto	u3441
  5093  0AF7  2AF9               	goto	u3440
  5094  0AF8                     u3441:	
  5095  0AF8  2B19               	goto	l3129
  5096  0AF9                     u3440:	
  5097  0AF9                     l3123:	
  5098                           
  5099                           ;acciones.c: 25:         cuenta = auxCuenta;
  5100  0AF9  0855               	movf	(_auxCuenta+1)^(0+384),w
  5101  0AFA  00F1               	movwf	_cuenta+1
  5102  0AFB  0854               	movf	_auxCuenta^(0+384),w
  5103  0AFC  00F0               	movwf	_cuenta
  5104  0AFD                     l3125:	
  5105                           
  5106                           ;acciones.c: 27:         eliminarProd(productoIngresado);
  5107  0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  5108  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  5109  0AFF  085F               	movf	(_productoIngresado+1)^(0+128),w
  5110  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0B02  00AF               	movwf	eliminarProd@tp+1
  5113  0B03  1683               	bsf	3,5	;RP0=1, select bank1
  5114  0B04  1303               	bcf	3,6	;RP1=0, select bank1
  5115  0B05  085E               	movf	_productoIngresado^(0+128),w
  5116  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  5117  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  5118  0B08  00AE               	movwf	eliminarProd@tp
  5119  0B09  120A  158A  24B3  120A  158A  	fcall	_eliminarProd
  5120  0B0E                     l3127:	
  5121                           
  5122                           ;acciones.c: 28:         mostrarDigitos(cuenta);
  5123  0B0E  0871               	movf	_cuenta+1,w
  5124  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  5125  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  5126  0B11  00B5               	movwf	mostrarDigitos@num+1
  5127  0B12  0870               	movf	_cuenta,w
  5128  0B13  00B4               	movwf	mostrarDigitos@num
  5129  0B14  120A  158A  2715  120A  158A  	fcall	_mostrarDigitos
  5130  0B19                     l3129:	
  5131                           
  5132                           ;acciones.c: 30:     if (modoDebug){
  5133  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0B1B  086E               	movf	_modoDebug,w
  5136  0B1C  1903               	btfsc	3,2
  5137  0B1D  2B1F               	goto	u3451
  5138  0B1E  2B20               	goto	u3450
  5139  0B1F                     u3451:	
  5140  0B1F  2B29               	goto	l57
  5141  0B20                     u3450:	
  5142  0B20                     l3131:	
  5143                           
  5144                           ;acciones.c: 31:         envioTX("Producto cancelado");
  5145  0B20  30D3               	movlw	low (STR_2| (0+32768))
  5146  0B21  00A0               	movwf	envioTX@mensaje
  5147  0B22  3084               	movlw	high (STR_2| (0+32768))
  5148  0B23  00A1               	movwf	envioTX@mensaje+1
  5149  0B24  120A  158A  220A  120A  158A  	fcall	_envioTX
  5150  0B29                     l57:	
  5151  0B29  0008               	return
  5152  0B2A                     __end_of_accionesDeshacer:	
  5153                           
  5154                           	psect	text20
  5155  0CB3                     __ptext20:	
  5156 ;; *************** function _eliminarProd *****************
  5157 ;; Defined at:
  5158 ;;		line 47 in file "manejoProductos.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  tp              2   14[BANK0 ] short 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  i               2   19[BANK0 ] short 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5172 ;;      Params:         0       2       0       0       0
  5173 ;;      Locals:         0       2       0       0       0
  5174 ;;      Temps:          0       3       0       0       0
  5175 ;;      Totals:         0       7       0       0       0
  5176 ;;Total ram usage:        7 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    3
  5179 ;; This function calls:
  5180 ;;		_pow
  5181 ;; This function is called by:
  5182 ;;		_accionesDeshacer
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           
  5187                           ;psect for function _eliminarProd
  5188  0CB3                     _eliminarProd:	
  5189  0CB3                     l3015:	
  5190                           ;incstack = 0
  5191                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5192                           
  5193                           
  5194                           ;manejoProductos.c: 48:         for(short int i = 12; i>=0; i--) {
  5195  0CB3  300C               	movlw	12
  5196  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0CB6  00B3               	movwf	eliminarProd@i
  5199  0CB7  3000               	movlw	0
  5200  0CB8  00B4               	movwf	eliminarProd@i+1
  5201  0CB9                     l3021:	
  5202                           
  5203                           ;manejoProductos.c: 49:         if( tp >= 8*i) {
  5204  0CB9  0834               	movf	eliminarProd@i+1,w
  5205  0CBA  00B1               	movwf	??_eliminarProd+1
  5206  0CBB  0833               	movf	eliminarProd@i,w
  5207  0CBC  00B0               	movwf	??_eliminarProd
  5208  0CBD  1003               	clrc
  5209  0CBE  0DB0               	rlf	??_eliminarProd,f
  5210  0CBF  0DB1               	rlf	??_eliminarProd+1,f
  5211  0CC0  1003               	clrc
  5212  0CC1  0DB0               	rlf	??_eliminarProd,f
  5213  0CC2  0DB1               	rlf	??_eliminarProd+1,f
  5214  0CC3  1003               	clrc
  5215  0CC4  0DB0               	rlf	??_eliminarProd,f
  5216  0CC5  0DB1               	rlf	??_eliminarProd+1,f
  5217  0CC6  082F               	movf	eliminarProd@tp+1,w
  5218  0CC7  3A80               	xorlw	128
  5219  0CC8  00B2               	movwf	??_eliminarProd+2
  5220  0CC9  0831               	movf	??_eliminarProd+1,w
  5221  0CCA  3A80               	xorlw	128
  5222  0CCB  0232               	subwf	??_eliminarProd+2,w
  5223  0CCC  1D03               	skipz
  5224  0CCD  2CD0               	goto	u3335
  5225  0CCE  0830               	movf	??_eliminarProd,w
  5226  0CCF  022E               	subwf	eliminarProd@tp,w
  5227  0CD0                     u3335:	
  5228  0CD0  1C03               	skipc
  5229  0CD1  2CD3               	goto	u3331
  5230  0CD2  2CD4               	goto	u3330
  5231  0CD3                     u3331:	
  5232  0CD3  2D08               	goto	l3029
  5233  0CD4                     u3330:	
  5234  0CD4                     l3023:	
  5235                           
  5236                           ;manejoProductos.c: 51:             tp = tp - 8*i;
  5237  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  5238  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  5239  0CD6  0834               	movf	eliminarProd@i+1,w
  5240  0CD7  00B1               	movwf	??_eliminarProd+1
  5241  0CD8  0833               	movf	eliminarProd@i,w
  5242  0CD9  00B0               	movwf	??_eliminarProd
  5243  0CDA  1003               	clrc
  5244  0CDB  0DB0               	rlf	??_eliminarProd,f
  5245  0CDC  0DB1               	rlf	??_eliminarProd+1,f
  5246  0CDD  1003               	clrc
  5247  0CDE  0DB0               	rlf	??_eliminarProd,f
  5248  0CDF  0DB1               	rlf	??_eliminarProd+1,f
  5249  0CE0  1003               	clrc
  5250  0CE1  0DB0               	rlf	??_eliminarProd,f
  5251  0CE2  0DB1               	rlf	??_eliminarProd+1,f
  5252  0CE3  0830               	movf	??_eliminarProd,w
  5253  0CE4  022E               	subwf	eliminarProd@tp,w
  5254  0CE5  00AE               	movwf	eliminarProd@tp
  5255  0CE6  0831               	movf	??_eliminarProd+1,w
  5256  0CE7  1C03               	skipc
  5257  0CE8  0A31               	incf	??_eliminarProd+1,w
  5258  0CE9  022F               	subwf	eliminarProd@tp+1,w
  5259  0CEA  00AF               	movwf	eliminarProd@tp+1
  5260  0CEB                     l3025:	
  5261                           
  5262                           ;manejoProductos.c: 52:             prodIngresados[i] = prodIngresados[i] ^ pow(2,tp);
  5263  0CEB  0833               	movf	eliminarProd@i,w
  5264  0CEC  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5265  0CED  0084               	movwf	4
  5266  0CEE  3002               	movlw	2
  5267  0CEF  00A6               	movwf	pow@numero
  5268  0CF0  3000               	movlw	0
  5269  0CF1  00A7               	movwf	pow@numero+1
  5270  0CF2  082F               	movf	eliminarProd@tp+1,w
  5271  0CF3  00A9               	movwf	pow@potencia+1
  5272  0CF4  082E               	movf	eliminarProd@tp,w
  5273  0CF5  00A8               	movwf	pow@potencia
  5274  0CF6  120A  158A  2277  120A  158A  	fcall	_pow
  5275  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  5276  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  5277  0CFD  0826               	movf	?_pow,w
  5278  0CFE  1383               	bcf	3,7	;select IRP bank1
  5279  0CFF  0600               	xorwf	0,w
  5280  0D00  00B0               	movwf	??_eliminarProd
  5281  0D01  0833               	movf	eliminarProd@i,w
  5282  0D02  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5283  0D03  0084               	movwf	4
  5284  0D04  0830               	movf	??_eliminarProd,w
  5285  0D05  0080               	movwf	0
  5286  0D06                     l3027:	
  5287                           
  5288                           ;manejoProductos.c: 53:             i = 0;
  5289  0D06  01B3               	clrf	eliminarProd@i
  5290  0D07  01B4               	clrf	eliminarProd@i+1
  5291  0D08                     l3029:	
  5292                           
  5293                           ;manejoProductos.c: 56:     }
  5294  0D08  30FF               	movlw	255
  5295  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  5296  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  5297  0D0B  07B3               	addwf	eliminarProd@i,f
  5298  0D0C  1803               	skipnc
  5299  0D0D  0AB4               	incf	eliminarProd@i+1,f
  5300  0D0E  30FF               	movlw	255
  5301  0D0F  07B4               	addwf	eliminarProd@i+1,f
  5302  0D10                     l3031:	
  5303  0D10  1FB4               	btfss	eliminarProd@i+1,7
  5304  0D11  2D13               	goto	u3341
  5305  0D12  2D14               	goto	u3340
  5306  0D13                     u3341:	
  5307  0D13  2CB9               	goto	l3021
  5308  0D14                     u3340:	
  5309  0D14                     l349:	
  5310  0D14  0008               	return
  5311  0D15                     __end_of_eliminarProd:	
  5312                           
  5313                           	psect	text21
  5314  0A77                     __ptext21:	
  5315 ;; *************** function _pow *****************
  5316 ;; Defined at:
  5317 ;;		line 3 in file "manejoProductos.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  numero          2    6[BANK0 ] unsigned int 
  5320 ;;  potencia        2    8[BANK0 ] unsigned int 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  i               2   10[BANK0 ] int 
  5323 ;;  resultado       2   12[BANK0 ] unsigned int 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2    6[BANK0 ] unsigned int 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0, pclath, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5333 ;;      Params:         0       4       0       0       0
  5334 ;;      Locals:         0       4       0       0       0
  5335 ;;      Temps:          0       0       0       0       0
  5336 ;;      Totals:         0       8       0       0       0
  5337 ;;Total ram usage:        8 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    2
  5340 ;; This function calls:
  5341 ;;		___wmul
  5342 ;; This function is called by:
  5343 ;;		_ingresoProd
  5344 ;;		_verificarProd
  5345 ;;		_eliminarProd
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function _pow
  5351  0A77                     _pow:	
  5352  0A77                     l2689:	
  5353                           ;incstack = 0
  5354                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  5355                           
  5356                           
  5357                           ;manejoProductos.c: 4:     unsigned int resultado = 0;
  5358  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5359  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5360  0A79  01AC               	clrf	pow@resultado
  5361  0A7A  01AD               	clrf	pow@resultado+1
  5362                           
  5363                           ;manejoProductos.c: 6:     for (int i = 0; i <= potencia; i++){
  5364  0A7B  01AA               	clrf	pow@i
  5365  0A7C  01AB               	clrf	pow@i+1
  5366  0A7D  2AA2               	goto	l2699
  5367  0A7E                     l2691:	
  5368                           
  5369                           ;manejoProductos.c: 7:         if (i == 0){
  5370  0A7E  082A               	movf	pow@i,w
  5371  0A7F  042B               	iorwf	pow@i+1,w
  5372  0A80  1D03               	btfss	3,2
  5373  0A81  2A83               	goto	u2781
  5374  0A82  2A84               	goto	u2780
  5375  0A83                     u2781:	
  5376  0A83  2A89               	goto	l2695
  5377  0A84                     u2780:	
  5378  0A84                     l2693:	
  5379                           
  5380                           ;manejoProductos.c: 8:         resultado = 1;
  5381  0A84  3001               	movlw	1
  5382  0A85  00AC               	movwf	pow@resultado
  5383  0A86  3000               	movlw	0
  5384  0A87  00AD               	movwf	pow@resultado+1
  5385                           
  5386                           ;manejoProductos.c: 9:         }
  5387  0A88  2A9C               	goto	l2697
  5388  0A89                     l2695:	
  5389                           
  5390                           ;manejoProductos.c: 11:             resultado = resultado * numero;
  5391  0A89  082D               	movf	pow@resultado+1,w
  5392  0A8A  00A1               	movwf	___wmul@multiplier+1
  5393  0A8B  082C               	movf	pow@resultado,w
  5394  0A8C  00A0               	movwf	___wmul@multiplier
  5395  0A8D  0827               	movf	pow@numero+1,w
  5396  0A8E  00A3               	movwf	___wmul@multiplicand+1
  5397  0A8F  0826               	movf	pow@numero,w
  5398  0A90  00A2               	movwf	___wmul@multiplicand
  5399  0A91  120A  118A  23D9  120A  158A  	fcall	___wmul
  5400  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  5401  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  5402  0A98  0821               	movf	?___wmul+1,w
  5403  0A99  00AD               	movwf	pow@resultado+1
  5404  0A9A  0820               	movf	?___wmul,w
  5405  0A9B  00AC               	movwf	pow@resultado
  5406  0A9C                     l2697:	
  5407                           
  5408                           ;manejoProductos.c: 13:     }
  5409  0A9C  3001               	movlw	1
  5410  0A9D  07AA               	addwf	pow@i,f
  5411  0A9E  1803               	skipnc
  5412  0A9F  0AAB               	incf	pow@i+1,f
  5413  0AA0  3000               	movlw	0
  5414  0AA1  07AB               	addwf	pow@i+1,f
  5415  0AA2                     l2699:	
  5416  0AA2  082B               	movf	pow@i+1,w
  5417  0AA3  0229               	subwf	pow@potencia+1,w
  5418  0AA4  1D03               	skipz
  5419  0AA5  2AA8               	goto	u2795
  5420  0AA6  082A               	movf	pow@i,w
  5421  0AA7  0228               	subwf	pow@potencia,w
  5422  0AA8                     u2795:	
  5423  0AA8  1803               	skipnc
  5424  0AA9  2AAB               	goto	u2791
  5425  0AAA  2AAC               	goto	u2790
  5426  0AAB                     u2791:	
  5427  0AAB  2A7E               	goto	l2691
  5428  0AAC                     u2790:	
  5429  0AAC                     l2701:	
  5430                           
  5431                           ;manejoProductos.c: 14:     return resultado;
  5432  0AAC  082D               	movf	pow@resultado+1,w
  5433  0AAD  00A7               	movwf	?_pow+1
  5434  0AAE  082C               	movf	pow@resultado,w
  5435  0AAF  00A6               	movwf	?_pow
  5436  0AB0                     l330:	
  5437  0AB0  0008               	return
  5438  0AB1                     __end_of_pow:	
  5439                           
  5440                           	psect	text22
  5441  03D9                     __ptext22:	
  5442 ;; *************** function ___wmul *****************
  5443 ;; Defined at:
  5444 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5447 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  product         2    4[BANK0 ] unsigned int 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  2    0[BANK0 ] unsigned int 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5459 ;;      Params:         0       4       0       0       0
  5460 ;;      Locals:         0       2       0       0       0
  5461 ;;      Temps:          0       0       0       0       0
  5462 ;;      Totals:         0       6       0       0       0
  5463 ;;Total ram usage:        6 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_lecturaConsulta
  5470 ;;		_main
  5471 ;;		_pow
  5472 ;;		_agregarModificarPrecio
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function ___wmul
  5478  03D9                     ___wmul:	
  5479  03D9                     l2533:	
  5480                           ;incstack = 0
  5481                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5482                           
  5483  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  5484  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  5485  03DB  01A4               	clrf	___wmul@product
  5486  03DC  01A5               	clrf	___wmul@product+1
  5487  03DD                     l2535:	
  5488  03DD  1C20               	btfss	___wmul@multiplier,0
  5489  03DE  2BE0               	goto	u2471
  5490  03DF  2BE1               	goto	u2470
  5491  03E0                     u2471:	
  5492  03E0  2BE7               	goto	l543
  5493  03E1                     u2470:	
  5494  03E1                     l2537:	
  5495  03E1  0822               	movf	___wmul@multiplicand,w
  5496  03E2  07A4               	addwf	___wmul@product,f
  5497  03E3  1803               	skipnc
  5498  03E4  0AA5               	incf	___wmul@product+1,f
  5499  03E5  0823               	movf	___wmul@multiplicand+1,w
  5500  03E6  07A5               	addwf	___wmul@product+1,f
  5501  03E7                     l543:	
  5502  03E7  3001               	movlw	1
  5503  03E8                     u2485:	
  5504  03E8  1003               	clrc
  5505  03E9  0DA2               	rlf	___wmul@multiplicand,f
  5506  03EA  0DA3               	rlf	___wmul@multiplicand+1,f
  5507  03EB  3EFF               	addlw	-1
  5508  03EC  1D03               	skipz
  5509  03ED  2BE8               	goto	u2485
  5510  03EE                     l2539:	
  5511  03EE  3001               	movlw	1
  5512  03EF                     u2495:	
  5513  03EF  1003               	clrc
  5514  03F0  0CA1               	rrf	___wmul@multiplier+1,f
  5515  03F1  0CA0               	rrf	___wmul@multiplier,f
  5516  03F2  3EFF               	addlw	-1
  5517  03F3  1D03               	skipz
  5518  03F4  2BEF               	goto	u2495
  5519  03F5                     l2541:	
  5520  03F5  0820               	movf	___wmul@multiplier,w
  5521  03F6  0421               	iorwf	___wmul@multiplier+1,w
  5522  03F7  1D03               	btfss	3,2
  5523  03F8  2BFA               	goto	u2501
  5524  03F9  2BFB               	goto	u2500
  5525  03FA                     u2501:	
  5526  03FA  2BDD               	goto	l2535
  5527  03FB                     u2500:	
  5528  03FB                     l2543:	
  5529  03FB  0825               	movf	___wmul@product+1,w
  5530  03FC  00A1               	movwf	?___wmul+1
  5531  03FD  0824               	movf	___wmul@product,w
  5532  03FE  00A0               	movwf	?___wmul
  5533  03FF                     l545:	
  5534  03FF  0008               	return
  5535  0400                     __end_of___wmul:	
  5536                           
  5537                           	psect	text23
  5538  0F84                     __ptext23:	
  5539 ;; *************** function _accionesAceptar *****************
  5540 ;; Defined at:
  5541 ;;		line 4 in file "acciones.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  strLote        32    0[BANK1 ] unsigned char [32]
  5546 ;;  i               2   32[BANK1 ] short 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5556 ;;      Params:         0       0       0       0       0
  5557 ;;      Locals:         0       0      34       0       0
  5558 ;;      Temps:          0       4       0       0       0
  5559 ;;      Totals:         0       4      34       0       0
  5560 ;;Total ram usage:       38 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    3
  5563 ;; This function calls:
  5564 ;;		_bailenLeds
  5565 ;;		_envioTX
  5566 ;;		_mostrarDigitos
  5567 ;;		_sprintf
  5568 ;; This function is called by:
  5569 ;;		_main
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _accionesAceptar
  5575  0F84                     _accionesAceptar:	
  5576  0F84                     l3095:	
  5577                           ;incstack = 0
  5578                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5579                           
  5580                           
  5581                           ;acciones.c: 6:     ventasLote++;
  5582  0F84  3001               	movlw	1
  5583  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0F87  00CA               	movwf	??_accionesAceptar
  5586  0F88  084A               	movf	??_accionesAceptar,w
  5587  0F89  07F2               	addwf	_ventasLote,f
  5588  0F8A                     l3097:	
  5589                           
  5590                           ;acciones.c: 7:     montosLote+=cuenta;
  5591  0F8A  0870               	movf	_cuenta,w
  5592  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  5593  0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  5594  0F8D  07DA               	addwf	_montosLote^(0+128),f
  5595  0F8E  1803               	skipnc
  5596  0F8F  0ADB               	incf	(_montosLote+1)^(0+128),f
  5597  0F90  0871               	movf	_cuenta+1,w
  5598  0F91  07DB               	addwf	(_montosLote+1)^(0+128),f
  5599  0F92                     l3099:	
  5600                           
  5601                           ;acciones.c: 8:     cuenta = 0;
  5602  0F92  01F0               	clrf	_cuenta
  5603  0F93  01F1               	clrf	_cuenta+1
  5604  0F94                     l3101:	
  5605                           
  5606                           ;acciones.c: 9:     auxCuenta = 0;
  5607  0F94  1683               	bsf	3,5	;RP0=1, select bank3
  5608  0F95  1703               	bsf	3,6	;RP1=1, select bank3
  5609  0F96  01D4               	clrf	_auxCuenta^(0+384)
  5610  0F97  01D5               	clrf	(_auxCuenta+1)^(0+384)
  5611  0F98                     l3103:	
  5612                           
  5613                           ;acciones.c: 10:     for(short int i = 0; i < 13; i++){
  5614  0F98  1683               	bsf	3,5	;RP0=1, select bank1
  5615  0F99  1303               	bcf	3,6	;RP1=0, select bank1
  5616  0F9A  01C0               	clrf	accionesAceptar@i^(0+128)
  5617  0F9B  01C1               	clrf	(accionesAceptar@i+1)^(0+128)
  5618  0F9C                     l3109:	
  5619                           
  5620                           ;acciones.c: 11:         prodIngresados[i] = 0;
  5621  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  5622  0F9D  1303               	bcf	3,6	;RP1=0, select bank1
  5623  0F9E  0840               	movf	accionesAceptar@i^(0+128),w
  5624  0F9F  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5625  0FA0  0084               	movwf	4
  5626  0FA1  1383               	bcf	3,7	;select IRP bank1
  5627  0FA2  0180               	clrf	0
  5628  0FA3                     l3111:	
  5629                           
  5630                           ;acciones.c: 12:     }
  5631  0FA3  3001               	movlw	1
  5632  0FA4  07C0               	addwf	accionesAceptar@i^(0+128),f
  5633  0FA5  1803               	skipnc
  5634  0FA6  0AC1               	incf	(accionesAceptar@i+1)^(0+128),f
  5635  0FA7  3000               	movlw	0
  5636  0FA8  07C1               	addwf	(accionesAceptar@i+1)^(0+128),f
  5637  0FA9                     l3113:	
  5638  0FA9  0841               	movf	(accionesAceptar@i+1)^(0+128),w
  5639  0FAA  3A80               	xorlw	128
  5640  0FAB  00FF               	movwf	btemp+1
  5641  0FAC  3080               	movlw	128
  5642  0FAD  027F               	subwf	btemp+1,w
  5643  0FAE  1D03               	skipz
  5644  0FAF  2FB2               	goto	u3425
  5645  0FB0  300D               	movlw	13
  5646  0FB1  0240               	subwf	accionesAceptar@i^(0+128),w
  5647  0FB2                     u3425:	
  5648  0FB2  1C03               	skipc
  5649  0FB3  2FB5               	goto	u3421
  5650  0FB4  2FB6               	goto	u3420
  5651  0FB5                     u3421:	
  5652  0FB5  2F9C               	goto	l3109
  5653  0FB6                     u3420:	
  5654  0FB6                     l3115:	
  5655                           
  5656                           ;acciones.c: 13:     if(modoDebug){
  5657  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  5658  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  5659  0FB8  086E               	movf	_modoDebug,w
  5660  0FB9  1903               	btfsc	3,2
  5661  0FBA  2FBC               	goto	u3431
  5662  0FBB  2FBD               	goto	u3430
  5663  0FBC                     u3431:	
  5664  0FBC  2FEF               	goto	l51
  5665  0FBD                     u3430:	
  5666  0FBD                     l3117:	
  5667                           
  5668                           ;acciones.c: 14:         char strLote[32];;acciones.c: 16:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  5669  0FBD  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  5670  0FBE  00B4               	movwf	sprintf@sp
  5671  0FBF  3000               	movlw	0
  5672  0FC0  00B5               	movwf	sprintf@sp+1
  5673  0FC1  30F7               	movlw	low (STR_1| (0+32768))
  5674  0FC2  00B6               	movwf	sprintf@f
  5675  0FC3  3084               	movlw	high (STR_1| (0+32768))
  5676  0FC4  00B7               	movwf	sprintf@f+1
  5677  0FC5  0878               	movf	_nroLote,w
  5678  0FC6  00CA               	movwf	??_accionesAceptar
  5679  0FC7  01CB               	clrf	??_accionesAceptar+1
  5680  0FC8  084A               	movf	??_accionesAceptar,w
  5681  0FC9  00B8               	movwf	?_sprintf+4
  5682  0FCA  084B               	movf	??_accionesAceptar+1,w
  5683  0FCB  00B9               	movwf	?_sprintf+5
  5684  0FCC  0872               	movf	_ventasLote,w
  5685  0FCD  00CC               	movwf	??_accionesAceptar+2
  5686  0FCE  01CD               	clrf	??_accionesAceptar+3
  5687  0FCF  084C               	movf	??_accionesAceptar+2,w
  5688  0FD0  00BA               	movwf	?_sprintf+6
  5689  0FD1  084D               	movf	??_accionesAceptar+3,w
  5690  0FD2  00BB               	movwf	?_sprintf+7
  5691  0FD3  1683               	bsf	3,5	;RP0=1, select bank1
  5692  0FD4  1303               	bcf	3,6	;RP1=0, select bank1
  5693  0FD5  085B               	movf	(_montosLote+1)^(0+128),w
  5694  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  5695  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  5696  0FD8  00BD               	movwf	?_sprintf+9
  5697  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  5698  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  5699  0FDB  085A               	movf	_montosLote^(0+128),w
  5700  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  5701  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  5702  0FDE  00BC               	movwf	?_sprintf+8
  5703  0FDF  120A  118A  21D9  120A  158A  	fcall	_sprintf
  5704                           
  5705                           ;acciones.c: 17:         envioTX(strLote);
  5706  0FE4  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  5707  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  5708  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  5709  0FE7  00A0               	movwf	envioTX@mensaje
  5710  0FE8  3000               	movlw	0
  5711  0FE9  00A1               	movwf	envioTX@mensaje+1
  5712  0FEA  120A  158A  220A  120A  158A  	fcall	_envioTX
  5713  0FEF                     l51:	
  5714                           ;acciones.c: 18:     }
  5715                           
  5716                           
  5717                           ;acciones.c: 19:     mostrarDigitos(cuenta);
  5718  0FEF  0871               	movf	_cuenta+1,w
  5719  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  5720  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  5721  0FF2  00B5               	movwf	mostrarDigitos@num+1
  5722  0FF3  0870               	movf	_cuenta,w
  5723  0FF4  00B4               	movwf	mostrarDigitos@num
  5724  0FF5  120A  158A  2715  120A  158A  	fcall	_mostrarDigitos
  5725  0FFA                     l3119:	
  5726                           
  5727                           ;acciones.c: 20:     bailenLeds();
  5728  0FFA  120A  158A  23B9  120A  158A  	fcall	_bailenLeds
  5729  0FFF                     l52:	
  5730  0FFF  0008               	return
  5731  1000                     __end_of_accionesAceptar:	
  5732                           
  5733                           	psect	text24
  5734  01D9                     __ptext24:	
  5735 ;; *************** function _sprintf *****************
  5736 ;; Defined at:
  5737 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  sp              2   20[BANK0 ] PTR unsigned char 
  5740 ;;		 -> agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), lecturaConsulta@strLote(32), 
  5741 ;;		 -> consultaPrecio@mensaje(26), cierreDeLote@strLote(32), accionesPuertoSerial@mensaje(12), accionesAceptar@strLote(
      +32), 
  5742 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  5743 ;;		 -> STR_15(9), STR_14(10), STR_13(25), STR_12(17), 
  5744 ;;		 -> STR_9(19), STR_8(25), STR_5(24), STR_3(5), 
  5745 ;;		 -> STR_1(17), 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  tmpval          4    0        struct .
  5748 ;;  val             2   39[BANK0 ] unsigned int 
  5749 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  5750 ;;		 -> STR_16(7), ?_sprintf(2), codigoEntrada(10), 
  5751 ;;  len             2    0        unsigned int 
  5752 ;;  c               1   41[BANK0 ] unsigned char 
  5753 ;;  ap              1   36[BANK0 ] PTR void [1]
  5754 ;;		 -> ?_sprintf(2), 
  5755 ;;  prec            1   35[BANK0 ] char 
  5756 ;;  flag            1   34[BANK0 ] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  2   20[BANK0 ] int 
  5759 ;; Registers used:
  5760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5766 ;;      Params:         0      10       0       0       0
  5767 ;;      Locals:         0       8       0       0       0
  5768 ;;      Temps:          0       4       0       0       0
  5769 ;;      Totals:         0      22       0       0       0
  5770 ;;Total ram usage:       22 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    2
  5773 ;; This function calls:
  5774 ;;		___lwdiv
  5775 ;;		___lwmod
  5776 ;; This function is called by:
  5777 ;;		_accionesAceptar
  5778 ;;		_accionesPuertoSerial
  5779 ;;		_cierreDeLote
  5780 ;;		_consultaPrecio
  5781 ;;		_lecturaConsulta
  5782 ;;		_main
  5783 ;;		_agregarModificarPrecio
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function _sprintf
  5789  01D9                     _sprintf:	
  5790  01D9                     l2595:	
  5791                           ;incstack = 0
  5792                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5793                           
  5794                           
  5795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  5796  01D9  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  5797  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  5798  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  5799  01DC  00BE               	movwf	??_sprintf
  5800  01DD  083E               	movf	??_sprintf,w
  5801  01DE  00C4               	movwf	sprintf@ap
  5802                           
  5803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  5804  01DF  2B0B               	goto	l2661
  5805  01E0                     l2597:	
  5806                           
  5807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  5808  01E0  3025               	movlw	37
  5809  01E1  0649               	xorwf	sprintf@c,w
  5810  01E2  1903               	btfsc	3,2
  5811  01E3  29E5               	goto	u2641
  5812  01E4  29E6               	goto	u2640
  5813  01E5                     u2641:	
  5814  01E5  29F6               	goto	l2603
  5815  01E6                     u2640:	
  5816  01E6                     l2599:	
  5817                           
  5818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  5819  01E6  0849               	movf	sprintf@c,w
  5820  01E7  00BE               	movwf	??_sprintf
  5821  01E8  0834               	movf	sprintf@sp,w
  5822  01E9  0084               	movwf	4
  5823  01EA  1783               	bsf	3,7
  5824  01EB  1C35               	btfss	sprintf@sp+1,0
  5825  01EC  1383               	bcf	3,7
  5826  01ED  083E               	movf	??_sprintf,w
  5827  01EE  0080               	movwf	0
  5828  01EF                     l2601:	
  5829  01EF  3001               	movlw	1
  5830  01F0  07B4               	addwf	sprintf@sp,f
  5831  01F1  1803               	skipnc
  5832  01F2  0AB5               	incf	sprintf@sp+1,f
  5833  01F3  3000               	movlw	0
  5834  01F4  07B5               	addwf	sprintf@sp+1,f
  5835                           
  5836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  5837  01F5  2B0B               	goto	l2661
  5838  01F6                     l2603:	
  5839                           
  5840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  5841  01F6  01C2               	clrf	sprintf@flag
  5842                           
  5843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  5844  01F7  2A3A               	goto	l2621
  5845  01F8                     l2605:	
  5846                           
  5847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 760:     cp
      +                           = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  5848  01F8  0844               	movf	sprintf@ap,w
  5849  01F9  0084               	movwf	4
  5850  01FA  1383               	bcf	3,7	;select IRP bank0
  5851  01FB  0800               	movf	0,w
  5852  01FC  00C5               	movwf	sprintf@cp
  5853  01FD  3000               	movlw	0
  5854  01FE  00C6               	movwf	sprintf@cp+1
  5855  01FF                     l2607:	
  5856  01FF  3001               	movlw	1
  5857  0200  00BE               	movwf	??_sprintf
  5858  0201  083E               	movf	??_sprintf,w
  5859  0202  07C4               	addwf	sprintf@ap,f
  5860  0203                     l2609:	
  5861                           
  5862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 766:    if(
      +                          !cp)
  5863  0203  0845               	movf	sprintf@cp,w
  5864  0204  0446               	iorwf	sprintf@cp+1,w
  5865  0205  1D03               	btfss	3,2
  5866  0206  2A08               	goto	u2651
  5867  0207  2A09               	goto	u2650
  5868  0208                     u2651:	
  5869  0208  2A2B               	goto	l526
  5870  0209                     u2650:	
  5871  0209                     l2611:	
  5872                           
  5873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 767:     cp
      +                           = "(null)";
  5874  0209  301B               	movlw	low (STR_16| (0+32768))
  5875  020A  00C5               	movwf	sprintf@cp
  5876  020B  3085               	movlw	high (STR_16| (0+32768))
  5877  020C  00C6               	movwf	sprintf@cp+1
  5878  020D  2A2B               	goto	l526
  5879  020E                     l2613:	
  5880                           
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 804:     ((
      +                          *sp++ = (*cp++)));
  5882  020E  0846               	movf	sprintf@cp+1,w
  5883  020F  00FF               	movwf	btemp+1
  5884  0210  0845               	movf	sprintf@cp,w
  5885  0211  0084               	movwf	4
  5886  0212  120A  118A  2400  120A  118A  	fcall	stringtab
  5887  0217  00BE               	movwf	??_sprintf
  5888  0218  0834               	movf	sprintf@sp,w
  5889  0219  0084               	movwf	4
  5890  021A  1783               	bsf	3,7
  5891  021B  1C35               	btfss	sprintf@sp+1,0
  5892  021C  1383               	bcf	3,7
  5893  021D  083E               	movf	??_sprintf,w
  5894  021E  0080               	movwf	0
  5895  021F                     l2615:	
  5896  021F  3001               	movlw	1
  5897  0220  07C5               	addwf	sprintf@cp,f
  5898  0221  1803               	skipnc
  5899  0222  0AC6               	incf	sprintf@cp+1,f
  5900  0223  3000               	movlw	0
  5901  0224  07C6               	addwf	sprintf@cp+1,f
  5902  0225                     l2617:	
  5903  0225  3001               	movlw	1
  5904  0226  07B4               	addwf	sprintf@sp,f
  5905  0227  1803               	skipnc
  5906  0228  0AB5               	incf	sprintf@sp+1,f
  5907  0229  3000               	movlw	0
  5908  022A  07B5               	addwf	sprintf@sp+1,f
  5909  022B                     l526:	
  5910                           
  5911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 803:    whi
      +                          le(*cp)
  5912  022B  0846               	movf	sprintf@cp+1,w
  5913  022C  00FF               	movwf	btemp+1
  5914  022D  0845               	movf	sprintf@cp,w
  5915  022E  0084               	movwf	4
  5916  022F  120A  118A  2400  120A  118A  	fcall	stringtab
  5917  0234  3A00               	xorlw	0
  5918  0235  1D03               	skipz
  5919  0236  2A38               	goto	u2661
  5920  0237  2A39               	goto	u2660
  5921  0238                     u2661:	
  5922  0238  2A0E               	goto	l2613
  5923  0239                     u2660:	
  5924  0239  2B0B               	goto	l2661
  5925  023A                     l2621:	
  5926  023A  0837               	movf	sprintf@f+1,w
  5927  023B  00BF               	movwf	??_sprintf+1
  5928  023C  0836               	movf	sprintf@f,w
  5929  023D  00BE               	movwf	??_sprintf
  5930  023E  0AB6               	incf	sprintf@f,f
  5931  023F  1903               	skipnz
  5932  0240  0AB7               	incf	sprintf@f+1,f
  5933  0241  083F               	movf	??_sprintf+1,w
  5934  0242  00FF               	movwf	btemp+1
  5935  0243  083E               	movf	??_sprintf,w
  5936  0244  0084               	movwf	4
  5937  0245  120A  118A  2400  120A  118A  	fcall	stringtab
  5938  024A  00C9               	movwf	sprintf@c
  5939  024B  00C0               	movwf	??_sprintf+2
  5940  024C  01C1               	clrf	??_sprintf+3
  5941                           
  5942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5943                           ; Switch size 1, requested type "simple"
  5944                           ; Number of cases is 1, Range of values is 0 to 0
  5945                           ; switch strategies available:
  5946                           ; Name         Instructions Cycles
  5947                           ; simple_byte            4     3 (average)
  5948                           ; direct_byte           11     8 (fixed)
  5949                           ; jumptable            260     6 (fixed)
  5950                           ;	Chosen strategy is simple_byte
  5951  024D  0841               	movf	??_sprintf+3,w
  5952  024E  3A00               	xorlw	0	; case 0
  5953  024F  1903               	skipnz
  5954  0250  2A52               	goto	l3249
  5955  0251  2B0B               	goto	l2661
  5956  0252                     l3249:	
  5957                           
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 4, Range of values is 0 to 115
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte           13     7 (average)
  5963                           ; jumptable            260     6 (fixed)
  5964                           ;	Chosen strategy is simple_byte
  5965  0252  0840               	movf	??_sprintf+2,w
  5966  0253  3A00               	xorlw	0	; case 0
  5967  0254  1903               	skipnz
  5968  0255  2B23               	goto	l2663
  5969  0256  3A64               	xorlw	100	; case 100
  5970  0257  1903               	skipnz
  5971  0258  2A60               	goto	l2623
  5972  0259  3A0D               	xorlw	13	; case 105
  5973  025A  1903               	skipnz
  5974  025B  2A60               	goto	l2623
  5975  025C  3A1A               	xorlw	26	; case 115
  5976  025D  1903               	skipnz
  5977  025E  29F8               	goto	l2605
  5978  025F  2B0B               	goto	l2661
  5979  0260                     l2623:	
  5980                           
  5981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5982  0260  0844               	movf	sprintf@ap,w
  5983  0261  0084               	movwf	4
  5984  0262  1383               	bcf	3,7	;select IRP bank0
  5985  0263  0800               	movf	0,w
  5986  0264  00C7               	movwf	sprintf@val
  5987  0265  0A84               	incf	4,f
  5988  0266  0800               	movf	0,w
  5989  0267  00C8               	movwf	sprintf@val+1
  5990  0268                     l2625:	
  5991  0268  3002               	movlw	2
  5992  0269  00BE               	movwf	??_sprintf
  5993  026A  083E               	movf	??_sprintf,w
  5994  026B  07C4               	addwf	sprintf@ap,f
  5995  026C                     l2627:	
  5996                           
  5997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  5998  026C  1FC8               	btfss	sprintf@val+1,7
  5999  026D  2A6F               	goto	u2671
  6000  026E  2A70               	goto	u2670
  6001  026F                     u2671:	
  6002  026F  2A79               	goto	l2633
  6003  0270                     u2670:	
  6004  0270                     l2629:	
  6005                           
  6006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  6007  0270  3003               	movlw	3
  6008  0271  00BE               	movwf	??_sprintf
  6009  0272  083E               	movf	??_sprintf,w
  6010  0273  04C2               	iorwf	sprintf@flag,f
  6011  0274                     l2631:	
  6012                           
  6013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  6014  0274  09C7               	comf	sprintf@val,f
  6015  0275  09C8               	comf	sprintf@val+1,f
  6016  0276  0AC7               	incf	sprintf@val,f
  6017  0277  1903               	skipnz
  6018  0278  0AC8               	incf	sprintf@val+1,f
  6019  0279                     l2633:	
  6020                           
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6022  0279  01C9               	clrf	sprintf@c
  6023  027A  0AC9               	incf	sprintf@c,f
  6024  027B                     l2639:	
  6025                           
  6026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  6027  027B  0849               	movf	sprintf@c,w
  6028  027C  00BE               	movwf	??_sprintf
  6029  027D  073E               	addwf	??_sprintf,w
  6030  027E  3E12               	addlw	low (_dpowers| (0+32768))
  6031  027F  0084               	movwf	4
  6032  0280  3084               	movlw	high (_dpowers| (0+32768))
  6033  0281  1803               	skipnc
  6034  0282  3E01               	addlw	1
  6035  0283  00FF               	movwf	btemp+1
  6036  0284  120A  118A  2400  120A  118A  	fcall	stringtab
  6037  0289  00BF               	movwf	??_sprintf+1
  6038  028A  120A  118A  2400  120A  118A  	fcall	stringtab
  6039  028F  00C0               	movwf	??_sprintf+2
  6040  0290  0840               	movf	??_sprintf+2,w
  6041  0291  0248               	subwf	sprintf@val+1,w
  6042  0292  1D03               	skipz
  6043  0293  2A96               	goto	u2685
  6044  0294  083F               	movf	??_sprintf+1,w
  6045  0295  0247               	subwf	sprintf@val,w
  6046  0296                     u2685:	
  6047  0296  1803               	skipnc
  6048  0297  2A99               	goto	u2681
  6049  0298  2A9A               	goto	u2680
  6050  0299                     u2681:	
  6051  0299  2A9B               	goto	l2643
  6052  029A                     u2680:	
  6053  029A  2AA5               	goto	l2645
  6054  029B                     l2643:	
  6055  029B  3001               	movlw	1
  6056  029C  00BE               	movwf	??_sprintf
  6057  029D  083E               	movf	??_sprintf,w
  6058  029E  07C9               	addwf	sprintf@c,f
  6059  029F  3005               	movlw	5
  6060  02A0  0649               	xorwf	sprintf@c,w
  6061  02A1  1D03               	btfss	3,2
  6062  02A2  2AA4               	goto	u2691
  6063  02A3  2AA5               	goto	u2690
  6064  02A4                     u2691:	
  6065  02A4  2A7B               	goto	l2639
  6066  02A5                     u2690:	
  6067  02A5                     l2645:	
  6068                           
  6069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  6070  02A5  0842               	movf	sprintf@flag,w
  6071  02A6  3903               	andlw	3
  6072  02A7  1903               	btfsc	3,2
  6073  02A8  2AAA               	goto	u2701
  6074  02A9  2AAB               	goto	u2700
  6075  02AA                     u2701:	
  6076  02AA  2ABA               	goto	l2651
  6077  02AB                     u2700:	
  6078  02AB                     l2647:	
  6079                           
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  6081  02AB  302D               	movlw	45
  6082  02AC  00BE               	movwf	??_sprintf
  6083  02AD  0834               	movf	sprintf@sp,w
  6084  02AE  0084               	movwf	4
  6085  02AF  1783               	bsf	3,7
  6086  02B0  1C35               	btfss	sprintf@sp+1,0
  6087  02B1  1383               	bcf	3,7
  6088  02B2  083E               	movf	??_sprintf,w
  6089  02B3  0080               	movwf	0
  6090  02B4                     l2649:	
  6091  02B4  3001               	movlw	1
  6092  02B5  07B4               	addwf	sprintf@sp,f
  6093  02B6  1803               	skipnc
  6094  02B7  0AB5               	incf	sprintf@sp+1,f
  6095  02B8  3000               	movlw	0
  6096  02B9  07B5               	addwf	sprintf@sp+1,f
  6097  02BA                     l2651:	
  6098                           
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  6100  02BA  0849               	movf	sprintf@c,w
  6101  02BB  00BE               	movwf	??_sprintf
  6102  02BC  083E               	movf	??_sprintf,w
  6103  02BD  00C3               	movwf	sprintf@prec
  6104                           
  6105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6106  02BE  2B02               	goto	l2659
  6107  02BF                     l2653:	
  6108                           
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  6110  02BF  300A               	movlw	10
  6111  02C0  00AE               	movwf	___lwmod@divisor
  6112  02C1  3000               	movlw	0
  6113  02C2  00AF               	movwf	___lwmod@divisor+1
  6114  02C3  0843               	movf	sprintf@prec,w
  6115  02C4  00BE               	movwf	??_sprintf
  6116  02C5  073E               	addwf	??_sprintf,w
  6117  02C6  3E12               	addlw	low (_dpowers| (0+32768))
  6118  02C7  0084               	movwf	4
  6119  02C8  3084               	movlw	high (_dpowers| (0+32768))
  6120  02C9  1803               	skipnc
  6121  02CA  3E01               	addlw	1
  6122  02CB  00FF               	movwf	btemp+1
  6123  02CC  120A  118A  2400  120A  118A  	fcall	stringtab
  6124  02D1  00A6               	movwf	___lwdiv@divisor
  6125  02D2  120A  118A  2400  120A  118A  	fcall	stringtab
  6126  02D7  00A7               	movwf	___lwdiv@divisor+1
  6127  02D8  0848               	movf	sprintf@val+1,w
  6128  02D9  00A9               	movwf	___lwdiv@dividend+1
  6129  02DA  0847               	movf	sprintf@val,w
  6130  02DB  00A8               	movwf	___lwdiv@dividend
  6131  02DC  120A  158A  232A  120A  118A  	fcall	___lwdiv
  6132  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  6133  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  6134  02E3  0827               	movf	?___lwdiv+1,w
  6135  02E4  00B1               	movwf	___lwmod@dividend+1
  6136  02E5  0826               	movf	?___lwdiv,w
  6137  02E6  00B0               	movwf	___lwmod@dividend
  6138  02E7  120A  158A  22B1  120A  118A  	fcall	___lwmod
  6139  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  6140  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  6141  02EE  082E               	movf	?___lwmod,w
  6142  02EF  3E30               	addlw	48
  6143  02F0  00BF               	movwf	??_sprintf+1
  6144  02F1  083F               	movf	??_sprintf+1,w
  6145  02F2  00C9               	movwf	sprintf@c
  6146  02F3                     l2655:	
  6147                           
  6148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  6149  02F3  0849               	movf	sprintf@c,w
  6150  02F4  00BE               	movwf	??_sprintf
  6151  02F5  0834               	movf	sprintf@sp,w
  6152  02F6  0084               	movwf	4
  6153  02F7  1783               	bsf	3,7
  6154  02F8  1C35               	btfss	sprintf@sp+1,0
  6155  02F9  1383               	bcf	3,7
  6156  02FA  083E               	movf	??_sprintf,w
  6157  02FB  0080               	movwf	0
  6158  02FC                     l2657:	
  6159  02FC  3001               	movlw	1
  6160  02FD  07B4               	addwf	sprintf@sp,f
  6161  02FE  1803               	skipnc
  6162  02FF  0AB5               	incf	sprintf@sp+1,f
  6163  0300  3000               	movlw	0
  6164  0301  07B5               	addwf	sprintf@sp+1,f
  6165  0302                     l2659:	
  6166                           
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6168  0302  30FF               	movlw	255
  6169  0303  00BE               	movwf	??_sprintf
  6170  0304  083E               	movf	??_sprintf,w
  6171  0305  07C3               	addwf	sprintf@prec,f
  6172  0306  0A43               	incf	sprintf@prec,w
  6173  0307  1D03               	btfss	3,2
  6174  0308  2B0A               	goto	u2711
  6175  0309  2B0B               	goto	u2710
  6176  030A                     u2711:	
  6177  030A  2ABF               	goto	l2653
  6178  030B                     u2710:	
  6179  030B                     l2661:	
  6180                           
  6181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6182  030B  0837               	movf	sprintf@f+1,w
  6183  030C  00BF               	movwf	??_sprintf+1
  6184  030D  0836               	movf	sprintf@f,w
  6185  030E  00BE               	movwf	??_sprintf
  6186  030F  0AB6               	incf	sprintf@f,f
  6187  0310  1903               	skipnz
  6188  0311  0AB7               	incf	sprintf@f+1,f
  6189  0312  083F               	movf	??_sprintf+1,w
  6190  0313  00FF               	movwf	btemp+1
  6191  0314  083E               	movf	??_sprintf,w
  6192  0315  0084               	movwf	4
  6193  0316  120A  118A  2400  120A  118A  	fcall	stringtab
  6194  031B  00C0               	movwf	??_sprintf+2
  6195  031C  0840               	movf	??_sprintf+2,w
  6196  031D  00C9               	movwf	sprintf@c
  6197  031E  0849               	movf	sprintf@c,w
  6198  031F  1D03               	btfss	3,2
  6199  0320  2B22               	goto	u2721
  6200  0321  2B23               	goto	u2720
  6201  0322                     u2721:	
  6202  0322  29E0               	goto	l2597
  6203  0323                     u2720:	
  6204  0323                     l2663:	
  6205                           
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  6207  0323  0834               	movf	sprintf@sp,w
  6208  0324  0084               	movwf	4
  6209  0325  1783               	bsf	3,7
  6210  0326  1C35               	btfss	sprintf@sp+1,0
  6211  0327  1383               	bcf	3,7
  6212  0328  0180               	clrf	0
  6213  0329                     l539:	
  6214  0329  0008               	return
  6215  032A                     __end_of_sprintf:	
  6216                           
  6217                           	psect	text25
  6218  0F15                     __ptext25:	
  6219 ;; *************** function _mostrarDigitos *****************
  6220 ;; Defined at:
  6221 ;;		line 17 in file "mostrarInicializar.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  num             2   20[BANK0 ] unsigned int 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6235 ;;      Params:         0       2       0       0       0
  6236 ;;      Locals:         0       2       0       0       0
  6237 ;;      Temps:          0       0       0       0       0
  6238 ;;      Totals:         0       4       0       0       0
  6239 ;;Total ram usage:        4 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    2
  6242 ;; This function calls:
  6243 ;;		___lwdiv
  6244 ;;		___lwmod
  6245 ;; This function is called by:
  6246 ;;		_accionesAceptar
  6247 ;;		_accionesDeshacer
  6248 ;;		_lecturaEtiqueta
  6249 ;;		_main
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           
  6254                           ;psect for function _mostrarDigitos
  6255  0F15                     _mostrarDigitos:	
  6256  0F15                     l2911:	
  6257                           ;incstack = 0
  6258                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6259                           
  6260                           
  6261                           ;mostrarInicializar.c: 19:     PORTB = BMS[num/100];
  6262  0F15  3064               	movlw	100
  6263  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  6264  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  6265  0F18  00A6               	movwf	___lwdiv@divisor
  6266  0F19  3000               	movlw	0
  6267  0F1A  00A7               	movwf	___lwdiv@divisor+1
  6268  0F1B  0835               	movf	mostrarDigitos@num+1,w
  6269  0F1C  00A9               	movwf	___lwdiv@dividend+1
  6270  0F1D  0834               	movf	mostrarDigitos@num,w
  6271  0F1E  00A8               	movwf	___lwdiv@dividend
  6272  0F1F  120A  158A  232A  120A  158A  	fcall	___lwdiv
  6273  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  6274  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  6275  0F26  0826               	movf	?___lwdiv,w
  6276  0F27  3E1C               	addlw	low (_BMS| (0+32768))
  6277  0F28  0084               	movwf	4
  6278  0F29  3084               	movlw	high (_BMS| (0+32768))
  6279  0F2A  1803               	skipnc
  6280  0F2B  3E01               	addlw	1
  6281  0F2C  00FF               	movwf	btemp+1
  6282  0F2D  120A  118A  2400  120A  158A  	fcall	stringtab
  6283  0F32  0086               	movwf	6	;volatile
  6284  0F33                     l2913:	
  6285                           
  6286                           ;mostrarInicializar.c: 20:     PORTB = PORTB | ((num%100)/10);
  6287  0F33  300A               	movlw	10
  6288  0F34  00A6               	movwf	___lwdiv@divisor
  6289  0F35  3000               	movlw	0
  6290  0F36  00A7               	movwf	___lwdiv@divisor+1
  6291  0F37  0835               	movf	mostrarDigitos@num+1,w
  6292  0F38  00B1               	movwf	___lwmod@dividend+1
  6293  0F39  0834               	movf	mostrarDigitos@num,w
  6294  0F3A  00B0               	movwf	___lwmod@dividend
  6295  0F3B  3064               	movlw	100
  6296  0F3C  00AE               	movwf	___lwmod@divisor
  6297  0F3D  3000               	movlw	0
  6298  0F3E  00AF               	movwf	___lwmod@divisor+1
  6299  0F3F  120A  158A  22B1  120A  158A  	fcall	___lwmod
  6300  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  6301  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  6302  0F46  082F               	movf	?___lwmod+1,w
  6303  0F47  00A9               	movwf	___lwdiv@dividend+1
  6304  0F48  082E               	movf	?___lwmod,w
  6305  0F49  00A8               	movwf	___lwdiv@dividend
  6306  0F4A  120A  158A  232A  120A  158A  	fcall	___lwdiv
  6307  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  6308  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  6309  0F51  0826               	movf	?___lwdiv,w
  6310  0F52  0406               	iorwf	6,w
  6311  0F53  0086               	movwf	6	;volatile
  6312  0F54                     l2915:	
  6313                           
  6314                           ;mostrarInicializar.c: 21:     PORTD = BMS[(num%100)%10];
  6315  0F54  0835               	movf	mostrarDigitos@num+1,w
  6316  0F55  00B1               	movwf	___lwmod@dividend+1
  6317  0F56  0834               	movf	mostrarDigitos@num,w
  6318  0F57  00B0               	movwf	___lwmod@dividend
  6319  0F58  3064               	movlw	100
  6320  0F59  00AE               	movwf	___lwmod@divisor
  6321  0F5A  3000               	movlw	0
  6322  0F5B  00AF               	movwf	___lwmod@divisor+1
  6323  0F5C  120A  158A  22B1  120A  158A  	fcall	___lwmod
  6324  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  6325  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  6326  0F63  082F               	movf	?___lwmod+1,w
  6327  0F64  00B7               	movwf	_mostrarDigitos$1051+1
  6328  0F65  082E               	movf	?___lwmod,w
  6329  0F66  00B6               	movwf	_mostrarDigitos$1051
  6330                           
  6331                           ;mostrarInicializar.c: 21:     PORTD = BMS[(num%100)%10];
  6332  0F67  300A               	movlw	10
  6333  0F68  00AE               	movwf	___lwmod@divisor
  6334  0F69  3000               	movlw	0
  6335  0F6A  00AF               	movwf	___lwmod@divisor+1
  6336  0F6B  0837               	movf	_mostrarDigitos$1051+1,w
  6337  0F6C  00B1               	movwf	___lwmod@dividend+1
  6338  0F6D  0836               	movf	_mostrarDigitos$1051,w
  6339  0F6E  00B0               	movwf	___lwmod@dividend
  6340  0F6F  120A  158A  22B1  120A  158A  	fcall	___lwmod
  6341  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  6342  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  6343  0F76  082E               	movf	?___lwmod,w
  6344  0F77  3E1C               	addlw	low (_BMS| (0+32768))
  6345  0F78  0084               	movwf	4
  6346  0F79  3084               	movlw	high (_BMS| (0+32768))
  6347  0F7A  1803               	skipnc
  6348  0F7B  3E01               	addlw	1
  6349  0F7C  00FF               	movwf	btemp+1
  6350  0F7D  120A  118A  2400  120A  158A  	fcall	stringtab
  6351  0F82  0088               	movwf	8	;volatile
  6352  0F83                     l371:	
  6353  0F83  0008               	return
  6354  0F84                     __end_of_mostrarDigitos:	
  6355                           
  6356                           	psect	text26
  6357  0AB1                     __ptext26:	
  6358 ;; *************** function ___lwmod *****************
  6359 ;; Defined at:
  6360 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  divisor         2   14[BANK0 ] unsigned int 
  6363 ;;  dividend        2   16[BANK0 ] unsigned int 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  counter         1   19[BANK0 ] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  2   14[BANK0 ] unsigned int 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6375 ;;      Params:         0       4       0       0       0
  6376 ;;      Locals:         0       1       0       0       0
  6377 ;;      Temps:          0       1       0       0       0
  6378 ;;      Totals:         0       6       0       0       0
  6379 ;;Total ram usage:        6 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    1
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;;		_mostrarDigitos
  6387 ;;		_sprintf
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function ___lwmod
  6393  0AB1                     ___lwmod:	
  6394  0AB1                     l2573:	
  6395                           ;incstack = 0
  6396                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6397                           
  6398  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  6400  0AB3  082E               	movf	___lwmod@divisor,w
  6401  0AB4  042F               	iorwf	___lwmod@divisor+1,w
  6402  0AB5  1903               	btfsc	3,2
  6403  0AB6  2AB8               	goto	u2581
  6404  0AB7  2AB9               	goto	u2580
  6405  0AB8                     u2581:	
  6406  0AB8  2AE8               	goto	l2591
  6407  0AB9                     u2580:	
  6408  0AB9                     l2575:	
  6409  0AB9  01B3               	clrf	___lwmod@counter
  6410  0ABA  0AB3               	incf	___lwmod@counter,f
  6411  0ABB  2AC7               	goto	l2581
  6412  0ABC                     l2577:	
  6413  0ABC  3001               	movlw	1
  6414  0ABD                     u2595:	
  6415  0ABD  1003               	clrc
  6416  0ABE  0DAE               	rlf	___lwmod@divisor,f
  6417  0ABF  0DAF               	rlf	___lwmod@divisor+1,f
  6418  0AC0  3EFF               	addlw	-1
  6419  0AC1  1D03               	skipz
  6420  0AC2  2ABD               	goto	u2595
  6421  0AC3                     l2579:	
  6422  0AC3  3001               	movlw	1
  6423  0AC4  00B2               	movwf	??___lwmod
  6424  0AC5  0832               	movf	??___lwmod,w
  6425  0AC6  07B3               	addwf	___lwmod@counter,f
  6426  0AC7                     l2581:	
  6427  0AC7  1FAF               	btfss	___lwmod@divisor+1,7
  6428  0AC8  2ACA               	goto	u2601
  6429  0AC9  2ACB               	goto	u2600
  6430  0ACA                     u2601:	
  6431  0ACA  2ABC               	goto	l2577
  6432  0ACB                     u2600:	
  6433  0ACB                     l2583:	
  6434  0ACB  082F               	movf	___lwmod@divisor+1,w
  6435  0ACC  0231               	subwf	___lwmod@dividend+1,w
  6436  0ACD  1D03               	skipz
  6437  0ACE  2AD1               	goto	u2615
  6438  0ACF  082E               	movf	___lwmod@divisor,w
  6439  0AD0  0230               	subwf	___lwmod@dividend,w
  6440  0AD1                     u2615:	
  6441  0AD1  1C03               	skipc
  6442  0AD2  2AD4               	goto	u2611
  6443  0AD3  2AD5               	goto	u2610
  6444  0AD4                     u2611:	
  6445  0AD4  2ADB               	goto	l2587
  6446  0AD5                     u2610:	
  6447  0AD5                     l2585:	
  6448  0AD5  082E               	movf	___lwmod@divisor,w
  6449  0AD6  02B0               	subwf	___lwmod@dividend,f
  6450  0AD7  082F               	movf	___lwmod@divisor+1,w
  6451  0AD8  1C03               	skipc
  6452  0AD9  03B1               	decf	___lwmod@dividend+1,f
  6453  0ADA  02B1               	subwf	___lwmod@dividend+1,f
  6454  0ADB                     l2587:	
  6455  0ADB  3001               	movlw	1
  6456  0ADC                     u2625:	
  6457  0ADC  1003               	clrc
  6458  0ADD  0CAF               	rrf	___lwmod@divisor+1,f
  6459  0ADE  0CAE               	rrf	___lwmod@divisor,f
  6460  0ADF  3EFF               	addlw	-1
  6461  0AE0  1D03               	skipz
  6462  0AE1  2ADC               	goto	u2625
  6463  0AE2                     l2589:	
  6464  0AE2  3001               	movlw	1
  6465  0AE3  02B3               	subwf	___lwmod@counter,f
  6466  0AE4  1D03               	btfss	3,2
  6467  0AE5  2AE7               	goto	u2631
  6468  0AE6  2AE8               	goto	u2630
  6469  0AE7                     u2631:	
  6470  0AE7  2ACB               	goto	l2583
  6471  0AE8                     u2630:	
  6472  0AE8                     l2591:	
  6473  0AE8  0831               	movf	___lwmod@dividend+1,w
  6474  0AE9  00AF               	movwf	?___lwmod+1
  6475  0AEA  0830               	movf	___lwmod@dividend,w
  6476  0AEB  00AE               	movwf	?___lwmod
  6477  0AEC                     l825:	
  6478  0AEC  0008               	return
  6479  0AED                     __end_of___lwmod:	
  6480                           
  6481                           	psect	text27
  6482  0B2A                     __ptext27:	
  6483 ;; *************** function ___lwdiv *****************
  6484 ;; Defined at:
  6485 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  divisor         2    6[BANK0 ] unsigned int 
  6488 ;;  dividend        2    8[BANK0 ] unsigned int 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  quotient        2   12[BANK0 ] unsigned int 
  6491 ;;  counter         1   11[BANK0 ] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2    6[BANK0 ] unsigned int 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6501 ;;      Params:         0       4       0       0       0
  6502 ;;      Locals:         0       3       0       0       0
  6503 ;;      Temps:          0       1       0       0       0
  6504 ;;      Totals:         0       8       0       0       0
  6505 ;;Total ram usage:        8 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_main
  6512 ;;		_mostrarDigitos
  6513 ;;		_sprintf
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           
  6518                           ;psect for function ___lwdiv
  6519  0B2A                     ___lwdiv:	
  6520  0B2A                     l2547:	
  6521                           ;incstack = 0
  6522                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6523                           
  6524  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  6525  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  6526  0B2C  01AC               	clrf	___lwdiv@quotient
  6527  0B2D  01AD               	clrf	___lwdiv@quotient+1
  6528  0B2E                     l2549:	
  6529  0B2E  0826               	movf	___lwdiv@divisor,w
  6530  0B2F  0427               	iorwf	___lwdiv@divisor+1,w
  6531  0B30  1903               	btfsc	3,2
  6532  0B31  2B33               	goto	u2511
  6533  0B32  2B34               	goto	u2510
  6534  0B33                     u2511:	
  6535  0B33  2B6B               	goto	l2569
  6536  0B34                     u2510:	
  6537  0B34                     l2551:	
  6538  0B34  01AB               	clrf	___lwdiv@counter
  6539  0B35  0AAB               	incf	___lwdiv@counter,f
  6540  0B36  2B42               	goto	l2557
  6541  0B37                     l2553:	
  6542  0B37  3001               	movlw	1
  6543  0B38                     u2525:	
  6544  0B38  1003               	clrc
  6545  0B39  0DA6               	rlf	___lwdiv@divisor,f
  6546  0B3A  0DA7               	rlf	___lwdiv@divisor+1,f
  6547  0B3B  3EFF               	addlw	-1
  6548  0B3C  1D03               	skipz
  6549  0B3D  2B38               	goto	u2525
  6550  0B3E                     l2555:	
  6551  0B3E  3001               	movlw	1
  6552  0B3F  00AA               	movwf	??___lwdiv
  6553  0B40  082A               	movf	??___lwdiv,w
  6554  0B41  07AB               	addwf	___lwdiv@counter,f
  6555  0B42                     l2557:	
  6556  0B42  1FA7               	btfss	___lwdiv@divisor+1,7
  6557  0B43  2B45               	goto	u2531
  6558  0B44  2B46               	goto	u2530
  6559  0B45                     u2531:	
  6560  0B45  2B37               	goto	l2553
  6561  0B46                     u2530:	
  6562  0B46                     l2559:	
  6563  0B46  3001               	movlw	1
  6564  0B47                     u2545:	
  6565  0B47  1003               	clrc
  6566  0B48  0DAC               	rlf	___lwdiv@quotient,f
  6567  0B49  0DAD               	rlf	___lwdiv@quotient+1,f
  6568  0B4A  3EFF               	addlw	-1
  6569  0B4B  1D03               	skipz
  6570  0B4C  2B47               	goto	u2545
  6571  0B4D  0827               	movf	___lwdiv@divisor+1,w
  6572  0B4E  0229               	subwf	___lwdiv@dividend+1,w
  6573  0B4F  1D03               	skipz
  6574  0B50  2B53               	goto	u2555
  6575  0B51  0826               	movf	___lwdiv@divisor,w
  6576  0B52  0228               	subwf	___lwdiv@dividend,w
  6577  0B53                     u2555:	
  6578  0B53  1C03               	skipc
  6579  0B54  2B56               	goto	u2551
  6580  0B55  2B57               	goto	u2550
  6581  0B56                     u2551:	
  6582  0B56  2B5E               	goto	l2565
  6583  0B57                     u2550:	
  6584  0B57                     l2561:	
  6585  0B57  0826               	movf	___lwdiv@divisor,w
  6586  0B58  02A8               	subwf	___lwdiv@dividend,f
  6587  0B59  0827               	movf	___lwdiv@divisor+1,w
  6588  0B5A  1C03               	skipc
  6589  0B5B  03A9               	decf	___lwdiv@dividend+1,f
  6590  0B5C  02A9               	subwf	___lwdiv@dividend+1,f
  6591  0B5D                     l2563:	
  6592  0B5D  142C               	bsf	___lwdiv@quotient,0
  6593  0B5E                     l2565:	
  6594  0B5E  3001               	movlw	1
  6595  0B5F                     u2565:	
  6596  0B5F  1003               	clrc
  6597  0B60  0CA7               	rrf	___lwdiv@divisor+1,f
  6598  0B61  0CA6               	rrf	___lwdiv@divisor,f
  6599  0B62  3EFF               	addlw	-1
  6600  0B63  1D03               	skipz
  6601  0B64  2B5F               	goto	u2565
  6602  0B65                     l2567:	
  6603  0B65  3001               	movlw	1
  6604  0B66  02AB               	subwf	___lwdiv@counter,f
  6605  0B67  1D03               	btfss	3,2
  6606  0B68  2B6A               	goto	u2571
  6607  0B69  2B6B               	goto	u2570
  6608  0B6A                     u2571:	
  6609  0B6A  2B46               	goto	l2559
  6610  0B6B                     u2570:	
  6611  0B6B                     l2569:	
  6612  0B6B  082D               	movf	___lwdiv@quotient+1,w
  6613  0B6C  00A7               	movwf	?___lwdiv+1
  6614  0B6D  082C               	movf	___lwdiv@quotient,w
  6615  0B6E  00A6               	movwf	?___lwdiv
  6616  0B6F                     l815:	
  6617  0B6F  0008               	return
  6618  0B70                     __end_of___lwdiv:	
  6619                           
  6620                           	psect	text28
  6621  0A0A                     __ptext28:	
  6622 ;; *************** function _envioTX *****************
  6623 ;; Defined at:
  6624 ;;		line 39 in file "mostrarInicializar.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  mensaje         2    0[BANK0 ] PTR unsigned char 
  6627 ;;		 -> agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), lecturaConsulta@strLote(32), 
  6628 ;;		 -> STR_11(20), STR_10(17), consultaPrecio@mensaje(26), STR_7(40), 
  6629 ;;		 -> STR_6(25), cierreDeLote@strLote(32), STR_4(20), accionesPuertoSerial@mensaje(12), 
  6630 ;;		 -> STR_2(19), accionesAceptar@strLote(32), 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  i               2    5[BANK0 ] int 
  6633 ;;  transmitir      1    7[BANK0 ] unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6643 ;;      Params:         0       2       0       0       0
  6644 ;;      Locals:         0       3       0       0       0
  6645 ;;      Temps:          0       3       0       0       0
  6646 ;;      Totals:         0       8       0       0       0
  6647 ;;Total ram usage:        8 bytes
  6648 ;; Hardware stack levels used:    2
  6649 ;; Hardware stack levels required when called:    1
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_accionesAceptar
  6654 ;;		_accionesDeshacer
  6655 ;;		_accionesPuertoSerial
  6656 ;;		_lecturaEtiqueta
  6657 ;;		_cierreDeLote
  6658 ;;		_lecturaMas
  6659 ;;		_lecturaMenos
  6660 ;;		_consultaPrecio
  6661 ;;		_lecturaConsulta
  6662 ;;		_main
  6663 ;;		_agregarModificarPrecio
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _envioTX
  6669  0A0A                     _envioTX:	
  6670  0A0A                     l2671:	
  6671                           ;incstack = 0
  6672                           ; Regs used in _envioTX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6673                           
  6674                           
  6675                           ;mostrarInicializar.c: 40:     int i = 0;
  6676  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  6677  0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  6678  0A0C  01A5               	clrf	envioTX@i
  6679  0A0D  01A6               	clrf	envioTX@i+1
  6680  0A0E                     l2673:	
  6681                           
  6682                           ;mostrarInicializar.c: 41:     char transmitir=1;
  6683  0A0E  01A7               	clrf	envioTX@transmitir
  6684  0A0F  0AA7               	incf	envioTX@transmitir,f
  6685                           
  6686                           ;mostrarInicializar.c: 42:  while(transmitir){
  6687  0A10  2A3A               	goto	l2683
  6688  0A11                     l2675:	
  6689                           
  6690                           ;mostrarInicializar.c: 43:   TXREG = mensaje[i];
  6691  0A11  0825               	movf	envioTX@i,w
  6692  0A12  0720               	addwf	envioTX@mensaje,w
  6693  0A13  00A3               	movwf	??_envioTX+1
  6694  0A14  0821               	movf	envioTX@mensaje+1,w
  6695  0A15  00A2               	movwf	??_envioTX
  6696  0A16  1803               	skipnc
  6697  0A17  0AA2               	incf	??_envioTX,f
  6698  0A18  1FA5               	btfss	envioTX@i,7
  6699  0A19  2A1B               	goto	u2730
  6700  0A1A  03A2               	decf	??_envioTX,f
  6701  0A1B                     u2730:	
  6702  0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  6703  0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  6704  0A1D  0822               	movf	??_envioTX,w
  6705  0A1E  00A4               	movwf	??_envioTX+2
  6706  0A1F  0824               	movf	??_envioTX+2,w
  6707  0A20  00FF               	movwf	btemp+1
  6708  0A21  0823               	movf	??_envioTX+1,w
  6709  0A22  0084               	movwf	4
  6710  0A23  120A  118A  2400  120A  158A  	fcall	stringtab
  6711  0A28  0099               	movwf	25	;volatile
  6712  0A29                     l2677:	
  6713                           
  6714                           ;mostrarInicializar.c: 44:   if (TXREG==0){
  6715  0A29  0819               	movf	25,w	;volatile
  6716  0A2A  1D03               	btfss	3,2
  6717  0A2B  2A2D               	goto	u2741
  6718  0A2C  2A2E               	goto	u2740
  6719  0A2D                     u2741:	
  6720  0A2D  2A30               	goto	l2681
  6721  0A2E                     u2740:	
  6722  0A2E                     l2679:	
  6723                           
  6724                           ;mostrarInicializar.c: 45:    transmitir=0;
  6725  0A2E  01A7               	clrf	envioTX@transmitir
  6726                           
  6727                           ;mostrarInicializar.c: 46:         }
  6728  0A2F  2A36               	goto	l383
  6729  0A30                     l2681:	
  6730                           
  6731                           ;mostrarInicializar.c: 48:    i++;
  6732  0A30  3001               	movlw	1
  6733  0A31  07A5               	addwf	envioTX@i,f
  6734  0A32  1803               	skipnc
  6735  0A33  0AA6               	incf	envioTX@i+1,f
  6736  0A34  3000               	movlw	0
  6737  0A35  07A6               	addwf	envioTX@i+1,f
  6738  0A36                     l383:	
  6739  0A36  1E0C               	btfss	12,4	;volatile
  6740  0A37  2A39               	goto	u2751
  6741  0A38  2A3A               	goto	u2750
  6742  0A39                     u2751:	
  6743  0A39  2A36               	goto	l383
  6744  0A3A                     u2750:	
  6745  0A3A                     l2683:	
  6746                           
  6747                           ;mostrarInicializar.c: 42:  while(transmitir){
  6748  0A3A  0827               	movf	envioTX@transmitir,w
  6749  0A3B  1D03               	btfss	3,2
  6750  0A3C  2A3E               	goto	u2761
  6751  0A3D  2A3F               	goto	u2760
  6752  0A3E                     u2761:	
  6753  0A3E  2A11               	goto	l2675
  6754  0A3F                     u2760:	
  6755  0A3F                     l387:	
  6756  0A3F  0008               	return
  6757  0A40                     __end_of_envioTX:	
  6758                           
  6759                           	psect	text29
  6760  0BB9                     __ptext29:	
  6761 ;; *************** function _bailenLeds *****************
  6762 ;; Defined at:
  6763 ;;		line 25 in file "mostrarInicializar.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;		None
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  i               2    3[BANK0 ] unsigned short 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, status,2
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6777 ;;      Params:         0       0       0       0       0
  6778 ;;      Locals:         0       2       0       0       0
  6779 ;;      Temps:          0       3       0       0       0
  6780 ;;      Totals:         0       5       0       0       0
  6781 ;;Total ram usage:        5 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    1
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		_accionesAceptar
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           
  6792                           ;psect for function _bailenLeds
  6793  0BB9                     _bailenLeds:	
  6794  0BB9                     l3001:	
  6795                           ;incstack = 0
  6796                           ; Regs used in _bailenLeds: [wreg+status,2]
  6797                           
  6798                           
  6799                           ;mostrarInicializar.c: 27:     unsigned short int i;;mostrarInicializar.c: 28:     for (
      +                          i = 0; i < 3; i++) {
  6800  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  6801  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  6802  0BBB  01A3               	clrf	bailenLeds@i
  6803  0BBC  01A4               	clrf	bailenLeds@i+1
  6804  0BBD                     l374:	
  6805                           
  6806                           ;mostrarInicializar.c: 29:         RA3 = 1;
  6807  0BBD  1585               	bsf	5,3	;volatile
  6808  0BBE                     l3007:	
  6809                           
  6810                           ;mostrarInicializar.c: 30:         _delay((unsigned long)((200)*(4000000/4000.0)));
  6811  0BBE  3002               	movlw	2
  6812  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  6813  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  6814  0BC1  00A2               	movwf	??_bailenLeds+2
  6815  0BC2  3004               	movlw	4
  6816  0BC3  00A1               	movwf	??_bailenLeds+1
  6817  0BC4  30B9               	movlw	185
  6818  0BC5  00A0               	movwf	??_bailenLeds
  6819  0BC6                     u3677:	
  6820  0BC6  0BA0               	decfsz	??_bailenLeds,f
  6821  0BC7  2BC6               	goto	u3677
  6822  0BC8  0BA1               	decfsz	??_bailenLeds+1,f
  6823  0BC9  2BC6               	goto	u3677
  6824  0BCA  0BA2               	decfsz	??_bailenLeds+2,f
  6825  0BCB  2BC6               	goto	u3677
  6826  0BCC  2BCD               	nop2
  6827  0BCD                     l3009:	
  6828                           
  6829                           ;mostrarInicializar.c: 31:         RA5 = 1;
  6830  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  6831  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  6832  0BCF  1685               	bsf	5,5	;volatile
  6833                           
  6834                           ;mostrarInicializar.c: 32:         _delay((unsigned long)((200)*(4000000/4000.0)));
  6835  0BD0  3002               	movlw	2
  6836  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  6837  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  6838  0BD3  00A2               	movwf	??_bailenLeds+2
  6839  0BD4  3004               	movlw	4
  6840  0BD5  00A1               	movwf	??_bailenLeds+1
  6841  0BD6  30B9               	movlw	185
  6842  0BD7  00A0               	movwf	??_bailenLeds
  6843  0BD8                     u3687:	
  6844  0BD8  0BA0               	decfsz	??_bailenLeds,f
  6845  0BD9  2BD8               	goto	u3687
  6846  0BDA  0BA1               	decfsz	??_bailenLeds+1,f
  6847  0BDB  2BD8               	goto	u3687
  6848  0BDC  0BA2               	decfsz	??_bailenLeds+2,f
  6849  0BDD  2BD8               	goto	u3687
  6850  0BDE  2BDF               	nop2
  6851  0BDF                     l3011:	
  6852                           
  6853                           ;mostrarInicializar.c: 33:         RA3 = 0;
  6854  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  6855  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  6856  0BE1  1185               	bcf	5,3	;volatile
  6857                           
  6858                           ;mostrarInicializar.c: 34:         _delay((unsigned long)((200)*(4000000/4000.0)));
  6859  0BE2  3002               	movlw	2
  6860  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  6861  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  6862  0BE5  00A2               	movwf	??_bailenLeds+2
  6863  0BE6  3004               	movlw	4
  6864  0BE7  00A1               	movwf	??_bailenLeds+1
  6865  0BE8  30B9               	movlw	185
  6866  0BE9  00A0               	movwf	??_bailenLeds
  6867  0BEA                     u3697:	
  6868  0BEA  0BA0               	decfsz	??_bailenLeds,f
  6869  0BEB  2BEA               	goto	u3697
  6870  0BEC  0BA1               	decfsz	??_bailenLeds+1,f
  6871  0BED  2BEA               	goto	u3697
  6872  0BEE  0BA2               	decfsz	??_bailenLeds+2,f
  6873  0BEF  2BEA               	goto	u3697
  6874  0BF0  2BF1               	nop2
  6875  0BF1                     l3013:	
  6876                           
  6877                           ;mostrarInicializar.c: 35:         RA5 = 0;
  6878  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  6880  0BF3  1285               	bcf	5,5	;volatile
  6881                           
  6882                           ;mostrarInicializar.c: 36:     }
  6883  0BF4  3001               	movlw	1
  6884  0BF5  07A3               	addwf	bailenLeds@i,f
  6885  0BF6  1803               	skipnc
  6886  0BF7  0AA4               	incf	bailenLeds@i+1,f
  6887  0BF8  3000               	movlw	0
  6888  0BF9  07A4               	addwf	bailenLeds@i+1,f
  6889  0BFA  3000               	movlw	0
  6890  0BFB  0224               	subwf	bailenLeds@i+1,w
  6891  0BFC  3003               	movlw	3
  6892  0BFD  1903               	skipnz
  6893  0BFE  0223               	subwf	bailenLeds@i,w
  6894  0BFF  1C03               	skipc
  6895  0C00  2C02               	goto	u3321
  6896  0C01  2C03               	goto	u3320
  6897  0C02                     u3321:	
  6898  0C02  2BBD               	goto	l374
  6899  0C03                     u3320:	
  6900  0C03                     l376:	
  6901  0C03  0008               	return
  6902  0C04                     __end_of_bailenLeds:	
  6903                           
  6904                           	psect	text30
  6905  0C04                     __ptext30:	
  6906 ;; *************** function _int_usart *****************
  6907 ;; Defined at:
  6908 ;;		line 83 in file "main.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  basura          1    0        unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6922 ;;      Params:         0       0       0       0       0
  6923 ;;      Locals:         1       0       0       0       0
  6924 ;;      Temps:          4       0       0       0       0
  6925 ;;      Totals:         5       0       0       0       0
  6926 ;;Total ram usage:        5 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		Interrupt level 1
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           
  6936                           ;psect for function _int_usart
  6937  0C04                     _int_usart:	
  6938  0C04                     i1l2487:	
  6939                           
  6940                           ;main.c: 85:     if(RCSTAbits.FERR){
  6941  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  6942  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  6943  0C06  1D18               	btfss	24,2	;volatile
  6944  0C07  2C09               	goto	u240_21
  6945  0C08  2C0A               	goto	u240_20
  6946  0C09                     u240_21:	
  6947  0C09  2C0B               	goto	i1l2491
  6948  0C0A                     u240_20:	
  6949  0C0A                     i1l2489:	
  6950  0C0A  081A               	movf	26,w	;volatile
  6951  0C0B                     i1l2491:	
  6952                           
  6953                           ;main.c: 88:     if (RCSTAbits.OERR){
  6954  0C0B  1C98               	btfss	24,1	;volatile
  6955  0C0C  2C0E               	goto	u241_21
  6956  0C0D  2C0F               	goto	u241_20
  6957  0C0E                     u241_21:	
  6958  0C0E  2C11               	goto	i1l305
  6959  0C0F                     u241_20:	
  6960  0C0F                     i1l2493:	
  6961                           
  6962                           ;main.c: 89:         RCSTAbits.CREN=0;
  6963  0C0F  1218               	bcf	24,4	;volatile
  6964                           
  6965                           ;main.c: 90:         RCSTAbits.CREN=1;
  6966  0C10  1618               	bsf	24,4	;volatile
  6967  0C11                     i1l305:	
  6968                           ;main.c: 91:     }
  6969                           
  6970                           
  6971                           ;main.c: 92:     if(RCIF) {
  6972  0C11  1E8C               	btfss	12,5	;volatile
  6973  0C12  2C14               	goto	u242_21
  6974  0C13  2C15               	goto	u242_20
  6975  0C14                     u242_21:	
  6976  0C14  2C3E               	goto	i1l2507
  6977  0C15                     u242_20:	
  6978  0C15                     i1l2495:	
  6979                           
  6980                           ;main.c: 93:         if((codigoEntrada[serial] = RCREG) != 0x0D && (codigoEntrada[serial
      +                          ]) != 0x0A && serial < (10 -1)) {
  6981  0C15  081A               	movf	26,w	;volatile
  6982  0C16  00F4               	movwf	??_int_usart
  6983  0C17  0873               	movf	_serial,w
  6984  0C18  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  6985  0C19  0084               	movwf	4
  6986  0C1A  0874               	movf	??_int_usart,w
  6987  0C1B  1383               	bcf	3,7	;select IRP bank1
  6988  0C1C  0080               	movwf	0
  6989  0C1D  300D               	movlw	13
  6990  0C1E  0600               	xorwf	0,w
  6991  0C1F  1903               	btfsc	3,2
  6992  0C20  2C22               	goto	u243_21
  6993  0C21  2C23               	goto	u243_20
  6994  0C22                     u243_21:	
  6995  0C22  2C37               	goto	i1l2503
  6996  0C23                     u243_20:	
  6997  0C23                     i1l2497:	
  6998  0C23  0873               	movf	_serial,w
  6999  0C24  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7000  0C25  0084               	movwf	4
  7001  0C26  300A               	movlw	10
  7002  0C27  0600               	xorwf	0,w
  7003  0C28  1903               	btfsc	3,2
  7004  0C29  2C2B               	goto	u244_21
  7005  0C2A  2C2C               	goto	u244_20
  7006  0C2B                     u244_21:	
  7007  0C2B  2C37               	goto	i1l2503
  7008  0C2C                     u244_20:	
  7009  0C2C                     i1l2499:	
  7010  0C2C  3009               	movlw	9
  7011  0C2D  0273               	subwf	_serial,w
  7012  0C2E  1803               	skipnc
  7013  0C2F  2C31               	goto	u245_21
  7014  0C30  2C32               	goto	u245_20
  7015  0C31                     u245_21:	
  7016  0C31  2C37               	goto	i1l2503
  7017  0C32                     u245_20:	
  7018  0C32                     i1l2501:	
  7019                           
  7020                           ;main.c: 94:             serial++;
  7021  0C32  3001               	movlw	1
  7022  0C33  00F4               	movwf	??_int_usart
  7023  0C34  0874               	movf	??_int_usart,w
  7024  0C35  07F3               	addwf	_serial,f
  7025                           
  7026                           ;main.c: 95:         }
  7027  0C36  2C3E               	goto	i1l2507
  7028  0C37                     i1l2503:	
  7029                           
  7030                           ;main.c: 97:             serial = 0;
  7031  0C37  01F3               	clrf	_serial
  7032  0C38                     i1l2505:	
  7033                           
  7034                           ;main.c: 98:             huboInt = 1;
  7035  0C38  3001               	movlw	1
  7036  0C39  1683               	bsf	3,5	;RP0=1, select bank3
  7037  0C3A  1703               	bsf	3,6	;RP1=1, select bank3
  7038  0C3B  00D2               	movwf	_huboInt^(0+384)
  7039  0C3C  3000               	movlw	0
  7040  0C3D  00D3               	movwf	(_huboInt^(0+384)+1)
  7041  0C3E                     i1l2507:	
  7042                           
  7043                           ;main.c: 101:     if(ADIF) {
  7044  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  7045  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  7046  0C40  1F0C               	btfss	12,6	;volatile
  7047  0C41  2C43               	goto	u246_21
  7048  0C42  2C44               	goto	u246_20
  7049  0C43                     u246_21:	
  7050  0C43  2C4F               	goto	i1l310
  7051  0C44                     u246_20:	
  7052  0C44                     i1l2509:	
  7053                           
  7054                           ;main.c: 102:         ADIF = 0;
  7055  0C44  130C               	bcf	12,6	;volatile
  7056  0C45                     i1l2511:	
  7057                           
  7058                           ;main.c: 103:         adresult = (ADRESH<<8)+ADRESL;
  7059  0C45  081E               	movf	30,w	;volatile
  7060  0C46  1683               	bsf	3,5	;RP0=1, select bank3
  7061  0C47  1703               	bsf	3,6	;RP1=1, select bank3
  7062  0C48  00D8               	movwf	(_adresult+1)^(0+384)
  7063  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  7064  0C4A  1303               	bcf	3,6	;RP1=0, select bank1
  7065  0C4B  081E               	movf	30,w	;volatile
  7066  0C4C  1683               	bsf	3,5	;RP0=1, select bank3
  7067  0C4D  1703               	bsf	3,6	;RP1=1, select bank3
  7068  0C4E  00D7               	movwf	_adresult^(0+384)
  7069  0C4F                     i1l310:	
  7070  0C4F  0877               	movf	??_int_usart+3,w
  7071  0C50  008A               	movwf	10
  7072  0C51  0876               	movf	??_int_usart+2,w
  7073  0C52  0084               	movwf	4
  7074  0C53  0E75               	swapf	(??_int_usart+1)^(0+4294967168),w
  7075  0C54  0083               	movwf	3
  7076  0C55  0EFE               	swapf	btemp,f
  7077  0C56  0E7E               	swapf	btemp,w
  7078  0C57  0009               	retfie
  7079  0C58                     __end_of_int_usart:	
  7080  007E                     btemp	set	126	;btemp
  7081  007E                     wtemp0	set	126
  7082                           
  7083                           	psect	intentry
  7084  0004                     __pintentry:	
  7085                           ;incstack = 0
  7086                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  7087                           
  7088  0004                     interrupt_function:	
  7089  007E                     saved_w	set	btemp
  7090  0004  00FE               	movwf	btemp
  7091  0005  0E03               	swapf	3,w
  7092  0006  00F5               	movwf	??_int_usart+1
  7093  0007  0804               	movf	4,w
  7094  0008  00F6               	movwf	??_int_usart+2
  7095  0009  080A               	movf	10,w
  7096  000A  00F7               	movwf	??_int_usart+3
  7097  000B  120A  158A  2C04   	ljmp	_int_usart


Data Sizes:
    Strings     257
    Constant    20
    Data        1
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     78      79
    BANK1            80     45      74
    BANK3            96     66      73
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_15(CODE[9]), STR_14(CODE[10]), STR_13(CODE[25]), STR_12(CODE[17]), 
		 -> STR_9(CODE[19]), STR_8(CODE[25]), STR_5(CODE[24]), STR_3(CODE[5]), 
		 -> STR_1(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[7]), ?_sprintf(BANK0[2]), codigoEntrada(BANK1[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), lecturaConsulta@strLote(BANK1[32]), 
		 -> consultaPrecio@mensaje(BANK0[26]), cierreDeLote@strLote(BANK0[32]), accionesPuertoSerial@mensaje(BANK3[12]), accionesAceptar@strLote(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envioTX@mensaje	PTR unsigned char  size(2) Largest target is 40
		 -> agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), lecturaConsulta@strLote(BANK1[32]), 
		 -> STR_11(CODE[20]), STR_10(CODE[17]), consultaPrecio@mensaje(BANK0[26]), STR_7(CODE[40]), 
		 -> STR_6(CODE[25]), cierreDeLote@strLote(BANK0[32]), STR_4(CODE[20]), accionesPuertoSerial@mensaje(BANK3[12]), 
		 -> STR_2(CODE[19]), accionesAceptar@strLote(BANK1[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaMenos->_envioTX
    _lecturaMas->_cierreDeLote
    _cierreDeLote->_sprintf
    _agregarModificarPrecio->_sprintf
    _lecturaConsulta->_consultaPrecio
    _consultaPrecio->_sprintf
    _accionesDeshacer->_mostrarDigitos
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_sprintf
    _sprintf->___lwmod
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_accionesPuertoSerial
    _lecturaComando->_lecturaConsulta

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_accionesPuertoSerial

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   78126
                                             41 BANK1      4     4      0
                                             12 BANK3     54    54      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                15    15      0   50619
                                             38 BANK1      3     3      0
                                              0 BANK3     12    12      0
                            _envioTX
                     _lecturaComando
                    _lecturaEtiqueta
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      8     8      0   11402
                                             31 BANK0      8     8      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                            _envioTX
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    3589
                                             22 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    2164
                                             14 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0   33313
                    _lecturaConsulta
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0    1455
                            _envioTX
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0   16582
             _agregarModificarPrecio
                       _cierreDeLote
                            _envioTX
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  3     3      0     167
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cierreDeLote                                        36    36      0    5904
                                             42 BANK0     36    36      0
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _agregarModificarPrecio                              25    25      0    9056
                                             42 BANK0     25    25      0
                            ___awdiv
                             ___bmul
                             ___wmul
                        _eeprom_read
                       _eeprom_write
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _eeprom_write                                         3     2      1     242
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _lecturaConsulta                                     38    38      0   15276
                                              0 BANK1     38    38      0
                             ___wmul
                     _consultaPrecio
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _consultaPrecio                                      34    32      2    8302
                                             42 BANK0     34    32      2
                            ___awdiv
                            ___awmod
                        _eeprom_read
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    6373
                       _eliminarProd
                            _envioTX
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    1777
                                              6 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                     38    38      0    8831
                                             42 BANK0      4     4      0
                                              0 BANK1     34    34      0
                         _bailenLeds
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    18     10    4354
                                             20 BANK0     22    12     10
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    2760
                                             20 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1132
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1141
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _envioTX                                              8     6      2    1455
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_usart                                            5     5      0       1
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
       ___wmul (ARG)
   ___wmul
   _accionesAceptar
     _bailenLeds
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesPuertoSerial
     _envioTX
     _lecturaComando
       _lecturaConsulta
         ___wmul
         _consultaPrecio
           ___awdiv
           ___awmod
           _eeprom_read
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _sprintf
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
       _lecturaMas
         _agregarModificarPrecio
           ___awdiv
           ___bmul
           ___wmul
           _eeprom_read
           _eeprom_write
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _cierreDeLote
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _verificacionEntrada
       _lecturaMenos
         _envioTX
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _envioTX
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _envioTX
   _mostrarDigitos
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     42      49       9       76.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      EC      12        0.0%
ABS                  0      0      EC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 03 17:31:10 2020

                 ?_lecturaConsulta 0074                      ?_eliminarProd 002E  
                                pc 0002                     ___bmul@product 0022  
                 ?_lecturaEtiqueta 0074                        __CFG_CP$OFF 0000  
                               l51 0FEF                                 l52 0FFF  
                               l64 0E2E                                 l57 0B29  
                               l65 0E28                                 l67 0E42  
                     ___awdiv@sign 0026                                 fsr 0004  
              ___wmul@multiplicand 0022            __size_of_consultaPrecio 00AF  
                   ?_verificarProd 002E                                l110 0F0E  
                              l113 0F14                                l123 061C  
                              l140 0BB8                                l135 0A09  
                              l119 060A                                l161 03D8  
                              l330 0AB0                                l154 0998  
                              l500 0A43                                l149 07FE  
                              l182 09D7                                l175 06F5  
                              l503 0A65                                l343 0DDA  
                              l352 07C7                                l336 0D76  
                              l280 007E                                l506 0A76  
                              l274 007A                                l371 0F83  
                              l283 01D5                                l275 0070  
                              l349 0D14                                l285 008C  
                              l374 0BBD                                l526 022B  
                              l383 0A36                                l543 03E7  
                              l279 0088                                l376 0C03  
                              l480 099C                                l545 03FF  
                              l482 09B7                                l387 0A3F  
                              l539 0329                                l709 0CB2  
                              l815 0B6F                                l825 0AEC  
                              l569 0980                                l499 0A43  
                              l696 0EAB                                _BMS 041C  
                              _RA3 002B                                _RA5 002D  
                              _RE0 0048                                _RE1 0049  
                              _RE2 004A                       __CFG_CPD$OFF 0000  
                              _pow 0A77                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0026  
agregarModificarPrecio@upper_8bits 005F                       __CFG_FOSC$XT 0000  
                     __CFG_LVP$OFF 0000                   ??_mostrarDigitos 0036  
                             l3001 0BB9                               l3011 0BDF  
                             l3013 0BF1                               l3101 0F94  
                             l3021 0CB9                               l3007 0BBE  
                             l3111 0FA3                               l3103 0F98  
                             l3031 0D10                               l3023 0CD4  
                             l3015 0CB3                               l3009 0BCD  
                             l3113 0FA9                               l3025 0CEB  
                             l3121 0AED                               l3041 09D2  
                             l3033 09B8                               l3201 00FA  
                             l3115 0FB6                               l3027 0D06  
                             l3131 0B20                               l3123 0AF9  
                             l3035 09C0                               l3051 0540  
                             l3043 0527                               l3203 0102  
                             l3117 0FBD                               l3109 0F9C  
                             l3029 0D08                               l3125 0AFD  
                             l3037 09C6                               l3061 0598  
                             l3053 0546                               l3141 0DF5  
                             l3133 0DDB                               l3221 0126  
                             l3213 010C                               l3205 0104  
                             l3119 0FFA                               l3127 0B0E  
                             l3039 09CC                               l3071 05C3  
                             l3063 05A9                               l3055 0553  
                             l3151 0E3F                               l3143 0DFB  
                             l3135 0DE3                               l3223 019E  
                             l3215 0111                               l3207 0109  
                             l2601 01EF                               l3129 0B19  
                             l3081 05F5                               l3073 05CF  
                             l3065 05B1                               l3057 0577  
                             l3049 052D                               l3145 0E01  
                             l3137 0DE9                               l3225 01C5  
                             l3217 0119                               l3161 0055  
                             l3153 0034                               l2611 0209  
                             l2603 01F6                               l3083 05F8  
                             l3075 05DE                               l3067 05B6  
                             l3059 058C                               l3147 0E08  
                             l3139 0DEF                               l3227 01D0  
                             l3219 0120                               l3171 006A  
                             l3163 0058                               l3155 003A  
                             l2613 020E                               l2605 01F8  
                             l2621 023A                               l2541 03F5  
                             l2533 03D9                               l2701 0AAC  
                             l3085 0606                               l3077 05E4  
                             l3069 05BF                               l3149 0E31  
                             l3165 0059                               l3157 003B  
                             l2551 0B34                               l2631 0274  
                             l2623 0260                               l2615 021F  
                             l2607 01FF                               l3095 0F84  
                             l2543 03FB                               l2535 03DD  
                             l2711 0A60                               l3087 060B  
                             l3079 05EC                               l3183 0090  
                             l3175 0074                               l3167 005B  
                             l3159 0052                               l2561 0B57  
                             l2553 0B37                               l2633 0279  
                             l2625 0268                               l3249 0252  
                             l2617 0225                               l2609 0203  
                             l3097 0F8A                               l2537 03E1  
                             l2801 0C7F                               l2721 0A6F  
                             l2713 0A64                               l2705 0A49  
                             l3089 0619                               l3185 0096  
                             l3169 005F                               l2563 0B5D  
                             l2555 0B3E                               l2547 0B2A  
                             l2651 02BA                               l2643 029B  
                             l2627 026C                               l3099 0F92  
                             l2539 03EE                               l2811 0C9E  
                             l2803 0C83                               l2731 0976  
                             l2723 0A75                               l2715 0A69  
                             l2707 0A55                               l3195 00E1  
                             l3187 009A                               l3179 0082  
                             l2565 0B5E                               l2557 0B42  
                             l2549 0B2E                               l2581 0AC7  
                             l2573 0AB1                               l2653 02BF  
                             l2645 02A5                               l2629 0270  
                             l2661 030B                               l2741 0E46  
                             l2805 0C87                               l2813 0CA4  
                             l2901 0337                               l2733 0978  
                             l2725 096D                               l2717 0A6D  
                             l2709 0A5D                               l2821 0D77  
                             l3197 00EB                               l3189 00DE  
                             l2671 0A0A                               l2567 0B65  
                             l2559 0B46                               l2583 0ACB  
                             l2575 0AB9                               l2591 0AE8  
                             l2911 0F15                               l2655 02F3  
                             l2647 02AB                               l2639 027B  
                             l2663 0323                               l2751 0E5A  
                             l2743 0E4A                               l2815 0CA9  
                             l2807 0C91                               l2903 0355  
                             l2735 097F                               l2727 096E  
                             l2719 0A6E                               l2831 0D99  
                             l2823 0D7A                               l3199 00F3  
                             l2681 0A30                               l2673 0A0E  
                             l2569 0B6B                               l2585 0AD5  
                             l2577 0ABC                               l2913 0F33  
                             l2657 02FC                               l2649 02B4  
                             l2761 0E70                               l2753 0E5E  
                             l2745 0E4F                               l2817 0CAE  
                             l2809 0C97                               l2905 0362  
                             l2729 0972                               l2841 0DD5  
                             l2833 0DB0                               l2921 0EB7  
                             l2675 0A11                               l2683 0A3A  
                             l2587 0ADB                               l2579 0AC3  
                             l2915 0F54                               l2659 0302  
                             l2595 01D9                               l2691 0A7E  
                             l2771 0E90                               l2763 0E74  
                             l2755 0E60                               l2747 0E51  
                             l2739 0E43                               l2907 0368  
                             l2851 09DE                               l2843 0DD9  
                             l2835 0DC9                               l2923 0ED5  
                             l2677 0A29                               l2589 0AE2  
                             l2597 01E0                               l2693 0A84  
                             l2773 0E97                               l2765 0E78  
                             l2757 0E66                               l2749 0E55  
                             l2685 09A5                               l2909 0383  
                             l2861 0A08                               l2853 09E6  
                             l2837 0DCB                               l2829 0D7E  
                             l2925 0ED9                               l2917 0EAF  
                             l2941 0D36                               l2933 0D15  
                             l2679 0A2E                               l2599 01E6  
                             l2695 0A89                               l2767 0E89  
                             l2759 0E69                               l2775 0E9D  
                             l2791 0C66                               l2783 0C58  
                             l2871 0BAD                               l2855 09F0  
                             l2847 09D8                               l2951 07C8  
                             l2839 0DCD                               l2927 0EE6  
                             l2919 0EB1                               l2943 0D4D  
                             l2697 0A9C                               l2689 0A77  
                             l2777 0EA2                               l2769 0E8F  
                             l2793 0C6A                               l2785 0C5B  
                             l2881 070F                               l2873 0BB3  
                             l2865 0B70                               l2857 09F9  
                             l2849 09DC                               l2961 07EE  
                             l2953 07D0                               l2929 0F08  
                             l2945 0D68                               l2699 0AA2  
                             l2779 0EA7                               l2795 0C6F  
                             l2787 0C5F                               l2971 061D  
                             l2891 0778                               l2883 0715  
                             l2875 0BB4                               l2867 0B77  
                             l2859 0A02                               l2963 07F3  
                             l2955 07D6                               l2947 0D6A  
                             l2939 0D1B                               l2797 0C75  
                             l2789 0C64                               l2981 0649  
                             l2973 0625                               l2893 0782  
                             l2885 0724                               l2877 06F6  
                             l2869 0BAC                               l2957 07E0  
                             l2965 0981                               l2949 0D72  
                             l2799 0C78                               l2991 06A4  
                             l2983 064F                               l2975 062B  
                             l2895 078F                               l2887 0770  
                             l2879 070D                               l2959 07E6  
                             l2967 0989                               l2993 06AA  
                             l2985 0694                               l2977 0631  
                             l2897 07BC                               l2889 0774  
                             l2969 098D                               l2899 032A  
                             l2995 06B0                               l2987 069A  
                             l2979 063D                               l2997 06B6  
                             l2989 069E                               l2999 06E6  
                             _ADIE 0466                               _ADIF 0066  
                             ?_pow 0026                               STR_1 04F7  
                             STR_2 04D3                               STR_3 0522  
                             STR_4 04AC                               STR_5 0480  
                             STR_6 0467                               STR_7 0426  
                             STR_8 0467                               STR_9 04C0  
                             u3000 0C91                               u3001 0C90  
                             u3020 0CA4                               u3100 0A08  
                             u3021 0CA3                               u3005 0C8D  
                             u3101 0A07                               u3030 0CA9  
                             u3110 0B77                               u3031 0CA8  
                             u3015 0C98                               u3111 0B76  
                             u3120 0362                               u3200 07E0  
                             u3040 0D99                               u3121 0361  
                             u3201 07DF                               u3041 0D98  
                             u3130 0368                               u3210 07EE  
                             u3050 0DC9                               u3131 0367  
                             u3211 07ED                               u3051 0DC8  
                             u2500 03FB                               u3300 06B0  
                             u3220 0989                               u3060 0DD9  
                             u3140 0ED9                               u2501 03FA  
                             u3125 035E                               u3301 06AF  
                             u3221 0988                               u3061 0DD8  
                             u3045 0D95                               u3141 0ED8  
                             u2510 0B34                               u3310 06B6  
                             u3230 0625                               u3070 09F0  
                             u3150 0EE6                               u2511 0B33  
                             u3311 06B5                               u3231 0624  
                             u3071 09EF                               u3151 0EE5  
                             u3320 0C03                               u2600 0ACB  
                             u3240 062B                               u3080 09F9  
                             u3160 0F08                               u3400 05B1  
                             u3321 0C02                               u2601 0ACA  
                             u3241 062A                               u3081 09F8  
                             u3161 0F07                               u3401 05B0  
                             u2530 0B46                               u2610 0AD5  
                             u3330 0CD4                               u3250 0631  
                             u3090 0A02                               u3170 0D36  
                             u3410 05B6                               u2531 0B45  
                             u2611 0AD4                               u3331 0CD3  
                             u3251 0630                               u3091 0A01  
                             u3155 0EE2                               u3171 0D35  
                             u3411 05B5                               u2700 02AB  
                             u3420 0FB6                               u3340 0D14  
                             u3260 064F                               u3180 0D76  
                             u3500 0E01                               u2525 0B38  
                             u2701 02AA                               u3421 0FB5  
                             u3341 0D13                               u3261 064E  
                             u3181 0D75                               u3501 0E00  
                             u2550 0B57                               u2630 0AE8  
                             u2710 030B                               u3430 0FBD  
                             u2470 03E1                               u3270 069A  
                             u3190 07D0                               u3350 09C0  
                             u3510 0E08                               u2551 0B56  
                             u2631 0AE7                               u2615 0AD1  
                             u2711 030A                               u3431 0FBC  
                             u2471 03E0                               u3335 0CD0  
                             u3271 0699                               u3191 07CF  
                             u3351 09BF                               u3175 0D32  
                             u3511 0E07                               u2720 0323  
                             u2640 01E6                               u3440 0AF9  
                             u3280 06A4                               u2800 0A49  
                             u3360 09CC                               u3600 0102  
                             u3520 0070                               u2545 0B47  
                             u2625 0ADC                               u2721 0322  
                             u2641 01E5                               u3425 0FB2  
                             u3441 0AF8                               u3281 06A3  
                             u2801 0A48                               u3361 09CB  
                             u3601 0101                               u3521 006F  
                             u2730 0A1B                               u2570 0B6B  
                             u2650 0209                               u3450 0B20  
                             u3290 06AA                               u2810 0A64  
                             u3370 0553                               u3610 011F  
                             u3530 0074                               u2571 0B6A  
                             u2555 0B53                               u2651 0208  
                             u3451 0B1F                               u3291 06A9  
                             u2811 0A63                               u3371 0552  
                             u3611 011E                               u3531 0073  
                             u2740 0A2E                               u2580 0AB9  
                             u2660 0239                               u2820 0A75  
                             u3380 0577                               u3460 0DE3  
                             u3620 0126                               u3540 007E  
                             u2741 0A2D                               u2565 0B5F  
                             u2581 0AB8                               u2661 0238  
                             u2485 03E8                               u3445 0AF5  
                             u2821 0A74                               u3381 0576  
                             u3461 0DE2                               u3621 0125  
                             u3541 007D                               u2750 0A3A  
                             u2670 0270                               u2910 0E89  
                             u2830 0972                               u3390 05A9  
                             u3470 0DE9                               u3550 0082  
                             u2751 0A39                               u2671 026F  
                             u2495 03EF                               u2911 0E88  
                             u2831 0971                               u3391 05A8  
                             u3375 054F                               u3471 0DE8  
                             u3551 0081                               u2760 0A3F  
                             u2680 029A                               u2840 097F  
                             u3480 0DEF                               u3560 008C  
                             u2761 0A3E                               u2681 0299  
                             u2905 0E79                               u2841 097E  
                             u3385 0573                               u3481 0DEE  
                             u3561 008B                               u2690 02A5  
                             u2930 0E9D                               u2850 0E4A  
                             u2770 09A5                               u3490 0DFB  
                             u3570 0090                               u2595 0ABD  
                             u2691 02A4                               u2931 0E9C  
                             u2915 0E85                               u2851 0E49  
                             u2771 09A2                               u3491 0DFA  
                             u3571 008F                               u2780 0A84  
                             u2940 0EA2                               u2860 0E55  
                             u3580 0096                               u2685 0296  
                             u2781 0A83                               u2941 0EA1  
                             u2925 0E91                               u2861 0E54  
                             u3637 00E7                               u3581 0095  
                             u2790 0AAC                               u2870 0E66  
                             u2950 0C5F                               u3590 00F9  
                             u2791 0AAB                               u2871 0E65  
                             u2951 0C5E                               u3647 0E39  
                             u3591 00F8                               u2960 0C6A  
                             u2961 0C69                               u3657 0600  
                             u2890 0E78                               u2970 0C75  
                             u2795 0AA8                               u2891 0E77  
                             u2971 0C74                               u3667 0613  
                             _RCIE 0465                               _RCIF 0065  
                             u3677 0BC6                               u2885 0E6A  
                             u2990 0C87                               u3687 0BD8  
                             u2991 0C86                               u3697 0BEA  
                             u2985 0C79                               _TXIF 0064  
                   ??_eeprom_write 0021                       __CFG_WRT$OFF 0000  
                envioTX@transmitir 0027                               _main 0034  
                  _accionesAceptar 0F84                               btemp 007E  
                    __CFG_BOREN$ON 0000             accionesAceptar@strLote 00A0  
                             pow@i 002A                               start 000E  
                      main@strLote 019C                  ___bmul@multiplier 0023  
                   ??_eliminarProd 0030                              ??_pow 002A  
    __size_of_accionesPuertoSerial 0068                              ?_main 0074  
                  __end_of___awdiv 0EAC                              _EEADR 010D  
                            STR_10 04E6                              STR_11 0498  
                            STR_12 04F7                              STR_13 044E  
                            STR_14 0508                              STR_15 0512  
                            STR_16 051B                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0CB3                    ___awdiv@divisor 0020  
                     ?_ingresoProd 002E                    __end_of___lwdiv 0B70  
                            i1l310 0C4F                              i1l305 0C11  
                  __end_of___lwmod 0AED                    ___awdiv@counter 0025  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTB 0006  
                            _PORTD 0008                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _TRISE 0089  
                            _TXREG 0019                              _TXSTA 0098  
             __end_of_cierreDeLote 0BB9                    __end_of_envioTX 0A40  
                  __end_of_dpowers 041C                              main@i 01D0  
                            pclath 000A                   _accionesDeshacer 0AED  
                            status 0003                     envioTX@mensaje 0020  
                            wtemp0 007E                    __end_of_sprintf 032A  
                    ?_lecturaMenos 0074                    __initialization 0011  
                     __end_of_main 01D9                    ??_verificarProd 0030  
                  EEPROM_search@tp 003E                             ??_main 00C9  
            __end_of_EEPROM_search 0F15                      main@bufferMsj 01BC  
         ??_agregarModificarPrecio 004A                      eliminarProd@i 0033  
          __end_of_accionesAceptar 1000                             _ADCON0 001F  
                           _ADCON1 009F                             _ADRESH 001E  
                           _ADRESL 009E                             _EEDATA 010C  
                           _EECON1 018C                             _EECON2 018D  
                 ___awdiv@dividend 0022            __size_of_lecturaComando 0020  
                           i1l2501 0C32                             i1l2511 0C45  
                           i1l2503 0C37                             i1l2505 0C38  
                           i1l2507 0C3E                             i1l2509 0C44  
                           i1l2491 0C0B                             i1l2493 0C0F  
                           i1l2495 0C15                             i1l2487 0C04  
                           i1l2497 0C23                             i1l2489 0C0A  
                           i1l2499 0C2C                             u240_20 0C0A  
                           u240_21 0C09                             u241_20 0C0F  
                           _INTCON 000B                             u241_21 0C0E  
                           u242_20 0C15                             u242_21 0C14  
                           u243_20 0C23                             u243_21 0C22  
                           u244_20 0C2C                             u244_21 0C2B  
                           u245_20 0C32                             u245_21 0C31  
                           u246_20 0C44                             u246_21 0C43  
                   ??_lecturaMenos 0028                   lecturaEtiqueta@i 0042  
                   __CFG_PWRTE$OFF 0000               __size_of_eeprom_read 001F  
                           ___bmul 096A                             ___wmul 03D9  
                        ??___awdiv 0024                          ??___awmod 0024  
              _mostrarDigitos$1051 0036                          ??___lwdiv 002A  
                        ??___lwmod 0032                             _cuenta 0070  
              _verificacionEntrada 09D8                   ___awdiv@quotient 0027  
                  ___awmod@divisor 0020                             _serial 0073  
             __end_of_eeprom_write 0A77                     _consultaPrecio 032A  
                  ___awmod@counter 0025                          ??_envioTX 0022  
                     __pdataCOMMON 0078                             saved_w 007E  
             __end_of_eliminarProd 0D15                          ??_sprintf 003E  
             ?_verificacionEntrada 0074            __end_of__initialization 0030  
                  eeprom_read@addr 0021                ___bmul@multiplicand 0020  
                   __pcstackCOMMON 0074             __end_of_consultaPrecio 03D9  
            __size_of_cierreDeLote 0049                         _bailenLeds 0BB9  
             __size_of_ingresoProd 0062                  eeprom_write@value 0020  
  __size_of_agregarModificarPrecio 00D2        accionesPuertoSerial@mensaje 0190  
                 ?_accionesAceptar 0074              ??_verificacionEntrada 0020  
                       __pbssBANK0 006E                         __pbssBANK1 00CD  
                       __pbssBANK3 01D2                 __size_of_int_usart 0054  
                       __pmaintext 0034                       _cierreDeLote 0B70  
         agregarModificarPrecio@tp 0062                            ?___bmul 0020  
                   eliminarProd@tp 002E                            ?___wmul 0020  
                       __pintentry 0004                    ?_consultaPrecio 004A  
              EEPROM_search@precio 003C           __end_of_accionesDeshacer 0B2A  
         __size_of_lecturaConsulta 00D9               __end_of_lecturaMenos 0999  
         __size_of_lecturaEtiqueta 00F6                     verificarProd@i 0034  
                   _lecturaComando 09B8                   accionesAceptar@i 00C0  
                       __stringtab 0400       __end_of_accionesPuertoSerial 0E43  
                lecturaEtiqueta@tp 0044                         _lecturaMas 07C8  
           _agregarModificarPrecio 06F6              __size_of_eeprom_write 0037  
                  __size_of___bmul 0017                            ___awdiv 0E43  
                          ___awmod 0C58                    __size_of___wmul 0027  
                          ___lwdiv 0B2A                            ___lwmod 0AB1  
                          __ptext1 0DDB                            __ptext2 0527  
                          __ptext3 0D15                            __ptext4 0EAC  
                      pow@potencia 0028                            __ptext5 0D77  
                          __ptext6 09B8                            __ptext7 0981  
                          __ptext8 07C8                            __ptext9 09D8  
                      ?_bailenLeds 0074                            _envioTX 0A0A  
                          _dpowers 0412                            _huboInt 01D2  
            __size_of_eliminarProd 0062                       __size_of_pow 003A  
             consultaPrecio@precio 006A               verificacionEntrada@i 0022  
                 ___awmod@dividend 0022                       ingresoProd@i 0033  
           __end_of_lecturaComando 09D8                            _nroLote 0078  
                          _numProd 00DC                  __end_of_int_usart 0C58  
                          _sprintf 01D9                            clrloop0 0963  
     agregarModificarPrecio@precio 0060               end_of_initialization 0030  
                     _eeprom_write 0A40      agregarModificarPrecio@mensaje 0054  
          __size_of_mostrarDigitos 006F                          _RCSTAbits 0018  
                       _montosLote 00DA                       _eliminarProd 0CB3  
                     __pstringtext 0400                  _productoIngresado 00DE  
                 verificarProd@ret 0033              __end_of_verificarProd 0DDB  
                       _ventasLote 0072                    ?_lecturaComando 0074  
          lecturaConsulta@articulo 00C4                  ??_lecturaConsulta 00A0  
                 _cierreLotePedido 01D6                  ??_lecturaEtiqueta 003F  
                    ??_eeprom_read 0020                __size_of_bailenLeds 004B  
                      ?_lecturaMas 0074             __size_of_EEPROM_search 0069  
                   __end_of___bmul 0981              __size_of_lecturaMenos 0018  
                   __end_of___wmul 0400                      __pidataCOMMON 07FF  
             _accionesPuertoSerial 0DDB                start_initialization 0011  
                      __end_of_BMS 0426                        __end_of_pow 0AB1  
                     _lecturaMenos 0981                   ??_consultaPrecio 004C  
                   _prodIngresados 00CD                           ??___bmul 0021  
                         ??___wmul 0024                __end_of_eeprom_read 09B8  
            ?_accionesPuertoSerial 0074                      ??_ingresoProd 0030  
                ?_accionesDeshacer 0074                        __pbssCOMMON 0070  
      __end_of_verificacionEntrada 0A0A                          ___latbits 0002  
               ??_accionesDeshacer 0038                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0                      __pcstackBANK3 0190  
                    _EEPROM_search 0EAC                __size_of_lecturaMas 0037  
                 eeprom_write@addr 0022                        sprintf@flag 0042  
                      sprintf@prec 0043            ?_agregarModificarPrecio 0074  
         __size_of_accionesAceptar 007C                          _main$1050 01CE  
                        _main$1049 01CC                     _mostrarDigitos 0F15  
                 ___lwdiv@dividend 0028                           ?___awdiv 0020  
                         ?___awmod 0020                           ?___lwdiv 0026  
                         ?___lwmod 002E                          _auxCuenta 01D4  
                     ??_bailenLeds 0020                           ?_envioTX 0020  
           consultaPrecio@articulo 004A                     ?_EEPROM_search 0036  
                 ___lwdiv@quotient 002C                __end_of_ingresoProd 0D77  
                         ?_sprintf 0034                          _modoDebug 006E  
                        _int_usart 0C04             verificacionEntrada@ret 0021  
   __end_of_agregarModificarPrecio 07C8                  interrupt_function 0004  
                   ___wmul@product 0024             __end_of_mostrarDigitos 0F84  
                        clear_ram0 0962                        _eeprom_read 0999  
                      bailenLeds@i 0023                 __end_of_bailenLeds 0C04  
                         _GO_nDONE 00FA                    verificarProd@tp 002E  
           ??_accionesPuertoSerial 00C6                   ??_lecturaComando 006E  
                  _lecturaConsulta 061D                        __stringbase 0412  
                        main@i_257 01D1                  ___wmul@multiplier 0020  
                  _lecturaEtiqueta 0527                 lecturaEtiqueta@Aux 0045  
                    _codigoEntrada 00E0             lecturaConsulta@strLote 00A4  
              cierreDeLote@strLote 004E                         ?_int_usart 0074  
                  ?_mostrarDigitos 0034                         _EECON1bits 018C  
                     ??_lecturaMas 006E                  ??_accionesAceptar 004A  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
               __end_of__stringtab 0412                    ??_EEPROM_search 0038  
                      _ingresoProd 0D15                         sprintf@val 0047  
                 __size_of_envioTX 0036                           _adresult 01D7  
                  ___lwdiv@divisor 0026                       pow@resultado 002C  
                  ___lwdiv@counter 002B                           __ptext10 0B70  
                         __ptext11 06F6                           __ptext20 0CB3  
                         __ptext12 0A40                           __ptext21 0A77  
                         __ptext13 096A                           __ptext30 0C04  
                         __ptext22 03D9                           __ptext14 061D  
                         __ptext23 0F84                           __ptext15 032A  
                         __ptext24 01D9                           __ptext16 0999  
                         __ptext25 0F15                           __ptext17 0C58  
                         __ptext26 0AB1                           __ptext18 0E43  
                         __ptext27 0B2A                           __ptext19 0AED  
                         __ptext28 0A0A                           __ptext29 0BB9  
               __end_of_lecturaMas 07FF                   __size_of_sprintf 0151  
            consultaPrecio@mensaje 0050                      __size_of_main 01A5  
                        pow@numero 0026             __size_of_verificarProd 0064  
                    ingresoProd@tp 002E                      ?_cierreDeLote 0074  
          __end_of_lecturaConsulta 06F6            __end_of_lecturaEtiqueta 061D  
                         envioTX@i 0025                         _INTCONbits 000B  
agregarModificarPrecio@lower_8bits 005E                           intlevel1 0000  
                        sprintf@ap 0044                          sprintf@cp 0045  
                      ??_int_usart 0074                          sprintf@sp 0034  
                 ___lwmod@dividend 0030          __size_of_accionesDeshacer 003D  
                   ??_cierreDeLote 004A                          stringcode 040A  
                mostrarDigitos@num 0034                           sprintf@c 0049  
                         sprintf@f 0036                      _verificarProd 0D77  
                  ___lwmod@divisor 002E                    ___lwmod@counter 0033  
                         stringtab 0400       __size_of_verificacionEntrada 0032  
                    ?_eeprom_write 0020                         _STATUSbits 0003  
                     ?_eeprom_read 0074  
