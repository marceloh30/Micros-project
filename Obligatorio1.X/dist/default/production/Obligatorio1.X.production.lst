

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed May 27 22:27:21 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0088                     	;# 
   484  0089                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0094                     	;# 
   492  0098                     	;# 
   493  0099                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010D                     	;# 
   500  010E                     	;# 
   501  010F                     	;# 
   502  018C                     	;# 
   503  018D                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000D                     	;# 
   518  000E                     	;# 
   519  000E                     	;# 
   520  000F                     	;# 
   521  0010                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0013                     	;# 
   525  0014                     	;# 
   526  0015                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001D                     	;# 
   537  001E                     	;# 
   538  001F                     	;# 
   539  0081                     	;# 
   540  0085                     	;# 
   541  0086                     	;# 
   542  0087                     	;# 
   543  0088                     	;# 
   544  0089                     	;# 
   545  008C                     	;# 
   546  008D                     	;# 
   547  008E                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0098                     	;# 
   553  0099                     	;# 
   554  009C                     	;# 
   555  009D                     	;# 
   556  009E                     	;# 
   557  009F                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  010F                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564                           
   565                           	psect	idataBANK0
   566  07FE                     __pidataBANK0:	
   567                           
   568                           ;initializer for _nroLote
   569  07FE  3401               	retlw	1
   570                           
   571                           	psect	strings
   572  0400                     __pstrings:	
   573  0400                     stringtab:	
   574  0400                     __stringtab:	
   575                           
   576                           ;	String table - string pointers are 1 byte each
   577  0400  1BFF               	btfsc	btemp+1,7
   578  0401  2C0A               	ljmp	stringcode
   579  0402  1383               	bcf	3,7
   580  0403  187F               	btfsc	btemp+1,0
   581  0404  1783               	bsf	3,7
   582  0405  0800               	movf	0,w
   583  0406  0A84               	incf	4,f
   584  0407  1903               	skipnz
   585  0408  0AFF               	incf	btemp+1,f
   586  0409  0008               	return
   587  040A                     stringcode:	
   588  040A                     stringdir:	
   589  040A  3004               	movlw	high stringdir
   590  040B  008A               	movwf	10
   591  040C  0804               	movf	4,w
   592  040D  0A84               	incf	4,f
   593  040E  0782               	addwf	2,f
   594  040F                     __stringbase:	
   595  040F  3400               	retlw	0
   596  0410                     __end_of__stringtab:	
   597  0410                     _dpowers:	
   598  0410  3401               	retlw	1
   599  0411  3400               	retlw	0
   600  0412  340A               	retlw	10
   601  0413  3400               	retlw	0
   602  0414  3464               	retlw	100
   603  0415  3400               	retlw	0
   604  0416  34E8               	retlw	232
   605  0417  3403               	retlw	3
   606  0418  3410               	retlw	16
   607  0419  3427               	retlw	39
   608  041A                     __end_of_dpowers:	
   609  041A                     _BMS:	
   610  041A  3400               	retlw	0
   611  041B  3410               	retlw	16
   612  041C  3420               	retlw	32
   613  041D  3430               	retlw	48
   614  041E  3440               	retlw	64
   615  041F  3450               	retlw	80
   616  0420  3460               	retlw	96
   617  0421  3470               	retlw	112
   618  0422  3480               	retlw	128
   619  0423  3490               	retlw	144
   620  0424                     __end_of_BMS:	
   621  000B                     _INTCONbits	set	11
   622  0003                     _STATUSbits	set	3
   623  0019                     _TXREG	set	25
   624  0008                     _PORTD	set	8
   625  0006                     _PORTB	set	6
   626  001E                     _ADRESH	set	30
   627  001A                     _RCREG	set	26
   628  0018                     _RCSTA	set	24
   629  000B                     _INTCON	set	11
   630  001F                     _ADCON0	set	31
   631  0064                     _TXIF	set	100
   632  00FA                     _GO_nDONE	set	250
   633  002D                     _RA5	set	45
   634  002B                     _RA3	set	43
   635  0065                     _RCIF	set	101
   636  004A                     _RE2	set	74
   637  0049                     _RE1	set	73
   638  0048                     _RE0	set	72
   639  0066                     _ADIF	set	102
   640  009E                     _ADRESL	set	158
   641  0099                     _SPBRG	set	153
   642  0098                     _TXSTA	set	152
   643  0087                     _TRISC	set	135
   644  009F                     _ADCON1	set	159
   645  0088                     _TRISD	set	136
   646  0086                     _TRISB	set	134
   647  0089                     _TRISE	set	137
   648  0085                     _TRISA	set	133
   649  0465                     _RCIE	set	1125
   650  0466                     _ADIE	set	1126
   651  010C                     _EEDATA	set	268
   652  010D                     _EEADR	set	269
   653  018D                     _EECON2	set	397
   654  018C                     _EECON1	set	396
   655  018C                     _EECON1bits	set	396
   656  0424                     STR_3:	
   657  0424  344F               	retlw	79	;'O'
   658  0425  3463               	retlw	99	;'c'
   659  0426  3475               	retlw	117	;'u'
   660  0427  3472               	retlw	114	;'r'
   661  0428  3472               	retlw	114	;'r'
   662  0429  3469               	retlw	105	;'i'
   663  042A  346F               	retlw	111	;'o'
   664  042B  3420               	retlw	32	;' '
   665  042C  3475               	retlw	117	;'u'
   666  042D  346E               	retlw	110	;'n'
   667  042E  3420               	retlw	32	;' '
   668  042F  3465               	retlw	101	;'e'
   669  0430  3472               	retlw	114	;'r'
   670  0431  3472               	retlw	114	;'r'
   671  0432  346F               	retlw	111	;'o'
   672  0433  3472               	retlw	114	;'r'
   673  0434  3420               	retlw	32	;' '
   674  0435  3465               	retlw	101	;'e'
   675  0436  346E               	retlw	110	;'n'
   676  0437  3420               	retlw	32	;' '
   677  0438  346C               	retlw	108	;'l'
   678  0439  3461               	retlw	97	;'a'
   679  043A  3420               	retlw	32	;' '
   680  043B  3469               	retlw	105	;'i'
   681  043C  346E               	retlw	110	;'n'
   682  043D  3474               	retlw	116	;'t'
   683  043E  3465               	retlw	101	;'e'
   684  043F  3472               	retlw	114	;'r'
   685  0440  3470               	retlw	112	;'p'
   686  0441  3472               	retlw	114	;'r'
   687  0442  3465               	retlw	101	;'e'
   688  0443  3474               	retlw	116	;'t'
   689  0444  3461               	retlw	97	;'a'
   690  0445  3463               	retlw	99	;'c'
   691  0446  3469               	retlw	105	;'i'
   692  0447  346F               	retlw	111	;'o'
   693  0448  346E               	retlw	110	;'n'
   694  0449  342E               	retlw	46	;'.'
   695  044A  340A               	retlw	10
   696  044B  3400               	retlw	0
   697  044C                     STR_4:	
   698  044C  340A               	retlw	10
   699  044D  3450               	retlw	80	;'P'
   700  044E  3472               	retlw	114	;'r'
   701  044F  346F               	retlw	111	;'o'
   702  0450  3464               	retlw	100	;'d'
   703  0451  3475               	retlw	117	;'u'
   704  0452  3463               	retlw	99	;'c'
   705  0453  3474               	retlw	116	;'t'
   706  0454  346F               	retlw	111	;'o'
   707  0455  3420               	retlw	32	;' '
   708  0456  346E               	retlw	110	;'n'
   709  0457  346F               	retlw	111	;'o'
   710  0458  3420               	retlw	32	;' '
   711  0459  3465               	retlw	101	;'e'
   712  045A  346E               	retlw	110	;'n'
   713  045B  3463               	retlw	99	;'c'
   714  045C  346F               	retlw	111	;'o'
   715  045D  346E               	retlw	110	;'n'
   716  045E  3474               	retlw	116	;'t'
   717  045F  3472               	retlw	114	;'r'
   718  0460  3461               	retlw	97	;'a'
   719  0461  3464               	retlw	100	;'d'
   720  0462  346F               	retlw	111	;'o'
   721  0463  340A               	retlw	10
   722  0464  3400               	retlw	0
   723  0465                     STR_7:	
   724  0465  340A               	retlw	10
   725  0466  3445               	retlw	69	;'E'
   726  0467  3473               	retlw	115	;'s'
   727  0468  3474               	retlw	116	;'t'
   728  0469  3461               	retlw	97	;'a'
   729  046A  3464               	retlw	100	;'d'
   730  046B  346F               	retlw	111	;'o'
   731  046C  343A               	retlw	58	;':'
   732  046D  3420               	retlw	32	;' '
   733  046E  3445               	retlw	69	;'E'
   734  046F  346E               	retlw	110	;'n'
   735  0470  3420               	retlw	32	;' '
   736  0471  3465               	retlw	101	;'e'
   737  0472  3473               	retlw	115	;'s'
   738  0473  3470               	retlw	112	;'p'
   739  0474  3465               	retlw	101	;'e'
   740  0475  3472               	retlw	114	;'r'
   741  0476  3461               	retlw	97	;'a'
   742  0477  340A               	retlw	10
   743  0478  3400               	retlw	0
   744  0479                     STR_5:	
   745  0479  340A               	retlw	10
   746  047A  3454               	retlw	84	;'T'
   747  047B  3450               	retlw	80	;'P'
   748  047C  343A               	retlw	58	;':'
   749  047D  3420               	retlw	32	;' '
   750  047E  3425               	retlw	37	;'%'
   751  047F  3464               	retlw	100	;'d'
   752  0480  3420               	retlw	32	;' '
   753  0481  3450               	retlw	80	;'P'
   754  0482  343A               	retlw	58	;':'
   755  0483  3420               	retlw	32	;' '
   756  0484  343F               	retlw	63	;'?'
   757  0485  3425               	retlw	37	;'%'
   758  0486  3464               	retlw	100	;'d'
   759  0487  342C               	retlw	44	;','
   760  0488  3425               	retlw	37	;'%'
   761  0489  3464               	retlw	100	;'d'
   762  048A  340A               	retlw	10
   763  048B  3400               	retlw	0
   764  048C                     STR_2:	
   765  048C  340A               	retlw	10
   766  048D  344C               	retlw	76	;'L'
   767  048E  343A               	retlw	58	;':'
   768  048F  3425               	retlw	37	;'%'
   769  0490  3464               	retlw	100	;'d'
   770  0491  342C               	retlw	44	;','
   771  0492  344E               	retlw	78	;'N'
   772  0493  343A               	retlw	58	;':'
   773  0494  3425               	retlw	37	;'%'
   774  0495  3464               	retlw	100	;'d'
   775  0496  342C               	retlw	44	;','
   776  0497  3454               	retlw	84	;'T'
   777  0498  343A               	retlw	58	;':'
   778  0499  3425               	retlw	37	;'%'
   779  049A  3464               	retlw	100	;'d'
   780  049B  340A               	retlw	10
   781  049C  3400               	retlw	0
   782  049D                     STR_6:	
   783  049D  340A               	retlw	10
   784  049E  3445               	retlw	69	;'E'
   785  049F  3473               	retlw	115	;'s'
   786  04A0  3474               	retlw	116	;'t'
   787  04A1  3461               	retlw	97	;'a'
   788  04A2  3464               	retlw	100	;'d'
   789  04A3  346F               	retlw	111	;'o'
   790  04A4  343A               	retlw	58	;':'
   791  04A5  3420               	retlw	32	;' '
   792  04A6  3441               	retlw	65	;'A'
   793  04A7  3463               	retlw	99	;'c'
   794  04A8  3474               	retlw	116	;'t'
   795  04A9  3469               	retlw	105	;'i'
   796  04AA  3476               	retlw	118	;'v'
   797  04AB  346F               	retlw	111	;'o'
   798  04AC  340A               	retlw	10
   799  04AD  3400               	retlw	0
   800  04AE                     STR_9:	
   801  04AE  340A               	retlw	10
   802  04AF  3450               	retlw	80	;'P'
   803  04B0  3425               	retlw	37	;'%'
   804  04B1  3464               	retlw	100	;'d'
   805  04B2  343D               	retlw	61	;'='
   806  04B3  3425               	retlw	37	;'%'
   807  04B4  3464               	retlw	100	;'d'
   808  04B5  340A               	retlw	10
   809  04B6  3400               	retlw	0
   810  04B7                     STR_1:	
   811  04B7  3456               	retlw	86	;'V'
   812  04B8  343D               	retlw	61	;'='
   813  04B9  3425               	retlw	37	;'%'
   814  04BA  3464               	retlw	100	;'d'
   815  04BB  340A               	retlw	10
   816  04BC  3400               	retlw	0
   817  048C                     
   818                           ; #config settings
   819  0000                     
   820                           	psect	cinit
   821  0011                     start_initialization:	
   822  0011                     __initialization:	
   823                           
   824                           ; Initialize objects allocated to BANK0
   825  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   826  0016  00EF               	movwf	__pdataBANK0& (0+127)
   827                           
   828                           ; Clear objects allocated to BANK3
   829  0017  1783               	bsf	3,7	;select IRP bank2
   830  0018  3090               	movlw	low __pbssBANK3
   831  0019  0084               	movwf	4
   832  001A  309D               	movlw	low (__pbssBANK3+13)
   833  001B  120A  158A  23A0  120A  118A  	fcall	clear_ram0
   834                           
   835                           ; Clear objects allocated to BANK1
   836  0020  1383               	bcf	3,7	;select IRP bank0
   837  0021  30D7               	movlw	low __pbssBANK1
   838  0022  0084               	movwf	4
   839  0023  30E7               	movlw	low (__pbssBANK1+16)
   840  0024  120A  158A  23A0  120A  118A  	fcall	clear_ram0
   841                           
   842                           ; Clear objects allocated to BANK0
   843  0029  3067               	movlw	low __pbssBANK0
   844  002A  0084               	movwf	4
   845  002B  306F               	movlw	low (__pbssBANK0+8)
   846  002C  120A  158A  23A0  120A  118A  	fcall	clear_ram0
   847                           
   848                           ; Clear objects allocated to COMMON
   849  0031  01F6               	clrf	__pbssCOMMON& (0+127)
   850  0032  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   851  0033  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   852  0034  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   853  0035                     end_of_initialization:	
   854                           ;End of C runtime variable initialization code
   855                           
   856  0035                     __end_of__initialization:	
   857  0035  0183               	clrf	3
   858  0036  120A  118A  2839   	ljmp	_main	;jump to C main() function
   859                           
   860                           	psect	bssCOMMON
   861  0076                     __pbssCOMMON:	
   862  0076                     _numProd:	
   863  0076                     	ds	2
   864  0078                     _modoDebug:	
   865  0078                     	ds	1
   866  0079                     _serial:	
   867  0079                     	ds	1
   868                           
   869                           	psect	bssBANK0
   870  0067                     __pbssBANK0:	
   871  0067                     _montosLote:	
   872  0067                     	ds	2
   873  0069                     _productoIngresado:	
   874  0069                     	ds	2
   875  006B                     _auxCuenta:	
   876  006B                     	ds	2
   877  006D                     _cierreLotePedido:	
   878  006D                     	ds	1
   879  006E                     _ventasLote:	
   880  006E                     	ds	1
   881                           
   882                           	psect	dataBANK0
   883  006F                     __pdataBANK0:	
   884  006F                     _nroLote:	
   885  006F                     	ds	1
   886                           
   887                           	psect	bssBANK1
   888  00D7                     __pbssBANK1:	
   889  00D7                     _huboInt:	
   890  00D7                     	ds	2
   891  00D9                     _cuenta:	
   892  00D9                     	ds	2
   893  00DB                     _codigoEntrada:	
   894  00DB                     	ds	10
   895  00E5                     _adresult:	
   896  00E5                     	ds	2
   897                           
   898                           	psect	bssBANK3
   899  0190                     __pbssBANK3:	
   900  0190                     _prodIngresados:	
   901  0190                     	ds	13
   902                           
   903                           	psect	clrtext
   904  0BA0                     clear_ram0:	
   905                           ;	Called with FSR containing the base address, and
   906                           ;	W with the last address+1
   907                           
   908  0BA0  0064               	clrwdt	;clear the watchdog before getting into this loop
   909  0BA1                     clrloop0:	
   910  0BA1  0180               	clrf	0	;clear RAM location pointed to by FSR
   911  0BA2  0A84               	incf	4,f	;increment pointer
   912  0BA3  0604               	xorwf	4,w	;XOR with final address
   913  0BA4  1903               	btfsc	3,2	;have we reached the end yet?
   914  0BA5  3400               	retlw	0	;all done for this memory range, return
   915  0BA6  0604               	xorwf	4,w	;XOR again to restore value
   916  0BA7  2BA1               	goto	clrloop0	;do the next byte
   917                           
   918                           	psect	cstackBANK1
   919  00A0                     __pcstackBANK1:	
   920  00A0                     lecturaConsulta@strLote:	
   921                           
   922                           ; 32 bytes @ 0x0
   923  00A0                     	ds	32
   924  00C0                     lecturaConsulta@articulo:	
   925                           
   926                           ; 2 bytes @ 0x20
   927  00C0                     	ds	2
   928  00C2                     ??_main:	
   929                           
   930                           ; 1 bytes @ 0x22
   931  00C2                     	ds	2
   932  00C4                     main@bufferMsj:	
   933                           
   934                           ; 16 bytes @ 0x24
   935  00C4                     	ds	16
   936  00D4                     _main$972:	
   937                           
   938                           ; 2 bytes @ 0x34
   939  00D4                     	ds	2
   940  00D6                     main@i:	
   941                           
   942                           ; 1 bytes @ 0x36
   943  00D6                     	ds	1
   944                           
   945                           	psect	cstackCOMMON
   946  0070                     __pcstackCOMMON:	
   947  0070                     ?_accionesAceptar:	
   948  0070                     ?_accionesDeshacer:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_accionesPuertoSerial:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_eeprom_read:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_agregarModificarPrecio:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_main:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_int_usart:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ??_int_usart:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_lecturaEtiqueta:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_verificacionEntrada:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_cierreDeLote:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_lecturaMas:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_lecturaMenos:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_lecturaConsulta:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_lecturaComando:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_bailenLeds:	
   991                           ; 1 bytes @ 0x0
   992                           
   993                           
   994                           ; 1 bytes @ 0x0
   995  0070                     	ds	4
   996  0074                     ?_envioTX:	
   997  0074                     ??_eeprom_read:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ?_eeprom_write:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0074                     ??_verificacionEntrada:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  0074                     ??___wmul:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     ?___bmul:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0074                     ??___awdiv:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015  0074                     ??___awmod:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018  0074                     ??___lwdiv:	
  1019                           ; 1 bytes @ 0x4
  1020                           
  1021  0074                     eeprom_write@value:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024  0074                     ___bmul@multiplicand:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027  0074                     bailenLeds@i:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030  0074                     envioTX@mensaje:	
  1031                           ; 2 bytes @ 0x4
  1032                           
  1033  0074                     ___wmul@product:	
  1034                           ; 2 bytes @ 0x4
  1035                           
  1036                           
  1037                           ; 2 bytes @ 0x4
  1038  0074                     	ds	1
  1039  0075                     ??_eeprom_write:	
  1040  0075                     ??___bmul:	
  1041                           ; 1 bytes @ 0x5
  1042                           
  1043  0075                     ??___lwmod:	
  1044                           ; 1 bytes @ 0x5
  1045                           
  1046  0075                     eeprom_read@addr:	
  1047                           ; 1 bytes @ 0x5
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x5
  1051  0075                     	ds	1
  1052  0076                     ??_mostrarDigitos:	
  1053  0076                     ??_accionesDeshacer:	
  1054                           ; 1 bytes @ 0x6
  1055                           
  1056  0076                     ??_lecturaMas:	
  1057                           ; 1 bytes @ 0x6
  1058                           
  1059  0076                     ??_lecturaMenos:	
  1060                           ; 1 bytes @ 0x6
  1061                           
  1062  0076                     ??_lecturaComando:	
  1063                           ; 1 bytes @ 0x6
  1064                           
  1065  0076                     ??_pow:	
  1066                           ; 1 bytes @ 0x6
  1067                           
  1068                           
  1069                           	psect	cstackBANK0
  1070  0020                     __pcstackBANK0:	
  1071                           ; 1 bytes @ 0x6
  1072                           
  1073  0020                     ??_envioTX:	
  1074  0020                     ??_bailenLeds:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0020                     ?___wmul:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0020                     ?___awdiv:	
  1081                           ; 2 bytes @ 0x0
  1082                           
  1083  0020                     ?___awmod:	
  1084                           ; 2 bytes @ 0x0
  1085                           
  1086  0020                     ?___lwdiv:	
  1087                           ; 2 bytes @ 0x0
  1088                           
  1089  0020                     verificacionEntrada@ret:	
  1090                           ; 2 bytes @ 0x0
  1091                           
  1092  0020                     eeprom_write@addr:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0020                     ___bmul@product:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0020                     ___wmul@multiplier:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0020                     ___awdiv@divisor:	
  1102                           ; 2 bytes @ 0x0
  1103                           
  1104  0020                     ___awmod@divisor:	
  1105                           ; 2 bytes @ 0x0
  1106                           
  1107  0020                     ___lwdiv@divisor:	
  1108                           ; 2 bytes @ 0x0
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x0
  1112  0020                     	ds	1
  1113  0021                     verificacionEntrada@i:	
  1114  0021                     ___bmul@multiplier:	
  1115                           ; 1 bytes @ 0x1
  1116                           
  1117                           
  1118                           ; 1 bytes @ 0x1
  1119  0021                     	ds	1
  1120  0022                     ___wmul@multiplicand:	
  1121  0022                     ___awdiv@dividend:	
  1122                           ; 2 bytes @ 0x2
  1123                           
  1124  0022                     ___awmod@dividend:	
  1125                           ; 2 bytes @ 0x2
  1126                           
  1127  0022                     ___lwdiv@dividend:	
  1128                           ; 2 bytes @ 0x2
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0x2
  1132  0022                     	ds	1
  1133  0023                     envioTX@i:	
  1134                           
  1135                           ; 2 bytes @ 0x3
  1136  0023                     	ds	1
  1137  0024                     ?_pow:	
  1138  0024                     ___awdiv@counter:	
  1139                           ; 2 bytes @ 0x4
  1140                           
  1141  0024                     ___awmod@counter:	
  1142                           ; 1 bytes @ 0x4
  1143                           
  1144  0024                     ___lwdiv@counter:	
  1145                           ; 1 bytes @ 0x4
  1146                           
  1147  0024                     pow@numero:	
  1148                           ; 1 bytes @ 0x4
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x4
  1152  0024                     	ds	1
  1153  0025                     envioTX@transmitir:	
  1154  0025                     ___awdiv@sign:	
  1155                           ; 1 bytes @ 0x5
  1156                           
  1157  0025                     ___awmod@sign:	
  1158                           ; 1 bytes @ 0x5
  1159                           
  1160  0025                     ___lwdiv@quotient:	
  1161                           ; 1 bytes @ 0x5
  1162                           
  1163                           
  1164                           ; 2 bytes @ 0x5
  1165  0025                     	ds	1
  1166  0026                     pow@potencia:	
  1167  0026                     ___awdiv@quotient:	
  1168                           ; 2 bytes @ 0x6
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0x6
  1172  0026                     	ds	1
  1173  0027                     ?___lwmod:	
  1174  0027                     ___lwmod@divisor:	
  1175                           ; 2 bytes @ 0x7
  1176                           
  1177                           
  1178                           ; 2 bytes @ 0x7
  1179  0027                     	ds	1
  1180  0028                     pow@i:	
  1181                           
  1182                           ; 2 bytes @ 0x8
  1183  0028                     	ds	1
  1184  0029                     ___lwmod@dividend:	
  1185                           
  1186                           ; 2 bytes @ 0x9
  1187  0029                     	ds	1
  1188  002A                     pow@resultado:	
  1189                           
  1190                           ; 2 bytes @ 0xA
  1191  002A                     	ds	1
  1192  002B                     ___lwmod@counter:	
  1193                           
  1194                           ; 1 bytes @ 0xB
  1195  002B                     	ds	1
  1196  002C                     ?_mostrarDigitos:	
  1197  002C                     ?_verificarProd:	
  1198                           ; 1 bytes @ 0xC
  1199                           
  1200  002C                     ?_ingresoProd:	
  1201                           ; 1 bytes @ 0xC
  1202                           
  1203  002C                     ?_eliminarProd:	
  1204                           ; 1 bytes @ 0xC
  1205                           
  1206  002C                     ?_sprintf:	
  1207                           ; 1 bytes @ 0xC
  1208                           
  1209  002C                     sprintf@f:	
  1210                           ; 2 bytes @ 0xC
  1211                           
  1212  002C                     ingresoProd@tp:	
  1213                           ; 1 bytes @ 0xC
  1214                           
  1215  002C                     verificarProd@tp:	
  1216                           ; 2 bytes @ 0xC
  1217                           
  1218  002C                     eliminarProd@tp:	
  1219                           ; 2 bytes @ 0xC
  1220                           
  1221  002C                     mostrarDigitos@num:	
  1222                           ; 2 bytes @ 0xC
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0xC
  1226  002C                     	ds	2
  1227  002E                     ??_verificarProd:	
  1228  002E                     ??_ingresoProd:	
  1229                           ; 1 bytes @ 0xE
  1230                           
  1231  002E                     ??_eliminarProd:	
  1232                           ; 1 bytes @ 0xE
  1233                           
  1234  002E                     _mostrarDigitos$973:	
  1235                           ; 1 bytes @ 0xE
  1236                           
  1237                           
  1238                           ; 2 bytes @ 0xE
  1239  002E                     	ds	2
  1240  0030                     ??_accionesAceptar:	
  1241                           
  1242                           ; 1 bytes @ 0x10
  1243  0030                     	ds	1
  1244  0031                     verificarProd@ret:	
  1245  0031                     ingresoProd@i:	
  1246                           ; 1 bytes @ 0x11
  1247                           
  1248  0031                     eliminarProd@i:	
  1249                           ; 2 bytes @ 0x11
  1250                           
  1251  0031                     accionesAceptar@i:	
  1252                           ; 2 bytes @ 0x11
  1253                           
  1254                           
  1255                           ; 2 bytes @ 0x11
  1256  0031                     	ds	1
  1257  0032                     verificarProd@i:	
  1258                           
  1259                           ; 2 bytes @ 0x12
  1260  0032                     	ds	1
  1261  0033                     ??_sprintf:	
  1262                           
  1263                           ; 1 bytes @ 0x13
  1264  0033                     	ds	1
  1265  0034                     ?_EEPROM_search:	
  1266                           
  1267                           ; 2 bytes @ 0x14
  1268  0034                     	ds	2
  1269  0036                     ??_EEPROM_search:	
  1270  0036                     sprintf@ap:	
  1271                           ; 1 bytes @ 0x16
  1272                           
  1273                           
  1274                           ; 1 bytes @ 0x16
  1275  0036                     	ds	1
  1276  0037                     sprintf@flag:	
  1277                           
  1278                           ; 1 bytes @ 0x17
  1279  0037                     	ds	1
  1280  0038                     sprintf@prec:	
  1281                           
  1282                           ; 1 bytes @ 0x18
  1283  0038                     	ds	1
  1284  0039                     sprintf@val:	
  1285                           
  1286                           ; 2 bytes @ 0x19
  1287  0039                     	ds	1
  1288  003A                     EEPROM_search@precio:	
  1289                           
  1290                           ; 2 bytes @ 0x1A
  1291  003A                     	ds	1
  1292  003B                     sprintf@sp:	
  1293                           
  1294                           ; 1 bytes @ 0x1B
  1295  003B                     	ds	1
  1296  003C                     EEPROM_search@tp:	
  1297  003C                     sprintf@c:	
  1298                           ; 1 bytes @ 0x1C
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0x1C
  1302  003C                     	ds	1
  1303  003D                     ??_agregarModificarPrecio:	
  1304  003D                     ??_lecturaEtiqueta:	
  1305                           ; 1 bytes @ 0x1D
  1306                           
  1307  003D                     ??_cierreDeLote:	
  1308                           ; 1 bytes @ 0x1D
  1309                           
  1310  003D                     ?_consultaPrecio:	
  1311                           ; 1 bytes @ 0x1D
  1312                           
  1313  003D                     consultaPrecio@articulo:	
  1314                           ; 1 bytes @ 0x1D
  1315                           
  1316                           
  1317                           ; 2 bytes @ 0x1D
  1318  003D                     	ds	2
  1319  003F                     ??_consultaPrecio:	
  1320                           
  1321                           ; 1 bytes @ 0x1F
  1322  003F                     	ds	1
  1323  0040                     lecturaEtiqueta@i:	
  1324                           
  1325                           ; 2 bytes @ 0x20
  1326  0040                     	ds	2
  1327  0042                     lecturaEtiqueta@tp:	
  1328  0042                     cierreDeLote@strLote:	
  1329                           ; 1 bytes @ 0x22
  1330                           
  1331                           
  1332                           ; 32 bytes @ 0x22
  1333  0042                     	ds	1
  1334  0043                     lecturaEtiqueta@Aux:	
  1335  0043                     consultaPrecio@mensaje:	
  1336                           ; 2 bytes @ 0x23
  1337                           
  1338                           
  1339                           ; 26 bytes @ 0x23
  1340  0043                     	ds	4
  1341  0047                     agregarModificarPrecio@mensaje:	
  1342                           
  1343                           ; 10 bytes @ 0x27
  1344  0047                     	ds	10
  1345  0051                     agregarModificarPrecio@lower_8bits:	
  1346                           
  1347                           ; 1 bytes @ 0x31
  1348  0051                     	ds	1
  1349  0052                     agregarModificarPrecio@upper_8bits:	
  1350                           
  1351                           ; 1 bytes @ 0x32
  1352  0052                     	ds	1
  1353  0053                     agregarModificarPrecio@precio:	
  1354                           
  1355                           ; 2 bytes @ 0x33
  1356  0053                     	ds	2
  1357  0055                     agregarModificarPrecio@tp:	
  1358                           
  1359                           ; 1 bytes @ 0x35
  1360  0055                     	ds	8
  1361  005D                     consultaPrecio@precio:	
  1362                           
  1363                           ; 2 bytes @ 0x3D
  1364  005D                     	ds	2
  1365  005F                     ??_lecturaConsulta:	
  1366                           
  1367                           ; 1 bytes @ 0x3F
  1368  005F                     	ds	5
  1369  0064                     ??_accionesPuertoSerial:	
  1370                           
  1371                           ; 1 bytes @ 0x44
  1372  0064                     	ds	3
  1373                           
  1374                           	psect	maintext
  1375  0039                     __pmaintext:	
  1376 ;;
  1377 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1378 ;;
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 9 in file "main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  i               1   54[BANK1 ] unsigned char 
  1386 ;;  bufferMsj      16   36[BANK1 ] unsigned char [16]
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : B00/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       0       0       0       0
  1397 ;;      Locals:         0       0      19       0       0
  1398 ;;      Temps:          0       0       2       0       0
  1399 ;;      Totals:         0       0      21       0       0
  1400 ;;Total ram usage:       21 bytes
  1401 ;; Hardware stack levels required when called:    7
  1402 ;; This function calls:
  1403 ;;		___lwmod
  1404 ;;		___wmul
  1405 ;;		_accionesAceptar
  1406 ;;		_accionesDeshacer
  1407 ;;		_accionesPuertoSerial
  1408 ;;		_envioTX
  1409 ;;		_mostrarDigitos
  1410 ;;		_sprintf
  1411 ;; This function is called by:
  1412 ;;		Startup code after reset
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _main
  1418  0039                     _main:	
  1419  0039                     l2949:	
  1420                           ;incstack = 0
  1421                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1422                           
  1423                           
  1424                           ;main.c: 13:     TRISA = 0x01;
  1425  0039  3001               	movlw	1
  1426  003A  1683               	bsf	3,5	;RP0=1, select bank1
  1427  003B  1303               	bcf	3,6	;RP1=0, select bank1
  1428  003C  0085               	movwf	5	;volatile
  1429                           
  1430                           ;main.c: 14:     TRISE = 0x07;
  1431  003D  3007               	movlw	7
  1432  003E  0089               	movwf	9	;volatile
  1433  003F                     l2951:	
  1434                           
  1435                           ;main.c: 15:     TRISB = 0x00;
  1436  003F  0186               	clrf	6	;volatile
  1437  0040                     l2953:	
  1438                           
  1439                           ;main.c: 16:     TRISD = 0x00;
  1440  0040  0188               	clrf	8	;volatile
  1441                           
  1442                           ;main.c: 19:     ADCON0 = 0b01000001;
  1443  0041  3041               	movlw	65
  1444  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0044  009F               	movwf	31	;volatile
  1447                           
  1448                           ;main.c: 20:     ADCON1 = 0b00001110;
  1449  0045  300E               	movlw	14
  1450  0046  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0047  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0048  009F               	movwf	31	;volatile
  1453                           
  1454                           ;main.c: 21:     INTCON = 0b11000000;
  1455  0049  30C0               	movlw	192
  1456  004A  008B               	movwf	11	;volatile
  1457                           
  1458                           ;main.c: 24:     TRISC = 0b10000000;
  1459  004B  3080               	movlw	128
  1460  004C  0087               	movwf	7	;volatile
  1461                           
  1462                           ;main.c: 25:     TXSTA = 0b00100110;
  1463  004D  3026               	movlw	38
  1464  004E  0098               	movwf	24	;volatile
  1465                           
  1466                           ;main.c: 26:     RCSTA = 0b10010000;
  1467  004F  3090               	movlw	144
  1468  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0052  0098               	movwf	24	;volatile
  1471                           
  1472                           ;main.c: 27:     SPBRG = 25;
  1473  0053  3019               	movlw	25
  1474  0054  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0055  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0056  0099               	movwf	25	;volatile
  1477  0057                     l2955:	
  1478                           
  1479                           ;main.c: 30:     ADIF = 0;
  1480  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0059  130C               	bcf	12,6	;volatile
  1483  005A                     l2957:	
  1484                           
  1485                           ;main.c: 31:     ADIE = 1;
  1486  005A  1683               	bsf	3,5	;RP0=1, select bank1
  1487  005B  1303               	bcf	3,6	;RP1=0, select bank1
  1488  005C  170C               	bsf	12,6	;volatile
  1489  005D                     l2959:	
  1490                           
  1491                           ;main.c: 32:     RCIE = 1;
  1492  005D  168C               	bsf	12,5	;volatile
  1493  005E                     l2961:	
  1494                           
  1495                           ;main.c: 33:     cuenta = 0;
  1496  005E  01D9               	clrf	_cuenta^(0+128)
  1497  005F  01DA               	clrf	(_cuenta+1)^(0+128)
  1498  0060                     l2963:	
  1499                           
  1500                           ;main.c: 34:     auxCuenta = 0;
  1501  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0062  01EB               	clrf	_auxCuenta
  1504  0063  01EC               	clrf	_auxCuenta+1
  1505  0064                     l2965:	
  1506                           
  1507                           ;main.c: 35:     mostrarDigitos(cuenta);
  1508  0064  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0065  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0066  085A               	movf	(_cuenta+1)^(0+128),w
  1511  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0069  00AD               	movwf	mostrarDigitos@num+1
  1514  006A  1683               	bsf	3,5	;RP0=1, select bank1
  1515  006B  1303               	bcf	3,6	;RP1=0, select bank1
  1516  006C  0859               	movf	_cuenta^(0+128),w
  1517  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1518  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1519  006F  00AC               	movwf	mostrarDigitos@num
  1520  0070  120A  118A  26E8  120A  118A  	fcall	_mostrarDigitos
  1521  0075                     l2967:	
  1522                           
  1523                           ;main.c: 41:         if(RE0) {
  1524  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0077  1C09               	btfss	9,0	;volatile
  1527  0078  287A               	goto	u3211
  1528  0079  287B               	goto	u3210
  1529  007A                     u3211:	
  1530  007A  2885               	goto	l88
  1531  007B                     u3210:	
  1532  007B                     l89:	
  1533  007B  1809               	btfsc	9,0	;volatile
  1534  007C  287E               	goto	u3221
  1535  007D  287F               	goto	u3220
  1536  007E                     u3221:	
  1537  007E  287B               	goto	l89
  1538  007F                     u3220:	
  1539  007F                     l2971:	
  1540                           
  1541                           ;main.c: 43:             accionesAceptar();
  1542  007F  120A  158A  2692  120A  118A  	fcall	_accionesAceptar
  1543                           
  1544                           ;main.c: 44:         }
  1545  0084  2875               	goto	l2967
  1546  0085                     l88:	
  1547                           ;main.c: 45:         else if(RE1) {
  1548                           
  1549  0085  1C89               	btfss	9,1	;volatile
  1550  0086  2888               	goto	u3231
  1551  0087  2889               	goto	u3230
  1552  0088                     u3231:	
  1553  0088  2893               	goto	l93
  1554  0089                     u3230:	
  1555  0089                     l94:	
  1556  0089  1889               	btfsc	9,1	;volatile
  1557  008A  288C               	goto	u3241
  1558  008B  288D               	goto	u3240
  1559  008C                     u3241:	
  1560  008C  2889               	goto	l94
  1561  008D                     u3240:	
  1562  008D                     l2975:	
  1563                           
  1564                           ;main.c: 47:             accionesDeshacer();
  1565  008D  120A  158A  2550  120A  118A  	fcall	_accionesDeshacer
  1566                           
  1567                           ;main.c: 48:         }
  1568  0092  2875               	goto	l2967
  1569  0093                     l93:	
  1570                           ;main.c: 49:         else if(RE2) {
  1571                           
  1572  0093  1D09               	btfss	9,2	;volatile
  1573  0094  2896               	goto	u3251
  1574  0095  2897               	goto	u3250
  1575  0096                     u3251:	
  1576  0096  289E               	goto	l2979
  1577  0097                     u3250:	
  1578  0097                     l99:	
  1579  0097  1909               	btfsc	9,2	;volatile
  1580  0098  289A               	goto	u3261
  1581  0099  289B               	goto	u3260
  1582  009A                     u3261:	
  1583  009A  2897               	goto	l99
  1584  009B                     u3260:	
  1585  009B                     l101:	
  1586                           
  1587                           ;main.c: 51:             cierreLotePedido = 1;
  1588  009B  01ED               	clrf	_cierreLotePedido
  1589  009C  0AED               	incf	_cierreLotePedido,f
  1590                           
  1591                           ;main.c: 52:         }
  1592  009D  2875               	goto	l2967
  1593  009E                     l2979:	
  1594  009E  1683               	bsf	3,5	;RP0=1, select bank1
  1595  009F  1303               	bcf	3,6	;RP1=0, select bank1
  1596  00A0  0857               	movf	_huboInt^(0+128),w
  1597  00A1  0458               	iorwf	(_huboInt+1)^(0+128),w
  1598  00A2  1903               	btfsc	3,2
  1599  00A3  28A5               	goto	u3271
  1600  00A4  28A6               	goto	u3270
  1601  00A5                     u3271:	
  1602  00A5  28C0               	goto	l2997
  1603  00A6                     u3270:	
  1604  00A6                     l2981:	
  1605                           
  1606                           ;main.c: 54:             huboInt = 0;
  1607  00A6  01D7               	clrf	_huboInt^(0+128)
  1608  00A7  01D8               	clrf	(_huboInt+1)^(0+128)
  1609  00A8                     l2983:	
  1610                           
  1611                           ;main.c: 55:             accionesPuertoSerial();
  1612  00A8  120A  158A  25C7  120A  118A  	fcall	_accionesPuertoSerial
  1613  00AD                     l2985:	
  1614                           
  1615                           ;main.c: 56:             for(char i = 0; i < 10; i++){
  1616  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  1617  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  1618  00AF  01D6               	clrf	main@i^(0+128)
  1619  00B0                     l2991:	
  1620                           
  1621                           ;main.c: 57:                 codigoEntrada[i] = 0;
  1622  00B0  0856               	movf	main@i^(0+128),w
  1623  00B1  3EDB               	addlw	(low (_codigoEntrada| 0))& (0+255)
  1624  00B2  0084               	movwf	4
  1625  00B3  1383               	bcf	3,7	;select IRP bank1
  1626  00B4  0180               	clrf	0
  1627  00B5                     l2993:	
  1628                           
  1629                           ;main.c: 58:             }
  1630  00B5  3001               	movlw	1
  1631  00B6  00C2               	movwf	??_main^(0+128)
  1632  00B7  0842               	movf	??_main^(0+128),w
  1633  00B8  07D6               	addwf	main@i^(0+128),f
  1634  00B9                     l2995:	
  1635  00B9  300A               	movlw	10
  1636  00BA  0256               	subwf	main@i^(0+128),w
  1637  00BB  1C03               	skipc
  1638  00BC  28BE               	goto	u3281
  1639  00BD  28BF               	goto	u3280
  1640  00BE                     u3281:	
  1641  00BE  28B0               	goto	l2991
  1642  00BF                     u3280:	
  1643  00BF  2875               	goto	l2967
  1644  00C0                     l2997:	
  1645  00C0  0865               	movf	_adresult^(0+128),w
  1646  00C1  0466               	iorwf	(_adresult+1)^(0+128),w
  1647  00C2  1903               	btfsc	3,2
  1648  00C3  28C5               	goto	u3291
  1649  00C4  28C6               	goto	u3290
  1650  00C5                     u3291:	
  1651  00C5  2939               	goto	l97
  1652  00C6                     u3290:	
  1653  00C6                     l2999:	
  1654                           
  1655                           ;main.c: 62:             adresult = adresult*1000*5/1024;
  1656  00C6  0866               	movf	(_adresult+1)^(0+128),w
  1657  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1658  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1659  00C9  00A1               	movwf	___wmul@multiplier+1
  1660  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1661  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1662  00CC  0865               	movf	_adresult^(0+128),w
  1663  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1664  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1665  00CF  00A0               	movwf	___wmul@multiplier
  1666  00D0  3088               	movlw	136
  1667  00D1  00A2               	movwf	___wmul@multiplicand
  1668  00D2  3013               	movlw	19
  1669  00D3  00A3               	movwf	___wmul@multiplicand+1
  1670  00D4  120A  158A  23F6  120A  118A  	fcall	___wmul
  1671  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1672  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1673  00DB  0820               	movf	?___wmul,w
  1674  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1675  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1676  00DE  00C2               	movwf	??_main^(0+128)
  1677  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1678  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1679  00E1  0821               	movf	?___wmul+1,w
  1680  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1681  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1682  00E4  00C3               	movwf	(??_main^(0+128)+1)
  1683  00E5  300A               	movlw	10
  1684  00E6                     u3305:	
  1685  00E6  1003               	clrc
  1686  00E7  0CC3               	rrf	(??_main^(0+128)+1),f
  1687  00E8  0CC2               	rrf	??_main^(0+128),f
  1688  00E9  3EFF               	addlw	-1
  1689  00EA  1D03               	skipz
  1690  00EB  28E6               	goto	u3305
  1691  00EC  0842               	movf	??_main^(0+128),w
  1692  00ED  00E5               	movwf	_adresult^(0+128)
  1693  00EE  0843               	movf	(??_main+1)^(0+128),w
  1694  00EF  00E6               	movwf	(_adresult+1)^(0+128)
  1695                           
  1696                           ;main.c: 63:             char bufferMsj[16];;main.c: 64:             sprintf(bufferMsj,"
      +                          V=%d\n",adresult%1000);
  1697  00F0  30E8               	movlw	232
  1698  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1699  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1700  00F3  00A7               	movwf	___lwmod@divisor
  1701  00F4  3003               	movlw	3
  1702  00F5  00A8               	movwf	___lwmod@divisor+1
  1703  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1704  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1705  00F8  0866               	movf	(_adresult+1)^(0+128),w
  1706  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1707  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1708  00FB  00AA               	movwf	___lwmod@dividend+1
  1709  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1710  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1711  00FE  0865               	movf	_adresult^(0+128),w
  1712  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0101  00A9               	movwf	___lwmod@dividend
  1715  0102  120A  158A  258B  120A  118A  	fcall	___lwmod
  1716  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0109  0828               	movf	?___lwmod+1,w
  1719  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1720  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1721  010C  00D5               	movwf	(_main$972+1)^(0+128)
  1722  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1723  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1724  010F  0827               	movf	?___lwmod,w
  1725  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0112  00D4               	movwf	_main$972^(0+128)
  1728  0113                     l3001:	
  1729                           
  1730                           ;main.c: 63:             char bufferMsj[16];;main.c: 64:             sprintf(bufferMsj,"
      +                          V=%d\n",adresult%1000);
  1731  0113  30A8               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1732  0114  00C2               	movwf	??_main^(0+128)
  1733  0115  0842               	movf	??_main^(0+128),w
  1734  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0118  00AC               	movwf	sprintf@f
  1737  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1738  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1739  011B  0855               	movf	(_main$972+1)^(0+128),w
  1740  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1741  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1742  011E  00AE               	movwf	?_sprintf+2
  1743  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1745  0121  0854               	movf	_main$972^(0+128),w
  1746  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0124  00AD               	movwf	?_sprintf+1
  1749  0125  30C4               	movlw	(low (main@bufferMsj| 0))& (0+255)
  1750  0126  120A  118A  2235  120A  118A  	fcall	_sprintf
  1751  012B                     l3003:	
  1752                           
  1753                           ;main.c: 65:             envioTX(bufferMsj);
  1754  012B  30C4               	movlw	(low (main@bufferMsj| 0))& (0+255)
  1755  012C  00F4               	movwf	envioTX@mensaje
  1756  012D  3000               	movlw	0
  1757  012E  00F5               	movwf	envioTX@mensaje+1
  1758  012F  120A  158A  24AA  120A  118A  	fcall	_envioTX
  1759  0134                     l3005:	
  1760                           
  1761                           ;main.c: 66:             adresult = 0;
  1762  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0136  01E5               	clrf	_adresult^(0+128)
  1765  0137  01E6               	clrf	(_adresult+1)^(0+128)
  1766  0138  2875               	goto	l2967
  1767  0139                     l97:	
  1768  0139  2875               	goto	l2967
  1769  013A  120A  118A  280E   	ljmp	start
  1770  013D                     __end_of_main:	
  1771                           
  1772                           	psect	text1
  1773  0DC7                     __ptext1:	
  1774 ;; *************** function _accionesPuertoSerial *****************
  1775 ;; Defined at:
  1776 ;;		line 25 in file "acciones.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0
  1792 ;;      Temps:          0       3       0       0       0
  1793 ;;      Totals:         0       3       0       0       0
  1794 ;;Total ram usage:        3 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    6
  1797 ;; This function calls:
  1798 ;;		_lecturaComando
  1799 ;;		_lecturaEtiqueta
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           
  1806                           ;psect for function _accionesPuertoSerial
  1807  0DC7                     _accionesPuertoSerial:	
  1808  0DC7                     l2931:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1811                           
  1812                           
  1813                           ;acciones.c: 26:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codi
      +                          goEntrada[0] == '-')) {
  1814  0DC7  303F               	movlw	63
  1815  0DC8  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0DC9  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0DCA  065B               	xorwf	_codigoEntrada^(0+128),w
  1818  0DCB  1903               	btfsc	3,2
  1819  0DCC  2DCE               	goto	u3161
  1820  0DCD  2DCF               	goto	u3160
  1821  0DCE                     u3161:	
  1822  0DCE  2DDB               	goto	l2937
  1823  0DCF                     u3160:	
  1824  0DCF                     l2933:	
  1825  0DCF  302B               	movlw	43
  1826  0DD0  065B               	xorwf	_codigoEntrada^(0+128),w
  1827  0DD1  1903               	btfsc	3,2
  1828  0DD2  2DD4               	goto	u3171
  1829  0DD3  2DD5               	goto	u3170
  1830  0DD4                     u3171:	
  1831  0DD4  2DDB               	goto	l2937
  1832  0DD5                     u3170:	
  1833  0DD5                     l2935:	
  1834  0DD5  302D               	movlw	45
  1835  0DD6  065B               	xorwf	_codigoEntrada^(0+128),w
  1836  0DD7  1D03               	btfss	3,2
  1837  0DD8  2DDA               	goto	u3181
  1838  0DD9  2DDB               	goto	u3180
  1839  0DDA                     u3181:	
  1840  0DDA  2DE1               	goto	l2939
  1841  0DDB                     u3180:	
  1842  0DDB                     l2937:	
  1843                           
  1844                           ;acciones.c: 27:         lecturaComando();
  1845  0DDB  120A  158A  23D6  120A  158A  	fcall	_lecturaComando
  1846                           
  1847                           ;acciones.c: 28:     }
  1848  0DE0  2E07               	goto	l356
  1849  0DE1                     l2939:	
  1850  0DE1  303A               	movlw	58
  1851  0DE2  025B               	subwf	_codigoEntrada^(0+128),w
  1852  0DE3  1803               	skipnc
  1853  0DE4  2DE6               	goto	u3191
  1854  0DE5  2DE7               	goto	u3190
  1855  0DE6                     u3191:	
  1856  0DE6  2DF3               	goto	l354
  1857  0DE7                     u3190:	
  1858  0DE7                     l2941:	
  1859  0DE7  3030               	movlw	48
  1860  0DE8  025B               	subwf	_codigoEntrada^(0+128),w
  1861  0DE9  1C03               	skipc
  1862  0DEA  2DEC               	goto	u3201
  1863  0DEB  2DED               	goto	u3200
  1864  0DEC                     u3201:	
  1865  0DEC  2DF3               	goto	l354
  1866  0DED                     u3200:	
  1867  0DED                     l2943:	
  1868                           
  1869                           ;acciones.c: 30:         lecturaEtiqueta();
  1870  0DED  120A  118A  213D  120A  158A  	fcall	_lecturaEtiqueta
  1871                           
  1872                           ;acciones.c: 31:     }
  1873  0DF2  2E07               	goto	l356
  1874  0DF3                     l354:	
  1875                           ;acciones.c: 32:     else{
  1876                           
  1877                           
  1878                           ;acciones.c: 34:         RA5 = 1;
  1879  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0DF5  1685               	bsf	5,5	;volatile
  1882  0DF6                     l2945:	
  1883                           
  1884                           ;acciones.c: 35:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1885  0DF6  3006               	movlw	6
  1886  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0DF9  00E6               	movwf	??_accionesPuertoSerial+2
  1889  0DFA  3013               	movlw	19
  1890  0DFB  00E5               	movwf	??_accionesPuertoSerial+1
  1891  0DFC  30AD               	movlw	173
  1892  0DFD  00E4               	movwf	??_accionesPuertoSerial
  1893  0DFE                     u3317:	
  1894  0DFE  0BE4               	decfsz	??_accionesPuertoSerial,f
  1895  0DFF  2DFE               	goto	u3317
  1896  0E00  0BE5               	decfsz	??_accionesPuertoSerial+1,f
  1897  0E01  2DFE               	goto	u3317
  1898  0E02  0BE6               	decfsz	??_accionesPuertoSerial+2,f
  1899  0E03  2DFE               	goto	u3317
  1900  0E04                     l2947:	
  1901                           
  1902                           ;acciones.c: 36:         RA5 = 0;
  1903  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0E06  1285               	bcf	5,5	;volatile
  1906  0E07                     l356:	
  1907  0E07  0008               	return
  1908  0E08                     __end_of_accionesPuertoSerial:	
  1909                           
  1910                           	psect	text2
  1911  013D                     __ptext2:	
  1912 ;; *************** function _lecturaEtiqueta *****************
  1913 ;; Defined at:
  1914 ;;		line 17 in file "lectura.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  tp              1   34[BANK0 ] unsigned char 
  1919 ;;  i               2   32[BANK0 ] int 
  1920 ;;  Aux             2   35[BANK0 ] short 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         0       5       0       0       0
  1932 ;;      Temps:          0       3       0       0       0
  1933 ;;      Totals:         0       8       0       0       0
  1934 ;;Total ram usage:        8 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    5
  1937 ;; This function calls:
  1938 ;;		_EEPROM_search
  1939 ;;		___awmod
  1940 ;;		___bmul
  1941 ;;		_ingresoProd
  1942 ;;		_mostrarDigitos
  1943 ;; This function is called by:
  1944 ;;		_accionesPuertoSerial
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _lecturaEtiqueta
  1950  013D                     _lecturaEtiqueta:	
  1951  013D                     l2809:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1954                           
  1955                           
  1956                           ;lectura.c: 18:     short int Aux = 0;
  1957  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1958  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1959  013F  01C3               	clrf	lecturaEtiqueta@Aux
  1960  0140  01C4               	clrf	lecturaEtiqueta@Aux+1
  1961                           
  1962                           ;lectura.c: 21:     for (int i = 0; i < 8; i++ ) {
  1963  0141  01C0               	clrf	lecturaEtiqueta@i
  1964  0142  01C1               	clrf	lecturaEtiqueta@i+1
  1965  0143                     l2815:	
  1966                           
  1967                           ;lectura.c: 22:         Aux += (codigoEntrada[i] - '0');
  1968  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0145  0840               	movf	lecturaEtiqueta@i,w
  1971  0146  3EDB               	addlw	(low (_codigoEntrada| 0))& (0+255)
  1972  0147  0084               	movwf	4
  1973  0148  1383               	bcf	3,7	;select IRP bank1
  1974  0149  0800               	movf	0,w
  1975  014A  3ED0               	addlw	208
  1976  014B  00BD               	movwf	??_lecturaEtiqueta
  1977  014C  30FF               	movlw	255
  1978  014D  1803               	skipnc
  1979  014E  3000               	movlw	0
  1980  014F  00BE               	movwf	??_lecturaEtiqueta+1
  1981  0150  083D               	movf	??_lecturaEtiqueta,w
  1982  0151  07C3               	addwf	lecturaEtiqueta@Aux,f
  1983  0152  1803               	skipnc
  1984  0153  0AC4               	incf	lecturaEtiqueta@Aux+1,f
  1985  0154  083E               	movf	??_lecturaEtiqueta+1,w
  1986  0155  07C4               	addwf	lecturaEtiqueta@Aux+1,f
  1987  0156                     l2817:	
  1988                           
  1989                           ;lectura.c: 23:     }
  1990  0156  3001               	movlw	1
  1991  0157  07C0               	addwf	lecturaEtiqueta@i,f
  1992  0158  1803               	skipnc
  1993  0159  0AC1               	incf	lecturaEtiqueta@i+1,f
  1994  015A  3000               	movlw	0
  1995  015B  07C1               	addwf	lecturaEtiqueta@i+1,f
  1996  015C                     l2819:	
  1997  015C  0841               	movf	lecturaEtiqueta@i+1,w
  1998  015D  3A80               	xorlw	128
  1999  015E  00FF               	movwf	btemp+1
  2000  015F  3080               	movlw	128
  2001  0160  027F               	subwf	btemp+1,w
  2002  0161  1D03               	skipz
  2003  0162  2965               	goto	u3055
  2004  0163  3008               	movlw	8
  2005  0164  0240               	subwf	lecturaEtiqueta@i,w
  2006  0165                     u3055:	
  2007  0165  1C03               	skipc
  2008  0166  2968               	goto	u3051
  2009  0167  2969               	goto	u3050
  2010  0168                     u3051:	
  2011  0168  2943               	goto	l2815
  2012  0169                     u3050:	
  2013  0169                     l2821:	
  2014                           
  2015                           ;lectura.c: 25:     if ( (Aux%10) == (codigoEntrada[8] - '0')) {
  2016  0169  300A               	movlw	10
  2017  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2018  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2019  016C  00A0               	movwf	___awmod@divisor
  2020  016D  3000               	movlw	0
  2021  016E  00A1               	movwf	___awmod@divisor+1
  2022  016F  0844               	movf	lecturaEtiqueta@Aux+1,w
  2023  0170  00A3               	movwf	___awmod@dividend+1
  2024  0171  0843               	movf	lecturaEtiqueta@Aux,w
  2025  0172  00A2               	movwf	___awmod@dividend
  2026  0173  120A  158A  26E1  120A  118A  	fcall	___awmod
  2027  0178  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0179  1303               	bcf	3,6	;RP1=0, select bank1
  2029  017A  0863               	movf	(_codigoEntrada^(0+128)+8),w
  2030  017B  3ED0               	addlw	208
  2031  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2032  017D  1303               	bcf	3,6	;RP1=0, select bank0
  2033  017E  00BD               	movwf	??_lecturaEtiqueta
  2034  017F  30FF               	movlw	255
  2035  0180  1803               	skipnc
  2036  0181  3000               	movlw	0
  2037  0182  00BE               	movwf	??_lecturaEtiqueta+1
  2038  0183  0821               	movf	?___awmod+1,w
  2039  0184  063E               	xorwf	??_lecturaEtiqueta+1,w
  2040  0185  1D03               	skipz
  2041  0186  2989               	goto	u3065
  2042  0187  0820               	movf	?___awmod,w
  2043  0188  063D               	xorwf	??_lecturaEtiqueta,w
  2044  0189                     u3065:	
  2045  0189  1D03               	skipz
  2046  018A  298C               	goto	u3061
  2047  018B  298D               	goto	u3060
  2048  018C                     u3061:	
  2049  018C  2A22               	goto	l172
  2050  018D                     u3060:	
  2051  018D                     l2823:	
  2052                           
  2053                           ;lectura.c: 27:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1]
      +                           - '0');
  2054  018D  300A               	movlw	10
  2055  018E  00BD               	movwf	??_lecturaEtiqueta
  2056  018F  083D               	movf	??_lecturaEtiqueta,w
  2057  0190  00F4               	movwf	___bmul@multiplicand
  2058  0191  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0192  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0193  085B               	movf	_codigoEntrada^(0+128),w
  2061  0194  120A  158A  23BF  120A  118A  	fcall	___bmul
  2062  0199  1683               	bsf	3,5	;RP0=1, select bank1
  2063  019A  1303               	bcf	3,6	;RP1=0, select bank1
  2064  019B  075C               	addwf	(_codigoEntrada^(0+128)+1),w
  2065  019C  3EF0               	addlw	240
  2066  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2067  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2068  019F  00BE               	movwf	??_lecturaEtiqueta+1
  2069  01A0  083E               	movf	??_lecturaEtiqueta+1,w
  2070  01A1  00C2               	movwf	lecturaEtiqueta@tp
  2071  01A2                     l2825:	
  2072                           
  2073                           ;lectura.c: 28:         Aux = EEPROM_search(tp);
  2074  01A2  0842               	movf	lecturaEtiqueta@tp,w
  2075  01A3  120A  118A  2616  120A  118A  	fcall	_EEPROM_search
  2076  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2077  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2078  01AA  0835               	movf	?_EEPROM_search+1,w
  2079  01AB  00C4               	movwf	lecturaEtiqueta@Aux+1
  2080  01AC  0834               	movf	?_EEPROM_search,w
  2081  01AD  00C3               	movwf	lecturaEtiqueta@Aux
  2082  01AE                     l2827:	
  2083                           
  2084                           ;lectura.c: 30:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  2085  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2086  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2087  01B0  0859               	movf	_cuenta^(0+128),w
  2088  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2089  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2090  01B3  0743               	addwf	lecturaEtiqueta@Aux,w
  2091  01B4  00BD               	movwf	??_lecturaEtiqueta
  2092  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2093  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2094  01B7  085A               	movf	(_cuenta+1)^(0+128),w
  2095  01B8  1803               	skipnc
  2096  01B9  0A5A               	incf	(_cuenta+1)^(0+128),w
  2097  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2098  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2099  01BC  0744               	addwf	lecturaEtiqueta@Aux+1,w
  2100  01BD  00BE               	movwf	??_lecturaEtiqueta+1
  2101  01BE  3003               	movlw	3
  2102  01BF  023E               	subwf	??_lecturaEtiqueta+1,w
  2103  01C0  30E8               	movlw	232
  2104  01C1  1903               	skipnz
  2105  01C2  023D               	subwf	??_lecturaEtiqueta,w
  2106  01C3  1803               	skipnc
  2107  01C4  29C6               	goto	u3071
  2108  01C5  29C7               	goto	u3070
  2109  01C6                     u3071:	
  2110  01C6  2A22               	goto	l172
  2111  01C7                     u3070:	
  2112  01C7                     l2829:	
  2113  01C7  0A43               	incf	lecturaEtiqueta@Aux,w
  2114  01C8  1D03               	skipz
  2115  01C9  29CF               	goto	u3080
  2116  01CA  0A44               	incf	lecturaEtiqueta@Aux+1,w
  2117  01CB  1903               	btfsc	3,2
  2118  01CC  29CE               	goto	u3081
  2119  01CD  29CF               	goto	u3080
  2120  01CE                     u3081:	
  2121  01CE  2A22               	goto	l172
  2122  01CF                     u3080:	
  2123  01CF                     l2831:	
  2124                           
  2125                           ;lectura.c: 31:             tp--;
  2126  01CF  3001               	movlw	1
  2127  01D0  02C2               	subwf	lecturaEtiqueta@tp,f
  2128  01D1                     l2833:	
  2129                           
  2130                           ;lectura.c: 32:             ingresoProd(tp);
  2131  01D1  0842               	movf	lecturaEtiqueta@tp,w
  2132  01D2  00BD               	movwf	??_lecturaEtiqueta
  2133  01D3  01BE               	clrf	??_lecturaEtiqueta+1
  2134  01D4  083D               	movf	??_lecturaEtiqueta,w
  2135  01D5  00AC               	movwf	ingresoProd@tp
  2136  01D6  083E               	movf	??_lecturaEtiqueta+1,w
  2137  01D7  00AD               	movwf	ingresoProd@tp+1
  2138  01D8  120A  158A  279E  120A  118A  	fcall	_ingresoProd
  2139  01DD                     l2835:	
  2140                           
  2141                           ;lectura.c: 33:             productoIngresado = tp;
  2142  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2143  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2144  01DF  0842               	movf	lecturaEtiqueta@tp,w
  2145  01E0  00BD               	movwf	??_lecturaEtiqueta
  2146  01E1  01BE               	clrf	??_lecturaEtiqueta+1
  2147  01E2  083D               	movf	??_lecturaEtiqueta,w
  2148  01E3  00E9               	movwf	_productoIngresado
  2149  01E4  083E               	movf	??_lecturaEtiqueta+1,w
  2150  01E5  00EA               	movwf	_productoIngresado+1
  2151  01E6                     l2837:	
  2152                           
  2153                           ;lectura.c: 34:             auxCuenta = cuenta;
  2154  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2155  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2156  01E8  085A               	movf	(_cuenta+1)^(0+128),w
  2157  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2158  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2159  01EB  00EC               	movwf	_auxCuenta+1
  2160  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2161  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2162  01EE  0859               	movf	_cuenta^(0+128),w
  2163  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2164  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2165  01F1  00EB               	movwf	_auxCuenta
  2166  01F2                     l2839:	
  2167                           
  2168                           ;lectura.c: 35:             cuenta += Aux;
  2169  01F2  0843               	movf	lecturaEtiqueta@Aux,w
  2170  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2171  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2172  01F5  07D9               	addwf	_cuenta^(0+128),f
  2173  01F6  1803               	skipnc
  2174  01F7  0ADA               	incf	(_cuenta+1)^(0+128),f
  2175  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2176  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2177  01FA  0844               	movf	lecturaEtiqueta@Aux+1,w
  2178  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2179  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  2180  01FD  07DA               	addwf	(_cuenta+1)^(0+128),f
  2181  01FE                     l2841:	
  2182                           
  2183                           ;lectura.c: 36:             mostrarDigitos(cuenta);
  2184  01FE  085A               	movf	(_cuenta+1)^(0+128),w
  2185  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0201  00AD               	movwf	mostrarDigitos@num+1
  2188  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0204  0859               	movf	_cuenta^(0+128),w
  2191  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0207  00AC               	movwf	mostrarDigitos@num
  2194  0208  120A  118A  26E8  120A  118A  	fcall	_mostrarDigitos
  2195  020D                     l2843:	
  2196                           
  2197                           ;lectura.c: 37:             RA3 = 1;
  2198  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2199  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2200  020F  1585               	bsf	5,3	;volatile
  2201  0210                     l2845:	
  2202                           
  2203                           ;lectura.c: 38:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2204  0210  3006               	movlw	6
  2205  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0213  00BF               	movwf	??_lecturaEtiqueta+2
  2208  0214  3013               	movlw	19
  2209  0215  00BE               	movwf	??_lecturaEtiqueta+1
  2210  0216  30AD               	movlw	173
  2211  0217  00BD               	movwf	??_lecturaEtiqueta
  2212  0218                     u3327:	
  2213  0218  0BBD               	decfsz	??_lecturaEtiqueta,f
  2214  0219  2A18               	goto	u3327
  2215  021A  0BBE               	decfsz	??_lecturaEtiqueta+1,f
  2216  021B  2A18               	goto	u3327
  2217  021C  0BBF               	decfsz	??_lecturaEtiqueta+2,f
  2218  021D  2A18               	goto	u3327
  2219  021E                     l2847:	
  2220                           
  2221                           ;lectura.c: 39:             RA3 = 0;
  2222  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2223  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0220  1185               	bcf	5,3	;volatile
  2225                           
  2226                           ;lectura.c: 41:         }
  2227  0221  2A34               	goto	l175
  2228  0222                     l172:	
  2229                           ;lectura.c: 42:         else {
  2230                           
  2231                           
  2232                           ;lectura.c: 44:             RA5 = 1;
  2233  0222  1685               	bsf	5,5	;volatile
  2234  0223                     l2849:	
  2235                           
  2236                           ;lectura.c: 45:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2237  0223  3006               	movlw	6
  2238  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0225  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0226  00BF               	movwf	??_lecturaEtiqueta+2
  2241  0227  3013               	movlw	19
  2242  0228  00BE               	movwf	??_lecturaEtiqueta+1
  2243  0229  30AD               	movlw	173
  2244  022A  00BD               	movwf	??_lecturaEtiqueta
  2245  022B                     u3337:	
  2246  022B  0BBD               	decfsz	??_lecturaEtiqueta,f
  2247  022C  2A2B               	goto	u3337
  2248  022D  0BBE               	decfsz	??_lecturaEtiqueta+1,f
  2249  022E  2A2B               	goto	u3337
  2250  022F  0BBF               	decfsz	??_lecturaEtiqueta+2,f
  2251  0230  2A2B               	goto	u3337
  2252  0231                     l2851:	
  2253                           
  2254                           ;lectura.c: 46:             RA5 = 0;
  2255  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2257  0233  1285               	bcf	5,5	;volatile
  2258  0234                     l175:	
  2259  0234  0008               	return
  2260  0235                     __end_of_lecturaEtiqueta:	
  2261                           
  2262                           	psect	text3
  2263  0F9E                     __ptext3:	
  2264 ;; *************** function _ingresoProd *****************
  2265 ;; Defined at:
  2266 ;;		line 17 in file "manejoProductos.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  tp              2   12[BANK0 ] short 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  i               2   17[BANK0 ] short 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         0       2       0       0       0
  2281 ;;      Locals:         0       2       0       0       0
  2282 ;;      Temps:          0       3       0       0       0
  2283 ;;      Totals:         0       7       0       0       0
  2284 ;;Total ram usage:        7 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    3
  2287 ;; This function calls:
  2288 ;;		_pow
  2289 ;; This function is called by:
  2290 ;;		_lecturaEtiqueta
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function _ingresoProd
  2296  0F9E                     _ingresoProd:	
  2297  0F9E                     l2743:	
  2298                           ;incstack = 0
  2299                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2300                           
  2301                           
  2302                           ;manejoProductos.c: 19:     for(short int i = 12; i>=0; i--) {
  2303  0F9E  300C               	movlw	12
  2304  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0FA1  00B1               	movwf	ingresoProd@i
  2307  0FA2  3000               	movlw	0
  2308  0FA3  00B2               	movwf	ingresoProd@i+1
  2309  0FA4                     l2749:	
  2310                           
  2311                           ;manejoProductos.c: 20:         if( tp >= 8*i) {
  2312  0FA4  0832               	movf	ingresoProd@i+1,w
  2313  0FA5  00AF               	movwf	??_ingresoProd+1
  2314  0FA6  0831               	movf	ingresoProd@i,w
  2315  0FA7  00AE               	movwf	??_ingresoProd
  2316  0FA8  1003               	clrc
  2317  0FA9  0DAE               	rlf	??_ingresoProd,f
  2318  0FAA  0DAF               	rlf	??_ingresoProd+1,f
  2319  0FAB  1003               	clrc
  2320  0FAC  0DAE               	rlf	??_ingresoProd,f
  2321  0FAD  0DAF               	rlf	??_ingresoProd+1,f
  2322  0FAE  1003               	clrc
  2323  0FAF  0DAE               	rlf	??_ingresoProd,f
  2324  0FB0  0DAF               	rlf	??_ingresoProd+1,f
  2325  0FB1  082D               	movf	ingresoProd@tp+1,w
  2326  0FB2  3A80               	xorlw	128
  2327  0FB3  00B0               	movwf	??_ingresoProd+2
  2328  0FB4  082F               	movf	??_ingresoProd+1,w
  2329  0FB5  3A80               	xorlw	128
  2330  0FB6  0230               	subwf	??_ingresoProd+2,w
  2331  0FB7  1D03               	skipz
  2332  0FB8  2FBB               	goto	u2905
  2333  0FB9  082E               	movf	??_ingresoProd,w
  2334  0FBA  022C               	subwf	ingresoProd@tp,w
  2335  0FBB                     u2905:	
  2336  0FBB  1C03               	skipc
  2337  0FBC  2FBE               	goto	u2901
  2338  0FBD  2FBF               	goto	u2900
  2339  0FBE                     u2901:	
  2340  0FBE  2FF3               	goto	l2757
  2341  0FBF                     u2900:	
  2342  0FBF                     l2751:	
  2343                           
  2344                           ;manejoProductos.c: 22:             tp = tp - 8*i;
  2345  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0FC1  0832               	movf	ingresoProd@i+1,w
  2348  0FC2  00AF               	movwf	??_ingresoProd+1
  2349  0FC3  0831               	movf	ingresoProd@i,w
  2350  0FC4  00AE               	movwf	??_ingresoProd
  2351  0FC5  1003               	clrc
  2352  0FC6  0DAE               	rlf	??_ingresoProd,f
  2353  0FC7  0DAF               	rlf	??_ingresoProd+1,f
  2354  0FC8  1003               	clrc
  2355  0FC9  0DAE               	rlf	??_ingresoProd,f
  2356  0FCA  0DAF               	rlf	??_ingresoProd+1,f
  2357  0FCB  1003               	clrc
  2358  0FCC  0DAE               	rlf	??_ingresoProd,f
  2359  0FCD  0DAF               	rlf	??_ingresoProd+1,f
  2360  0FCE  082E               	movf	??_ingresoProd,w
  2361  0FCF  022C               	subwf	ingresoProd@tp,w
  2362  0FD0  00AC               	movwf	ingresoProd@tp
  2363  0FD1  082F               	movf	??_ingresoProd+1,w
  2364  0FD2  1C03               	skipc
  2365  0FD3  0A2F               	incf	??_ingresoProd+1,w
  2366  0FD4  022D               	subwf	ingresoProd@tp+1,w
  2367  0FD5  00AD               	movwf	ingresoProd@tp+1
  2368  0FD6                     l2753:	
  2369                           
  2370                           ;manejoProductos.c: 23:             prodIngresados[i] = prodIngresados[i] | pow(2,tp);
  2371  0FD6  0831               	movf	ingresoProd@i,w
  2372  0FD7  3E90               	addlw	(low (_prodIngresados| (0+256)))& (0+255)
  2373  0FD8  0084               	movwf	4
  2374  0FD9  3002               	movlw	2
  2375  0FDA  00A4               	movwf	pow@numero
  2376  0FDB  3000               	movlw	0
  2377  0FDC  00A5               	movwf	pow@numero+1
  2378  0FDD  082D               	movf	ingresoProd@tp+1,w
  2379  0FDE  00A7               	movwf	pow@potencia+1
  2380  0FDF  082C               	movf	ingresoProd@tp,w
  2381  0FE0  00A6               	movwf	pow@potencia
  2382  0FE1  120A  158A  2516  120A  158A  	fcall	_pow
  2383  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0FE8  0824               	movf	?_pow,w
  2386  0FE9  1783               	bsf	3,7	;select IRP bank3
  2387  0FEA  0400               	iorwf	0,w
  2388  0FEB  00AE               	movwf	??_ingresoProd
  2389  0FEC  0831               	movf	ingresoProd@i,w
  2390  0FED  3E90               	addlw	(low (_prodIngresados| (0+256)))& (0+255)
  2391  0FEE  0084               	movwf	4
  2392  0FEF  082E               	movf	??_ingresoProd,w
  2393  0FF0  0080               	movwf	0
  2394  0FF1                     l2755:	
  2395                           
  2396                           ;manejoProductos.c: 24:             i = 0;
  2397  0FF1  01B1               	clrf	ingresoProd@i
  2398  0FF2  01B2               	clrf	ingresoProd@i+1
  2399  0FF3                     l2757:	
  2400                           
  2401                           ;manejoProductos.c: 27:     }
  2402  0FF3  30FF               	movlw	255
  2403  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0FF6  07B1               	addwf	ingresoProd@i,f
  2406  0FF7  1803               	skipnc
  2407  0FF8  0AB2               	incf	ingresoProd@i+1,f
  2408  0FF9  30FF               	movlw	255
  2409  0FFA  07B2               	addwf	ingresoProd@i+1,f
  2410  0FFB                     l2759:	
  2411  0FFB  1FB2               	btfss	ingresoProd@i+1,7
  2412  0FFC  2FFE               	goto	u2911
  2413  0FFD  2FFF               	goto	u2910
  2414  0FFE                     u2911:	
  2415  0FFE  2FA4               	goto	l2749
  2416  0FFF                     u2910:	
  2417  0FFF                     l259:	
  2418  0FFF  0008               	return
  2419  1000                     __end_of_ingresoProd:	
  2420                           
  2421                           	psect	text4
  2422  0616                     __ptext4:	
  2423 ;; *************** function _EEPROM_search *****************
  2424 ;; Defined at:
  2425 ;;		line 3 in file "lectura.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  tp              1    wreg     unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  tp              1   28[BANK0 ] unsigned char 
  2430 ;;  precio          2   26[BANK0 ] short 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2   20[BANK0 ] short 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       2       0       0       0
  2441 ;;      Locals:         0       3       0       0       0
  2442 ;;      Temps:          0       4       0       0       0
  2443 ;;      Totals:         0       9       0       0       0
  2444 ;;Total ram usage:        9 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    4
  2447 ;; This function calls:
  2448 ;;		___awdiv
  2449 ;;		_eeprom_read
  2450 ;;		_verificarProd
  2451 ;; This function is called by:
  2452 ;;		_lecturaEtiqueta
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _EEPROM_search
  2458  0616                     _EEPROM_search:	
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2462                           ;EEPROM_search@tp stored from wreg
  2463  0616  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0617  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0618  00BC               	movwf	EEPROM_search@tp
  2466  0619                     l2727:	
  2467                           
  2468                           ;lectura.c: 5:     short int precio;;lectura.c: 6:     tp--;
  2469  0619  3001               	movlw	1
  2470  061A  02BC               	subwf	EEPROM_search@tp,f
  2471  061B                     l2729:	
  2472                           
  2473                           ;lectura.c: 7:     tp = tp*2;
  2474  061B  083C               	movf	EEPROM_search@tp,w
  2475  061C  00B6               	movwf	??_EEPROM_search
  2476  061D  0736               	addwf	??_EEPROM_search,w
  2477  061E  00B7               	movwf	??_EEPROM_search+1
  2478  061F  0837               	movf	??_EEPROM_search+1,w
  2479  0620  00BC               	movwf	EEPROM_search@tp
  2480  0621                     l2731:	
  2481                           
  2482                           ;lectura.c: 8:     precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  2483  0621  083C               	movf	EEPROM_search@tp,w
  2484  0622  3E01               	addlw	1
  2485  0623  120A  158A  23A8  120A  118A  	fcall	_eeprom_read
  2486  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2488  062A  00B6               	movwf	??_EEPROM_search
  2489  062B  01B7               	clrf	??_EEPROM_search+1
  2490  062C  083C               	movf	EEPROM_search@tp,w
  2491  062D  120A  158A  23A8  120A  118A  	fcall	_eeprom_read
  2492  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0634  00B8               	movwf	??_EEPROM_search+2
  2495  0635  01B9               	clrf	??_EEPROM_search+3
  2496  0636  0838               	movf	??_EEPROM_search+2,w
  2497  0637  00B9               	movwf	??_EEPROM_search+3
  2498  0638  01B8               	clrf	??_EEPROM_search+2
  2499  0639  0836               	movf	??_EEPROM_search,w
  2500  063A  0438               	iorwf	??_EEPROM_search+2,w
  2501  063B  00BA               	movwf	EEPROM_search@precio
  2502  063C  0837               	movf	??_EEPROM_search+1,w
  2503  063D  0439               	iorwf	??_EEPROM_search+3,w
  2504  063E  00BB               	movwf	EEPROM_search@precio+1
  2505  063F                     l2733:	
  2506                           
  2507                           ;lectura.c: 10:     if( (precio < 0 || precio > 999) || verificarProd(tp/2)) {
  2508  063F  1BBB               	btfsc	EEPROM_search@precio+1,7
  2509  0640  2E42               	goto	u2871
  2510  0641  2E43               	goto	u2870
  2511  0642                     u2871:	
  2512  0642  2E72               	goto	l2739
  2513  0643                     u2870:	
  2514  0643                     l2735:	
  2515  0643  083B               	movf	EEPROM_search@precio+1,w
  2516  0644  3A80               	xorlw	128
  2517  0645  00FF               	movwf	btemp+1
  2518  0646  3083               	movlw	131
  2519  0647  027F               	subwf	btemp+1,w
  2520  0648  1D03               	skipz
  2521  0649  2E4C               	goto	u2885
  2522  064A  30E8               	movlw	232
  2523  064B  023A               	subwf	EEPROM_search@precio,w
  2524  064C                     u2885:	
  2525  064C  1803               	skipnc
  2526  064D  2E4F               	goto	u2881
  2527  064E  2E50               	goto	u2880
  2528  064F                     u2881:	
  2529  064F  2E72               	goto	l2739
  2530  0650                     u2880:	
  2531  0650                     l2737:	
  2532  0650  3002               	movlw	2
  2533  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0653  00A0               	movwf	___awdiv@divisor
  2536  0654  3000               	movlw	0
  2537  0655  00A1               	movwf	___awdiv@divisor+1
  2538  0656  083C               	movf	EEPROM_search@tp,w
  2539  0657  00B6               	movwf	??_EEPROM_search
  2540  0658  01B7               	clrf	??_EEPROM_search+1
  2541  0659  0836               	movf	??_EEPROM_search,w
  2542  065A  00A2               	movwf	___awdiv@dividend
  2543  065B  0837               	movf	??_EEPROM_search+1,w
  2544  065C  00A3               	movwf	___awdiv@dividend+1
  2545  065D  120A  118A  267F  120A  118A  	fcall	___awdiv
  2546  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0664  0821               	movf	?___awdiv+1,w
  2549  0665  00AD               	movwf	verificarProd@tp+1
  2550  0666  0820               	movf	?___awdiv,w
  2551  0667  00AC               	movwf	verificarProd@tp
  2552  0668  120A  118A  274F  120A  118A  	fcall	_verificarProd
  2553  066D  3A00               	xorlw	0
  2554  066E  1903               	skipnz
  2555  066F  2E71               	goto	u2891
  2556  0670  2E72               	goto	u2890
  2557  0671                     u2891:	
  2558  0671  2E78               	goto	l163
  2559  0672                     u2890:	
  2560  0672                     l2739:	
  2561                           
  2562                           ;lectura.c: 11:         precio = -1;
  2563  0672  30FF               	movlw	255
  2564  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0675  00BA               	movwf	EEPROM_search@precio
  2567  0676  30FF               	movlw	255
  2568  0677  00BB               	movwf	EEPROM_search@precio+1
  2569  0678                     l163:	
  2570                           ;lectura.c: 12:     }
  2571                           
  2572                           
  2573                           ;lectura.c: 14:     return precio;
  2574  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2576  067A  083B               	movf	EEPROM_search@precio+1,w
  2577  067B  00B5               	movwf	?_EEPROM_search+1
  2578  067C  083A               	movf	EEPROM_search@precio,w
  2579  067D  00B4               	movwf	?_EEPROM_search
  2580  067E                     l166:	
  2581  067E  0008               	return
  2582  067F                     __end_of_EEPROM_search:	
  2583                           
  2584                           	psect	text5
  2585  074F                     __ptext5:	
  2586 ;; *************** function _verificarProd *****************
  2587 ;; Defined at:
  2588 ;;		line 30 in file "manejoProductos.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  tp              2   12[BANK0 ] short 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  i               2   18[BANK0 ] short 
  2593 ;;  ret             1   17[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      unsigned char 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       2       0       0       0
  2604 ;;      Locals:         0       3       0       0       0
  2605 ;;      Temps:          0       3       0       0       0
  2606 ;;      Totals:         0       8       0       0       0
  2607 ;;Total ram usage:        8 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    3
  2610 ;; This function calls:
  2611 ;;		_pow
  2612 ;; This function is called by:
  2613 ;;		_EEPROM_search
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function _verificarProd
  2619  074F                     _verificarProd:	
  2620  074F                     l2633:	
  2621                           ;incstack = 0
  2622                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2623                           
  2624                           
  2625                           ;manejoProductos.c: 31:     char ret = 0;
  2626  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0750  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0751  01B1               	clrf	verificarProd@ret
  2629  0752                     l2635:	
  2630                           
  2631                           ;manejoProductos.c: 32:     for(short int i = 12; i>=0; i--) {
  2632  0752  300C               	movlw	12
  2633  0753  00B2               	movwf	verificarProd@i
  2634  0754  3000               	movlw	0
  2635  0755  00B3               	movwf	verificarProd@i+1
  2636  0756                     l2641:	
  2637                           
  2638                           ;manejoProductos.c: 33:         if( tp >= 8*i) {
  2639  0756  0833               	movf	verificarProd@i+1,w
  2640  0757  00AF               	movwf	??_verificarProd+1
  2641  0758  0832               	movf	verificarProd@i,w
  2642  0759  00AE               	movwf	??_verificarProd
  2643  075A  1003               	clrc
  2644  075B  0DAE               	rlf	??_verificarProd,f
  2645  075C  0DAF               	rlf	??_verificarProd+1,f
  2646  075D  1003               	clrc
  2647  075E  0DAE               	rlf	??_verificarProd,f
  2648  075F  0DAF               	rlf	??_verificarProd+1,f
  2649  0760  1003               	clrc
  2650  0761  0DAE               	rlf	??_verificarProd,f
  2651  0762  0DAF               	rlf	??_verificarProd+1,f
  2652  0763  082D               	movf	verificarProd@tp+1,w
  2653  0764  3A80               	xorlw	128
  2654  0765  00B0               	movwf	??_verificarProd+2
  2655  0766  082F               	movf	??_verificarProd+1,w
  2656  0767  3A80               	xorlw	128
  2657  0768  0230               	subwf	??_verificarProd+2,w
  2658  0769  1D03               	skipz
  2659  076A  2F6D               	goto	u2775
  2660  076B  082E               	movf	??_verificarProd,w
  2661  076C  022C               	subwf	verificarProd@tp,w
  2662  076D                     u2775:	
  2663  076D  1C03               	skipc
  2664  076E  2F70               	goto	u2771
  2665  076F  2F71               	goto	u2770
  2666  0770                     u2771:	
  2667  0770  2FA5               	goto	l2651
  2668  0771                     u2770:	
  2669  0771                     l2643:	
  2670                           
  2671                           ;manejoProductos.c: 35:             tp = tp - 8*i;
  2672  0771  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0772  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0773  0833               	movf	verificarProd@i+1,w
  2675  0774  00AF               	movwf	??_verificarProd+1
  2676  0775  0832               	movf	verificarProd@i,w
  2677  0776  00AE               	movwf	??_verificarProd
  2678  0777  1003               	clrc
  2679  0778  0DAE               	rlf	??_verificarProd,f
  2680  0779  0DAF               	rlf	??_verificarProd+1,f
  2681  077A  1003               	clrc
  2682  077B  0DAE               	rlf	??_verificarProd,f
  2683  077C  0DAF               	rlf	??_verificarProd+1,f
  2684  077D  1003               	clrc
  2685  077E  0DAE               	rlf	??_verificarProd,f
  2686  077F  0DAF               	rlf	??_verificarProd+1,f
  2687  0780  082E               	movf	??_verificarProd,w
  2688  0781  022C               	subwf	verificarProd@tp,w
  2689  0782  00AC               	movwf	verificarProd@tp
  2690  0783  082F               	movf	??_verificarProd+1,w
  2691  0784  1C03               	skipc
  2692  0785  0A2F               	incf	??_verificarProd+1,w
  2693  0786  022D               	subwf	verificarProd@tp+1,w
  2694  0787  00AD               	movwf	verificarProd@tp+1
  2695  0788                     l2645:	
  2696                           
  2697                           ;manejoProductos.c: 36:             if(prodIngresados[i] & pow(2,tp)) {
  2698  0788  0832               	movf	verificarProd@i,w
  2699  0789  3E90               	addlw	(low (_prodIngresados| (0+256)))& (0+255)
  2700  078A  0084               	movwf	4
  2701  078B  3002               	movlw	2
  2702  078C  00A4               	movwf	pow@numero
  2703  078D  3000               	movlw	0
  2704  078E  00A5               	movwf	pow@numero+1
  2705  078F  082D               	movf	verificarProd@tp+1,w
  2706  0790  00A7               	movwf	pow@potencia+1
  2707  0791  082C               	movf	verificarProd@tp,w
  2708  0792  00A6               	movwf	pow@potencia
  2709  0793  120A  158A  2516  120A  118A  	fcall	_pow
  2710  0798  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0799  1303               	bcf	3,6	;RP1=0, select bank0
  2712  079A  0824               	movf	?_pow,w
  2713  079B  1783               	bsf	3,7	;select IRP bank3
  2714  079C  0500               	andwf	0,w
  2715  079D  1903               	btfsc	3,2
  2716  079E  2FA0               	goto	u2781
  2717  079F  2FA1               	goto	u2780
  2718  07A0                     u2781:	
  2719  07A0  2FA3               	goto	l2649
  2720  07A1                     u2780:	
  2721  07A1                     l2647:	
  2722                           
  2723                           ;manejoProductos.c: 37:                 ret = 1;
  2724  07A1  01B1               	clrf	verificarProd@ret
  2725  07A2  0AB1               	incf	verificarProd@ret,f
  2726  07A3                     l2649:	
  2727                           
  2728                           ;manejoProductos.c: 39:             i = 0;
  2729  07A3  01B2               	clrf	verificarProd@i
  2730  07A4  01B3               	clrf	verificarProd@i+1
  2731  07A5                     l2651:	
  2732                           
  2733                           ;manejoProductos.c: 42:     }
  2734  07A5  30FF               	movlw	255
  2735  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  2736  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  2737  07A8  07B2               	addwf	verificarProd@i,f
  2738  07A9  1803               	skipnc
  2739  07AA  0AB3               	incf	verificarProd@i+1,f
  2740  07AB  30FF               	movlw	255
  2741  07AC  07B3               	addwf	verificarProd@i+1,f
  2742  07AD                     l2653:	
  2743  07AD  1FB3               	btfss	verificarProd@i+1,7
  2744  07AE  2FB0               	goto	u2791
  2745  07AF  2FB1               	goto	u2790
  2746  07B0                     u2791:	
  2747  07B0  2F56               	goto	l2641
  2748  07B1                     u2790:	
  2749  07B1                     l2655:	
  2750                           
  2751                           ;manejoProductos.c: 44:     return ret;
  2752  07B1  0831               	movf	verificarProd@ret,w
  2753  07B2                     l266:	
  2754  07B2  0008               	return
  2755  07B3                     __end_of_verificarProd:	
  2756                           
  2757                           	psect	text6
  2758  0BD6                     __ptext6:	
  2759 ;; *************** function _lecturaComando *****************
  2760 ;; Defined at:
  2761 ;;		line 159 in file "lectura.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0
  2778 ;;      Totals:         0       0       0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    5
  2782 ;; This function calls:
  2783 ;;		_lecturaConsulta
  2784 ;;		_lecturaMas
  2785 ;;		_lecturaMenos
  2786 ;; This function is called by:
  2787 ;;		_accionesPuertoSerial
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _lecturaComando
  2793  0BD6                     _lecturaComando:	
  2794  0BD6                     l2857:	
  2795                           ;incstack = 0
  2796                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2797                           
  2798                           
  2799                           ;lectura.c: 160:     if(codigoEntrada[0] == '?') {
  2800  0BD6  303F               	movlw	63
  2801  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  2803  0BD9  065B               	xorwf	_codigoEntrada^(0+128),w
  2804  0BDA  1D03               	btfss	3,2
  2805  0BDB  2BDD               	goto	u3091
  2806  0BDC  2BDE               	goto	u3090
  2807  0BDD                     u3091:	
  2808  0BDD  2BE4               	goto	l2861
  2809  0BDE                     u3090:	
  2810  0BDE                     l2859:	
  2811                           
  2812                           ;lectura.c: 161:         lecturaConsulta();
  2813  0BDE  120A  118A  24BD  120A  158A  	fcall	_lecturaConsulta
  2814                           
  2815                           ;lectura.c: 162:     }
  2816  0BE3  2BF5               	goto	l233
  2817  0BE4                     l2861:	
  2818  0BE4  302B               	movlw	43
  2819  0BE5  065B               	xorwf	_codigoEntrada^(0+128),w
  2820  0BE6  1D03               	btfss	3,2
  2821  0BE7  2BE9               	goto	u3101
  2822  0BE8  2BEA               	goto	u3100
  2823  0BE9                     u3101:	
  2824  0BE9  2BF0               	goto	l2865
  2825  0BEA                     u3100:	
  2826  0BEA                     l2863:	
  2827                           
  2828                           ;lectura.c: 164:         lecturaMas();
  2829  0BEA  120A  158A  241D  120A  158A  	fcall	_lecturaMas
  2830                           
  2831                           ;lectura.c: 165:     }
  2832  0BEF  2BF5               	goto	l233
  2833  0BF0                     l2865:	
  2834                           
  2835                           ;lectura.c: 167:         lecturaMenos();
  2836  0BF0  120A  118A  23EC  120A  158A  	fcall	_lecturaMenos
  2837  0BF5                     l233:	
  2838  0BF5  0008               	return
  2839  0BF6                     __end_of_lecturaComando:	
  2840                           
  2841                           	psect	text7
  2842  03EC                     __ptext7:	
  2843 ;; *************** function _lecturaMenos *****************
  2844 ;; Defined at:
  2845 ;;		line 98 in file "lectura.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    3
  2866 ;; This function calls:
  2867 ;;		_envioTX
  2868 ;; This function is called by:
  2869 ;;		_lecturaComando
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _lecturaMenos
  2875  03EC                     _lecturaMenos:	
  2876  03EC                     l2773:	
  2877                           ;incstack = 0
  2878                           ; Regs used in _lecturaMenos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2879                           
  2880                           
  2881                           ;lectura.c: 99:     if(codigoEntrada[1] == 'D') {
  2882  03EC  3044               	movlw	68
  2883  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2884  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2885  03EF  065C               	xorwf	(_codigoEntrada^(0+128)+1),w
  2886  03F0  1D03               	btfss	3,2
  2887  03F1  2BF3               	goto	u2951
  2888  03F2  2BF4               	goto	u2950
  2889  03F3                     u2951:	
  2890  03F3  2BF6               	goto	l2777
  2891  03F4                     u2950:	
  2892  03F4                     l2775:	
  2893                           
  2894                           ;lectura.c: 100:         modoDebug = 0;
  2895  03F4  01F8               	clrf	_modoDebug
  2896                           
  2897                           ;lectura.c: 102:     }
  2898  03F5  2BFF               	goto	l205
  2899  03F6                     l2777:	
  2900                           
  2901                           ;lectura.c: 104:         envioTX("Ocurrio un error en la interpretacion.\n");
  2902  03F6  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2903  03F7  00F4               	movwf	envioTX@mensaje
  2904  03F8  3080               	movlw	128
  2905  03F9  00F5               	movwf	envioTX@mensaje+1
  2906  03FA  120A  158A  24AA  120A  118A  	fcall	_envioTX
  2907  03FF                     l205:	
  2908  03FF  0008               	return
  2909  0400                     __end_of_lecturaMenos:	
  2910                           
  2911                           	psect	text8
  2912  0C1D                     __ptext8:	
  2913 ;; *************** function _lecturaMas *****************
  2914 ;; Defined at:
  2915 ;;		line 83 in file "lectura.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2929 ;;      Params:         0       0       0       0       0
  2930 ;;      Locals:         0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0
  2932 ;;      Totals:         0       0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    4
  2936 ;; This function calls:
  2937 ;;		_agregarModificarPrecio
  2938 ;;		_cierreDeLote
  2939 ;;		_verificacionEntrada
  2940 ;; This function is called by:
  2941 ;;		_lecturaComando
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _lecturaMas
  2947  0C1D                     _lecturaMas:	
  2948  0C1D                     l2761:	
  2949                           ;incstack = 0
  2950                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2951                           
  2952                           
  2953                           ;lectura.c: 84:     if (codigoEntrada[1] == 'L') {
  2954  0C1D  304C               	movlw	76
  2955  0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  2956  0C1F  1303               	bcf	3,6	;RP1=0, select bank1
  2957  0C20  065C               	xorwf	(_codigoEntrada^(0+128)+1),w
  2958  0C21  1D03               	btfss	3,2
  2959  0C22  2C24               	goto	u2921
  2960  0C23  2C25               	goto	u2920
  2961  0C24                     u2921:	
  2962  0C24  2C2B               	goto	l2765
  2963  0C25                     u2920:	
  2964  0C25                     l2763:	
  2965                           
  2966                           ;lectura.c: 85:         cierreDeLote();
  2967  0C25  120A  158A  24E0  120A  158A  	fcall	_cierreDeLote
  2968                           
  2969                           ;lectura.c: 86:     }
  2970  0C2A  2C46               	goto	l200
  2971  0C2B                     l2765:	
  2972  0C2B  120A  158A  2478  120A  158A  	fcall	_verificacionEntrada
  2973  0C30  3A06               	xorlw	6
  2974  0C31  1D03               	skipz
  2975  0C32  2C34               	goto	u2931
  2976  0C33  2C35               	goto	u2930
  2977  0C34                     u2931:	
  2978  0C34  2C3B               	goto	l2769
  2979  0C35                     u2930:	
  2980  0C35                     l2767:	
  2981                           
  2982                           ;lectura.c: 88:         agregarModificarPrecio();
  2983  0C35  120A  118A  231F  120A  158A  	fcall	_agregarModificarPrecio
  2984                           
  2985                           ;lectura.c: 89:     }
  2986  0C3A  2C46               	goto	l200
  2987  0C3B                     l2769:	
  2988  0C3B  3044               	movlw	68
  2989  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  2990  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  2991  0C3E  065C               	xorwf	(_codigoEntrada^(0+128)+1),w
  2992  0C3F  1D03               	btfss	3,2
  2993  0C40  2C42               	goto	u2941
  2994  0C41  2C43               	goto	u2940
  2995  0C42                     u2941:	
  2996  0C42  2C46               	goto	l197
  2997  0C43                     u2940:	
  2998  0C43                     l2771:	
  2999                           
  3000                           ;lectura.c: 91:         modoDebug = 1;
  3001  0C43  01F8               	clrf	_modoDebug
  3002  0C44  0AF8               	incf	_modoDebug,f
  3003                           
  3004                           ;lectura.c: 92:     }
  3005  0C45  2C46               	goto	l200
  3006  0C46                     l197:	
  3007  0C46                     l200:	
  3008  0C46  0008               	return
  3009  0C47                     __end_of_lecturaMas:	
  3010                           
  3011                           	psect	text9
  3012  0C78                     __ptext9:	
  3013 ;; *************** function _verificacionEntrada *****************
  3014 ;; Defined at:
  3015 ;;		line 59 in file "lectura.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  i               1    1[BANK0 ] unsigned char 
  3020 ;;  ret             1    0[BANK0 ] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      unsigned char 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         0       2       0       0       0
  3032 ;;      Temps:          1       0       0       0       0
  3033 ;;      Totals:         1       2       0       0       0
  3034 ;;Total ram usage:        3 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_lecturaMas
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function _verificacionEntrada
  3046  0C78                     _verificacionEntrada:	
  3047  0C78                     l2659:	
  3048                           ;incstack = 0
  3049                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  3050                           
  3051                           
  3052                           ;lectura.c: 60:     char i = 1;
  3053  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0C7A  01A1               	clrf	verificacionEntrada@i
  3056  0C7B  0AA1               	incf	verificacionEntrada@i,f
  3057  0C7C                     l2661:	
  3058                           
  3059                           ;lectura.c: 61:     char ret = 0;
  3060  0C7C  01A0               	clrf	verificacionEntrada@ret
  3061                           
  3062                           ;lectura.c: 62:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3063  0C7D  2C86               	goto	l2665
  3064  0C7E                     l2663:	
  3065                           
  3066                           ;lectura.c: 63:         i++;
  3067  0C7E  3001               	movlw	1
  3068  0C7F  00F4               	movwf	??_verificacionEntrada
  3069  0C80  0874               	movf	??_verificacionEntrada,w
  3070  0C81  07A1               	addwf	verificacionEntrada@i,f
  3071                           
  3072                           ;lectura.c: 64:         ret++;
  3073  0C82  3001               	movlw	1
  3074  0C83  00F4               	movwf	??_verificacionEntrada
  3075  0C84  0874               	movf	??_verificacionEntrada,w
  3076  0C85  07A0               	addwf	verificacionEntrada@ret,f
  3077  0C86                     l2665:	
  3078                           
  3079                           ;lectura.c: 62:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3080  0C86  0821               	movf	verificacionEntrada@i,w
  3081  0C87  3EDB               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3082  0C88  0084               	movwf	4
  3083  0C89  303A               	movlw	58
  3084  0C8A  1383               	bcf	3,7	;select IRP bank1
  3085  0C8B  0200               	subwf	0,w
  3086  0C8C  1803               	skipnc
  3087  0C8D  2C8F               	goto	u2801
  3088  0C8E  2C90               	goto	u2800
  3089  0C8F                     u2801:	
  3090  0C8F  2C99               	goto	l2669
  3091  0C90                     u2800:	
  3092  0C90                     l2667:	
  3093  0C90  0821               	movf	verificacionEntrada@i,w
  3094  0C91  3EDB               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3095  0C92  0084               	movwf	4
  3096  0C93  3030               	movlw	48
  3097  0C94  0200               	subwf	0,w
  3098  0C95  1803               	skipnc
  3099  0C96  2C98               	goto	u2811
  3100  0C97  2C99               	goto	u2810
  3101  0C98                     u2811:	
  3102  0C98  2CA2               	goto	l2671
  3103  0C99                     u2810:	
  3104  0C99                     l2669:	
  3105  0C99  0821               	movf	verificacionEntrada@i,w
  3106  0C9A  3EDB               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3107  0C9B  0084               	movwf	4
  3108  0C9C  303D               	movlw	61
  3109  0C9D  0600               	xorwf	0,w
  3110  0C9E  1D03               	btfss	3,2
  3111  0C9F  2CA1               	goto	u2821
  3112  0CA0  2CA2               	goto	u2820
  3113  0CA1                     u2821:	
  3114  0CA1  2CA8               	goto	l2673
  3115  0CA2                     u2820:	
  3116  0CA2                     l2671:	
  3117  0CA2  3007               	movlw	7
  3118  0CA3  0221               	subwf	verificacionEntrada@i,w
  3119  0CA4  1C03               	skipc
  3120  0CA5  2CA7               	goto	u2831
  3121  0CA6  2CA8               	goto	u2830
  3122  0CA7                     u2831:	
  3123  0CA7  2C7E               	goto	l2663
  3124  0CA8                     u2830:	
  3125  0CA8                     l2673:	
  3126                           
  3127                           ;lectura.c: 66:     return ret;
  3128  0CA8  0820               	movf	verificacionEntrada@ret,w
  3129  0CA9                     l187:	
  3130  0CA9  0008               	return
  3131  0CAA                     __end_of_verificacionEntrada:	
  3132                           
  3133                           	psect	text10
  3134  0CE0                     __ptext10:	
  3135 ;; *************** function _cierreDeLote *****************
  3136 ;; Defined at:
  3137 ;;		line 69 in file "lectura.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  strLote        32   34[BANK0 ] unsigned char [32]
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         0      32       0       0       0
  3153 ;;      Temps:          0       5       0       0       0
  3154 ;;      Totals:         0      37       0       0       0
  3155 ;;Total ram usage:       37 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		_envioTX
  3160 ;;		_sprintf
  3161 ;; This function is called by:
  3162 ;;		_lecturaMas
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _cierreDeLote
  3168  0CE0                     _cierreDeLote:	
  3169  0CE0                     l2677:	
  3170                           ;incstack = 0
  3171                           ; Regs used in _cierreDeLote: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3172                           
  3173                           
  3174                           ;lectura.c: 71:     if (cierreLotePedido == 0) {
  3175  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0CE2  086D               	movf	_cierreLotePedido,w
  3178  0CE3  1D03               	btfss	3,2
  3179  0CE4  2CE6               	goto	u2841
  3180  0CE5  2CE7               	goto	u2840
  3181  0CE6                     u2841:	
  3182  0CE6  2D0C               	goto	l2681
  3183  0CE7                     u2840:	
  3184  0CE7                     l2679:	
  3185                           
  3186                           ;lectura.c: 72:         char strLote[32];;lectura.c: 74:         sprintf(strLote,"\nL:%d
      +                          ,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  3187  0CE7  307D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3188  0CE8  00BD               	movwf	??_cierreDeLote
  3189  0CE9  083D               	movf	??_cierreDeLote,w
  3190  0CEA  00AC               	movwf	sprintf@f
  3191  0CEB  086F               	movf	_nroLote,w
  3192  0CEC  00BE               	movwf	??_cierreDeLote+1
  3193  0CED  01BF               	clrf	??_cierreDeLote+2
  3194  0CEE  083E               	movf	??_cierreDeLote+1,w
  3195  0CEF  00AD               	movwf	?_sprintf+1
  3196  0CF0  083F               	movf	??_cierreDeLote+2,w
  3197  0CF1  00AE               	movwf	?_sprintf+2
  3198  0CF2  086E               	movf	_ventasLote,w
  3199  0CF3  00C0               	movwf	??_cierreDeLote+3
  3200  0CF4  01C1               	clrf	??_cierreDeLote+4
  3201  0CF5  0840               	movf	??_cierreDeLote+3,w
  3202  0CF6  00AF               	movwf	?_sprintf+3
  3203  0CF7  0841               	movf	??_cierreDeLote+4,w
  3204  0CF8  00B0               	movwf	?_sprintf+4
  3205  0CF9  0868               	movf	_montosLote+1,w
  3206  0CFA  00B2               	movwf	?_sprintf+6
  3207  0CFB  0867               	movf	_montosLote,w
  3208  0CFC  00B1               	movwf	?_sprintf+5
  3209  0CFD  3042               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3210  0CFE  120A  118A  2235  120A  158A  	fcall	_sprintf
  3211                           
  3212                           ;lectura.c: 75:         envioTX(strLote);
  3213  0D03  3042               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3214  0D04  00F4               	movwf	envioTX@mensaje
  3215  0D05  3000               	movlw	0
  3216  0D06  00F5               	movwf	envioTX@mensaje+1
  3217  0D07  120A  158A  24AA  120A  158A  	fcall	_envioTX
  3218  0D0C                     l2681:	
  3219                           
  3220                           ;lectura.c: 78:     nroLote++;
  3221  0D0C  3001               	movlw	1
  3222  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  3223  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  3224  0D0F  00BD               	movwf	??_cierreDeLote
  3225  0D10  083D               	movf	??_cierreDeLote,w
  3226  0D11  07EF               	addwf	_nroLote,f
  3227  0D12                     l2683:	
  3228                           
  3229                           ;lectura.c: 79:     ventasLote=0;
  3230  0D12  01EE               	clrf	_ventasLote
  3231  0D13                     l2685:	
  3232                           
  3233                           ;lectura.c: 80:     montosLote=0;
  3234  0D13  01E7               	clrf	_montosLote
  3235  0D14  01E8               	clrf	_montosLote+1
  3236  0D15                     l191:	
  3237  0D15  0008               	return
  3238  0D16                     __end_of_cierreDeLote:	
  3239                           
  3240                           	psect	text11
  3241  031F                     __ptext11:	
  3242 ;; *************** function _agregarModificarPrecio *****************
  3243 ;; Defined at:
  3244 ;;		line 61 in file "manejoProductos.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  mensaje        10   39[BANK0 ] unsigned char [10]
  3249 ;;  precio          2   51[BANK0 ] short 
  3250 ;;  tp              1   53[BANK0 ] unsigned char 
  3251 ;;  upper_8bits     1   50[BANK0 ] unsigned char 
  3252 ;;  lower_8bits     1   49[BANK0 ] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         0       0       0       0       0
  3263 ;;      Locals:         0      15       0       0       0
  3264 ;;      Temps:          0      10       0       0       0
  3265 ;;      Totals:         0      25       0       0       0
  3266 ;;Total ram usage:       25 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    3
  3269 ;; This function calls:
  3270 ;;		___awdiv
  3271 ;;		___bmul
  3272 ;;		___wmul
  3273 ;;		_eeprom_read
  3274 ;;		_eeprom_write
  3275 ;;		_envioTX
  3276 ;;		_sprintf
  3277 ;; This function is called by:
  3278 ;;		_lecturaMas
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           
  3283                           ;psect for function _agregarModificarPrecio
  3284  031F                     _agregarModificarPrecio:	
  3285  031F                     l2687:	
  3286                           ;incstack = 0
  3287                           ; Regs used in _agregarModificarPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3288                           
  3289                           
  3290                           ;manejoProductos.c: 62:     unsigned char tp = 10*(codigoEntrada[1]-'0') + (codigoEntrad
      +                          a[2] - '0');
  3291  031F  300A               	movlw	10
  3292  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0321  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0322  00BD               	movwf	??_agregarModificarPrecio
  3295  0323  083D               	movf	??_agregarModificarPrecio,w
  3296  0324  00F4               	movwf	___bmul@multiplicand
  3297  0325  1683               	bsf	3,5	;RP0=1, select bank1
  3298  0326  1303               	bcf	3,6	;RP1=0, select bank1
  3299  0327  085C               	movf	(_codigoEntrada^(0+128)+1),w
  3300  0328  120A  158A  23BF  120A  118A  	fcall	___bmul
  3301  032D  1683               	bsf	3,5	;RP0=1, select bank1
  3302  032E  1303               	bcf	3,6	;RP1=0, select bank1
  3303  032F  075D               	addwf	(_codigoEntrada^(0+128)+2),w
  3304  0330  3EF0               	addlw	240
  3305  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0333  00BE               	movwf	??_agregarModificarPrecio+1
  3308  0334  083E               	movf	??_agregarModificarPrecio+1,w
  3309  0335  00D5               	movwf	agregarModificarPrecio@tp
  3310  0336                     l2689:	
  3311                           
  3312                           ;manejoProductos.c: 63:     char lower_8bits;;manejoProductos.c: 64:     char upper_8bit
      +                          s;;manejoProductos.c: 65:     char mensaje[10];;manejoProductos.c: 66:     tp--;
  3313  0336  3001               	movlw	1
  3314  0337  02D5               	subwf	agregarModificarPrecio@tp,f
  3315  0338                     l2691:	
  3316                           
  3317                           ;manejoProductos.c: 67:     tp = tp * 2;
  3318  0338  0855               	movf	agregarModificarPrecio@tp,w
  3319  0339  00BD               	movwf	??_agregarModificarPrecio
  3320  033A  073D               	addwf	??_agregarModificarPrecio,w
  3321  033B  00BE               	movwf	??_agregarModificarPrecio+1
  3322  033C  083E               	movf	??_agregarModificarPrecio+1,w
  3323  033D  00D5               	movwf	agregarModificarPrecio@tp
  3324  033E                     l2693:	
  3325  033E  0855               	movf	agregarModificarPrecio@tp,w
  3326  033F  120A  158A  23A8  120A  118A  	fcall	_eeprom_read
  3327  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0346  0855               	movf	agregarModificarPrecio@tp,w
  3330  0347  3E01               	addlw	1
  3331  0348  120A  158A  23A8  120A  118A  	fcall	_eeprom_read
  3332  034D                     l2695:	
  3333                           
  3334                           ;manejoProductos.c: 71:     precio = 100 * (codigoEntrada[4] - '0')+ 10 * (codigoEntrada
      +                          [5] - '0') + (codigoEntrada[6] - '0');
  3335  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3336  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3337  034F  085F               	movf	(_codigoEntrada^(0+128)+4),w
  3338  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0352  00BD               	movwf	??_agregarModificarPrecio
  3341  0353  01BE               	clrf	??_agregarModificarPrecio+1
  3342  0354  083D               	movf	??_agregarModificarPrecio,w
  3343  0355  00A0               	movwf	___wmul@multiplier
  3344  0356  083E               	movf	??_agregarModificarPrecio+1,w
  3345  0357  00A1               	movwf	___wmul@multiplier+1
  3346  0358  3064               	movlw	100
  3347  0359  00A2               	movwf	___wmul@multiplicand
  3348  035A  3000               	movlw	0
  3349  035B  00A3               	movwf	___wmul@multiplicand+1
  3350  035C  120A  158A  23F6  120A  118A  	fcall	___wmul
  3351  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0363  0820               	movf	?___wmul,w
  3354  0364  00BF               	movwf	??_agregarModificarPrecio+2
  3355  0365  0821               	movf	?___wmul+1,w
  3356  0366  00C0               	movwf	??_agregarModificarPrecio+3
  3357  0367  1683               	bsf	3,5	;RP0=1, select bank1
  3358  0368  1303               	bcf	3,6	;RP1=0, select bank1
  3359  0369  0860               	movf	(_codigoEntrada^(0+128)+5),w
  3360  036A  1283               	bcf	3,5	;RP0=0, select bank0
  3361  036B  1303               	bcf	3,6	;RP1=0, select bank0
  3362  036C  00C1               	movwf	??_agregarModificarPrecio+4
  3363  036D  01C2               	clrf	??_agregarModificarPrecio+5
  3364  036E  0841               	movf	??_agregarModificarPrecio+4,w
  3365  036F  00A0               	movwf	___wmul@multiplier
  3366  0370  0842               	movf	??_agregarModificarPrecio+5,w
  3367  0371  00A1               	movwf	___wmul@multiplier+1
  3368  0372  300A               	movlw	10
  3369  0373  00A2               	movwf	___wmul@multiplicand
  3370  0374  3000               	movlw	0
  3371  0375  00A3               	movwf	___wmul@multiplicand+1
  3372  0376  120A  158A  23F6  120A  118A  	fcall	___wmul
  3373  037B  1283               	bcf	3,5	;RP0=0, select bank0
  3374  037C  1303               	bcf	3,6	;RP1=0, select bank0
  3375  037D  0820               	movf	?___wmul,w
  3376  037E  073F               	addwf	??_agregarModificarPrecio+2,w
  3377  037F  00C3               	movwf	??_agregarModificarPrecio+6
  3378  0380  0821               	movf	?___wmul+1,w
  3379  0381  1803               	skipnc
  3380  0382  0A21               	incf	?___wmul+1,w
  3381  0383  0740               	addwf	??_agregarModificarPrecio+3,w
  3382  0384  00C4               	movwf	??_agregarModificarPrecio+7
  3383  0385  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0386  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0387  0861               	movf	(_codigoEntrada^(0+128)+6),w
  3386  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0389  1303               	bcf	3,6	;RP1=0, select bank0
  3388  038A  0743               	addwf	??_agregarModificarPrecio+6,w
  3389  038B  00C5               	movwf	??_agregarModificarPrecio+8
  3390  038C  3000               	movlw	0
  3391  038D  1803               	skipnc
  3392  038E  3001               	movlw	1
  3393  038F  0744               	addwf	??_agregarModificarPrecio+7,w
  3394  0390  00C6               	movwf	??_agregarModificarPrecio+9
  3395  0391  0845               	movf	??_agregarModificarPrecio+8,w
  3396  0392  3E30               	addlw	48
  3397  0393  00D3               	movwf	agregarModificarPrecio@precio
  3398  0394  0846               	movf	??_agregarModificarPrecio+9,w
  3399  0395  1803               	skipnc
  3400  0396  3E01               	addlw	1
  3401  0397  3EEB               	addlw	235
  3402  0398  00D4               	movwf	agregarModificarPrecio@precio+1
  3403  0399                     l2697:	
  3404                           
  3405                           ;manejoProductos.c: 72:     lower_8bits = precio & 0xff;
  3406  0399  0853               	movf	agregarModificarPrecio@precio,w
  3407  039A  00BD               	movwf	??_agregarModificarPrecio
  3408  039B  083D               	movf	??_agregarModificarPrecio,w
  3409  039C  00D1               	movwf	agregarModificarPrecio@lower_8bits
  3410  039D                     l2699:	
  3411                           
  3412                           ;manejoProductos.c: 73:     upper_8bits = (precio >> 8) & 0xff;
  3413  039D  0854               	movf	agregarModificarPrecio@precio+1,w
  3414  039E  00BD               	movwf	??_agregarModificarPrecio
  3415  039F  083D               	movf	??_agregarModificarPrecio,w
  3416  03A0  00D2               	movwf	agregarModificarPrecio@upper_8bits
  3417  03A1                     l2701:	
  3418                           
  3419                           ;manejoProductos.c: 74:     eeprom_write(tp ,upper_8bits);
  3420  03A1  0852               	movf	agregarModificarPrecio@upper_8bits,w
  3421  03A2  00BD               	movwf	??_agregarModificarPrecio
  3422  03A3  083D               	movf	??_agregarModificarPrecio,w
  3423  03A4  00F4               	movwf	eeprom_write@value
  3424  03A5  0855               	movf	agregarModificarPrecio@tp,w
  3425  03A6  120A  158A  2447  120A  118A  	fcall	_eeprom_write
  3426  03AB                     l2703:	
  3427                           
  3428                           ;manejoProductos.c: 75:     eeprom_write(tp + 1,lower_8bits);
  3429  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3430  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3431  03AD  0851               	movf	agregarModificarPrecio@lower_8bits,w
  3432  03AE  00BD               	movwf	??_agregarModificarPrecio
  3433  03AF  083D               	movf	??_agregarModificarPrecio,w
  3434  03B0  00F4               	movwf	eeprom_write@value
  3435  03B1  0855               	movf	agregarModificarPrecio@tp,w
  3436  03B2  3E01               	addlw	1
  3437  03B3  120A  158A  2447  120A  118A  	fcall	_eeprom_write
  3438  03B8                     l2705:	
  3439                           
  3440                           ;manejoProductos.c: 76:     sprintf(mensaje, "\nP%d=%d\n", tp/2 + 1, precio);
  3441  03B8  309F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3442  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3443  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3444  03BB  00BD               	movwf	??_agregarModificarPrecio
  3445  03BC  083D               	movf	??_agregarModificarPrecio,w
  3446  03BD  00AC               	movwf	sprintf@f
  3447  03BE  3002               	movlw	2
  3448  03BF  00A0               	movwf	___awdiv@divisor
  3449  03C0  3000               	movlw	0
  3450  03C1  00A1               	movwf	___awdiv@divisor+1
  3451  03C2  0855               	movf	agregarModificarPrecio@tp,w
  3452  03C3  00BE               	movwf	??_agregarModificarPrecio+1
  3453  03C4  01BF               	clrf	??_agregarModificarPrecio+2
  3454  03C5  083E               	movf	??_agregarModificarPrecio+1,w
  3455  03C6  00A2               	movwf	___awdiv@dividend
  3456  03C7  083F               	movf	??_agregarModificarPrecio+2,w
  3457  03C8  00A3               	movwf	___awdiv@dividend+1
  3458  03C9  120A  118A  267F  120A  118A  	fcall	___awdiv
  3459  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3460  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3461  03D0  0820               	movf	?___awdiv,w
  3462  03D1  3E01               	addlw	1
  3463  03D2  00AD               	movwf	?_sprintf+1
  3464  03D3  0821               	movf	?___awdiv+1,w
  3465  03D4  1803               	skipnc
  3466  03D5  3E01               	addlw	1
  3467  03D6  3E00               	addlw	0
  3468  03D7  00AE               	movwf	?_sprintf+2
  3469  03D8  0854               	movf	agregarModificarPrecio@precio+1,w
  3470  03D9  00B0               	movwf	?_sprintf+4
  3471  03DA  0853               	movf	agregarModificarPrecio@precio,w
  3472  03DB  00AF               	movwf	?_sprintf+3
  3473  03DC  3047               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  3474  03DD  120A  118A  2235  120A  118A  	fcall	_sprintf
  3475  03E2                     l2707:	
  3476                           
  3477                           ;manejoProductos.c: 77:     envioTX(mensaje);
  3478  03E2  3047               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  3479  03E3  00F4               	movwf	envioTX@mensaje
  3480  03E4  3000               	movlw	0
  3481  03E5  00F5               	movwf	envioTX@mensaje+1
  3482  03E6  120A  158A  24AA  120A  118A  	fcall	_envioTX
  3483  03EB                     l275:	
  3484  03EB  0008               	return
  3485  03EC                     __end_of_agregarModificarPrecio:	
  3486                           
  3487                           	psect	text12
  3488  0C47                     __ptext12:	
  3489 ;; *************** function _eeprom_write *****************
  3490 ;; Defined at:
  3491 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  addr            1    wreg     unsigned char 
  3494 ;;  value           1    4[COMMON] unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  addr            1    0[BANK0 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         1       0       0       0       0
  3507 ;;      Locals:         0       1       0       0       0
  3508 ;;      Temps:          1       0       0       0       0
  3509 ;;      Totals:         2       1       0       0       0
  3510 ;;Total ram usage:        3 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_agregarModificarPrecio
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _eeprom_write
  3522  0C47                     _eeprom_write:	
  3523                           
  3524                           ;incstack = 0
  3525                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3526                           ;eeprom_write@addr stored from wreg
  3527  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0C49  00A0               	movwf	eeprom_write@addr
  3530  0C4A                     l468:	
  3531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.10
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  3532                           
  3533  0C4A                     l469:	
  3534  0C4A  1683               	bsf	3,5	;RP0=1, select bank3
  3535  0C4B  1703               	bsf	3,6	;RP1=1, select bank3
  3536  0C4C  188C               	btfsc	12,1	;volsfr
  3537  0C4D  2C4F               	goto	u2531
  3538  0C4E  2C50               	goto	u2530
  3539  0C4F                     u2531:	
  3540  0C4F  2C4A               	goto	l469
  3541  0C50                     u2530:	
  3542  0C50                     l2517:	
  3543  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0C52  0820               	movf	eeprom_write@addr,w
  3546  0C53  1283               	bcf	3,5	;RP0=0, select bank2
  3547  0C54  1703               	bsf	3,6	;RP1=1, select bank2
  3548  0C55  008D               	movwf	13	;volatile
  3549  0C56  0874               	movf	eeprom_write@value,w
  3550  0C57  008C               	movwf	12	;volatile
  3551  0C58                     l2519:	
  3552  0C58  303F               	movlw	63
  3553  0C59  00F5               	movwf	??_eeprom_write
  3554  0C5A  0875               	movf	??_eeprom_write,w
  3555  0C5B  1683               	bsf	3,5	;RP0=1, select bank3
  3556  0C5C  1703               	bsf	3,6	;RP1=1, select bank3
  3557  0C5D  058C               	andwf	12,f	;volsfr
  3558  0C5E                     l2521:	
  3559  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0C60  1003               	bcf	3,0	;volatile
  3562  0C61                     l2523:	
  3563  0C61  1F8B               	btfss	11,7	;volatile
  3564  0C62  2C64               	goto	u2541
  3565  0C63  2C65               	goto	u2540
  3566  0C64                     u2541:	
  3567  0C64  2C66               	goto	l472
  3568  0C65                     u2540:	
  3569  0C65                     l2525:	
  3570  0C65  1403               	bsf	3,0	;volatile
  3571  0C66                     l472:	
  3572  0C66  138B               	bcf	11,7	;volatile
  3573  0C67  1683               	bsf	3,5	;RP0=1, select bank3
  3574  0C68  1703               	bsf	3,6	;RP1=1, select bank3
  3575  0C69  150C               	bsf	12,2	;volsfr
  3576  0C6A                     l2527:	
  3577  0C6A  3055               	movlw	85
  3578  0C6B  008D               	movwf	13	;volsfr
  3579  0C6C  30AA               	movlw	170
  3580  0C6D  008D               	movwf	13	;volsfr
  3581  0C6E                     l2529:	
  3582  0C6E  148C               	bsf	12,1	;volsfr
  3583  0C6F                     l2531:	
  3584  0C6F  110C               	bcf	12,2	;volsfr
  3585  0C70                     l2533:	
  3586  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  3588  0C72  1C03               	btfss	3,0	;volatile
  3589  0C73  2C75               	goto	u2551
  3590  0C74  2C76               	goto	u2550
  3591  0C75                     u2551:	
  3592  0C75  2C77               	goto	l475
  3593  0C76                     u2550:	
  3594  0C76                     l2535:	
  3595  0C76  178B               	bsf	11,7	;volatile
  3596  0C77                     l475:	
  3597  0C77  0008               	return
  3598  0C78                     __end_of_eeprom_write:	
  3599                           
  3600                           	psect	text13
  3601  0BBF                     __ptext13:	
  3602 ;; *************** function ___bmul *****************
  3603 ;; Defined at:
  3604 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  multiplier      1    wreg     unsigned char 
  3607 ;;  multiplicand    1    4[COMMON] unsigned char 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  multiplier      1    1[BANK0 ] unsigned char 
  3610 ;;  product         1    0[BANK0 ] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      unsigned char 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3620 ;;      Params:         1       0       0       0       0
  3621 ;;      Locals:         0       2       0       0       0
  3622 ;;      Temps:          1       0       0       0       0
  3623 ;;      Totals:         2       2       0       0       0
  3624 ;;Total ram usage:        4 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_lecturaEtiqueta
  3631 ;;		_agregarModificarPrecio
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function ___bmul
  3637  0BBF                     ___bmul:	
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3641                           ;___bmul@multiplier stored from wreg
  3642  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0BC1  00A1               	movwf	___bmul@multiplier
  3645  0BC2                     l2537:	
  3646  0BC2  01A0               	clrf	___bmul@product
  3647  0BC3                     l2539:	
  3648  0BC3  1C21               	btfss	___bmul@multiplier,0
  3649  0BC4  2BC6               	goto	u2561
  3650  0BC5  2BC7               	goto	u2560
  3651  0BC6                     u2561:	
  3652  0BC6  2BCB               	goto	l2543
  3653  0BC7                     u2560:	
  3654  0BC7                     l2541:	
  3655  0BC7  0874               	movf	___bmul@multiplicand,w
  3656  0BC8  00F5               	movwf	??___bmul
  3657  0BC9  0875               	movf	??___bmul,w
  3658  0BCA  07A0               	addwf	___bmul@product,f
  3659  0BCB                     l2543:	
  3660  0BCB  1003               	clrc
  3661  0BCC  0DF4               	rlf	___bmul@multiplicand,f
  3662  0BCD                     l2545:	
  3663  0BCD  1003               	clrc
  3664  0BCE  0CA1               	rrf	___bmul@multiplier,f
  3665  0BCF  0821               	movf	___bmul@multiplier,w
  3666  0BD0  1D03               	btfss	3,2
  3667  0BD1  2BD3               	goto	u2571
  3668  0BD2  2BD4               	goto	u2570
  3669  0BD3                     u2571:	
  3670  0BD3  2BC3               	goto	l2539
  3671  0BD4                     u2570:	
  3672  0BD4                     l2547:	
  3673  0BD4  0820               	movf	___bmul@product,w
  3674  0BD5                     l533:	
  3675  0BD5  0008               	return
  3676  0BD6                     __end_of___bmul:	
  3677                           
  3678                           	psect	text14
  3679  04BD                     __ptext14:	
  3680 ;; *************** function _lecturaConsulta *****************
  3681 ;; Defined at:
  3682 ;;		line 124 in file "lectura.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  articulo        2   32[BANK1 ] unsigned short 
  3687 ;;  strLote        32    0[BANK1 ] unsigned char [32]
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       0      34       0       0
  3699 ;;      Temps:          0       5       0       0       0
  3700 ;;      Totals:         0       5      34       0       0
  3701 ;;Total ram usage:       39 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    4
  3704 ;; This function calls:
  3705 ;;		___wmul
  3706 ;;		_consultaPrecio
  3707 ;;		_envioTX
  3708 ;;		_sprintf
  3709 ;; This function is called by:
  3710 ;;		_lecturaComando
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _lecturaConsulta
  3716  04BD                     _lecturaConsulta:	
  3717  04BD                     l2779:	
  3718                           ;incstack = 0
  3719                           ; Regs used in _lecturaConsulta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3720                           
  3721                           
  3722                           ;lectura.c: 126:     if (codigoEntrada[1] == 0x0D || codigoEntrada[1] == 0x0A) {
  3723  04BD  300D               	movlw	13
  3724  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  3725  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  3726  04C0  065C               	xorwf	(_codigoEntrada^(0+128)+1),w
  3727  04C1  1903               	btfsc	3,2
  3728  04C2  2CC4               	goto	u2961
  3729  04C3  2CC5               	goto	u2960
  3730  04C4                     u2961:	
  3731  04C4  2CCB               	goto	l2783
  3732  04C5                     u2960:	
  3733  04C5                     l2781:	
  3734  04C5  300A               	movlw	10
  3735  04C6  065C               	xorwf	(_codigoEntrada^(0+128)+1),w
  3736  04C7  1D03               	btfss	3,2
  3737  04C8  2CCA               	goto	u2971
  3738  04C9  2CCB               	goto	u2970
  3739  04CA                     u2971:	
  3740  04CA  2CE5               	goto	l2789
  3741  04CB                     u2970:	
  3742  04CB                     l2783:	
  3743                           
  3744                           ;lectura.c: 128:         if (cuenta != 0) {
  3745  04CB  0859               	movf	_cuenta^(0+128),w
  3746  04CC  045A               	iorwf	(_cuenta+1)^(0+128),w
  3747  04CD  1903               	btfsc	3,2
  3748  04CE  2CD0               	goto	u2981
  3749  04CF  2CD1               	goto	u2980
  3750  04D0                     u2981:	
  3751  04D0  2CDB               	goto	l2787
  3752  04D1                     u2980:	
  3753  04D1                     l2785:	
  3754                           
  3755                           ;lectura.c: 129:             envioTX("\nEstado: Activo\n");
  3756  04D1  308E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3757  04D2  00F4               	movwf	envioTX@mensaje
  3758  04D3  3080               	movlw	128
  3759  04D4  00F5               	movwf	envioTX@mensaje+1
  3760  04D5  120A  158A  24AA  120A  118A  	fcall	_envioTX
  3761                           
  3762                           ;lectura.c: 130:         }
  3763  04DA  2D70               	goto	l226
  3764  04DB                     l2787:	
  3765                           
  3766                           ;lectura.c: 132:             envioTX("\nEstado: En espera\n");
  3767  04DB  3056               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3768  04DC  00F4               	movwf	envioTX@mensaje
  3769  04DD  3080               	movlw	128
  3770  04DE  00F5               	movwf	envioTX@mensaje+1
  3771  04DF  120A  158A  24AA  120A  118A  	fcall	_envioTX
  3772  04E4  2D70               	goto	l226
  3773  04E5                     l2789:	
  3774  04E5  304C               	movlw	76
  3775  04E6  065C               	xorwf	(_codigoEntrada^(0+128)+1),w
  3776  04E7  1D03               	btfss	3,2
  3777  04E8  2CEA               	goto	u2991
  3778  04E9  2CEB               	goto	u2990
  3779  04EA                     u2991:	
  3780  04EA  2D13               	goto	l2793
  3781  04EB                     u2990:	
  3782  04EB                     l2791:	
  3783                           
  3784                           ;lectura.c: 136:         char strLote[32];;lectura.c: 138:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  3785  04EB  307D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3786  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3787  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3788  04EE  00DF               	movwf	??_lecturaConsulta
  3789  04EF  085F               	movf	??_lecturaConsulta,w
  3790  04F0  00AC               	movwf	sprintf@f
  3791  04F1  086F               	movf	_nroLote,w
  3792  04F2  00E0               	movwf	??_lecturaConsulta+1
  3793  04F3  01E1               	clrf	??_lecturaConsulta+2
  3794  04F4  0860               	movf	??_lecturaConsulta+1,w
  3795  04F5  00AD               	movwf	?_sprintf+1
  3796  04F6  0861               	movf	??_lecturaConsulta+2,w
  3797  04F7  00AE               	movwf	?_sprintf+2
  3798  04F8  086E               	movf	_ventasLote,w
  3799  04F9  00E2               	movwf	??_lecturaConsulta+3
  3800  04FA  01E3               	clrf	??_lecturaConsulta+4
  3801  04FB  0862               	movf	??_lecturaConsulta+3,w
  3802  04FC  00AF               	movwf	?_sprintf+3
  3803  04FD  0863               	movf	??_lecturaConsulta+4,w
  3804  04FE  00B0               	movwf	?_sprintf+4
  3805  04FF  0868               	movf	_montosLote+1,w
  3806  0500  00B2               	movwf	?_sprintf+6
  3807  0501  0867               	movf	_montosLote,w
  3808  0502  00B1               	movwf	?_sprintf+5
  3809  0503  30A0               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  3810  0504  120A  118A  2235  120A  118A  	fcall	_sprintf
  3811                           
  3812                           ;lectura.c: 139:         envioTX(strLote);
  3813  0509  30A0               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  3814  050A  00F4               	movwf	envioTX@mensaje
  3815  050B  3000               	movlw	0
  3816  050C  00F5               	movwf	envioTX@mensaje+1
  3817  050D  120A  158A  24AA  120A  118A  	fcall	_envioTX
  3818                           
  3819                           ;lectura.c: 141:     }
  3820  0512  2D70               	goto	l226
  3821  0513                     l2793:	
  3822  0513  3056               	movlw	86
  3823  0514  065C               	xorwf	(_codigoEntrada^(0+128)+1),w
  3824  0515  1D03               	btfss	3,2
  3825  0516  2D18               	goto	u3001
  3826  0517  2D19               	goto	u3000
  3827  0518                     u3001:	
  3828  0518  2D1D               	goto	l2797
  3829  0519                     u3000:	
  3830  0519                     l2795:	
  3831                           
  3832                           ;lectura.c: 144:         GO_nDONE = 1;
  3833  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3834  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3835  051B  151F               	bsf	31,2	;volatile
  3836                           
  3837                           ;lectura.c: 145:     }
  3838  051C  2D70               	goto	l226
  3839  051D                     l2797:	
  3840  051D  303A               	movlw	58
  3841  051E  025C               	subwf	(_codigoEntrada^(0+128)+1),w
  3842  051F  1803               	skipnc
  3843  0520  2D22               	goto	u3011
  3844  0521  2D23               	goto	u3010
  3845  0522                     u3011:	
  3846  0522  2D70               	goto	l226
  3847  0523                     u3010:	
  3848  0523                     l2799:	
  3849  0523  3030               	movlw	48
  3850  0524  025C               	subwf	(_codigoEntrada^(0+128)+1),w
  3851  0525  1C03               	skipc
  3852  0526  2D28               	goto	u3021
  3853  0527  2D29               	goto	u3020
  3854  0528                     u3021:	
  3855  0528  2D70               	goto	l226
  3856  0529                     u3020:	
  3857  0529                     l2801:	
  3858  0529  303A               	movlw	58
  3859  052A  025D               	subwf	(_codigoEntrada^(0+128)+2),w
  3860  052B  1803               	skipnc
  3861  052C  2D2E               	goto	u3031
  3862  052D  2D2F               	goto	u3030
  3863  052E                     u3031:	
  3864  052E  2D70               	goto	l226
  3865  052F                     u3030:	
  3866  052F                     l2803:	
  3867  052F  3030               	movlw	48
  3868  0530  025D               	subwf	(_codigoEntrada^(0+128)+2),w
  3869  0531  1C03               	skipc
  3870  0532  2D34               	goto	u3041
  3871  0533  2D35               	goto	u3040
  3872  0534                     u3041:	
  3873  0534  2D70               	goto	l226
  3874  0535                     u3040:	
  3875  0535                     l2805:	
  3876                           
  3877                           ;lectura.c: 149:         unsigned short int articulo = 10*(codigoEntrada[1] - '0') + (co
      +                          digoEntrada[2] - '0');
  3878  0535  085C               	movf	(_codigoEntrada^(0+128)+1),w
  3879  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0538  00DF               	movwf	??_lecturaConsulta
  3882  0539  01E0               	clrf	??_lecturaConsulta+1
  3883  053A  085F               	movf	??_lecturaConsulta,w
  3884  053B  00A0               	movwf	___wmul@multiplier
  3885  053C  0860               	movf	??_lecturaConsulta+1,w
  3886  053D  00A1               	movwf	___wmul@multiplier+1
  3887  053E  300A               	movlw	10
  3888  053F  00A2               	movwf	___wmul@multiplicand
  3889  0540  3000               	movlw	0
  3890  0541  00A3               	movwf	___wmul@multiplicand+1
  3891  0542  120A  158A  23F6  120A  118A  	fcall	___wmul
  3892  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3893  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3894  0549  085D               	movf	(_codigoEntrada^(0+128)+2),w
  3895  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3896  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3897  054C  0720               	addwf	?___wmul,w
  3898  054D  00E1               	movwf	??_lecturaConsulta+2
  3899  054E  3000               	movlw	0
  3900  054F  1803               	skipnc
  3901  0550  3001               	movlw	1
  3902  0551  0721               	addwf	?___wmul+1,w
  3903  0552  00E2               	movwf	??_lecturaConsulta+3
  3904  0553  0861               	movf	??_lecturaConsulta+2,w
  3905  0554  3EF0               	addlw	240
  3906  0555  1683               	bsf	3,5	;RP0=1, select bank1
  3907  0556  1303               	bcf	3,6	;RP1=0, select bank1
  3908  0557  00C0               	movwf	lecturaConsulta@articulo^(0+128)
  3909  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3911  055A  0862               	movf	??_lecturaConsulta+3,w
  3912  055B  1803               	skipnc
  3913  055C  3E01               	addlw	1
  3914  055D  3EFD               	addlw	253
  3915  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3916  055F  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0560  00C1               	movwf	(lecturaConsulta@articulo+1)^(0+128)
  3918  0561                     l2807:	
  3919                           
  3920                           ;lectura.c: 151:         consultaPrecio(articulo);
  3921  0561  0841               	movf	(lecturaConsulta@articulo+1)^(0+128),w
  3922  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3923  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3924  0564  00BE               	movwf	consultaPrecio@articulo+1
  3925  0565  1683               	bsf	3,5	;RP0=1, select bank1
  3926  0566  1303               	bcf	3,6	;RP1=0, select bank1
  3927  0567  0840               	movf	lecturaConsulta@articulo^(0+128),w
  3928  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3930  056A  00BD               	movwf	consultaPrecio@articulo
  3931  056B  120A  118A  2571  120A  118A  	fcall	_consultaPrecio
  3932  0570                     l226:	
  3933  0570  0008               	return
  3934  0571                     __end_of_lecturaConsulta:	
  3935                           
  3936                           	psect	text15
  3937  0571                     __ptext15:	
  3938 ;; *************** function _consultaPrecio *****************
  3939 ;; Defined at:
  3940 ;;		line 108 in file "lectura.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  articulo        2   29[BANK0 ] short 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  mensaje        26   35[BANK0 ] unsigned char [26]
  3945 ;;  precio          2   61[BANK0 ] short 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       2       0       0       0
  3956 ;;      Locals:         0      28       0       0       0
  3957 ;;      Temps:          0       4       0       0       0
  3958 ;;      Totals:         0      34       0       0       0
  3959 ;;Total ram usage:       34 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    3
  3962 ;; This function calls:
  3963 ;;		___awdiv
  3964 ;;		___awmod
  3965 ;;		_eeprom_read
  3966 ;;		_envioTX
  3967 ;;		_sprintf
  3968 ;; This function is called by:
  3969 ;;		_lecturaConsulta
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _consultaPrecio
  3975  0571                     _consultaPrecio:	
  3976  0571                     l2709:	
  3977                           ;incstack = 0
  3978                           ; Regs used in _consultaPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3979                           
  3980                           
  3981                           ;lectura.c: 109:     char mensaje[26];;lectura.c: 110:     articulo--;
  3982  0571  30FF               	movlw	255
  3983  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0573  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0574  07BD               	addwf	consultaPrecio@articulo,f
  3986  0575  1803               	skipnc
  3987  0576  0ABE               	incf	consultaPrecio@articulo+1,f
  3988  0577  30FF               	movlw	255
  3989  0578  07BE               	addwf	consultaPrecio@articulo+1,f
  3990                           
  3991                           ;lectura.c: 111:     articulo = articulo * 2;
  3992  0579  1003               	clrc
  3993  057A  0D3D               	rlf	consultaPrecio@articulo,w
  3994  057B  00BD               	movwf	consultaPrecio@articulo
  3995  057C  0D3E               	rlf	consultaPrecio@articulo+1,w
  3996  057D  00BE               	movwf	consultaPrecio@articulo+1
  3997  057E                     l2711:	
  3998                           
  3999                           ;lectura.c: 112:     short int precio = (eeprom_read(articulo) << 8) | (eeprom_read(arti
      +                          culo+1));
  4000  057E  083D               	movf	consultaPrecio@articulo,w
  4001  057F  3E01               	addlw	1
  4002  0580  120A  158A  23A8  120A  118A  	fcall	_eeprom_read
  4003  0585  1283               	bcf	3,5	;RP0=0, select bank0
  4004  0586  1303               	bcf	3,6	;RP1=0, select bank0
  4005  0587  00BF               	movwf	??_consultaPrecio
  4006  0588  01C0               	clrf	??_consultaPrecio+1
  4007  0589  083D               	movf	consultaPrecio@articulo,w
  4008  058A  120A  158A  23A8  120A  118A  	fcall	_eeprom_read
  4009  058F  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0590  1303               	bcf	3,6	;RP1=0, select bank0
  4011  0591  00C1               	movwf	??_consultaPrecio+2
  4012  0592  01C2               	clrf	??_consultaPrecio+3
  4013  0593  0841               	movf	??_consultaPrecio+2,w
  4014  0594  00C2               	movwf	??_consultaPrecio+3
  4015  0595  01C1               	clrf	??_consultaPrecio+2
  4016  0596  083F               	movf	??_consultaPrecio,w
  4017  0597  0441               	iorwf	??_consultaPrecio+2,w
  4018  0598  00DD               	movwf	consultaPrecio@precio
  4019  0599  0840               	movf	??_consultaPrecio+1,w
  4020  059A  0442               	iorwf	??_consultaPrecio+3,w
  4021  059B  00DE               	movwf	consultaPrecio@precio+1
  4022  059C                     l2713:	
  4023                           
  4024                           ;lectura.c: 114:     if (precio > 999 || precio < 0) {
  4025  059C  085E               	movf	consultaPrecio@precio+1,w
  4026  059D  3A80               	xorlw	128
  4027  059E  00FF               	movwf	btemp+1
  4028  059F  3083               	movlw	131
  4029  05A0  027F               	subwf	btemp+1,w
  4030  05A1  1D03               	skipz
  4031  05A2  2DA5               	goto	u2855
  4032  05A3  30E8               	movlw	232
  4033  05A4  025D               	subwf	consultaPrecio@precio,w
  4034  05A5                     u2855:	
  4035  05A5  1803               	skipnc
  4036  05A6  2DA8               	goto	u2851
  4037  05A7  2DA9               	goto	u2850
  4038  05A8                     u2851:	
  4039  05A8  2DAF               	goto	l2717
  4040  05A9                     u2850:	
  4041  05A9                     l2715:	
  4042  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  4043  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  4044  05AB  1FDE               	btfss	consultaPrecio@precio+1,7
  4045  05AC  2DAE               	goto	u2861
  4046  05AD  2DAF               	goto	u2860
  4047  05AE                     u2861:	
  4048  05AE  2DC5               	goto	l2719
  4049  05AF                     u2860:	
  4050  05AF                     l2717:	
  4051                           
  4052                           ;lectura.c: 115:         sprintf(mensaje, "\nProducto no encontrado\n");
  4053  05AF  303D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4054  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  4055  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  4056  05B2  00BF               	movwf	??_consultaPrecio
  4057  05B3  083F               	movf	??_consultaPrecio,w
  4058  05B4  00AC               	movwf	sprintf@f
  4059  05B5  3043               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4060  05B6  120A  118A  2235  120A  118A  	fcall	_sprintf
  4061                           
  4062                           ;lectura.c: 116:         envioTX(mensaje);
  4063  05BB  3043               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4064  05BC  00F4               	movwf	envioTX@mensaje
  4065  05BD  3000               	movlw	0
  4066  05BE  00F5               	movwf	envioTX@mensaje+1
  4067  05BF  120A  158A  24AA  120A  118A  	fcall	_envioTX
  4068                           
  4069                           ;lectura.c: 117:     }
  4070  05C4  2E15               	goto	l212
  4071  05C5                     l2719:	
  4072                           
  4073                           ;lectura.c: 119:         sprintf(mensaje, "\nTP: %d P: ?%d,%d\n", articulo/2 + 1, precio
      +                          /10, precio%10);
  4074  05C5  306A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4075  05C6  00BF               	movwf	??_consultaPrecio
  4076  05C7  083F               	movf	??_consultaPrecio,w
  4077  05C8  00AC               	movwf	sprintf@f
  4078  05C9  3002               	movlw	2
  4079  05CA  00A0               	movwf	___awdiv@divisor
  4080  05CB  3000               	movlw	0
  4081  05CC  00A1               	movwf	___awdiv@divisor+1
  4082  05CD  083E               	movf	consultaPrecio@articulo+1,w
  4083  05CE  00A3               	movwf	___awdiv@dividend+1
  4084  05CF  083D               	movf	consultaPrecio@articulo,w
  4085  05D0  00A2               	movwf	___awdiv@dividend
  4086  05D1  120A  118A  267F  120A  118A  	fcall	___awdiv
  4087  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  4088  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  4089  05D8  0820               	movf	?___awdiv,w
  4090  05D9  3E01               	addlw	1
  4091  05DA  00AD               	movwf	?_sprintf+1
  4092  05DB  0821               	movf	?___awdiv+1,w
  4093  05DC  1803               	skipnc
  4094  05DD  3E01               	addlw	1
  4095  05DE  3E00               	addlw	0
  4096  05DF  00AE               	movwf	?_sprintf+2
  4097  05E0  300A               	movlw	10
  4098  05E1  00A0               	movwf	___awdiv@divisor
  4099  05E2  3000               	movlw	0
  4100  05E3  00A1               	movwf	___awdiv@divisor+1
  4101  05E4  085E               	movf	consultaPrecio@precio+1,w
  4102  05E5  00A3               	movwf	___awdiv@dividend+1
  4103  05E6  085D               	movf	consultaPrecio@precio,w
  4104  05E7  00A2               	movwf	___awdiv@dividend
  4105  05E8  120A  118A  267F  120A  118A  	fcall	___awdiv
  4106  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  4107  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  4108  05EF  0821               	movf	?___awdiv+1,w
  4109  05F0  00B0               	movwf	?_sprintf+4
  4110  05F1  0820               	movf	?___awdiv,w
  4111  05F2  00AF               	movwf	?_sprintf+3
  4112  05F3  300A               	movlw	10
  4113  05F4  00A0               	movwf	___awmod@divisor
  4114  05F5  3000               	movlw	0
  4115  05F6  00A1               	movwf	___awmod@divisor+1
  4116  05F7  085E               	movf	consultaPrecio@precio+1,w
  4117  05F8  00A3               	movwf	___awmod@dividend+1
  4118  05F9  085D               	movf	consultaPrecio@precio,w
  4119  05FA  00A2               	movwf	___awmod@dividend
  4120  05FB  120A  158A  26E1  120A  118A  	fcall	___awmod
  4121  0600  1283               	bcf	3,5	;RP0=0, select bank0
  4122  0601  1303               	bcf	3,6	;RP1=0, select bank0
  4123  0602  0821               	movf	?___awmod+1,w
  4124  0603  00B2               	movwf	?_sprintf+6
  4125  0604  0820               	movf	?___awmod,w
  4126  0605  00B1               	movwf	?_sprintf+5
  4127  0606  3043               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4128  0607  120A  118A  2235  120A  118A  	fcall	_sprintf
  4129                           
  4130                           ;lectura.c: 120:         envioTX(mensaje);
  4131  060C  3043               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4132  060D  00F4               	movwf	envioTX@mensaje
  4133  060E  3000               	movlw	0
  4134  060F  00F5               	movwf	envioTX@mensaje+1
  4135  0610  120A  158A  24AA  120A  118A  	fcall	_envioTX
  4136  0615                     l212:	
  4137  0615  0008               	return
  4138  0616                     __end_of_consultaPrecio:	
  4139                           
  4140                           	psect	text16
  4141  0235                     __ptext16:	
  4142 ;; *************** function _sprintf *****************
  4143 ;; Defined at:
  4144 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  sp              1    wreg     PTR unsigned char 
  4147 ;;		 -> agregarModificarPrecio@mensaje(10), lecturaConsulta@strLote(32), consultaPrecio@mensaje(26), cierreDeLote@strLot
      +e(32), 
  4148 ;;		 -> main@bufferMsj(16), 
  4149 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  4150 ;;		 -> STR_9(9), STR_8(17), STR_5(19), STR_4(25), 
  4151 ;;		 -> STR_2(17), STR_1(6), 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  4154 ;;		 -> agregarModificarPrecio@mensaje(10), lecturaConsulta@strLote(32), consultaPrecio@mensaje(26), cierreDeLote@strLot
      +e(32), 
  4155 ;;		 -> main@bufferMsj(16), 
  4156 ;;  tmpval          4    0        struct .
  4157 ;;  val             2   25[BANK0 ] unsigned int 
  4158 ;;  cp              2    0        PTR const unsigned char 
  4159 ;;  len             2    0        unsigned int 
  4160 ;;  c               1   28[BANK0 ] unsigned char 
  4161 ;;  prec            1   24[BANK0 ] char 
  4162 ;;  flag            1   23[BANK0 ] unsigned char 
  4163 ;;  ap              1   22[BANK0 ] PTR void [1]
  4164 ;;		 -> ?_sprintf(2), 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2   12[BANK0 ] int 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4174 ;;      Params:         0       7       0       0       0
  4175 ;;      Locals:         0       7       0       0       0
  4176 ;;      Temps:          0       3       0       0       0
  4177 ;;      Totals:         0      17       0       0       0
  4178 ;;Total ram usage:       17 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    2
  4181 ;; This function calls:
  4182 ;;		___lwdiv
  4183 ;;		___lwmod
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;;		_cierreDeLote
  4187 ;;		_consultaPrecio
  4188 ;;		_lecturaConsulta
  4189 ;;		_agregarModificarPrecio
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _sprintf
  4195  0235                     _sprintf:	
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4199                           ;sprintf@sp stored from wreg
  4200  0235  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0236  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0237  00BB               	movwf	sprintf@sp
  4203  0238                     l2425:	
  4204                           
  4205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  4206  0238  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  4207  0239  00B3               	movwf	??_sprintf
  4208  023A  0833               	movf	??_sprintf,w
  4209  023B  00B6               	movwf	sprintf@ap
  4210                           
  4211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  4212  023C  2B08               	goto	l2477
  4213  023D                     l2427:	
  4214                           
  4215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  4216  023D  3025               	movlw	37
  4217  023E  063C               	xorwf	sprintf@c,w
  4218  023F  1903               	btfsc	3,2
  4219  0240  2A42               	goto	u2401
  4220  0241  2A43               	goto	u2400
  4221  0242                     u2401:	
  4222  0242  2A4F               	goto	l2433
  4223  0243                     u2400:	
  4224  0243                     l2429:	
  4225                           
  4226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  4227  0243  083C               	movf	sprintf@c,w
  4228  0244  00B3               	movwf	??_sprintf
  4229  0245  083B               	movf	sprintf@sp,w
  4230  0246  0084               	movwf	4
  4231  0247  0833               	movf	??_sprintf,w
  4232  0248  1383               	bcf	3,7	;select IRP bank0
  4233  0249  0080               	movwf	0
  4234  024A                     l2431:	
  4235  024A  3001               	movlw	1
  4236  024B  00B3               	movwf	??_sprintf
  4237  024C  0833               	movf	??_sprintf,w
  4238  024D  07BB               	addwf	sprintf@sp,f
  4239                           
  4240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  4241  024E  2B08               	goto	l2477
  4242  024F                     l2433:	
  4243                           
  4244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  4245  024F  01B7               	clrf	sprintf@flag
  4246  0250                     l2437:	
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  4248                           
  4249  0250  3001               	movlw	1
  4250  0251  07AC               	addwf	sprintf@f,f
  4251  0252  30FF               	movlw	-1
  4252  0253  072C               	addwf	sprintf@f,w
  4253  0254  0084               	movwf	4
  4254  0255  120A  118A  240A  120A  118A  	fcall	stringdir
  4255  025A  00BC               	movwf	sprintf@c
  4256  025B  00B3               	movwf	??_sprintf
  4257  025C  01B4               	clrf	??_sprintf+1
  4258                           
  4259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4260                           ; Switch size 1, requested type "simple"
  4261                           ; Number of cases is 1, Range of values is 0 to 0
  4262                           ; switch strategies available:
  4263                           ; Name         Instructions Cycles
  4264                           ; simple_byte            4     3 (average)
  4265                           ; direct_byte           11     8 (fixed)
  4266                           ; jumptable            260     6 (fixed)
  4267                           ;	Chosen strategy is simple_byte
  4268  025D  0834               	movf	??_sprintf+1,w
  4269  025E  3A00               	xorlw	0	; case 0
  4270  025F  1903               	skipnz
  4271  0260  2A62               	goto	l3027
  4272  0261  2B08               	goto	l2477
  4273  0262                     l3027:	
  4274                           
  4275                           ; Switch size 1, requested type "simple"
  4276                           ; Number of cases is 3, Range of values is 0 to 105
  4277                           ; switch strategies available:
  4278                           ; Name         Instructions Cycles
  4279                           ; simple_byte           10     6 (average)
  4280                           ; jumptable            260     6 (fixed)
  4281                           ;	Chosen strategy is simple_byte
  4282  0262  0833               	movf	??_sprintf,w
  4283  0263  3A00               	xorlw	0	; case 0
  4284  0264  1903               	skipnz
  4285  0265  2B1A               	goto	l2479
  4286  0266  3A64               	xorlw	100	; case 100
  4287  0267  1903               	skipnz
  4288  0268  2A6D               	goto	l2439
  4289  0269  3A0D               	xorlw	13	; case 105
  4290  026A  1903               	skipnz
  4291  026B  2A6D               	goto	l2439
  4292  026C  2B08               	goto	l2477
  4293  026D                     l2439:	
  4294                           
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4296  026D  0836               	movf	sprintf@ap,w
  4297  026E  0084               	movwf	4
  4298  026F  1383               	bcf	3,7	;select IRP bank0
  4299  0270  0800               	movf	0,w
  4300  0271  00B9               	movwf	sprintf@val
  4301  0272  0A84               	incf	4,f
  4302  0273  0800               	movf	0,w
  4303  0274  00BA               	movwf	sprintf@val+1
  4304  0275                     l2441:	
  4305  0275  3002               	movlw	2
  4306  0276  00B3               	movwf	??_sprintf
  4307  0277  0833               	movf	??_sprintf,w
  4308  0278  07B6               	addwf	sprintf@ap,f
  4309  0279                     l2443:	
  4310                           
  4311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  4312  0279  1FBA               	btfss	sprintf@val+1,7
  4313  027A  2A7C               	goto	u2411
  4314  027B  2A7D               	goto	u2410
  4315  027C                     u2411:	
  4316  027C  2A86               	goto	l2449
  4317  027D                     u2410:	
  4318  027D                     l2445:	
  4319                           
  4320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  4321  027D  3003               	movlw	3
  4322  027E  00B3               	movwf	??_sprintf
  4323  027F  0833               	movf	??_sprintf,w
  4324  0280  04B7               	iorwf	sprintf@flag,f
  4325  0281                     l2447:	
  4326                           
  4327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  4328  0281  09B9               	comf	sprintf@val,f
  4329  0282  09BA               	comf	sprintf@val+1,f
  4330  0283  0AB9               	incf	sprintf@val,f
  4331  0284  1903               	skipnz
  4332  0285  0ABA               	incf	sprintf@val+1,f
  4333  0286                     l2449:	
  4334                           
  4335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4336  0286  01BC               	clrf	sprintf@c
  4337  0287  0ABC               	incf	sprintf@c,f
  4338  0288                     l2455:	
  4339                           
  4340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  4341  0288  083C               	movf	sprintf@c,w
  4342  0289  00B3               	movwf	??_sprintf
  4343  028A  0733               	addwf	??_sprintf,w
  4344  028B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4345  028C  0084               	movwf	4
  4346  028D  120A  118A  240A  120A  118A  	fcall	stringdir
  4347  0292  00B4               	movwf	??_sprintf+1
  4348  0293  120A  118A  240A  120A  118A  	fcall	stringdir
  4349  0298  00B5               	movwf	??_sprintf+2
  4350  0299  0835               	movf	??_sprintf+2,w
  4351  029A  023A               	subwf	sprintf@val+1,w
  4352  029B  1D03               	skipz
  4353  029C  2A9F               	goto	u2425
  4354  029D  0834               	movf	??_sprintf+1,w
  4355  029E  0239               	subwf	sprintf@val,w
  4356  029F                     u2425:	
  4357  029F  1803               	skipnc
  4358  02A0  2AA2               	goto	u2421
  4359  02A1  2AA3               	goto	u2420
  4360  02A2                     u2421:	
  4361  02A2  2AA4               	goto	l2459
  4362  02A3                     u2420:	
  4363  02A3  2AAE               	goto	l2461
  4364  02A4                     l2459:	
  4365  02A4  3001               	movlw	1
  4366  02A5  00B3               	movwf	??_sprintf
  4367  02A6  0833               	movf	??_sprintf,w
  4368  02A7  07BC               	addwf	sprintf@c,f
  4369  02A8  3005               	movlw	5
  4370  02A9  063C               	xorwf	sprintf@c,w
  4371  02AA  1D03               	btfss	3,2
  4372  02AB  2AAD               	goto	u2431
  4373  02AC  2AAE               	goto	u2430
  4374  02AD                     u2431:	
  4375  02AD  2A88               	goto	l2455
  4376  02AE                     u2430:	
  4377  02AE                     l2461:	
  4378                           
  4379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  4380  02AE  0837               	movf	sprintf@flag,w
  4381  02AF  3903               	andlw	3
  4382  02B0  1903               	btfsc	3,2
  4383  02B1  2AB3               	goto	u2441
  4384  02B2  2AB4               	goto	u2440
  4385  02B3                     u2441:	
  4386  02B3  2ABF               	goto	l2467
  4387  02B4                     u2440:	
  4388  02B4                     l2463:	
  4389                           
  4390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  4391  02B4  302D               	movlw	45
  4392  02B5  00B3               	movwf	??_sprintf
  4393  02B6  083B               	movf	sprintf@sp,w
  4394  02B7  0084               	movwf	4
  4395  02B8  0833               	movf	??_sprintf,w
  4396  02B9  1383               	bcf	3,7	;select IRP bank0
  4397  02BA  0080               	movwf	0
  4398  02BB                     l2465:	
  4399  02BB  3001               	movlw	1
  4400  02BC  00B3               	movwf	??_sprintf
  4401  02BD  0833               	movf	??_sprintf,w
  4402  02BE  07BB               	addwf	sprintf@sp,f
  4403  02BF                     l2467:	
  4404                           
  4405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  4406  02BF  083C               	movf	sprintf@c,w
  4407  02C0  00B3               	movwf	??_sprintf
  4408  02C1  0833               	movf	??_sprintf,w
  4409  02C2  00B8               	movwf	sprintf@prec
  4410                           
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  4412  02C3  2AFF               	goto	l2475
  4413  02C4                     l2469:	
  4414                           
  4415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4416  02C4  300A               	movlw	10
  4417  02C5  00A7               	movwf	___lwmod@divisor
  4418  02C6  3000               	movlw	0
  4419  02C7  00A8               	movwf	___lwmod@divisor+1
  4420  02C8  0838               	movf	sprintf@prec,w
  4421  02C9  00B3               	movwf	??_sprintf
  4422  02CA  0733               	addwf	??_sprintf,w
  4423  02CB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4424  02CC  0084               	movwf	4
  4425  02CD  120A  118A  240A  120A  118A  	fcall	stringdir
  4426  02D2  00A0               	movwf	___lwdiv@divisor
  4427  02D3  120A  118A  240A  120A  118A  	fcall	stringdir
  4428  02D8  00A1               	movwf	___lwdiv@divisor+1
  4429  02D9  083A               	movf	sprintf@val+1,w
  4430  02DA  00A3               	movwf	___lwdiv@dividend+1
  4431  02DB  0839               	movf	sprintf@val,w
  4432  02DC  00A2               	movwf	___lwdiv@dividend
  4433  02DD  120A  158A  264C  120A  118A  	fcall	___lwdiv
  4434  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  4435  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  4436  02E4  0821               	movf	?___lwdiv+1,w
  4437  02E5  00AA               	movwf	___lwmod@dividend+1
  4438  02E6  0820               	movf	?___lwdiv,w
  4439  02E7  00A9               	movwf	___lwmod@dividend
  4440  02E8  120A  158A  258B  120A  118A  	fcall	___lwmod
  4441  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  4442  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  4443  02EF  0827               	movf	?___lwmod,w
  4444  02F0  3E30               	addlw	48
  4445  02F1  00B4               	movwf	??_sprintf+1
  4446  02F2  0834               	movf	??_sprintf+1,w
  4447  02F3  00BC               	movwf	sprintf@c
  4448  02F4                     l2471:	
  4449                           
  4450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  4451  02F4  083C               	movf	sprintf@c,w
  4452  02F5  00B3               	movwf	??_sprintf
  4453  02F6  083B               	movf	sprintf@sp,w
  4454  02F7  0084               	movwf	4
  4455  02F8  0833               	movf	??_sprintf,w
  4456  02F9  1383               	bcf	3,7	;select IRP bank0
  4457  02FA  0080               	movwf	0
  4458  02FB                     l2473:	
  4459  02FB  3001               	movlw	1
  4460  02FC  00B3               	movwf	??_sprintf
  4461  02FD  0833               	movf	??_sprintf,w
  4462  02FE  07BB               	addwf	sprintf@sp,f
  4463  02FF                     l2475:	
  4464                           
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  4466  02FF  30FF               	movlw	255
  4467  0300  00B3               	movwf	??_sprintf
  4468  0301  0833               	movf	??_sprintf,w
  4469  0302  07B8               	addwf	sprintf@prec,f
  4470  0303  0A38               	incf	sprintf@prec,w
  4471  0304  1D03               	btfss	3,2
  4472  0305  2B07               	goto	u2451
  4473  0306  2B08               	goto	u2450
  4474  0307                     u2451:	
  4475  0307  2AC4               	goto	l2469
  4476  0308                     u2450:	
  4477  0308                     l2477:	
  4478                           
  4479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  4480  0308  3001               	movlw	1
  4481  0309  07AC               	addwf	sprintf@f,f
  4482  030A  30FF               	movlw	-1
  4483  030B  072C               	addwf	sprintf@f,w
  4484  030C  0084               	movwf	4
  4485  030D  120A  118A  240A  120A  118A  	fcall	stringdir
  4486  0312  00B3               	movwf	??_sprintf
  4487  0313  0833               	movf	??_sprintf,w
  4488  0314  00BC               	movwf	sprintf@c
  4489  0315  083C               	movf	sprintf@c,w
  4490  0316  1D03               	btfss	3,2
  4491  0317  2B19               	goto	u2461
  4492  0318  2B1A               	goto	u2460
  4493  0319                     u2461:	
  4494  0319  2A3D               	goto	l2427
  4495  031A                     u2460:	
  4496  031A                     l2479:	
  4497                           
  4498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  4499  031A  083B               	movf	sprintf@sp,w
  4500  031B  0084               	movwf	4
  4501  031C  1383               	bcf	3,7	;select IRP bank0
  4502  031D  0180               	clrf	0
  4503  031E                     l503:	
  4504  031E  0008               	return
  4505  031F                     __end_of_sprintf:	
  4506                           
  4507                           	psect	text17
  4508  0CAA                     __ptext17:	
  4509 ;; *************** function _envioTX *****************
  4510 ;; Defined at:
  4511 ;;		line 39 in file "mostrarInicializar.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  mensaje         2    4[COMMON] PTR unsigned char 
  4514 ;;		 -> agregarModificarPrecio@mensaje(10), lecturaConsulta@strLote(32), STR_7(20), STR_6(17), 
  4515 ;;		 -> consultaPrecio@mensaje(26), STR_3(40), cierreDeLote@strLote(32), main@bufferMsj(16), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  i               2    3[BANK0 ] int 
  4518 ;;  transmitir      1    5[BANK0 ] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4528 ;;      Params:         2       0       0       0       0
  4529 ;;      Locals:         0       3       0       0       0
  4530 ;;      Temps:          0       3       0       0       0
  4531 ;;      Totals:         2       6       0       0       0
  4532 ;;Total ram usage:        8 bytes
  4533 ;; Hardware stack levels used:    2
  4534 ;; Hardware stack levels required when called:    1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_main
  4539 ;;		_cierreDeLote
  4540 ;;		_lecturaMenos
  4541 ;;		_consultaPrecio
  4542 ;;		_lecturaConsulta
  4543 ;;		_agregarModificarPrecio
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           
  4548                           ;psect for function _envioTX
  4549  0CAA                     _envioTX:	
  4550  0CAA                     l2487:	
  4551                           ;incstack = 0
  4552                           ; Regs used in _envioTX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4553                           
  4554                           
  4555                           ;mostrarInicializar.c: 40:     int i = 0;
  4556  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0CAC  01A3               	clrf	envioTX@i
  4559  0CAD  01A4               	clrf	envioTX@i+1
  4560  0CAE                     l2489:	
  4561                           
  4562                           ;mostrarInicializar.c: 41:     char transmitir=1;
  4563  0CAE  01A5               	clrf	envioTX@transmitir
  4564  0CAF  0AA5               	incf	envioTX@transmitir,f
  4565                           
  4566                           ;mostrarInicializar.c: 42:  while(transmitir){
  4567  0CB0  2CDA               	goto	l2499
  4568  0CB1                     l2491:	
  4569                           
  4570                           ;mostrarInicializar.c: 43:   TXREG = mensaje[i];
  4571  0CB1  0823               	movf	envioTX@i,w
  4572  0CB2  0774               	addwf	envioTX@mensaje,w
  4573  0CB3  00A1               	movwf	??_envioTX+1
  4574  0CB4  0875               	movf	envioTX@mensaje+1,w
  4575  0CB5  00A0               	movwf	??_envioTX
  4576  0CB6  1803               	skipnc
  4577  0CB7  0AA0               	incf	??_envioTX,f
  4578  0CB8  1FA3               	btfss	envioTX@i,7
  4579  0CB9  2CBB               	goto	u2470
  4580  0CBA  03A0               	decf	??_envioTX,f
  4581  0CBB                     u2470:	
  4582  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0CBD  0820               	movf	??_envioTX,w
  4585  0CBE  00A2               	movwf	??_envioTX+2
  4586  0CBF  0822               	movf	??_envioTX+2,w
  4587  0CC0  00FF               	movwf	btemp+1
  4588  0CC1  0821               	movf	??_envioTX+1,w
  4589  0CC2  0084               	movwf	4
  4590  0CC3  120A  118A  2400  120A  158A  	fcall	stringtab
  4591  0CC8  0099               	movwf	25	;volatile
  4592  0CC9                     l2493:	
  4593                           
  4594                           ;mostrarInicializar.c: 44:   if (TXREG==0){
  4595  0CC9  0819               	movf	25,w	;volatile
  4596  0CCA  1D03               	btfss	3,2
  4597  0CCB  2CCD               	goto	u2481
  4598  0CCC  2CCE               	goto	u2480
  4599  0CCD                     u2481:	
  4600  0CCD  2CD0               	goto	l2497
  4601  0CCE                     u2480:	
  4602  0CCE                     l2495:	
  4603                           
  4604                           ;mostrarInicializar.c: 45:    transmitir=0;
  4605  0CCE  01A5               	clrf	envioTX@transmitir
  4606                           
  4607                           ;mostrarInicializar.c: 46:         }
  4608  0CCF  2CD6               	goto	l306
  4609  0CD0                     l2497:	
  4610                           
  4611                           ;mostrarInicializar.c: 48:    i++;
  4612  0CD0  3001               	movlw	1
  4613  0CD1  07A3               	addwf	envioTX@i,f
  4614  0CD2  1803               	skipnc
  4615  0CD3  0AA4               	incf	envioTX@i+1,f
  4616  0CD4  3000               	movlw	0
  4617  0CD5  07A4               	addwf	envioTX@i+1,f
  4618  0CD6                     l306:	
  4619  0CD6  1E0C               	btfss	12,4	;volatile
  4620  0CD7  2CD9               	goto	u2491
  4621  0CD8  2CDA               	goto	u2490
  4622  0CD9                     u2491:	
  4623  0CD9  2CD6               	goto	l306
  4624  0CDA                     u2490:	
  4625  0CDA                     l2499:	
  4626                           
  4627                           ;mostrarInicializar.c: 42:  while(transmitir){
  4628  0CDA  0825               	movf	envioTX@transmitir,w
  4629  0CDB  1D03               	btfss	3,2
  4630  0CDC  2CDE               	goto	u2501
  4631  0CDD  2CDF               	goto	u2500
  4632  0CDE                     u2501:	
  4633  0CDE  2CB1               	goto	l2491
  4634  0CDF                     u2500:	
  4635  0CDF                     l310:	
  4636  0CDF  0008               	return
  4637  0CE0                     __end_of_envioTX:	
  4638                           
  4639                           	psect	text18
  4640  0BA8                     __ptext18:	
  4641 ;; *************** function _eeprom_read *****************
  4642 ;; Defined at:
  4643 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  addr            1    wreg     unsigned char 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  addr            1    5[COMMON] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      unsigned char 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4657 ;;      Params:         0       0       0       0       0
  4658 ;;      Locals:         1       0       0       0       0
  4659 ;;      Temps:          1       0       0       0       0
  4660 ;;      Totals:         2       0       0       0       0
  4661 ;;Total ram usage:        2 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    1
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_EEPROM_search
  4668 ;;		_consultaPrecio
  4669 ;;		_agregarModificarPrecio
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function _eeprom_read
  4675  0BA8                     _eeprom_read:	
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4679                           ;eeprom_read@addr stored from wreg
  4680  0BA8  00F5               	movwf	eeprom_read@addr
  4681  0BA9                     l449:	
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  4683                           
  4684  0BA9  0064               	clrwdt	;# 
  4685  0BAA  1683               	bsf	3,5	;RP0=1, select bank3
  4686  0BAB  1703               	bsf	3,6	;RP1=1, select bank3
  4687  0BAC  188C               	btfsc	12,1	;volsfr
  4688  0BAD  2BAF               	goto	u1431
  4689  0BAE  2BB0               	goto	u1430
  4690  0BAF                     u1431:	
  4691  0BAF  2BA9               	goto	l449
  4692  0BB0                     u1430:	
  4693  0BB0                     l1837:	
  4694                           
  4695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4696  0BB0  0875               	movf	eeprom_read@addr,w
  4697  0BB1  1283               	bcf	3,5	;RP0=0, select bank2
  4698  0BB2  1703               	bsf	3,6	;RP1=1, select bank2
  4699  0BB3  008D               	movwf	13	;volatile
  4700  0BB4  303F               	movlw	63
  4701  0BB5  00F4               	movwf	??_eeprom_read
  4702  0BB6  0874               	movf	??_eeprom_read,w
  4703  0BB7  1683               	bsf	3,5	;RP0=1, select bank3
  4704  0BB8  1703               	bsf	3,6	;RP1=1, select bank3
  4705  0BB9  058C               	andwf	12,f	;volsfr
  4706  0BBA  140C               	bsf	12,0	;volsfr
  4707  0BBB  1283               	bcf	3,5	;RP0=0, select bank2
  4708  0BBC  1703               	bsf	3,6	;RP1=1, select bank2
  4709  0BBD  080C               	movf	12,w	;volatile
  4710  0BBE                     l451:	
  4711  0BBE  0008               	return
  4712  0BBF                     __end_of_eeprom_read:	
  4713                           
  4714                           	psect	text19
  4715  0EE1                     __ptext19:	
  4716 ;; *************** function ___awmod *****************
  4717 ;; Defined at:
  4718 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  divisor         2    0[BANK0 ] int 
  4721 ;;  dividend        2    2[BANK0 ] int 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  sign            1    5[BANK0 ] unsigned char 
  4724 ;;  counter         1    4[BANK0 ] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  2    0[BANK0 ] int 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4734 ;;      Params:         0       4       0       0       0
  4735 ;;      Locals:         0       2       0       0       0
  4736 ;;      Temps:          1       0       0       0       0
  4737 ;;      Totals:         1       6       0       0       0
  4738 ;;Total ram usage:        7 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_lecturaEtiqueta
  4745 ;;		_consultaPrecio
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           
  4750                           ;psect for function ___awmod
  4751  0EE1                     ___awmod:	
  4752  0EE1                     l2595:	
  4753                           ;incstack = 0
  4754                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4755                           
  4756  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0EE3  01A5               	clrf	___awmod@sign
  4759  0EE4                     l2597:	
  4760  0EE4  1FA3               	btfss	___awmod@dividend+1,7
  4761  0EE5  2EE7               	goto	u2681
  4762  0EE6  2EE8               	goto	u2680
  4763  0EE7                     u2681:	
  4764  0EE7  2EEF               	goto	l2603
  4765  0EE8                     u2680:	
  4766  0EE8                     l2599:	
  4767  0EE8  09A2               	comf	___awmod@dividend,f
  4768  0EE9  09A3               	comf	___awmod@dividend+1,f
  4769  0EEA  0AA2               	incf	___awmod@dividend,f
  4770  0EEB  1903               	skipnz
  4771  0EEC  0AA3               	incf	___awmod@dividend+1,f
  4772  0EED                     l2601:	
  4773  0EED  01A5               	clrf	___awmod@sign
  4774  0EEE  0AA5               	incf	___awmod@sign,f
  4775  0EEF                     l2603:	
  4776  0EEF  1FA1               	btfss	___awmod@divisor+1,7
  4777  0EF0  2EF2               	goto	u2691
  4778  0EF1  2EF3               	goto	u2690
  4779  0EF2                     u2691:	
  4780  0EF2  2EF8               	goto	l2607
  4781  0EF3                     u2690:	
  4782  0EF3                     l2605:	
  4783  0EF3  09A0               	comf	___awmod@divisor,f
  4784  0EF4  09A1               	comf	___awmod@divisor+1,f
  4785  0EF5  0AA0               	incf	___awmod@divisor,f
  4786  0EF6  1903               	skipnz
  4787  0EF7  0AA1               	incf	___awmod@divisor+1,f
  4788  0EF8                     l2607:	
  4789  0EF8  0820               	movf	___awmod@divisor,w
  4790  0EF9  0421               	iorwf	___awmod@divisor+1,w
  4791  0EFA  1903               	btfsc	3,2
  4792  0EFB  2EFD               	goto	u2701
  4793  0EFC  2EFE               	goto	u2700
  4794  0EFD                     u2701:	
  4795  0EFD  2F2D               	goto	l2625
  4796  0EFE                     u2700:	
  4797  0EFE                     l2609:	
  4798  0EFE  01A4               	clrf	___awmod@counter
  4799  0EFF  0AA4               	incf	___awmod@counter,f
  4800  0F00  2F0C               	goto	l2615
  4801  0F01                     l2611:	
  4802  0F01  3001               	movlw	1
  4803  0F02                     u2715:	
  4804  0F02  1003               	clrc
  4805  0F03  0DA0               	rlf	___awmod@divisor,f
  4806  0F04  0DA1               	rlf	___awmod@divisor+1,f
  4807  0F05  3EFF               	addlw	-1
  4808  0F06  1D03               	skipz
  4809  0F07  2F02               	goto	u2715
  4810  0F08                     l2613:	
  4811  0F08  3001               	movlw	1
  4812  0F09  00F4               	movwf	??___awmod
  4813  0F0A  0874               	movf	??___awmod,w
  4814  0F0B  07A4               	addwf	___awmod@counter,f
  4815  0F0C                     l2615:	
  4816  0F0C  1FA1               	btfss	___awmod@divisor+1,7
  4817  0F0D  2F0F               	goto	u2721
  4818  0F0E  2F10               	goto	u2720
  4819  0F0F                     u2721:	
  4820  0F0F  2F01               	goto	l2611
  4821  0F10                     u2720:	
  4822  0F10                     l2617:	
  4823  0F10  0821               	movf	___awmod@divisor+1,w
  4824  0F11  0223               	subwf	___awmod@dividend+1,w
  4825  0F12  1D03               	skipz
  4826  0F13  2F16               	goto	u2735
  4827  0F14  0820               	movf	___awmod@divisor,w
  4828  0F15  0222               	subwf	___awmod@dividend,w
  4829  0F16                     u2735:	
  4830  0F16  1C03               	skipc
  4831  0F17  2F19               	goto	u2731
  4832  0F18  2F1A               	goto	u2730
  4833  0F19                     u2731:	
  4834  0F19  2F20               	goto	l2621
  4835  0F1A                     u2730:	
  4836  0F1A                     l2619:	
  4837  0F1A  0820               	movf	___awmod@divisor,w
  4838  0F1B  02A2               	subwf	___awmod@dividend,f
  4839  0F1C  0821               	movf	___awmod@divisor+1,w
  4840  0F1D  1C03               	skipc
  4841  0F1E  03A3               	decf	___awmod@dividend+1,f
  4842  0F1F  02A3               	subwf	___awmod@dividend+1,f
  4843  0F20                     l2621:	
  4844  0F20  3001               	movlw	1
  4845  0F21                     u2745:	
  4846  0F21  1003               	clrc
  4847  0F22  0CA1               	rrf	___awmod@divisor+1,f
  4848  0F23  0CA0               	rrf	___awmod@divisor,f
  4849  0F24  3EFF               	addlw	-1
  4850  0F25  1D03               	skipz
  4851  0F26  2F21               	goto	u2745
  4852  0F27                     l2623:	
  4853  0F27  3001               	movlw	1
  4854  0F28  02A4               	subwf	___awmod@counter,f
  4855  0F29  1D03               	btfss	3,2
  4856  0F2A  2F2C               	goto	u2751
  4857  0F2B  2F2D               	goto	u2750
  4858  0F2C                     u2751:	
  4859  0F2C  2F10               	goto	l2617
  4860  0F2D                     u2750:	
  4861  0F2D                     l2625:	
  4862  0F2D  0825               	movf	___awmod@sign,w
  4863  0F2E  1903               	btfsc	3,2
  4864  0F2F  2F31               	goto	u2761
  4865  0F30  2F32               	goto	u2760
  4866  0F31                     u2761:	
  4867  0F31  2F37               	goto	l2629
  4868  0F32                     u2760:	
  4869  0F32                     l2627:	
  4870  0F32  09A2               	comf	___awmod@dividend,f
  4871  0F33  09A3               	comf	___awmod@dividend+1,f
  4872  0F34  0AA2               	incf	___awmod@dividend,f
  4873  0F35  1903               	skipnz
  4874  0F36  0AA3               	incf	___awmod@dividend+1,f
  4875  0F37                     l2629:	
  4876  0F37  0823               	movf	___awmod@dividend+1,w
  4877  0F38  00A1               	movwf	?___awmod+1
  4878  0F39  0822               	movf	___awmod@dividend,w
  4879  0F3A  00A0               	movwf	?___awmod
  4880  0F3B                     l673:	
  4881  0F3B  0008               	return
  4882  0F3C                     __end_of___awmod:	
  4883                           
  4884                           	psect	text20
  4885  067F                     __ptext20:	
  4886 ;; *************** function ___awdiv *****************
  4887 ;; Defined at:
  4888 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  divisor         2    0[BANK0 ] int 
  4891 ;;  dividend        2    2[BANK0 ] int 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  quotient        2    6[BANK0 ] int 
  4894 ;;  sign            1    5[BANK0 ] unsigned char 
  4895 ;;  counter         1    4[BANK0 ] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  2    0[BANK0 ] int 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4905 ;;      Params:         0       4       0       0       0
  4906 ;;      Locals:         0       4       0       0       0
  4907 ;;      Temps:          1       0       0       0       0
  4908 ;;      Totals:         1       8       0       0       0
  4909 ;;Total ram usage:        9 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_EEPROM_search
  4916 ;;		_consultaPrecio
  4917 ;;		_agregarModificarPrecio
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           
  4922                           ;psect for function ___awdiv
  4923  067F                     ___awdiv:	
  4924  067F                     l2551:	
  4925                           ;incstack = 0
  4926                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4927                           
  4928  067F  1283               	bcf	3,5	;RP0=0, select bank0
  4929  0680  1303               	bcf	3,6	;RP1=0, select bank0
  4930  0681  01A5               	clrf	___awdiv@sign
  4931  0682                     l2553:	
  4932  0682  1FA1               	btfss	___awdiv@divisor+1,7
  4933  0683  2E85               	goto	u2581
  4934  0684  2E86               	goto	u2580
  4935  0685                     u2581:	
  4936  0685  2E8D               	goto	l2559
  4937  0686                     u2580:	
  4938  0686                     l2555:	
  4939  0686  09A0               	comf	___awdiv@divisor,f
  4940  0687  09A1               	comf	___awdiv@divisor+1,f
  4941  0688  0AA0               	incf	___awdiv@divisor,f
  4942  0689  1903               	skipnz
  4943  068A  0AA1               	incf	___awdiv@divisor+1,f
  4944  068B                     l2557:	
  4945  068B  01A5               	clrf	___awdiv@sign
  4946  068C  0AA5               	incf	___awdiv@sign,f
  4947  068D                     l2559:	
  4948  068D  1FA3               	btfss	___awdiv@dividend+1,7
  4949  068E  2E90               	goto	u2591
  4950  068F  2E91               	goto	u2590
  4951  0690                     u2591:	
  4952  0690  2E9A               	goto	l2565
  4953  0691                     u2590:	
  4954  0691                     l2561:	
  4955  0691  09A2               	comf	___awdiv@dividend,f
  4956  0692  09A3               	comf	___awdiv@dividend+1,f
  4957  0693  0AA2               	incf	___awdiv@dividend,f
  4958  0694  1903               	skipnz
  4959  0695  0AA3               	incf	___awdiv@dividend+1,f
  4960  0696                     l2563:	
  4961  0696  3001               	movlw	1
  4962  0697  00F4               	movwf	??___awdiv
  4963  0698  0874               	movf	??___awdiv,w
  4964  0699  06A5               	xorwf	___awdiv@sign,f
  4965  069A                     l2565:	
  4966  069A  01A6               	clrf	___awdiv@quotient
  4967  069B  01A7               	clrf	___awdiv@quotient+1
  4968  069C                     l2567:	
  4969  069C  0820               	movf	___awdiv@divisor,w
  4970  069D  0421               	iorwf	___awdiv@divisor+1,w
  4971  069E  1903               	btfsc	3,2
  4972  069F  2EA1               	goto	u2601
  4973  06A0  2EA2               	goto	u2600
  4974  06A1                     u2601:	
  4975  06A1  2ED9               	goto	l2587
  4976  06A2                     u2600:	
  4977  06A2                     l2569:	
  4978  06A2  01A4               	clrf	___awdiv@counter
  4979  06A3  0AA4               	incf	___awdiv@counter,f
  4980  06A4  2EB0               	goto	l2575
  4981  06A5                     l2571:	
  4982  06A5  3001               	movlw	1
  4983  06A6                     u2615:	
  4984  06A6  1003               	clrc
  4985  06A7  0DA0               	rlf	___awdiv@divisor,f
  4986  06A8  0DA1               	rlf	___awdiv@divisor+1,f
  4987  06A9  3EFF               	addlw	-1
  4988  06AA  1D03               	skipz
  4989  06AB  2EA6               	goto	u2615
  4990  06AC                     l2573:	
  4991  06AC  3001               	movlw	1
  4992  06AD  00F4               	movwf	??___awdiv
  4993  06AE  0874               	movf	??___awdiv,w
  4994  06AF  07A4               	addwf	___awdiv@counter,f
  4995  06B0                     l2575:	
  4996  06B0  1FA1               	btfss	___awdiv@divisor+1,7
  4997  06B1  2EB3               	goto	u2621
  4998  06B2  2EB4               	goto	u2620
  4999  06B3                     u2621:	
  5000  06B3  2EA5               	goto	l2571
  5001  06B4                     u2620:	
  5002  06B4                     l2577:	
  5003  06B4  3001               	movlw	1
  5004  06B5                     u2635:	
  5005  06B5  1003               	clrc
  5006  06B6  0DA6               	rlf	___awdiv@quotient,f
  5007  06B7  0DA7               	rlf	___awdiv@quotient+1,f
  5008  06B8  3EFF               	addlw	-1
  5009  06B9  1D03               	skipz
  5010  06BA  2EB5               	goto	u2635
  5011  06BB  0821               	movf	___awdiv@divisor+1,w
  5012  06BC  0223               	subwf	___awdiv@dividend+1,w
  5013  06BD  1D03               	skipz
  5014  06BE  2EC1               	goto	u2645
  5015  06BF  0820               	movf	___awdiv@divisor,w
  5016  06C0  0222               	subwf	___awdiv@dividend,w
  5017  06C1                     u2645:	
  5018  06C1  1C03               	skipc
  5019  06C2  2EC4               	goto	u2641
  5020  06C3  2EC5               	goto	u2640
  5021  06C4                     u2641:	
  5022  06C4  2ECC               	goto	l2583
  5023  06C5                     u2640:	
  5024  06C5                     l2579:	
  5025  06C5  0820               	movf	___awdiv@divisor,w
  5026  06C6  02A2               	subwf	___awdiv@dividend,f
  5027  06C7  0821               	movf	___awdiv@divisor+1,w
  5028  06C8  1C03               	skipc
  5029  06C9  03A3               	decf	___awdiv@dividend+1,f
  5030  06CA  02A3               	subwf	___awdiv@dividend+1,f
  5031  06CB                     l2581:	
  5032  06CB  1426               	bsf	___awdiv@quotient,0
  5033  06CC                     l2583:	
  5034  06CC  3001               	movlw	1
  5035  06CD                     u2655:	
  5036  06CD  1003               	clrc
  5037  06CE  0CA1               	rrf	___awdiv@divisor+1,f
  5038  06CF  0CA0               	rrf	___awdiv@divisor,f
  5039  06D0  3EFF               	addlw	-1
  5040  06D1  1D03               	skipz
  5041  06D2  2ECD               	goto	u2655
  5042  06D3                     l2585:	
  5043  06D3  3001               	movlw	1
  5044  06D4  02A4               	subwf	___awdiv@counter,f
  5045  06D5  1D03               	btfss	3,2
  5046  06D6  2ED8               	goto	u2661
  5047  06D7  2ED9               	goto	u2660
  5048  06D8                     u2661:	
  5049  06D8  2EB4               	goto	l2577
  5050  06D9                     u2660:	
  5051  06D9                     l2587:	
  5052  06D9  0825               	movf	___awdiv@sign,w
  5053  06DA  1903               	btfsc	3,2
  5054  06DB  2EDD               	goto	u2671
  5055  06DC  2EDE               	goto	u2670
  5056  06DD                     u2671:	
  5057  06DD  2EE3               	goto	l2591
  5058  06DE                     u2670:	
  5059  06DE                     l2589:	
  5060  06DE  09A6               	comf	___awdiv@quotient,f
  5061  06DF  09A7               	comf	___awdiv@quotient+1,f
  5062  06E0  0AA6               	incf	___awdiv@quotient,f
  5063  06E1  1903               	skipnz
  5064  06E2  0AA7               	incf	___awdiv@quotient+1,f
  5065  06E3                     l2591:	
  5066  06E3  0827               	movf	___awdiv@quotient+1,w
  5067  06E4  00A1               	movwf	?___awdiv+1
  5068  06E5  0826               	movf	___awdiv@quotient,w
  5069  06E6  00A0               	movwf	?___awdiv
  5070  06E7                     l660:	
  5071  06E7  0008               	return
  5072  06E8                     __end_of___awdiv:	
  5073                           
  5074                           	psect	text21
  5075  0D50                     __ptext21:	
  5076 ;; *************** function _accionesDeshacer *****************
  5077 ;; Defined at:
  5078 ;;		line 16 in file "acciones.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5092 ;;      Params:         0       0       0       0       0
  5093 ;;      Locals:         0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0
  5095 ;;      Totals:         0       0       0       0       0
  5096 ;;Total ram usage:        0 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    4
  5099 ;; This function calls:
  5100 ;;		_eliminarProd
  5101 ;;		_mostrarDigitos
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _accionesDeshacer
  5109  0D50                     _accionesDeshacer:	
  5110  0D50                     l2923:	
  5111                           ;incstack = 0
  5112                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5113                           
  5114                           
  5115                           ;acciones.c: 17:     if (cuenta != auxCuenta) {
  5116  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  5117  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  5118  0D52  086C               	movf	_auxCuenta+1,w
  5119  0D53  1683               	bsf	3,5	;RP0=1, select bank1
  5120  0D54  1303               	bcf	3,6	;RP1=0, select bank1
  5121  0D55  065A               	xorwf	(_cuenta+1)^(0+128),w
  5122  0D56  1D03               	skipz
  5123  0D57  2D5E               	goto	u3155
  5124  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  5125  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  5126  0D5A  086B               	movf	_auxCuenta,w
  5127  0D5B  1683               	bsf	3,5	;RP0=1, select bank1
  5128  0D5C  1303               	bcf	3,6	;RP1=0, select bank1
  5129  0D5D  0659               	xorwf	_cuenta^(0+128),w
  5130  0D5E                     u3155:	
  5131  0D5E  1903               	skipnz
  5132  0D5F  2D61               	goto	u3151
  5133  0D60  2D62               	goto	u3150
  5134  0D61                     u3151:	
  5135  0D61  2D8A               	goto	l347
  5136  0D62                     u3150:	
  5137  0D62                     l2925:	
  5138                           
  5139                           ;acciones.c: 18:         cuenta = auxCuenta;
  5140  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0D64  086C               	movf	_auxCuenta+1,w
  5143  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  5144  0D66  1303               	bcf	3,6	;RP1=0, select bank1
  5145  0D67  00DA               	movwf	(_cuenta+1)^(0+128)
  5146  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0D6A  086B               	movf	_auxCuenta,w
  5149  0D6B  1683               	bsf	3,5	;RP0=1, select bank1
  5150  0D6C  1303               	bcf	3,6	;RP1=0, select bank1
  5151  0D6D  00D9               	movwf	_cuenta^(0+128)
  5152  0D6E                     l2927:	
  5153                           
  5154                           ;acciones.c: 20:         eliminarProd(productoIngresado);
  5155  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  5156  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  5157  0D70  086A               	movf	_productoIngresado+1,w
  5158  0D71  00AD               	movwf	eliminarProd@tp+1
  5159  0D72  0869               	movf	_productoIngresado,w
  5160  0D73  00AC               	movwf	eliminarProd@tp
  5161  0D74  120A  158A  273C  120A  158A  	fcall	_eliminarProd
  5162  0D79                     l2929:	
  5163                           
  5164                           ;acciones.c: 21:         mostrarDigitos(cuenta);
  5165  0D79  1683               	bsf	3,5	;RP0=1, select bank1
  5166  0D7A  1303               	bcf	3,6	;RP1=0, select bank1
  5167  0D7B  085A               	movf	(_cuenta+1)^(0+128),w
  5168  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0D7E  00AD               	movwf	mostrarDigitos@num+1
  5171  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  5172  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  5173  0D81  0859               	movf	_cuenta^(0+128),w
  5174  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  5175  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  5176  0D84  00AC               	movwf	mostrarDigitos@num
  5177  0D85  120A  118A  26E8  120A  158A  	fcall	_mostrarDigitos
  5178  0D8A                     l347:	
  5179  0D8A  0008               	return
  5180  0D8B                     __end_of_accionesDeshacer:	
  5181                           
  5182                           	psect	text22
  5183  0F3C                     __ptext22:	
  5184 ;; *************** function _eliminarProd *****************
  5185 ;; Defined at:
  5186 ;;		line 47 in file "manejoProductos.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  tp              2   12[BANK0 ] short 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  i               2   17[BANK0 ] short 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5200 ;;      Params:         0       2       0       0       0
  5201 ;;      Locals:         0       2       0       0       0
  5202 ;;      Temps:          0       3       0       0       0
  5203 ;;      Totals:         0       7       0       0       0
  5204 ;;Total ram usage:        7 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    3
  5207 ;; This function calls:
  5208 ;;		_pow
  5209 ;; This function is called by:
  5210 ;;		_accionesDeshacer
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function _eliminarProd
  5216  0F3C                     _eliminarProd:	
  5217  0F3C                     l2867:	
  5218                           ;incstack = 0
  5219                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5220                           
  5221                           
  5222                           ;manejoProductos.c: 48:         for(short int i = 12; i>=0; i--) {
  5223  0F3C  300C               	movlw	12
  5224  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0F3F  00B1               	movwf	eliminarProd@i
  5227  0F40  3000               	movlw	0
  5228  0F41  00B2               	movwf	eliminarProd@i+1
  5229  0F42                     l2873:	
  5230                           
  5231                           ;manejoProductos.c: 49:         if( tp >= 8*i) {
  5232  0F42  0832               	movf	eliminarProd@i+1,w
  5233  0F43  00AF               	movwf	??_eliminarProd+1
  5234  0F44  0831               	movf	eliminarProd@i,w
  5235  0F45  00AE               	movwf	??_eliminarProd
  5236  0F46  1003               	clrc
  5237  0F47  0DAE               	rlf	??_eliminarProd,f
  5238  0F48  0DAF               	rlf	??_eliminarProd+1,f
  5239  0F49  1003               	clrc
  5240  0F4A  0DAE               	rlf	??_eliminarProd,f
  5241  0F4B  0DAF               	rlf	??_eliminarProd+1,f
  5242  0F4C  1003               	clrc
  5243  0F4D  0DAE               	rlf	??_eliminarProd,f
  5244  0F4E  0DAF               	rlf	??_eliminarProd+1,f
  5245  0F4F  082D               	movf	eliminarProd@tp+1,w
  5246  0F50  3A80               	xorlw	128
  5247  0F51  00B0               	movwf	??_eliminarProd+2
  5248  0F52  082F               	movf	??_eliminarProd+1,w
  5249  0F53  3A80               	xorlw	128
  5250  0F54  0230               	subwf	??_eliminarProd+2,w
  5251  0F55  1D03               	skipz
  5252  0F56  2F59               	goto	u3115
  5253  0F57  082E               	movf	??_eliminarProd,w
  5254  0F58  022C               	subwf	eliminarProd@tp,w
  5255  0F59                     u3115:	
  5256  0F59  1C03               	skipc
  5257  0F5A  2F5C               	goto	u3111
  5258  0F5B  2F5D               	goto	u3110
  5259  0F5C                     u3111:	
  5260  0F5C  2F91               	goto	l2881
  5261  0F5D                     u3110:	
  5262  0F5D                     l2875:	
  5263                           
  5264                           ;manejoProductos.c: 51:             tp = tp - 8*i;
  5265  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0F5F  0832               	movf	eliminarProd@i+1,w
  5268  0F60  00AF               	movwf	??_eliminarProd+1
  5269  0F61  0831               	movf	eliminarProd@i,w
  5270  0F62  00AE               	movwf	??_eliminarProd
  5271  0F63  1003               	clrc
  5272  0F64  0DAE               	rlf	??_eliminarProd,f
  5273  0F65  0DAF               	rlf	??_eliminarProd+1,f
  5274  0F66  1003               	clrc
  5275  0F67  0DAE               	rlf	??_eliminarProd,f
  5276  0F68  0DAF               	rlf	??_eliminarProd+1,f
  5277  0F69  1003               	clrc
  5278  0F6A  0DAE               	rlf	??_eliminarProd,f
  5279  0F6B  0DAF               	rlf	??_eliminarProd+1,f
  5280  0F6C  082E               	movf	??_eliminarProd,w
  5281  0F6D  022C               	subwf	eliminarProd@tp,w
  5282  0F6E  00AC               	movwf	eliminarProd@tp
  5283  0F6F  082F               	movf	??_eliminarProd+1,w
  5284  0F70  1C03               	skipc
  5285  0F71  0A2F               	incf	??_eliminarProd+1,w
  5286  0F72  022D               	subwf	eliminarProd@tp+1,w
  5287  0F73  00AD               	movwf	eliminarProd@tp+1
  5288  0F74                     l2877:	
  5289                           
  5290                           ;manejoProductos.c: 52:             prodIngresados[i] = prodIngresados[i] ^ pow(2,tp);
  5291  0F74  0831               	movf	eliminarProd@i,w
  5292  0F75  3E90               	addlw	(low (_prodIngresados| (0+256)))& (0+255)
  5293  0F76  0084               	movwf	4
  5294  0F77  3002               	movlw	2
  5295  0F78  00A4               	movwf	pow@numero
  5296  0F79  3000               	movlw	0
  5297  0F7A  00A5               	movwf	pow@numero+1
  5298  0F7B  082D               	movf	eliminarProd@tp+1,w
  5299  0F7C  00A7               	movwf	pow@potencia+1
  5300  0F7D  082C               	movf	eliminarProd@tp,w
  5301  0F7E  00A6               	movwf	pow@potencia
  5302  0F7F  120A  158A  2516  120A  158A  	fcall	_pow
  5303  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  5305  0F86  0824               	movf	?_pow,w
  5306  0F87  1783               	bsf	3,7	;select IRP bank3
  5307  0F88  0600               	xorwf	0,w
  5308  0F89  00AE               	movwf	??_eliminarProd
  5309  0F8A  0831               	movf	eliminarProd@i,w
  5310  0F8B  3E90               	addlw	(low (_prodIngresados| (0+256)))& (0+255)
  5311  0F8C  0084               	movwf	4
  5312  0F8D  082E               	movf	??_eliminarProd,w
  5313  0F8E  0080               	movwf	0
  5314  0F8F                     l2879:	
  5315                           
  5316                           ;manejoProductos.c: 53:             i = 0;
  5317  0F8F  01B1               	clrf	eliminarProd@i
  5318  0F90  01B2               	clrf	eliminarProd@i+1
  5319  0F91                     l2881:	
  5320                           
  5321                           ;manejoProductos.c: 56:     }
  5322  0F91  30FF               	movlw	255
  5323  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0F94  07B1               	addwf	eliminarProd@i,f
  5326  0F95  1803               	skipnc
  5327  0F96  0AB2               	incf	eliminarProd@i+1,f
  5328  0F97  30FF               	movlw	255
  5329  0F98  07B2               	addwf	eliminarProd@i+1,f
  5330  0F99                     l2883:	
  5331  0F99  1FB2               	btfss	eliminarProd@i+1,7
  5332  0F9A  2F9C               	goto	u3121
  5333  0F9B  2F9D               	goto	u3120
  5334  0F9C                     u3121:	
  5335  0F9C  2F42               	goto	l2873
  5336  0F9D                     u3120:	
  5337  0F9D                     l272:	
  5338  0F9D  0008               	return
  5339  0F9E                     __end_of_eliminarProd:	
  5340                           
  5341                           	psect	text23
  5342  0D16                     __ptext23:	
  5343 ;; *************** function _pow *****************
  5344 ;; Defined at:
  5345 ;;		line 3 in file "manejoProductos.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  numero          2    4[BANK0 ] unsigned int 
  5348 ;;  potencia        2    6[BANK0 ] unsigned int 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  i               2    8[BANK0 ] int 
  5351 ;;  resultado       2   10[BANK0 ] unsigned int 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2    4[BANK0 ] unsigned int 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, pclath, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5361 ;;      Params:         0       4       0       0       0
  5362 ;;      Locals:         0       4       0       0       0
  5363 ;;      Temps:          0       0       0       0       0
  5364 ;;      Totals:         0       8       0       0       0
  5365 ;;Total ram usage:        8 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    2
  5368 ;; This function calls:
  5369 ;;		___wmul
  5370 ;; This function is called by:
  5371 ;;		_ingresoProd
  5372 ;;		_verificarProd
  5373 ;;		_eliminarProd
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _pow
  5379  0D16                     _pow:	
  5380  0D16                     l2501:	
  5381                           ;incstack = 0
  5382                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  5383                           
  5384                           
  5385                           ;manejoProductos.c: 4:     unsigned int resultado = 0;
  5386  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0D18  01AA               	clrf	pow@resultado
  5389  0D19  01AB               	clrf	pow@resultado+1
  5390                           
  5391                           ;manejoProductos.c: 6:     for (int i = 0; i <= potencia; i++){
  5392  0D1A  01A8               	clrf	pow@i
  5393  0D1B  01A9               	clrf	pow@i+1
  5394  0D1C  2D41               	goto	l2511
  5395  0D1D                     l2503:	
  5396                           
  5397                           ;manejoProductos.c: 7:         if (i == 0){
  5398  0D1D  0828               	movf	pow@i,w
  5399  0D1E  0429               	iorwf	pow@i+1,w
  5400  0D1F  1D03               	btfss	3,2
  5401  0D20  2D22               	goto	u2511
  5402  0D21  2D23               	goto	u2510
  5403  0D22                     u2511:	
  5404  0D22  2D28               	goto	l2507
  5405  0D23                     u2510:	
  5406  0D23                     l2505:	
  5407                           
  5408                           ;manejoProductos.c: 8:         resultado = 1;
  5409  0D23  3001               	movlw	1
  5410  0D24  00AA               	movwf	pow@resultado
  5411  0D25  3000               	movlw	0
  5412  0D26  00AB               	movwf	pow@resultado+1
  5413                           
  5414                           ;manejoProductos.c: 9:         }
  5415  0D27  2D3B               	goto	l2509
  5416  0D28                     l2507:	
  5417                           
  5418                           ;manejoProductos.c: 11:             resultado = resultado * numero;
  5419  0D28  082B               	movf	pow@resultado+1,w
  5420  0D29  00A1               	movwf	___wmul@multiplier+1
  5421  0D2A  082A               	movf	pow@resultado,w
  5422  0D2B  00A0               	movwf	___wmul@multiplier
  5423  0D2C  0825               	movf	pow@numero+1,w
  5424  0D2D  00A3               	movwf	___wmul@multiplicand+1
  5425  0D2E  0824               	movf	pow@numero,w
  5426  0D2F  00A2               	movwf	___wmul@multiplicand
  5427  0D30  120A  158A  23F6  120A  158A  	fcall	___wmul
  5428  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0D37  0821               	movf	?___wmul+1,w
  5431  0D38  00AB               	movwf	pow@resultado+1
  5432  0D39  0820               	movf	?___wmul,w
  5433  0D3A  00AA               	movwf	pow@resultado
  5434  0D3B                     l2509:	
  5435                           
  5436                           ;manejoProductos.c: 13:     }
  5437  0D3B  3001               	movlw	1
  5438  0D3C  07A8               	addwf	pow@i,f
  5439  0D3D  1803               	skipnc
  5440  0D3E  0AA9               	incf	pow@i+1,f
  5441  0D3F  3000               	movlw	0
  5442  0D40  07A9               	addwf	pow@i+1,f
  5443  0D41                     l2511:	
  5444  0D41  0829               	movf	pow@i+1,w
  5445  0D42  0227               	subwf	pow@potencia+1,w
  5446  0D43  1D03               	skipz
  5447  0D44  2D47               	goto	u2525
  5448  0D45  0828               	movf	pow@i,w
  5449  0D46  0226               	subwf	pow@potencia,w
  5450  0D47                     u2525:	
  5451  0D47  1803               	skipnc
  5452  0D48  2D4A               	goto	u2521
  5453  0D49  2D4B               	goto	u2520
  5454  0D4A                     u2521:	
  5455  0D4A  2D1D               	goto	l2503
  5456  0D4B                     u2520:	
  5457  0D4B                     l2513:	
  5458                           
  5459                           ;manejoProductos.c: 14:     return resultado;
  5460  0D4B  082B               	movf	pow@resultado+1,w
  5461  0D4C  00A5               	movwf	?_pow+1
  5462  0D4D  082A               	movf	pow@resultado,w
  5463  0D4E  00A4               	movwf	?_pow
  5464  0D4F                     l253:	
  5465  0D4F  0008               	return
  5466  0D50                     __end_of_pow:	
  5467                           
  5468                           	psect	text24
  5469  0BF6                     __ptext24:	
  5470 ;; *************** function ___wmul *****************
  5471 ;; Defined at:
  5472 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5475 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  product         2    4[COMMON] unsigned int 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  2    0[BANK0 ] unsigned int 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5487 ;;      Params:         0       4       0       0       0
  5488 ;;      Locals:         2       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0
  5490 ;;      Totals:         2       4       0       0       0
  5491 ;;Total ram usage:        6 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    1
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;;		_lecturaConsulta
  5499 ;;		_pow
  5500 ;;		_agregarModificarPrecio
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           
  5505                           ;psect for function ___wmul
  5506  0BF6                     ___wmul:	
  5507  0BF6                     l2385:	
  5508                           ;incstack = 0
  5509                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5510                           
  5511  0BF6  01F4               	clrf	___wmul@product
  5512  0BF7  01F5               	clrf	___wmul@product+1
  5513  0BF8                     l2387:	
  5514  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0BFA  1C20               	btfss	___wmul@multiplier,0
  5517  0BFB  2BFD               	goto	u2291
  5518  0BFC  2BFE               	goto	u2290
  5519  0BFD                     u2291:	
  5520  0BFD  2C04               	goto	l507
  5521  0BFE                     u2290:	
  5522  0BFE                     l2389:	
  5523  0BFE  0822               	movf	___wmul@multiplicand,w
  5524  0BFF  07F4               	addwf	___wmul@product,f
  5525  0C00  1803               	skipnc
  5526  0C01  0AF5               	incf	___wmul@product+1,f
  5527  0C02  0823               	movf	___wmul@multiplicand+1,w
  5528  0C03  07F5               	addwf	___wmul@product+1,f
  5529  0C04                     l507:	
  5530  0C04  3001               	movlw	1
  5531  0C05                     u2305:	
  5532  0C05  1003               	clrc
  5533  0C06  0DA2               	rlf	___wmul@multiplicand,f
  5534  0C07  0DA3               	rlf	___wmul@multiplicand+1,f
  5535  0C08  3EFF               	addlw	-1
  5536  0C09  1D03               	skipz
  5537  0C0A  2C05               	goto	u2305
  5538  0C0B                     l2391:	
  5539  0C0B  3001               	movlw	1
  5540  0C0C                     u2315:	
  5541  0C0C  1003               	clrc
  5542  0C0D  0CA1               	rrf	___wmul@multiplier+1,f
  5543  0C0E  0CA0               	rrf	___wmul@multiplier,f
  5544  0C0F  3EFF               	addlw	-1
  5545  0C10  1D03               	skipz
  5546  0C11  2C0C               	goto	u2315
  5547  0C12                     l2393:	
  5548  0C12  0820               	movf	___wmul@multiplier,w
  5549  0C13  0421               	iorwf	___wmul@multiplier+1,w
  5550  0C14  1D03               	btfss	3,2
  5551  0C15  2C17               	goto	u2321
  5552  0C16  2C18               	goto	u2320
  5553  0C17                     u2321:	
  5554  0C17  2BF8               	goto	l2387
  5555  0C18                     u2320:	
  5556  0C18                     l2395:	
  5557  0C18  0875               	movf	___wmul@product+1,w
  5558  0C19  00A1               	movwf	?___wmul+1
  5559  0C1A  0874               	movf	___wmul@product,w
  5560  0C1B  00A0               	movwf	?___wmul
  5561  0C1C                     l509:	
  5562  0C1C  0008               	return
  5563  0C1D                     __end_of___wmul:	
  5564                           
  5565                           	psect	text25
  5566  0E92                     __ptext25:	
  5567 ;; *************** function _accionesAceptar *****************
  5568 ;; Defined at:
  5569 ;;		line 3 in file "acciones.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  i               2   17[BANK0 ] short 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         0       0       0       0       0
  5584 ;;      Locals:         0       2       0       0       0
  5585 ;;      Temps:          0       1       0       0       0
  5586 ;;      Totals:         0       3       0       0       0
  5587 ;;Total ram usage:        3 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    3
  5590 ;; This function calls:
  5591 ;;		_bailenLeds
  5592 ;;		_mostrarDigitos
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _accionesAceptar
  5600  0E92                     _accionesAceptar:	
  5601  0E92                     l2899:	
  5602                           ;incstack = 0
  5603                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5604                           
  5605                           
  5606                           ;acciones.c: 5:     ventasLote++;
  5607  0E92  3001               	movlw	1
  5608  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  5609  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  5610  0E95  00B0               	movwf	??_accionesAceptar
  5611  0E96  0830               	movf	??_accionesAceptar,w
  5612  0E97  07EE               	addwf	_ventasLote,f
  5613  0E98                     l2901:	
  5614                           
  5615                           ;acciones.c: 6:     montosLote+=cuenta;
  5616  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  5617  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  5618  0E9A  0859               	movf	_cuenta^(0+128),w
  5619  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  5620  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  5621  0E9D  07E7               	addwf	_montosLote,f
  5622  0E9E  1803               	skipnc
  5623  0E9F  0AE8               	incf	_montosLote+1,f
  5624  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  5625  0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  5626  0EA2  085A               	movf	(_cuenta+1)^(0+128),w
  5627  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  5628  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  5629  0EA5  07E8               	addwf	_montosLote+1,f
  5630  0EA6                     l2903:	
  5631                           
  5632                           ;acciones.c: 7:     cuenta = 0;
  5633  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  5634  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  5635  0EA8  01D9               	clrf	_cuenta^(0+128)
  5636  0EA9  01DA               	clrf	(_cuenta+1)^(0+128)
  5637  0EAA                     l2905:	
  5638                           
  5639                           ;acciones.c: 8:     auxCuenta = 0;
  5640  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  5641  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  5642  0EAC  01EB               	clrf	_auxCuenta
  5643  0EAD  01EC               	clrf	_auxCuenta+1
  5644  0EAE                     l2907:	
  5645                           
  5646                           ;acciones.c: 9:     for(short int i = 0; i < 13; i++){
  5647  0EAE  01B1               	clrf	accionesAceptar@i
  5648  0EAF  01B2               	clrf	accionesAceptar@i+1
  5649  0EB0                     l2913:	
  5650                           
  5651                           ;acciones.c: 10:         prodIngresados[i] = 0;
  5652  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  5653  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  5654  0EB2  0831               	movf	accionesAceptar@i,w
  5655  0EB3  3E90               	addlw	(low (_prodIngresados| (0+256)))& (0+255)
  5656  0EB4  0084               	movwf	4
  5657  0EB5  1783               	bsf	3,7	;select IRP bank3
  5658  0EB6  0180               	clrf	0
  5659  0EB7                     l2915:	
  5660                           
  5661                           ;acciones.c: 11:     }
  5662  0EB7  3001               	movlw	1
  5663  0EB8  07B1               	addwf	accionesAceptar@i,f
  5664  0EB9  1803               	skipnc
  5665  0EBA  0AB2               	incf	accionesAceptar@i+1,f
  5666  0EBB  3000               	movlw	0
  5667  0EBC  07B2               	addwf	accionesAceptar@i+1,f
  5668  0EBD                     l2917:	
  5669  0EBD  0832               	movf	accionesAceptar@i+1,w
  5670  0EBE  3A80               	xorlw	128
  5671  0EBF  00FF               	movwf	btemp+1
  5672  0EC0  3080               	movlw	128
  5673  0EC1  027F               	subwf	btemp+1,w
  5674  0EC2  1D03               	skipz
  5675  0EC3  2EC6               	goto	u3145
  5676  0EC4  300D               	movlw	13
  5677  0EC5  0231               	subwf	accionesAceptar@i,w
  5678  0EC6                     u3145:	
  5679  0EC6  1C03               	skipc
  5680  0EC7  2EC9               	goto	u3141
  5681  0EC8  2ECA               	goto	u3140
  5682  0EC9                     u3141:	
  5683  0EC9  2EB0               	goto	l2913
  5684  0ECA                     u3140:	
  5685  0ECA                     l2919:	
  5686                           
  5687                           ;acciones.c: 12:     mostrarDigitos(cuenta);
  5688  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  5689  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  5690  0ECC  085A               	movf	(_cuenta+1)^(0+128),w
  5691  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  5692  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  5693  0ECF  00AD               	movwf	mostrarDigitos@num+1
  5694  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  5695  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  5696  0ED2  0859               	movf	_cuenta^(0+128),w
  5697  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  5698  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  5699  0ED5  00AC               	movwf	mostrarDigitos@num
  5700  0ED6  120A  118A  26E8  120A  158A  	fcall	_mostrarDigitos
  5701  0EDB                     l2921:	
  5702                           
  5703                           ;acciones.c: 13:     bailenLeds();
  5704  0EDB  120A  118A  27B3  120A  158A  	fcall	_bailenLeds
  5705  0EE0                     l343:	
  5706  0EE0  0008               	return
  5707  0EE1                     __end_of_accionesAceptar:	
  5708                           
  5709                           	psect	text26
  5710  06E8                     __ptext26:	
  5711 ;; *************** function _mostrarDigitos *****************
  5712 ;; Defined at:
  5713 ;;		line 17 in file "mostrarInicializar.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  num             2   12[BANK0 ] unsigned int 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         0       2       0       0       0
  5728 ;;      Locals:         0       2       0       0       0
  5729 ;;      Temps:          0       0       0       0       0
  5730 ;;      Totals:         0       4       0       0       0
  5731 ;;Total ram usage:        4 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    2
  5734 ;; This function calls:
  5735 ;;		___lwdiv
  5736 ;;		___lwmod
  5737 ;; This function is called by:
  5738 ;;		_main
  5739 ;;		_lecturaEtiqueta
  5740 ;;		_accionesAceptar
  5741 ;;		_accionesDeshacer
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           
  5746                           ;psect for function _mostrarDigitos
  5747  06E8                     _mostrarDigitos:	
  5748  06E8                     l2721:	
  5749                           ;incstack = 0
  5750                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5751                           
  5752                           
  5753                           ;mostrarInicializar.c: 19:     PORTB = BMS[num/100];
  5754  06E8  3064               	movlw	100
  5755  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  5756  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  5757  06EB  00A0               	movwf	___lwdiv@divisor
  5758  06EC  3000               	movlw	0
  5759  06ED  00A1               	movwf	___lwdiv@divisor+1
  5760  06EE  082D               	movf	mostrarDigitos@num+1,w
  5761  06EF  00A3               	movwf	___lwdiv@dividend+1
  5762  06F0  082C               	movf	mostrarDigitos@num,w
  5763  06F1  00A2               	movwf	___lwdiv@dividend
  5764  06F2  120A  158A  264C  120A  118A  	fcall	___lwdiv
  5765  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  5766  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  5767  06F9  0820               	movf	?___lwdiv,w
  5768  06FA  3E0B               	addlw	low ((_BMS-__stringbase)| (0+32768))
  5769  06FB  0084               	movwf	4
  5770  06FC  120A  118A  240A  120A  118A  	fcall	stringdir
  5771  0701  0086               	movwf	6	;volatile
  5772  0702                     l2723:	
  5773                           
  5774                           ;mostrarInicializar.c: 20:     PORTB = PORTB | ((num%100)/10);
  5775  0702  300A               	movlw	10
  5776  0703  00A0               	movwf	___lwdiv@divisor
  5777  0704  3000               	movlw	0
  5778  0705  00A1               	movwf	___lwdiv@divisor+1
  5779  0706  082D               	movf	mostrarDigitos@num+1,w
  5780  0707  00AA               	movwf	___lwmod@dividend+1
  5781  0708  082C               	movf	mostrarDigitos@num,w
  5782  0709  00A9               	movwf	___lwmod@dividend
  5783  070A  3064               	movlw	100
  5784  070B  00A7               	movwf	___lwmod@divisor
  5785  070C  3000               	movlw	0
  5786  070D  00A8               	movwf	___lwmod@divisor+1
  5787  070E  120A  158A  258B  120A  118A  	fcall	___lwmod
  5788  0713  1283               	bcf	3,5	;RP0=0, select bank0
  5789  0714  1303               	bcf	3,6	;RP1=0, select bank0
  5790  0715  0828               	movf	?___lwmod+1,w
  5791  0716  00A3               	movwf	___lwdiv@dividend+1
  5792  0717  0827               	movf	?___lwmod,w
  5793  0718  00A2               	movwf	___lwdiv@dividend
  5794  0719  120A  158A  264C  120A  118A  	fcall	___lwdiv
  5795  071E  1283               	bcf	3,5	;RP0=0, select bank0
  5796  071F  1303               	bcf	3,6	;RP1=0, select bank0
  5797  0720  0820               	movf	?___lwdiv,w
  5798  0721  0406               	iorwf	6,w
  5799  0722  0086               	movwf	6	;volatile
  5800  0723                     l2725:	
  5801                           
  5802                           ;mostrarInicializar.c: 21:     PORTD = BMS[(num%100)%10];
  5803  0723  082D               	movf	mostrarDigitos@num+1,w
  5804  0724  00AA               	movwf	___lwmod@dividend+1
  5805  0725  082C               	movf	mostrarDigitos@num,w
  5806  0726  00A9               	movwf	___lwmod@dividend
  5807  0727  3064               	movlw	100
  5808  0728  00A7               	movwf	___lwmod@divisor
  5809  0729  3000               	movlw	0
  5810  072A  00A8               	movwf	___lwmod@divisor+1
  5811  072B  120A  158A  258B  120A  118A  	fcall	___lwmod
  5812  0730  1283               	bcf	3,5	;RP0=0, select bank0
  5813  0731  1303               	bcf	3,6	;RP1=0, select bank0
  5814  0732  0828               	movf	?___lwmod+1,w
  5815  0733  00AF               	movwf	_mostrarDigitos$973+1
  5816  0734  0827               	movf	?___lwmod,w
  5817  0735  00AE               	movwf	_mostrarDigitos$973
  5818                           
  5819                           ;mostrarInicializar.c: 21:     PORTD = BMS[(num%100)%10];
  5820  0736  300A               	movlw	10
  5821  0737  00A7               	movwf	___lwmod@divisor
  5822  0738  3000               	movlw	0
  5823  0739  00A8               	movwf	___lwmod@divisor+1
  5824  073A  082F               	movf	_mostrarDigitos$973+1,w
  5825  073B  00AA               	movwf	___lwmod@dividend+1
  5826  073C  082E               	movf	_mostrarDigitos$973,w
  5827  073D  00A9               	movwf	___lwmod@dividend
  5828  073E  120A  158A  258B  120A  118A  	fcall	___lwmod
  5829  0743  1283               	bcf	3,5	;RP0=0, select bank0
  5830  0744  1303               	bcf	3,6	;RP1=0, select bank0
  5831  0745  0827               	movf	?___lwmod,w
  5832  0746  3E0B               	addlw	low ((_BMS-__stringbase)| (0+32768))
  5833  0747  0084               	movwf	4
  5834  0748  120A  118A  240A  120A  118A  	fcall	stringdir
  5835  074D  0088               	movwf	8	;volatile
  5836  074E                     l294:	
  5837  074E  0008               	return
  5838  074F                     __end_of_mostrarDigitos:	
  5839                           
  5840                           	psect	text27
  5841  0D8B                     __ptext27:	
  5842 ;; *************** function ___lwmod *****************
  5843 ;; Defined at:
  5844 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  divisor         2    7[BANK0 ] unsigned int 
  5847 ;;  dividend        2    9[BANK0 ] unsigned int 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  counter         1   11[BANK0 ] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  2    7[BANK0 ] unsigned int 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5859 ;;      Params:         0       4       0       0       0
  5860 ;;      Locals:         0       1       0       0       0
  5861 ;;      Temps:          1       0       0       0       0
  5862 ;;      Totals:         1       5       0       0       0
  5863 ;;Total ram usage:        6 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    1
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_main
  5870 ;;		_mostrarDigitos
  5871 ;;		_sprintf
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           
  5876                           ;psect for function ___lwmod
  5877  0D8B                     ___lwmod:	
  5878  0D8B                     l1739:	
  5879                           ;incstack = 0
  5880                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5881                           
  5882  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  5883  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  5884  0D8D  0827               	movf	___lwmod@divisor,w
  5885  0D8E  0428               	iorwf	___lwmod@divisor+1,w
  5886  0D8F  1903               	btfsc	3,2
  5887  0D90  2D92               	goto	u1261
  5888  0D91  2D93               	goto	u1260
  5889  0D92                     u1261:	
  5890  0D92  2DC2               	goto	l1757
  5891  0D93                     u1260:	
  5892  0D93                     l1741:	
  5893  0D93  01AB               	clrf	___lwmod@counter
  5894  0D94  0AAB               	incf	___lwmod@counter,f
  5895  0D95  2DA1               	goto	l1747
  5896  0D96                     l1743:	
  5897  0D96  3001               	movlw	1
  5898  0D97                     u1275:	
  5899  0D97  1003               	clrc
  5900  0D98  0DA7               	rlf	___lwmod@divisor,f
  5901  0D99  0DA8               	rlf	___lwmod@divisor+1,f
  5902  0D9A  3EFF               	addlw	-1
  5903  0D9B  1D03               	skipz
  5904  0D9C  2D97               	goto	u1275
  5905  0D9D                     l1745:	
  5906  0D9D  3001               	movlw	1
  5907  0D9E  00F5               	movwf	??___lwmod
  5908  0D9F  0875               	movf	??___lwmod,w
  5909  0DA0  07AB               	addwf	___lwmod@counter,f
  5910  0DA1                     l1747:	
  5911  0DA1  1FA8               	btfss	___lwmod@divisor+1,7
  5912  0DA2  2DA4               	goto	u1281
  5913  0DA3  2DA5               	goto	u1280
  5914  0DA4                     u1281:	
  5915  0DA4  2D96               	goto	l1743
  5916  0DA5                     u1280:	
  5917  0DA5                     l1749:	
  5918  0DA5  0828               	movf	___lwmod@divisor+1,w
  5919  0DA6  022A               	subwf	___lwmod@dividend+1,w
  5920  0DA7  1D03               	skipz
  5921  0DA8  2DAB               	goto	u1295
  5922  0DA9  0827               	movf	___lwmod@divisor,w
  5923  0DAA  0229               	subwf	___lwmod@dividend,w
  5924  0DAB                     u1295:	
  5925  0DAB  1C03               	skipc
  5926  0DAC  2DAE               	goto	u1291
  5927  0DAD  2DAF               	goto	u1290
  5928  0DAE                     u1291:	
  5929  0DAE  2DB5               	goto	l1753
  5930  0DAF                     u1290:	
  5931  0DAF                     l1751:	
  5932  0DAF  0827               	movf	___lwmod@divisor,w
  5933  0DB0  02A9               	subwf	___lwmod@dividend,f
  5934  0DB1  0828               	movf	___lwmod@divisor+1,w
  5935  0DB2  1C03               	skipc
  5936  0DB3  03AA               	decf	___lwmod@dividend+1,f
  5937  0DB4  02AA               	subwf	___lwmod@dividend+1,f
  5938  0DB5                     l1753:	
  5939  0DB5  3001               	movlw	1
  5940  0DB6                     u1305:	
  5941  0DB6  1003               	clrc
  5942  0DB7  0CA8               	rrf	___lwmod@divisor+1,f
  5943  0DB8  0CA7               	rrf	___lwmod@divisor,f
  5944  0DB9  3EFF               	addlw	-1
  5945  0DBA  1D03               	skipz
  5946  0DBB  2DB6               	goto	u1305
  5947  0DBC                     l1755:	
  5948  0DBC  3001               	movlw	1
  5949  0DBD  02AB               	subwf	___lwmod@counter,f
  5950  0DBE  1D03               	btfss	3,2
  5951  0DBF  2DC1               	goto	u1311
  5952  0DC0  2DC2               	goto	u1310
  5953  0DC1                     u1311:	
  5954  0DC1  2DA5               	goto	l1749
  5955  0DC2                     u1310:	
  5956  0DC2                     l1757:	
  5957  0DC2  082A               	movf	___lwmod@dividend+1,w
  5958  0DC3  00A8               	movwf	?___lwmod+1
  5959  0DC4  0829               	movf	___lwmod@dividend,w
  5960  0DC5  00A7               	movwf	?___lwmod
  5961  0DC6                     l789:	
  5962  0DC6  0008               	return
  5963  0DC7                     __end_of___lwmod:	
  5964                           
  5965                           	psect	text28
  5966  0E4C                     __ptext28:	
  5967 ;; *************** function ___lwdiv *****************
  5968 ;; Defined at:
  5969 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  divisor         2    0[BANK0 ] unsigned int 
  5972 ;;  dividend        2    2[BANK0 ] unsigned int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  quotient        2    5[BANK0 ] unsigned int 
  5975 ;;  counter         1    4[BANK0 ] unsigned char 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  2    0[BANK0 ] unsigned int 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       4       0       0       0
  5986 ;;      Locals:         0       3       0       0       0
  5987 ;;      Temps:          1       0       0       0       0
  5988 ;;      Totals:         1       7       0       0       0
  5989 ;;Total ram usage:        8 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    1
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_mostrarDigitos
  5996 ;;		_sprintf
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function ___lwdiv
  6002  0E4C                     ___lwdiv:	
  6003  0E4C                     l2399:	
  6004                           ;incstack = 0
  6005                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6006                           
  6007  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  6008  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0E4E  01A5               	clrf	___lwdiv@quotient
  6010  0E4F  01A6               	clrf	___lwdiv@quotient+1
  6011  0E50                     l2401:	
  6012  0E50  0820               	movf	___lwdiv@divisor,w
  6013  0E51  0421               	iorwf	___lwdiv@divisor+1,w
  6014  0E52  1903               	btfsc	3,2
  6015  0E53  2E55               	goto	u2331
  6016  0E54  2E56               	goto	u2330
  6017  0E55                     u2331:	
  6018  0E55  2E8D               	goto	l2421
  6019  0E56                     u2330:	
  6020  0E56                     l2403:	
  6021  0E56  01A4               	clrf	___lwdiv@counter
  6022  0E57  0AA4               	incf	___lwdiv@counter,f
  6023  0E58  2E64               	goto	l2409
  6024  0E59                     l2405:	
  6025  0E59  3001               	movlw	1
  6026  0E5A                     u2345:	
  6027  0E5A  1003               	clrc
  6028  0E5B  0DA0               	rlf	___lwdiv@divisor,f
  6029  0E5C  0DA1               	rlf	___lwdiv@divisor+1,f
  6030  0E5D  3EFF               	addlw	-1
  6031  0E5E  1D03               	skipz
  6032  0E5F  2E5A               	goto	u2345
  6033  0E60                     l2407:	
  6034  0E60  3001               	movlw	1
  6035  0E61  00F4               	movwf	??___lwdiv
  6036  0E62  0874               	movf	??___lwdiv,w
  6037  0E63  07A4               	addwf	___lwdiv@counter,f
  6038  0E64                     l2409:	
  6039  0E64  1FA1               	btfss	___lwdiv@divisor+1,7
  6040  0E65  2E67               	goto	u2351
  6041  0E66  2E68               	goto	u2350
  6042  0E67                     u2351:	
  6043  0E67  2E59               	goto	l2405
  6044  0E68                     u2350:	
  6045  0E68                     l2411:	
  6046  0E68  3001               	movlw	1
  6047  0E69                     u2365:	
  6048  0E69  1003               	clrc
  6049  0E6A  0DA5               	rlf	___lwdiv@quotient,f
  6050  0E6B  0DA6               	rlf	___lwdiv@quotient+1,f
  6051  0E6C  3EFF               	addlw	-1
  6052  0E6D  1D03               	skipz
  6053  0E6E  2E69               	goto	u2365
  6054  0E6F  0821               	movf	___lwdiv@divisor+1,w
  6055  0E70  0223               	subwf	___lwdiv@dividend+1,w
  6056  0E71  1D03               	skipz
  6057  0E72  2E75               	goto	u2375
  6058  0E73  0820               	movf	___lwdiv@divisor,w
  6059  0E74  0222               	subwf	___lwdiv@dividend,w
  6060  0E75                     u2375:	
  6061  0E75  1C03               	skipc
  6062  0E76  2E78               	goto	u2371
  6063  0E77  2E79               	goto	u2370
  6064  0E78                     u2371:	
  6065  0E78  2E80               	goto	l2417
  6066  0E79                     u2370:	
  6067  0E79                     l2413:	
  6068  0E79  0820               	movf	___lwdiv@divisor,w
  6069  0E7A  02A2               	subwf	___lwdiv@dividend,f
  6070  0E7B  0821               	movf	___lwdiv@divisor+1,w
  6071  0E7C  1C03               	skipc
  6072  0E7D  03A3               	decf	___lwdiv@dividend+1,f
  6073  0E7E  02A3               	subwf	___lwdiv@dividend+1,f
  6074  0E7F                     l2415:	
  6075  0E7F  1425               	bsf	___lwdiv@quotient,0
  6076  0E80                     l2417:	
  6077  0E80  3001               	movlw	1
  6078  0E81                     u2385:	
  6079  0E81  1003               	clrc
  6080  0E82  0CA1               	rrf	___lwdiv@divisor+1,f
  6081  0E83  0CA0               	rrf	___lwdiv@divisor,f
  6082  0E84  3EFF               	addlw	-1
  6083  0E85  1D03               	skipz
  6084  0E86  2E81               	goto	u2385
  6085  0E87                     l2419:	
  6086  0E87  3001               	movlw	1
  6087  0E88  02A4               	subwf	___lwdiv@counter,f
  6088  0E89  1D03               	btfss	3,2
  6089  0E8A  2E8C               	goto	u2391
  6090  0E8B  2E8D               	goto	u2390
  6091  0E8C                     u2391:	
  6092  0E8C  2E68               	goto	l2411
  6093  0E8D                     u2390:	
  6094  0E8D                     l2421:	
  6095  0E8D  0826               	movf	___lwdiv@quotient+1,w
  6096  0E8E  00A1               	movwf	?___lwdiv+1
  6097  0E8F  0825               	movf	___lwdiv@quotient,w
  6098  0E90  00A0               	movwf	?___lwdiv
  6099  0E91                     l779:	
  6100  0E91  0008               	return
  6101  0E92                     __end_of___lwdiv:	
  6102                           
  6103                           	psect	text29
  6104  07B3                     __ptext29:	
  6105 ;; *************** function _bailenLeds *****************
  6106 ;; Defined at:
  6107 ;;		line 25 in file "mostrarInicializar.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  i               2    4[COMMON] unsigned short 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6121 ;;      Params:         0       0       0       0       0
  6122 ;;      Locals:         2       0       0       0       0
  6123 ;;      Temps:          0       3       0       0       0
  6124 ;;      Totals:         2       3       0       0       0
  6125 ;;Total ram usage:        5 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_accionesAceptar
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           
  6136                           ;psect for function _bailenLeds
  6137  07B3                     _bailenLeds:	
  6138  07B3                     l2885:	
  6139                           ;incstack = 0
  6140                           ; Regs used in _bailenLeds: [wreg+status,2]
  6141                           
  6142                           
  6143                           ;mostrarInicializar.c: 27:     unsigned short int i;;mostrarInicializar.c: 28:     for (
      +                          i = 0; i < 3; i++) {
  6144  07B3  01F4               	clrf	bailenLeds@i
  6145  07B4  01F5               	clrf	bailenLeds@i+1
  6146  07B5                     l297:	
  6147                           
  6148                           ;mostrarInicializar.c: 29:         RA3 = 1;
  6149  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  6150  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  6151  07B7  1585               	bsf	5,3	;volatile
  6152  07B8                     l2891:	
  6153                           
  6154                           ;mostrarInicializar.c: 30:         _delay((unsigned long)((200)*(4000000/4000.0)));
  6155  07B8  3002               	movlw	2
  6156  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  6157  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  6158  07BB  00A2               	movwf	??_bailenLeds+2
  6159  07BC  3004               	movlw	4
  6160  07BD  00A1               	movwf	??_bailenLeds+1
  6161  07BE  30B9               	movlw	185
  6162  07BF  00A0               	movwf	??_bailenLeds
  6163  07C0                     u3347:	
  6164  07C0  0BA0               	decfsz	??_bailenLeds,f
  6165  07C1  2FC0               	goto	u3347
  6166  07C2  0BA1               	decfsz	??_bailenLeds+1,f
  6167  07C3  2FC0               	goto	u3347
  6168  07C4  0BA2               	decfsz	??_bailenLeds+2,f
  6169  07C5  2FC0               	goto	u3347
  6170  07C6  2FC7               	nop2
  6171  07C7                     l2893:	
  6172                           
  6173                           ;mostrarInicializar.c: 31:         RA5 = 1;
  6174  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  6175  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  6176  07C9  1685               	bsf	5,5	;volatile
  6177                           
  6178                           ;mostrarInicializar.c: 32:         _delay((unsigned long)((200)*(4000000/4000.0)));
  6179  07CA  3002               	movlw	2
  6180  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  6181  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  6182  07CD  00A2               	movwf	??_bailenLeds+2
  6183  07CE  3004               	movlw	4
  6184  07CF  00A1               	movwf	??_bailenLeds+1
  6185  07D0  30B9               	movlw	185
  6186  07D1  00A0               	movwf	??_bailenLeds
  6187  07D2                     u3357:	
  6188  07D2  0BA0               	decfsz	??_bailenLeds,f
  6189  07D3  2FD2               	goto	u3357
  6190  07D4  0BA1               	decfsz	??_bailenLeds+1,f
  6191  07D5  2FD2               	goto	u3357
  6192  07D6  0BA2               	decfsz	??_bailenLeds+2,f
  6193  07D7  2FD2               	goto	u3357
  6194  07D8  2FD9               	nop2
  6195  07D9                     l2895:	
  6196                           
  6197                           ;mostrarInicializar.c: 33:         RA3 = 0;
  6198  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  6199  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  6200  07DB  1185               	bcf	5,3	;volatile
  6201                           
  6202                           ;mostrarInicializar.c: 34:         _delay((unsigned long)((200)*(4000000/4000.0)));
  6203  07DC  3002               	movlw	2
  6204  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  6205  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  6206  07DF  00A2               	movwf	??_bailenLeds+2
  6207  07E0  3004               	movlw	4
  6208  07E1  00A1               	movwf	??_bailenLeds+1
  6209  07E2  30B9               	movlw	185
  6210  07E3  00A0               	movwf	??_bailenLeds
  6211  07E4                     u3367:	
  6212  07E4  0BA0               	decfsz	??_bailenLeds,f
  6213  07E5  2FE4               	goto	u3367
  6214  07E6  0BA1               	decfsz	??_bailenLeds+1,f
  6215  07E7  2FE4               	goto	u3367
  6216  07E8  0BA2               	decfsz	??_bailenLeds+2,f
  6217  07E9  2FE4               	goto	u3367
  6218  07EA  2FEB               	nop2
  6219  07EB                     l2897:	
  6220                           
  6221                           ;mostrarInicializar.c: 35:         RA5 = 0;
  6222  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  6223  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  6224  07ED  1285               	bcf	5,5	;volatile
  6225                           
  6226                           ;mostrarInicializar.c: 36:     }
  6227  07EE  3001               	movlw	1
  6228  07EF  07F4               	addwf	bailenLeds@i,f
  6229  07F0  1803               	skipnc
  6230  07F1  0AF5               	incf	bailenLeds@i+1,f
  6231  07F2  3000               	movlw	0
  6232  07F3  07F5               	addwf	bailenLeds@i+1,f
  6233  07F4  3000               	movlw	0
  6234  07F5  0275               	subwf	bailenLeds@i+1,w
  6235  07F6  3003               	movlw	3
  6236  07F7  1903               	skipnz
  6237  07F8  0274               	subwf	bailenLeds@i,w
  6238  07F9  1C03               	skipc
  6239  07FA  2FFC               	goto	u3131
  6240  07FB  2FFD               	goto	u3130
  6241  07FC                     u3131:	
  6242  07FC  2FB5               	goto	l297
  6243  07FD                     u3130:	
  6244  07FD                     l299:	
  6245  07FD  0008               	return
  6246  07FE                     __end_of_bailenLeds:	
  6247                           
  6248                           	psect	text30
  6249  0E08                     __ptext30:	
  6250 ;; *************** function _int_usart *****************
  6251 ;; Defined at:
  6252 ;;		line 75 in file "main.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;		None
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      void 
  6259 ;; Registers used:
  6260 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6266 ;;      Params:         0       0       0       0       0
  6267 ;;      Locals:         0       0       0       0       0
  6268 ;;      Temps:          4       0       0       0       0
  6269 ;;      Totals:         4       0       0       0       0
  6270 ;;Total ram usage:        4 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		Interrupt level 1
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function _int_usart
  6281  0E08                     _int_usart:	
  6282  0E08                     i1l2347:	
  6283                           
  6284                           ;main.c: 77:     if(RCIF) {
  6285  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  6286  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  6287  0E0A  1E8C               	btfss	12,5	;volatile
  6288  0E0B  2E0D               	goto	u224_21
  6289  0E0C  2E0E               	goto	u224_20
  6290  0E0D                     u224_21:	
  6291  0E0D  2E38               	goto	i1l115
  6292  0E0E                     u224_20:	
  6293  0E0E                     i1l2349:	
  6294                           
  6295                           ;main.c: 78:         if((codigoEntrada[serial] = RCREG) != 0x0D && (codigoEntrada[serial
      +                          ]) != 0x0A && serial < (10 -1)) {
  6296  0E0E  081A               	movf	26,w	;volatile
  6297  0E0F  00F0               	movwf	??_int_usart
  6298  0E10  0879               	movf	_serial,w
  6299  0E11  3EDB               	addlw	(low (_codigoEntrada| 0))& (0+255)
  6300  0E12  0084               	movwf	4
  6301  0E13  0870               	movf	??_int_usart,w
  6302  0E14  1383               	bcf	3,7	;select IRP bank1
  6303  0E15  0080               	movwf	0
  6304  0E16  300D               	movlw	13
  6305  0E17  0600               	xorwf	0,w
  6306  0E18  1903               	btfsc	3,2
  6307  0E19  2E1B               	goto	u225_21
  6308  0E1A  2E1C               	goto	u225_20
  6309  0E1B                     u225_21:	
  6310  0E1B  2E30               	goto	i1l2357
  6311  0E1C                     u225_20:	
  6312  0E1C                     i1l2351:	
  6313  0E1C  0879               	movf	_serial,w
  6314  0E1D  3EDB               	addlw	(low (_codigoEntrada| 0))& (0+255)
  6315  0E1E  0084               	movwf	4
  6316  0E1F  300A               	movlw	10
  6317  0E20  0600               	xorwf	0,w
  6318  0E21  1903               	btfsc	3,2
  6319  0E22  2E24               	goto	u226_21
  6320  0E23  2E25               	goto	u226_20
  6321  0E24                     u226_21:	
  6322  0E24  2E30               	goto	i1l2357
  6323  0E25                     u226_20:	
  6324  0E25                     i1l2353:	
  6325  0E25  3009               	movlw	9
  6326  0E26  0279               	subwf	_serial,w
  6327  0E27  1803               	skipnc
  6328  0E28  2E2A               	goto	u227_21
  6329  0E29  2E2B               	goto	u227_20
  6330  0E2A                     u227_21:	
  6331  0E2A  2E30               	goto	i1l2357
  6332  0E2B                     u227_20:	
  6333  0E2B                     i1l2355:	
  6334                           
  6335                           ;main.c: 79:             serial++;
  6336  0E2B  3001               	movlw	1
  6337  0E2C  00F0               	movwf	??_int_usart
  6338  0E2D  0870               	movf	??_int_usart,w
  6339  0E2E  07F9               	addwf	_serial,f
  6340                           
  6341                           ;main.c: 80:         }
  6342  0E2F  2E43               	goto	i1l120
  6343  0E30                     i1l2357:	
  6344                           
  6345                           ;main.c: 82:             serial = 0;
  6346  0E30  01F9               	clrf	_serial
  6347  0E31                     i1l2359:	
  6348                           
  6349                           ;main.c: 83:             huboInt = 1;
  6350  0E31  3001               	movlw	1
  6351  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  6352  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  6353  0E34  00D7               	movwf	_huboInt^(0+128)
  6354  0E35  3000               	movlw	0
  6355  0E36  00D8               	movwf	(_huboInt^(0+128)+1)
  6356  0E37  2E43               	goto	i1l120
  6357  0E38                     i1l115:	
  6358                           ;main.c: 90:     else if(ADIF) {
  6359                           
  6360  0E38  1F0C               	btfss	12,6	;volatile
  6361  0E39  2E3B               	goto	u228_21
  6362  0E3A  2E3C               	goto	u228_20
  6363  0E3B                     u228_21:	
  6364  0E3B  2E43               	goto	i1l120
  6365  0E3C                     u228_20:	
  6366  0E3C                     i1l2361:	
  6367                           
  6368                           ;main.c: 91:         ADIF = 0;
  6369  0E3C  130C               	bcf	12,6	;volatile
  6370  0E3D                     i1l2363:	
  6371                           
  6372                           ;main.c: 92:         adresult = (ADRESH<<8)+ADRESL;
  6373  0E3D  081E               	movf	30,w	;volatile
  6374  0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  6375  0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  6376  0E40  00E6               	movwf	(_adresult+1)^(0+128)
  6377  0E41  081E               	movf	30,w	;volatile
  6378  0E42  00E5               	movwf	_adresult^(0+128)
  6379  0E43                     i1l120:	
  6380  0E43  0873               	movf	??_int_usart+3,w
  6381  0E44  008A               	movwf	10
  6382  0E45  0872               	movf	??_int_usart+2,w
  6383  0E46  0084               	movwf	4
  6384  0E47  0E71               	swapf	(??_int_usart+1)^(0+4294967168),w
  6385  0E48  0083               	movwf	3
  6386  0E49  0EFE               	swapf	btemp,f
  6387  0E4A  0E7E               	swapf	btemp,w
  6388  0E4B  0009               	retfie
  6389  0E4C                     __end_of_int_usart:	
  6390  007E                     btemp	set	126	;btemp
  6391  007E                     wtemp0	set	126
  6392                           
  6393                           	psect	intentry
  6394  0004                     __pintentry:	
  6395                           ;incstack = 0
  6396                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  6397                           
  6398  0004                     interrupt_function:	
  6399  007E                     saved_w	set	btemp
  6400  0004  00FE               	movwf	btemp
  6401  0005  0E03               	swapf	3,w
  6402  0006  00F1               	movwf	??_int_usart+1
  6403  0007  0804               	movf	4,w
  6404  0008  00F2               	movwf	??_int_usart+2
  6405  0009  080A               	movf	10,w
  6406  000A  00F3               	movwf	??_int_usart+3
  6407  000B  120A  158A  2E08   	ljmp	_int_usart


Data Sizes:
    Strings     153
    Constant    20
    Data        1
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     71      80
    BANK1            80     55      71
    BANK3            96      0      13
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_9(CODE[9]), STR_8(CODE[17]), STR_5(CODE[19]), STR_4(CODE[25]), 
		 -> STR_2(CODE[17]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> agregarModificarPrecio@mensaje(BANK0[10]), lecturaConsulta@strLote(BANK1[32]), consultaPrecio@mensaje(BANK0[26]), cierreDeLote@strLote(BANK0[32]), 
		 -> main@bufferMsj(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envioTX@mensaje	PTR unsigned char  size(2) Largest target is 40
		 -> agregarModificarPrecio@mensaje(BANK0[10]), lecturaConsulta@strLote(BANK1[32]), STR_7(CODE[20]), STR_6(CODE[17]), 
		 -> consultaPrecio@mensaje(BANK0[26]), STR_3(CODE[40]), cierreDeLote@strLote(BANK0[32]), main@bufferMsj(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___lwmod
    _main->___wmul
    _main->_envioTX
    _lecturaEtiqueta->___bmul
    _EEPROM_search->_eeprom_read
    _lecturaMenos->_envioTX
    _cierreDeLote->_envioTX
    _agregarModificarPrecio->___bmul
    _agregarModificarPrecio->___wmul
    _agregarModificarPrecio->_eeprom_read
    _agregarModificarPrecio->_eeprom_write
    _agregarModificarPrecio->_envioTX
    _lecturaConsulta->___wmul
    _lecturaConsulta->_envioTX
    _consultaPrecio->_eeprom_read
    _consultaPrecio->_envioTX
    _sprintf->___lwmod
    _pow->___wmul
    _accionesAceptar->_bailenLeds
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_accionesPuertoSerial
    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaComando->_lecturaConsulta
    _lecturaMenos->_envioTX
    _lecturaMas->_cierreDeLote
    _cierreDeLote->_sprintf
    _agregarModificarPrecio->_sprintf
    _lecturaConsulta->_consultaPrecio
    _consultaPrecio->_sprintf
    _sprintf->___lwmod
    _accionesDeshacer->_eliminarProd
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_mostrarDigitos
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    _lecturaComando->_lecturaConsulta

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   48803
                                             34 BANK1     21    21      0
                            ___lwmod
                             ___wmul
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                 3     3      0   33673
                                             68 BANK0      3     3      0
                     _lecturaComando
                    _lecturaEtiqueta
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      8     8      0    9365
                                             29 BANK0      8     8      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    2158
                                             12 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    3580
                                             20 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    2164
                                             12 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0   24308
                    _lecturaConsulta
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0     915
                            _envioTX
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0   11622
             _agregarModificarPrecio
                       _cierreDeLote
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  3     3      0     167
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _cierreDeLote                                        37    37      0    4156
                                             29 BANK0     37    37      0
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _agregarModificarPrecio                              25    25      0    7299
                                             29 BANK0     25    25      0
                            ___awdiv
                             ___bmul
                             ___wmul
                        _eeprom_read
                       _eeprom_write
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _eeprom_write                                         3     2      1     242
                                              4 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lecturaConsulta                                     39    39      0   11771
                                             63 BANK0      5     5      0
                                              0 BANK1     34    34      0
                             ___wmul
                     _consultaPrecio
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _consultaPrecio                                      34    32      2    6545
                                             29 BANK0     34    32      2
                            ___awdiv
                            ___awmod
                        _eeprom_read
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    3152
                                             12 BANK0     17    10      7
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _envioTX                                              8     6      2     915
                                              4 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    4345
                       _eliminarProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    2158
                                             12 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    1777
                                              4 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1036
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                      3     3      0    2354
                                             16 BANK0      3     3      0
                         _bailenLeds
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    2187
                                             12 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     781
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_usart                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwmod
     ___lwdiv (ARG)
   ___wmul
   _accionesAceptar
     _bailenLeds
     _mostrarDigitos
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _mostrarDigitos
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _accionesPuertoSerial
     _lecturaComando
       _lecturaConsulta
         ___wmul
         _consultaPrecio
           ___awdiv
           ___awmod
           _eeprom_read
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
         _envioTX
         _sprintf
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _lecturaMas
         _agregarModificarPrecio
           ___awdiv
           ___bmul
           ___wmul
           _eeprom_read
           _eeprom_write
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
         _cierreDeLote
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
         _verificacionEntrada
       _lecturaMenos
         _envioTX
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _envioTX
   _mostrarDigitos
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       D       9       13.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     37      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     47      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AE      12        0.0%
ABS                  0      0      AE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed May 27 22:27:21 2020

                 ?_lecturaConsulta 0070                      ?_eliminarProd 002C  
                                pc 0002                     ___bmul@product 0020  
                 ?_lecturaEtiqueta 0070                        __CFG_CP$OFF 0000  
                               l93 0093                                 l94 0089  
                               l88 0085                                 l97 0139  
                               l89 007B                                 l99 0097  
                     ___awdiv@sign 0025                                 fsr 0004  
              ___wmul@multiplicand 0022            __size_of_consultaPrecio 00A5  
                   ?_verificarProd 002C                                l101 009B  
                              l200 0C46                                l212 0615  
                              l205 03FF                                l310 0CDF  
                              l233 0BF5                                l306 0CD6  
                              l226 0570                                l163 0678  
                              l172 0222                                l253 0D4F  
                              l166 067E                                l343 0EE0  
                              l503 031E                                l191 0D15  
                              l175 0234                                l272 0F9D  
                              l266 07B2                                l354 0DF3  
                              l507 0C04                                l347 0D8A  
                              l451 0BBE                                l275 03EB  
                              l187 0CA9                                l259 0FFF  
                              l356 0E07                                l509 0C1C  
                              l533 0BD5                                l197 0C46  
                              l294 074E                                l472 0C66  
                              l297 07B5                                l449 0BA9  
                              l299 07FD                                l475 0C77  
                              l660 06E7                                l468 0C4A  
                              l469 0C4A                                l673 0F3B  
                              l779 0E91                                l789 0DC6  
                              _BMS 041A                                _RA3 002B  
                              _RA5 002D                                _RE0 0048  
                              _RE1 0049                                _RE2 004A  
                     __CFG_CPD$OFF 0000                                _pow 0D16  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0025  agregarModificarPrecio@upper_8bits 0052  
                     __CFG_FOSC$XT 0000                       __CFG_LVP$OFF 0000  
                 ??_mostrarDigitos 0076                               l3001 0113  
                             l3003 012B                               l3005 0134  
                             l2401 0E50                               l2411 0E68  
                             l2403 0E56                               l3027 0262  
                             l2413 0E79                               l2405 0E59  
                             l2421 0E8D                               l2501 0D16  
                             l2415 0E7F                               l2407 0E60  
                             l2503 0D1D                               l2511 0D41  
                             l2431 024A                               l2417 0E80  
                             l2409 0E64                               l2513 0D4B  
                             l2505 0D23                               l2601 0EED  
                             l2441 0275                               l2433 024F  
                             l2425 0238                               l2521 0C5E  
                             l2419 0E87                               l2507 0D28  
                             l2611 0F01                               l2603 0EEF  
                             l2443 0279                               l2427 023D  
                             l2531 0C6F                               l2523 0C61  
                             l1741 0D93                               l2509 0D3B  
                             l2621 0F20                               l2613 0F08  
                             l2605 0EF3                               l2461 02AE  
                             l2445 027D                               l2437 0250  
                             l2429 0243                               l2541 0BC7  
                             l2533 0C70                               l2525 0C65  
                             l2517 0C50                               l2701 03A1  
                             l1751 0DAF                               l1743 0D96  
                             l2391 0C0B                               l2551 067F  
                             l2623 0F27                               l2615 0F0C  
                             l2607 0EF8                               l2471 02F4  
                             l2463 02B4                               l2455 0288  
                             l2447 0281                               l2439 026D  
                             l2711 057E                               l2543 0BCB  
                             l2535 0C76                               l2527 0C6A  
                             l2519 0C58                               l2703 03AB  
                             l1753 0DB5                               l1745 0D9D  
                             l2721 06E8                               l2393 0C12  
                             l2385 0BF6                               l2561 0691  
                             l2553 0682                               l2617 0F10  
                             l2609 0EFE                               l2625 0F2D  
                             l2473 02FB                               l2465 02BB  
                             l2449 0286                               l2713 059C  
                             l2801 0529                               l2545 0BCD  
                             l2537 0BC2                               l2529 0C6E  
                             l2705 03B8                               l2641 0756  
                             l2633 074F                               l1755 0DBC  
                             l1747 0DA1                               l1739 0D8B  
                             l2723 0702                               l2395 0C18  
                             l2387 0BF8                               l2571 06A5  
                             l2563 0696                               l2555 0686  
                             l2627 0F32                               l2619 0F1A  
                             l2491 0CB1                               l2475 02FF  
                             l2467 02BF                               l2459 02A4  
                             l2715 05A9                               l2803 052F  
                             l2547 0BD4                               l2539 0BC3  
                             l2707 03E2                               l2643 0771  
                             l2651 07A5                               l2635 0752  
                             l2731 0621                               l1749 0DA5  
                             l1757 0DC2                               l2725 0723  
                             l2901 0E98                               l2389 0BFE  
                             l2581 06CB                               l2573 06AC  
                             l2565 069A                               l2557 068B  
                             l2629 0F37                               l1837 0BB0  
                             l2493 0CC9                               l2469 02C4  
                             l2477 0308                               l2717 05AF  
                             l2709 0571                               l2805 0535  
                             l2661 0C7C                               l2653 07AD  
                             l2645 0788                               l2733 063F  
                             l2821 0169                               l2399 0E4C  
                             l2903 0EA6                               l2591 06E3  
                             l2583 06CC                               l2575 06B0  
                             l2567 069C                               l2559 068D  
                             l2495 0CCE                               l2487 0CAA  
                             l2479 031A                               l2719 05C5  
                             l2807 0561                               l2671 0CA2  
                             l2663 0C7E                               l2655 07B1  
                             l2647 07A1                               l2735 0643  
                             l2727 0619                               l2751 0FBF  
                             l2743 0F9E                               l2831 01CF  
                             l2823 018D                               l2815 0143  
                             l2921 0EDB                               l2913 0EB0  
                             l2905 0EAA                               l2585 06D3  
                             l2577 06B4                               l2569 06A2  
                             l2497 0CD0                               l2489 0CAE  
                             l2681 0D0C                               l2673 0CA8  
                             l2665 0C86                               l2761 0C1D  
                             l2649 07A3                               l2737 0650  
                             l2729 061B                               l2753 0FD6  
                             l2841 01FE                               l2833 01D1  
                             l2825 01A2                               l2817 0156  
                             l2809 013D                               l2915 0EB7  
                             l2907 0EAE                               l2923 0D50  
                             l2579 06C5                               l2587 06D9  
                             l2595 0EE1                               l2499 0CDA  
                             l2691 0338                               l2683 0D12  
                             l2667 0C90                               l2659 0C78  
                             l2771 0C43                               l2763 0C25  
                             l2739 0672                               l2755 0FF1  
                             l2851 0231                               l2843 020D  
                             l2835 01DD                               l2827 01AE  
                             l2819 015C                               l2931 0DC7  
                             l2917 0EBD                               l2925 0D62  
                             l2589 06DE                               l2597 0EE4  
                             l2781 04C5                               l2693 033E  
                             l2685 0D13                               l2677 0CE0  
                             l2669 0C99                               l2765 0C2B  
                             l2773 03EC                               l2861 0BE4  
                             l2757 0FF3                               l2749 0FA4  
                             l2845 0210                               l2837 01E6  
                             l2829 01C7                               l2941 0DE7  
                             l2933 0DCF                               l2919 0ECA  
                             l2927 0D6E                               l2599 0EE8  
                             l2791 04EB                               l2783 04CB  
                             l2695 034D                               l2687 031F  
                             l2679 0CE7                               l2767 0C35  
                             l2775 03F4                               l2863 0BEA  
                             l2759 0FFB                               l2847 021E  
                             l2839 01F2                               l2943 0DED  
                             l2935 0DD5                               l2951 003F  
                             l2881 0F91                               l2873 0F42  
                             l2929 0D79                               l2793 0513  
                             l2785 04D1                               l2697 0399  
                             l2689 0336                               l2769 0C3B  
                             l2777 03F6                               l2865 0BF0  
                             l2857 0BD6                               l2849 0223  
                             l2945 0DF6                               l2937 0DDB  
                             l2961 005E                               l2953 0040  
                             l2891 07B8                               l2883 0F99  
                             l2875 0F5D                               l2867 0F3C  
                             l2795 0519                               l2787 04DB  
                             l2779 04BD                               l2699 039D  
                             l2859 0BDE                               l2947 0E04  
                             l2939 0DE1                               l2971 007F  
                             l2963 0060                               l2955 0057  
                             l2893 07C7                               l2885 07B3  
                             l2877 0F74                               l2797 051D  
                             l2789 04E5                               l2981 00A6  
                             l2965 0064                               l2957 005A  
                             l2949 0039                               l2895 07D9  
                             l2879 0F8F                               l2799 0523  
                             l2991 00B0                               l2983 00A8  
                             l2975 008D                               l2967 0075  
                             l2959 005D                               l2897 07EB  
                             l2993 00B5                               l2985 00AD  
                             l2899 0E92                               l2995 00B9  
                             l2979 009E                               l2997 00C0  
                             l2999 00C6                               _ADIE 0466  
                             _ADIF 0066                               ?_pow 0024  
                             STR_1 04B7                               STR_2 048C  
                             STR_3 0424                               STR_4 044C  
                             STR_5 0479                               STR_6 049D  
                             STR_7 0465                               STR_8 048C  
                             STR_9 04AE                               u1310 0DC2  
                             u1311 0DC1                               u3000 0519  
                             u1305 0DB6                               u3001 0518  
                             u3010 0523                               u3011 0522  
                             u1260 0D93                               u3020 0529  
                             u3100 0BEA                               u1261 0D92  
                             u3021 0528                               u3101 0BE9  
                             u3110 0F5D                               u1430 0BB0  
                             u3030 052F                               u3111 0F5C  
                             u1431 0BAF                               u3031 052E  
                             u1280 0DA5                               u2320 0C18  
                             u3120 0F9D                               u2400 0243  
                             u3040 0535                               u3200 0DED  
                             u1281 0DA4                               u2321 0C17  
                             u2305 0C05                               u3121 0F9C  
                             u2401 0242                               u3041 0534  
                             u3201 0DEC                               u3130 07FD  
                             u2330 0E56                               u1290 0DAF  
                             u2410 027D                               u3050 0169  
                             u3210 007B                               u3131 07FC  
                             u2331 0E55                               u1291 0DAE  
                             u1275 0D97                               u2315 0C0C  
                             u3115 0F59                               u2411 027C  
                             u3051 0168                               u3211 007A  
                             u3140 0ECA                               u2500 0CDF  
                             u2420 02A3                               u3060 018D  
                             u3220 007F                               u3141 0EC9  
                             u2501 0CDE                               u2421 02A2  
                             u3061 018C                               u3221 007E  
                             u2350 0E68                               u2510 0D23  
                             u3150 0D62                               u2430 02AE  
                             u3070 01C7                               u3230 0089  
                             u2351 0E67                               u1295 0DAB  
                             u2511 0D22                               u3151 0D61  
                             u2431 02AD                               u3071 01C6  
                             u3055 0165                               u3231 0088  
                             u2520 0D4B                               u2600 06A2  
                             u2440 02B4                               u3080 01CF  
                             u3160 0DCF                               u3240 008D  
                             u2345 0E5A                               u3145 0EC6  
                             u2521 0D4A                               u2601 06A1  
                             u2441 02B3                               u2425 029F  
                             u3081 01CE                               u3065 0189  
                             u3161 0DCE                               u3305 00E6  
                             u3241 008C                               u2370 0E79  
                             u2290 0BFE                               u2450 0308  
                             u2530 0C50                               u3090 0BDE  
                             u3170 0DD5                               u3250 0097  
                             u2371 0E78                               u2291 0BFD  
                             u3155 0D5E                               u2451 0307  
                             u2531 0C4F                               u3091 0BDD  
                             u3171 0DD4                               u3251 0096  
                             u2620 06B4                               u2700 0EFE  
                             u2460 031A                               u2540 0C65  
                             u3180 0DDB                               u3260 009B  
                             u2365 0E69                               u2525 0D47  
                             u2621 06B3                               u2701 0EFD  
                             u2461 0319                               u2541 0C64  
                             u3317 0DFE                               u3181 0DDA  
                             u3261 009A                               u2390 0E8D  
                             u2470 0CBB                               u2550 0C76  
                             u3190 0DE7                               u3270 00A6  
                             u2391 0E8C                               u2375 0E75  
                             u2615 06A6                               u2551 0C75  
                             u3327 0218                               u3191 0DE6  
                             u3271 00A5                               u2640 06C5  
                             u2720 0F10                               u2480 0CCE  
                             u2560 0BC7                               u2800 0C90  
                             u3280 00BF                               u2385 0E81  
                             u2641 06C4                               u2721 0F0F  
                             u2481 0CCD                               u2561 0BC6  
                             u2801 0C8F                               u3337 022B  
                             u3281 00BE                               u2730 0F1A  
                             u2490 0CDA                               u2570 0BD4  
                             u2810 0C99                               u3290 00C6  
                             u3347 07C0                               u2635 06B5  
                             u2731 0F19                               u2715 0F02  
                             u2491 0CD9                               u2571 0BD3  
                             u2811 0C98                               u3291 00C5  
                             u2660 06D9                               u2580 0686  
                             u2820 0CA2                               u2900 0FBF  
                             u3357 07D2                               u2661 06D8  
                             u2645 06C1                               u2581 0685  
                             u2821 0CA1                               u2901 0FBE  
                             u2670 06DE                               u2590 0691  
                             u2750 0F2D                               u2830 0CA8  
                             u2910 0FFF                               u3367 07E4  
                             u2671 06DD                               u2655 06CD  
                             u2591 0690                               u2751 0F2C  
                             u2735 0F16                               u2831 0CA7  
                             u2911 0FFE                               u2760 0F32  
                             u2680 0EE8                               u2840 0CE7  
                             u2920 0C25                               u2761 0F31  
                             u2745 0F21                               u2681 0EE7  
                             u2841 0CE6                               u2921 0C24  
                             u2905 0FBB                               u2690 0EF3  
                             u2850 05A9                               u2930 0C35  
                             u2770 0771                               u2691 0EF2  
                             u2851 05A8                               u2931 0C34  
                             u2771 0770                               u2860 05AF  
                             u2940 0C43                               u2780 07A1  
                             u2861 05AE                               u2941 0C42  
                             u2781 07A0                               u2950 03F4  
                             u2790 07B1                               u2870 0643  
                             u2855 05A5                               u2951 03F3  
                             u2791 07B0                               u2775 076D  
                             u2871 0642                               u2960 04C5  
                             u2880 0650                               u2961 04C4  
                             u2881 064F                               u2970 04CB  
                             u2890 0672                               u2971 04CA  
                             u2891 0671                               _RCIE 0465  
                             u2980 04D1                               _RCIF 0065  
                             u2981 04D0                               u2885 064C  
                             u2990 04EB                               u2991 04EA  
                             _TXIF 0064                     ??_eeprom_write 0075  
                     __CFG_WRT$OFF 0000                  envioTX@transmitir 0025  
                             _main 0039                    _accionesAceptar 0E92  
                             btemp 007E                      __CFG_BOREN$ON 0000  
                             pow@i 0028                               start 000E  
                ___bmul@multiplier 0021                     ??_eliminarProd 002E  
                            ??_pow 0076      __size_of_accionesPuertoSerial 0041  
                            ?_main 0070                    __end_of___awdiv 06E8  
                            _EEADR 010D                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0F3C                    ___awdiv@divisor 0020  
                     ?_ingresoProd 002C                    __end_of___lwdiv 0E92  
                            i1l120 0E43                              i1l115 0E38  
                  __end_of___lwmod 0DC7                    ___awdiv@counter 0024  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTB 0006  
                            _PORTD 0008                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _TRISE 0089  
                            _TXREG 0019                              _TXSTA 0098  
             __end_of_cierreDeLote 0D16                    __end_of_envioTX 0CE0  
                  __end_of_dpowers 041A                              main@i 00D6  
                            pclath 000A                   _accionesDeshacer 0D50  
                            status 0003                     envioTX@mensaje 0074  
                            wtemp0 007E                    __end_of_sprintf 031F  
                    ?_lecturaMenos 0070                    __initialization 0011  
                     __end_of_main 013D                    ??_verificarProd 002E  
                  EEPROM_search@tp 003C                             ??_main 00C2  
            __end_of_EEPROM_search 067F                      main@bufferMsj 00C4  
         ??_agregarModificarPrecio 003D                      eliminarProd@i 0031  
          __end_of_accionesAceptar 0EE1                             _ADCON0 001F  
                           _ADCON1 009F                             _ADRESH 001E  
                           _ADRESL 009E                             _EEDATA 010C  
                           _EECON1 018C                             _EECON2 018D  
                 ___awdiv@dividend 0022            __size_of_lecturaComando 0020  
                           i1l2351 0E1C                             i1l2361 0E3C  
                           i1l2353 0E25                             i1l2363 0E3D  
                           i1l2355 0E2B                             i1l2347 0E08  
                           i1l2357 0E30                             i1l2349 0E0E  
                           i1l2359 0E31                             u224_20 0E0E  
                           u224_21 0E0D                             u225_20 0E1C  
                           _INTCON 000B                             u225_21 0E1B  
                           u226_20 0E25                             u226_21 0E24  
                           u227_20 0E2B                             u227_21 0E2A  
                           u228_20 0E3C                             u228_21 0E3B  
                   ??_lecturaMenos 0076                   lecturaEtiqueta@i 0040  
                   __CFG_PWRTE$OFF 0000               __size_of_eeprom_read 0017  
                           ___bmul 0BBF                             ___wmul 0BF6  
                        ??___awdiv 0074                          ??___awmod 0074  
                        ??___lwdiv 0074                          ??___lwmod 0075  
                           _cuenta 00D9                _verificacionEntrada 0C78  
                 ___awdiv@quotient 0026                    ___awmod@divisor 0020  
                           _serial 0079               __end_of_eeprom_write 0C78  
                   _consultaPrecio 0571                    ___awmod@counter 0024  
                        ??_envioTX 0020                             saved_w 007E  
             __end_of_eliminarProd 0F9E                          ??_sprintf 0033  
             ?_verificacionEntrada 0070            __end_of__initialization 0035  
                  eeprom_read@addr 0075                ___bmul@multiplicand 0074  
                   __pcstackCOMMON 0070                       __pidataBANK0 07FE  
           __end_of_consultaPrecio 0616              __size_of_cierreDeLote 0036  
                       _bailenLeds 07B3               __size_of_ingresoProd 0062  
                eeprom_write@value 0074    __size_of_agregarModificarPrecio 00CD  
                 ?_accionesAceptar 0070              ??_verificacionEntrada 0074  
                       __pbssBANK0 0067                         __pbssBANK1 00D7  
                       __pbssBANK3 0190                 __size_of_int_usart 0044  
                       __pmaintext 0039                       _cierreDeLote 0CE0  
         agregarModificarPrecio@tp 0055                            ?___bmul 0074  
                   eliminarProd@tp 002C                            ?___wmul 0020  
                       __pintentry 0004                    ?_consultaPrecio 003D  
              EEPROM_search@precio 003A           __end_of_accionesDeshacer 0D8B  
         __size_of_lecturaConsulta 00B4               __end_of_lecturaMenos 0400  
         __size_of_lecturaEtiqueta 00F8                     verificarProd@i 0032  
                   _lecturaComando 0BD6                   accionesAceptar@i 0031  
                       __stringtab 0400       __end_of_accionesPuertoSerial 0E08  
                lecturaEtiqueta@tp 0042                         _lecturaMas 0C1D  
           _agregarModificarPrecio 031F              __size_of_eeprom_write 0031  
                  __size_of___bmul 0017                            ___awdiv 067F  
                          ___awmod 0EE1                    __size_of___wmul 0027  
                          ___lwdiv 0E4C                            ___lwmod 0D8B  
                          __ptext1 0DC7                            __ptext2 013D  
                          __ptext3 0F9E                            __ptext4 0616  
                      pow@potencia 0026                            __ptext5 074F  
                          __ptext6 0BD6                            __ptext7 03EC  
                          __ptext8 0C1D                            __ptext9 0C78  
                      ?_bailenLeds 0070                            _envioTX 0CAA  
                          _dpowers 0410                            _huboInt 00D7  
            __size_of_eliminarProd 0062                       __size_of_pow 003A  
             consultaPrecio@precio 005D               verificacionEntrada@i 0021  
                 ___awmod@dividend 0022                       ingresoProd@i 0031  
           __end_of_lecturaComando 0BF6                            _nroLote 006F  
                          _numProd 0076                  __end_of_int_usart 0E4C  
                          _sprintf 0235                            clrloop0 0BA1  
     agregarModificarPrecio@precio 0053               end_of_initialization 0035  
                     _eeprom_write 0C47      agregarModificarPrecio@mensaje 0047  
          __size_of_mostrarDigitos 0067                         _montosLote 0067  
                     _eliminarProd 0F3C                  _productoIngresado 0069  
                 verificarProd@ret 0031              __end_of_verificarProd 07B3  
                       _ventasLote 006E                    ?_lecturaComando 0070  
          lecturaConsulta@articulo 00C0                  ??_lecturaConsulta 005F  
                 _cierreLotePedido 006D                  ??_lecturaEtiqueta 003D  
                    ??_eeprom_read 0074                __size_of_bailenLeds 004B  
                      ?_lecturaMas 0070             __size_of_EEPROM_search 0069  
                   __end_of___bmul 0BD6              __size_of_lecturaMenos 0014  
                   __end_of___wmul 0C1D               _accionesPuertoSerial 0DC7  
              start_initialization 0011                        __end_of_BMS 0424  
                      __end_of_pow 0D50                       _lecturaMenos 03EC  
                 ??_consultaPrecio 003F                     _prodIngresados 0190  
                         ??___bmul 0075                 _mostrarDigitos$973 002E  
                         ??___wmul 0074                __end_of_eeprom_read 0BBF  
                      __pdataBANK0 006F              ?_accionesPuertoSerial 0070  
                    ??_ingresoProd 002E                  ?_accionesDeshacer 0070  
                      __pbssCOMMON 0076        __end_of_verificacionEntrada 0CAA  
                        ___latbits 0002                 ??_accionesDeshacer 0076  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                    _EEPROM_search 0616                __size_of_lecturaMas 002A  
                 eeprom_write@addr 0020                        sprintf@flag 0037  
                      sprintf@prec 0038            ?_agregarModificarPrecio 0070  
         __size_of_accionesAceptar 004F                     _mostrarDigitos 06E8  
                 ___lwdiv@dividend 0022                           ?___awdiv 0020  
                         ?___awmod 0020                           ?___lwdiv 0020  
                         ?___lwmod 0027                          _auxCuenta 006B  
                        __pstrings 0400                       ??_bailenLeds 0020  
                         ?_envioTX 0074             consultaPrecio@articulo 003D  
                   ?_EEPROM_search 0034                   ___lwdiv@quotient 0025  
              __end_of_ingresoProd 1000                           ?_sprintf 002C  
                        _modoDebug 0078                          _int_usart 0E08  
           verificacionEntrada@ret 0020     __end_of_agregarModificarPrecio 03EC  
                interrupt_function 0004                     ___wmul@product 0074  
           __end_of_mostrarDigitos 074F                          clear_ram0 0BA0  
                      _eeprom_read 0BA8                        bailenLeds@i 0074  
               __end_of_bailenLeds 07FE                           _GO_nDONE 00FA  
                  verificarProd@tp 002C             ??_accionesPuertoSerial 0064  
                 ??_lecturaComando 0076                    _lecturaConsulta 04BD  
                      __stringbase 040F                  ___wmul@multiplier 0020  
                  _lecturaEtiqueta 013D                 lecturaEtiqueta@Aux 0043  
                    _codigoEntrada 00DB             lecturaConsulta@strLote 00A0  
              cierreDeLote@strLote 0042                         ?_int_usart 0070  
                  ?_mostrarDigitos 002C                         _EECON1bits 018C  
                     ??_lecturaMas 0076                  ??_accionesAceptar 0030  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
               __end_of__stringtab 0410                    ??_EEPROM_search 0036  
                      _ingresoProd 0F9E                         sprintf@val 0039  
                 __size_of_envioTX 0036                           _adresult 00E5  
                         _main$972 00D4                    ___lwdiv@divisor 0020  
                     pow@resultado 002A                    ___lwdiv@counter 0024  
                         __ptext10 0CE0                           __ptext11 031F  
                         __ptext20 067F                           __ptext12 0C47  
                         __ptext21 0D50                           __ptext13 0BBF  
                         __ptext30 0E08                           __ptext22 0F3C  
                         __ptext14 04BD                           __ptext23 0D16  
                         __ptext15 0571                           __ptext24 0BF6  
                         __ptext16 0235                           __ptext25 0E92  
                         __ptext17 0CAA                           __ptext26 06E8  
                         __ptext18 0BA8                           __ptext27 0D8B  
                         __ptext19 0EE1                           __ptext28 0E4C  
                         __ptext29 07B3                 __end_of_lecturaMas 0C47  
                 __size_of_sprintf 00EA              consultaPrecio@mensaje 0043  
                    __size_of_main 0104                          pow@numero 0024  
           __size_of_verificarProd 0064                      ingresoProd@tp 002C  
                    ?_cierreDeLote 0070            __end_of_lecturaConsulta 0571  
          __end_of_lecturaEtiqueta 0235                           envioTX@i 0023  
                       _INTCONbits 000B  agregarModificarPrecio@lower_8bits 0051  
                         intlevel1 0000                          sprintf@ap 0036  
                      ??_int_usart 0070                          sprintf@sp 003B  
                 ___lwmod@dividend 0029          __size_of_accionesDeshacer 003B  
                   ??_cierreDeLote 003D                          stringcode 040A  
                mostrarDigitos@num 002C                           sprintf@c 003C  
                         sprintf@f 002C                      _verificarProd 074F  
                  ___lwmod@divisor 0027                    ___lwmod@counter 002B  
                         stringdir 040A                           stringtab 0400  
     __size_of_verificacionEntrada 0032                      ?_eeprom_write 0074  
                       _STATUSbits 0003                       ?_eeprom_read 0070  
