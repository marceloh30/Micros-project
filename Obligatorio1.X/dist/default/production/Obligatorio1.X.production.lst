

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 16 23:48:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0088                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  0091                     	;# 
   491  0092                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0098                     	;# 
   495  0099                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  010F                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  000E                     	;# 
   522  000F                     	;# 
   523  0010                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0014                     	;# 
   528  0015                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  001D                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  0081                     	;# 
   542  0085                     	;# 
   543  0086                     	;# 
   544  0087                     	;# 
   545  0088                     	;# 
   546  0089                     	;# 
   547  008C                     	;# 
   548  008D                     	;# 
   549  008E                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0094                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009C                     	;# 
   557  009D                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  010C                     	;# 
   561  010D                     	;# 
   562  010E                     	;# 
   563  010F                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566                           
   567                           	psect	idataCOMMON
   568  07FF                     __pidataCOMMON:	
   569                           
   570                           ;initializer for _nroLote
   571  07FF  3401               	retlw	1
   572                           
   573                           	psect	stringtext
   574  0300                     __pstringtext:	
   575  0300                     stringtab:	
   576  0300                     __stringtab:	
   577                           
   578                           ;	String table - string pointers are 2 bytes each
   579  0300  1BFF               	btfsc	btemp+1,7
   580  0301  2B0A               	ljmp	stringcode
   581  0302  1383               	bcf	3,7
   582  0303  187F               	btfsc	btemp+1,0
   583  0304  1783               	bsf	3,7
   584  0305  0800               	movf	0,w
   585  0306  0A84               	incf	4,f
   586  0307  1903               	skipnz
   587  0308  0AFF               	incf	btemp+1,f
   588  0309  0008               	return
   589  030A                     stringcode:	
   590  030A  087F               	movf	btemp+1,w
   591  030B  397F               	andlw	127
   592  030C  008A               	movwf	10
   593  030D  0804               	movf	4,w
   594  030E  0A84               	incf	4,f
   595  030F  1903               	skipnz
   596  0310  0AFF               	incf	btemp+1,f
   597  0311  0082               	movwf	2
   598  0312                     __stringbase:	
   599  0312                     __end_of__stringtab:	
   600  0312                     _dpowers:	
   601  0312  3401               	retlw	1
   602  0313  3400               	retlw	0
   603  0314  340A               	retlw	10
   604  0315  3400               	retlw	0
   605  0316  3464               	retlw	100
   606  0317  3400               	retlw	0
   607  0318  34E8               	retlw	232
   608  0319  3403               	retlw	3
   609  031A  3410               	retlw	16
   610  031B  3427               	retlw	39
   611  031C                     __end_of_dpowers:	
   612  031C                     _BS:	
   613  031C  3400               	retlw	0
   614  031D  3410               	retlw	16
   615  031E  3420               	retlw	32
   616  031F  3430               	retlw	48
   617  0320  3440               	retlw	64
   618  0321  3450               	retlw	80
   619  0322  3460               	retlw	96
   620  0323  3470               	retlw	112
   621  0324  3480               	retlw	128
   622  0325  3490               	retlw	144
   623  0326                     __end_of_BS:	
   624  000E                     _TMR1	set	14
   625  000B                     _INTCONbits	set	11
   626  0003                     _STATUSbits	set	3
   627  0019                     _TXREG	set	25
   628  0008                     _PORTD	set	8
   629  0006                     _PORTB	set	6
   630  001E                     _ADRESH	set	30
   631  001A                     _RCREG	set	26
   632  0018                     _RCSTAbits	set	24
   633  0018                     _RCSTA	set	24
   634  000B                     _INTCON	set	11
   635  001F                     _ADCON0	set	31
   636  0010                     _T1CON	set	16
   637  0064                     _TXIF	set	100
   638  0065                     _RCIF	set	101
   639  00FA                     _GO_nDONE	set	250
   640  0060                     _TMR1IF	set	96
   641  004A                     _RE2	set	74
   642  0049                     _RE1	set	73
   643  0048                     _RE0	set	72
   644  0066                     _ADIF	set	102
   645  002B                     _RA3	set	43
   646  0038                     _RC0	set	56
   647  002D                     _RA5	set	45
   648  009E                     _ADRESL	set	158
   649  008C                     _PIE1bits	set	140
   650  0099                     _SPBRG	set	153
   651  0098                     _TXSTA	set	152
   652  0087                     _TRISC	set	135
   653  009F                     _ADCON1	set	159
   654  0088                     _TRISD	set	136
   655  0086                     _TRISB	set	134
   656  0089                     _TRISE	set	137
   657  0085                     _TRISA	set	133
   658  010C                     _EEDATA	set	268
   659  010D                     _EEADR	set	269
   660  018D                     _EECON2	set	397
   661  018C                     _EECON1	set	396
   662  018C                     _EECON1bits	set	396
   663  0326                     STR_6:	
   664  0326  344F               	retlw	79	;'O'
   665  0327  3463               	retlw	99	;'c'
   666  0328  3475               	retlw	117	;'u'
   667  0329  3472               	retlw	114	;'r'
   668  032A  3472               	retlw	114	;'r'
   669  032B  3469               	retlw	105	;'i'
   670  032C  346F               	retlw	111	;'o'
   671  032D  3420               	retlw	32	;' '
   672  032E  3475               	retlw	117	;'u'
   673  032F  346E               	retlw	110	;'n'
   674  0330  3420               	retlw	32	;' '
   675  0331  3465               	retlw	101	;'e'
   676  0332  3472               	retlw	114	;'r'
   677  0333  3472               	retlw	114	;'r'
   678  0334  346F               	retlw	111	;'o'
   679  0335  3472               	retlw	114	;'r'
   680  0336  3420               	retlw	32	;' '
   681  0337  3465               	retlw	101	;'e'
   682  0338  346E               	retlw	110	;'n'
   683  0339  3420               	retlw	32	;' '
   684  033A  346C               	retlw	108	;'l'
   685  033B  3461               	retlw	97	;'a'
   686  033C  3420               	retlw	32	;' '
   687  033D  3469               	retlw	105	;'i'
   688  033E  346E               	retlw	110	;'n'
   689  033F  3474               	retlw	116	;'t'
   690  0340  3465               	retlw	101	;'e'
   691  0341  3472               	retlw	114	;'r'
   692  0342  3470               	retlw	112	;'p'
   693  0343  3472               	retlw	114	;'r'
   694  0344  3465               	retlw	101	;'e'
   695  0345  3474               	retlw	116	;'t'
   696  0346  3461               	retlw	97	;'a'
   697  0347  3463               	retlw	99	;'c'
   698  0348  3469               	retlw	105	;'i'
   699  0349  346F               	retlw	111	;'o'
   700  034A  346E               	retlw	110	;'n'
   701  034B  342E               	retlw	46	;'.'
   702  034C  340A               	retlw	10
   703  034D  3400               	retlw	0
   704  034E                     STR_15:	
   705  034E  340A               	retlw	10
   706  034F  3443               	retlw	67	;'C'
   707  0350  3469               	retlw	105	;'i'
   708  0351  3465               	retlw	101	;'e'
   709  0352  3472               	retlw	114	;'r'
   710  0353  3472               	retlw	114	;'r'
   711  0354  3465               	retlw	101	;'e'
   712  0355  342C               	retlw	44	;','
   713  0356  3420               	retlw	32	;' '
   714  0357  344C               	retlw	76	;'L'
   715  0358  343A               	retlw	58	;':'
   716  0359  3425               	retlw	37	;'%'
   717  035A  3464               	retlw	100	;'d'
   718  035B  342C               	retlw	44	;','
   719  035C  344E               	retlw	78	;'N'
   720  035D  343A               	retlw	58	;':'
   721  035E  3425               	retlw	37	;'%'
   722  035F  3464               	retlw	100	;'d'
   723  0360  342C               	retlw	44	;','
   724  0361  3454               	retlw	84	;'T'
   725  0362  343A               	retlw	58	;':'
   726  0363  3425               	retlw	37	;'%'
   727  0364  3464               	retlw	100	;'d'
   728  0365  340A               	retlw	10
   729  0366  3400               	retlw	0
   730  0367                     STR_8:	
   731  0367  340A               	retlw	10
   732  0368  3450               	retlw	80	;'P'
   733  0369  3472               	retlw	114	;'r'
   734  036A  346F               	retlw	111	;'o'
   735  036B  3464               	retlw	100	;'d'
   736  036C  3475               	retlw	117	;'u'
   737  036D  3463               	retlw	99	;'c'
   738  036E  3474               	retlw	116	;'t'
   739  036F  346F               	retlw	111	;'o'
   740  0370  3420               	retlw	32	;' '
   741  0371  346E               	retlw	110	;'n'
   742  0372  346F               	retlw	111	;'o'
   743  0373  3420               	retlw	32	;' '
   744  0374  3465               	retlw	101	;'e'
   745  0375  346E               	retlw	110	;'n'
   746  0376  3463               	retlw	99	;'c'
   747  0377  346F               	retlw	111	;'o'
   748  0378  346E               	retlw	110	;'n'
   749  0379  3474               	retlw	116	;'t'
   750  037A  3472               	retlw	114	;'r'
   751  037B  3461               	retlw	97	;'a'
   752  037C  3464               	retlw	100	;'d'
   753  037D  346F               	retlw	111	;'o'
   754  037E  340A               	retlw	10
   755  037F  3400               	retlw	0
   756  0380                     STR_5:	
   757  0380  340A               	retlw	10
   758  0381  3443               	retlw	67	;'C'
   759  0382  3469               	retlw	105	;'i'
   760  0383  3465               	retlw	101	;'e'
   761  0384  3472               	retlw	114	;'r'
   762  0385  3472               	retlw	114	;'r'
   763  0386  3465               	retlw	101	;'e'
   764  0387  342C               	retlw	44	;','
   765  0388  344C               	retlw	76	;'L'
   766  0389  343A               	retlw	58	;':'
   767  038A  3425               	retlw	37	;'%'
   768  038B  3464               	retlw	100	;'d'
   769  038C  342C               	retlw	44	;','
   770  038D  344E               	retlw	78	;'N'
   771  038E  343A               	retlw	58	;':'
   772  038F  3425               	retlw	37	;'%'
   773  0390  3464               	retlw	100	;'d'
   774  0391  342C               	retlw	44	;','
   775  0392  3454               	retlw	84	;'T'
   776  0393  343A               	retlw	58	;':'
   777  0394  3425               	retlw	37	;'%'
   778  0395  3464               	retlw	100	;'d'
   779  0396  340A               	retlw	10
   780  0397  3400               	retlw	0
   781  0398                     STR_10:	
   782  0398  344E               	retlw	78	;'N'
   783  0399  346F               	retlw	111	;'o'
   784  039A  3420               	retlw	32	;' '
   785  039B  3465               	retlw	101	;'e'
   786  039C  3478               	retlw	120	;'x'
   787  039D  3469               	retlw	105	;'i'
   788  039E  3473               	retlw	115	;'s'
   789  039F  3474               	retlw	116	;'t'
   790  03A0  3465               	retlw	101	;'e'
   791  03A1  3420               	retlw	32	;' '
   792  03A2  3470               	retlw	112	;'p'
   793  03A3  3472               	retlw	114	;'r'
   794  03A4  346F               	retlw	111	;'o'
   795  03A5  3464               	retlw	100	;'d'
   796  03A6  3475               	retlw	117	;'u'
   797  03A7  3463               	retlw	99	;'c'
   798  03A8  3474               	retlw	116	;'t'
   799  03A9  346F               	retlw	111	;'o'
   800  03AA  3420               	retlw	32	;' '
   801  03AB  3430               	retlw	48	;'0'
   802  03AC  3430               	retlw	48	;'0'
   803  03AD  3400               	retlw	0
   804  03AE                     STR_9:	
   805  03AE  3454               	retlw	84	;'T'
   806  03AF  3450               	retlw	80	;'P'
   807  03B0  343A               	retlw	58	;':'
   808  03B1  3420               	retlw	32	;' '
   809  03B2  3425               	retlw	37	;'%'
   810  03B3  3464               	retlw	100	;'d'
   811  03B4  3420               	retlw	32	;' '
   812  03B5  3450               	retlw	80	;'P'
   813  03B6  343A               	retlw	58	;':'
   814  03B7  3420               	retlw	32	;' '
   815  03B8  3425               	retlw	37	;'%'
   816  03B9  3464               	retlw	100	;'d'
   817  03BA  342C               	retlw	44	;','
   818  03BB  3425               	retlw	37	;'%'
   819  03BC  3464               	retlw	100	;'d'
   820  03BD  3420               	retlw	32	;' '
   821  03BE  3445               	retlw	69	;'E'
   822  03BF  3475               	retlw	117	;'u'
   823  03C0  3472               	retlw	114	;'r'
   824  03C1  346F               	retlw	111	;'o'
   825  03C2  3473               	retlw	115	;'s'
   826  03C3  3400               	retlw	0
   827  03C4                     STR_12:	
   828  03C4  340A               	retlw	10
   829  03C5  3445               	retlw	69	;'E'
   830  03C6  3473               	retlw	115	;'s'
   831  03C7  3474               	retlw	116	;'t'
   832  03C8  3461               	retlw	97	;'a'
   833  03C9  3464               	retlw	100	;'d'
   834  03CA  346F               	retlw	111	;'o'
   835  03CB  343A               	retlw	58	;':'
   836  03CC  3420               	retlw	32	;' '
   837  03CD  3445               	retlw	69	;'E'
   838  03CE  346E               	retlw	110	;'n'
   839  03CF  3420               	retlw	32	;' '
   840  03D0  3465               	retlw	101	;'e'
   841  03D1  3473               	retlw	115	;'s'
   842  03D2  3470               	retlw	112	;'p'
   843  03D3  3465               	retlw	101	;'e'
   844  03D4  3472               	retlw	114	;'r'
   845  03D5  3461               	retlw	97	;'a'
   846  03D6  340A               	retlw	10
   847  03D7  3400               	retlw	0
   848  03D8                     STR_4:	
   849  03D8  3450               	retlw	80	;'P'
   850  03D9  3472               	retlw	114	;'r'
   851  03DA  346F               	retlw	111	;'o'
   852  03DB  3464               	retlw	100	;'d'
   853  03DC  3475               	retlw	117	;'u'
   854  03DD  3463               	retlw	99	;'c'
   855  03DE  3474               	retlw	116	;'t'
   856  03DF  346F               	retlw	111	;'o'
   857  03E0  3420               	retlw	32	;' '
   858  03E1  3469               	retlw	105	;'i'
   859  03E2  346E               	retlw	110	;'n'
   860  03E3  3467               	retlw	103	;'g'
   861  03E4  3472               	retlw	114	;'r'
   862  03E5  3465               	retlw	101	;'e'
   863  03E6  3473               	retlw	115	;'s'
   864  03E7  3461               	retlw	97	;'a'
   865  03E8  3464               	retlw	100	;'d'
   866  03E9  346F               	retlw	111	;'o'
   867  03EA  340A               	retlw	10
   868  03EB  3400               	retlw	0
   869  03EC                     STR_18:	
   870  03EC  344E               	retlw	78	;'N'
   871  03ED  346F               	retlw	111	;'o'
   872  03EE  3420               	retlw	32	;' '
   873  03EF  3468               	retlw	104	;'h'
   874  03F0  3461               	retlw	97	;'a'
   875  03F1  3479               	retlw	121	;'y'
   876  03F2  3420               	retlw	32	;' '
   877  03F3  3470               	retlw	112	;'p'
   878  03F4  3472               	retlw	114	;'r'
   879  03F5  346F               	retlw	111	;'o'
   880  03F6  3464               	retlw	100	;'d'
   881  03F7  3475               	retlw	117	;'u'
   882  03F8  3463               	retlw	99	;'c'
   883  03F9  3474               	retlw	116	;'t'
   884  03FA  346F               	retlw	111	;'o'
   885  03FB  3420               	retlw	32	;' '
   886  03FC  3430               	retlw	48	;'0'
   887  03FD  3430               	retlw	48	;'0'
   888  03FE  3400               	retlw	0
   889  03FF                     STR_2:	
   890  03FF  3450               	retlw	80	;'P'
   891  0400  3472               	retlw	114	;'r'
   892  0401  346F               	retlw	111	;'o'
   893  0402  3464               	retlw	100	;'d'
   894  0403  3475               	retlw	117	;'u'
   895  0404  3463               	retlw	99	;'c'
   896  0405  3474               	retlw	116	;'t'
   897  0406  346F               	retlw	111	;'o'
   898  0407  3420               	retlw	32	;' '
   899  0408  3463               	retlw	99	;'c'
   900  0409  3461               	retlw	97	;'a'
   901  040A  346E               	retlw	110	;'n'
   902  040B  3463               	retlw	99	;'c'
   903  040C  3465               	retlw	101	;'e'
   904  040D  346C               	retlw	108	;'l'
   905  040E  3461               	retlw	97	;'a'
   906  040F  3464               	retlw	100	;'d'
   907  0410  346F               	retlw	111	;'o'
   908  0411  3400               	retlw	0
   909  0412                     STR_11:	
   910  0412  340A               	retlw	10
   911  0413  3445               	retlw	69	;'E'
   912  0414  3473               	retlw	115	;'s'
   913  0415  3474               	retlw	116	;'t'
   914  0416  3461               	retlw	97	;'a'
   915  0417  3464               	retlw	100	;'d'
   916  0418  346F               	retlw	111	;'o'
   917  0419  343A               	retlw	58	;':'
   918  041A  3420               	retlw	32	;' '
   919  041B  3441               	retlw	65	;'A'
   920  041C  3463               	retlw	99	;'c'
   921  041D  3474               	retlw	116	;'t'
   922  041E  3469               	retlw	105	;'i'
   923  041F  3476               	retlw	118	;'v'
   924  0420  346F               	retlw	111	;'o'
   925  0421  340A               	retlw	10
   926  0422  3400               	retlw	0
   927  0423                     STR_1:	
   928  0423  340A               	retlw	10
   929  0424  344C               	retlw	76	;'L'
   930  0425  343A               	retlw	58	;':'
   931  0426  3425               	retlw	37	;'%'
   932  0427  3464               	retlw	100	;'d'
   933  0428  342C               	retlw	44	;','
   934  0429  344E               	retlw	78	;'N'
   935  042A  343A               	retlw	58	;':'
   936  042B  3425               	retlw	37	;'%'
   937  042C  3464               	retlw	100	;'d'
   938  042D  342C               	retlw	44	;','
   939  042E  3454               	retlw	84	;'T'
   940  042F  343A               	retlw	58	;':'
   941  0430  3425               	retlw	37	;'%'
   942  0431  3464               	retlw	100	;'d'
   943  0432  340A               	retlw	10
   944  0433  3400               	retlw	0
   945  0434                     STR_16:	
   946  0434  3456               	retlw	86	;'V'
   947  0435  343D               	retlw	61	;'='
   948  0436  3425               	retlw	37	;'%'
   949  0437  3464               	retlw	100	;'d'
   950  0438  342E               	retlw	46	;'.'
   951  0439  3425               	retlw	37	;'%'
   952  043A  3464               	retlw	100	;'d'
   953  043B  3456               	retlw	86	;'V'
   954  043C  340A               	retlw	10
   955  043D  3400               	retlw	0
   956  043E                     STR_17:	
   957  043E  340A               	retlw	10
   958  043F  3450               	retlw	80	;'P'
   959  0440  3425               	retlw	37	;'%'
   960  0441  3464               	retlw	100	;'d'
   961  0442  343D               	retlw	61	;'='
   962  0443  3425               	retlw	37	;'%'
   963  0444  3464               	retlw	100	;'d'
   964  0445  340A               	retlw	10
   965  0446  3400               	retlw	0
   966  0447                     STR_19:	
   967  0447  3428               	retlw	40	;'('
   968  0448  346E               	retlw	110	;'n'
   969  0449  3475               	retlw	117	;'u'
   970  044A  346C               	retlw	108	;'l'
   971  044B  346C               	retlw	108	;'l'
   972  044C  3429               	retlw	41	;')'
   973  044D  3400               	retlw	0
   974  044E                     STR_3:	
   975  044E  3445               	retlw	69	;'E'
   976  044F  343A               	retlw	58	;':'
   977  0450  3425               	retlw	37	;'%'
   978  0451  3473               	retlw	115	;'s'
   979  0452  3400               	retlw	0
   980  0326                     
   981                           ; #config settings
   982  0000                     
   983                           	psect	cinit
   984  0011                     start_initialization:	
   985  0011                     __initialization:	
   986                           
   987                           ; Initialize objects allocated to COMMON
   988  0011  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   989  0016  00F8               	movwf	__pdataCOMMON& (0+127)
   990                           
   991                           ; Clear objects allocated to BANK3
   992  0017  1783               	bsf	3,7	;select IRP bank2
   993  0018  30D2               	movlw	low __pbssBANK3
   994  0019  0084               	movwf	4
   995  001A  30DA               	movlw	low (__pbssBANK3+8)
   996  001B  120A  158A  202E  120A  118A  	fcall	clear_ram0
   997                           
   998                           ; Clear objects allocated to BANK1
   999  0020  1383               	bcf	3,7	;select IRP bank0
  1000  0021  30CD               	movlw	low __pbssBANK1
  1001  0022  0084               	movwf	4
  1002  0023  30EA               	movlw	low (__pbssBANK1+29)
  1003  0024  120A  158A  202E  120A  118A  	fcall	clear_ram0
  1004                           
  1005                           ; Clear objects allocated to BANK0
  1006  0029  01EE               	clrf	__pbssBANK0& (0+127)
  1007                           
  1008                           ; Clear objects allocated to COMMON
  1009  002A  01F0               	clrf	__pbssCOMMON& (0+127)
  1010  002B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1011  002C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1012  002D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1013  002E                     end_of_initialization:	
  1014                           ;End of C runtime variable initialization code
  1015                           
  1016  002E                     __end_of__initialization:	
  1017  002E  0183               	clrf	3
  1018  002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
  1019                           
  1020                           	psect	bssCOMMON
  1021  0070                     __pbssCOMMON:	
  1022  0070                     _cuenta:	
  1023  0070                     	ds	2
  1024  0072                     _modoDebug:	
  1025  0072                     	ds	1
  1026  0073                     _serial:	
  1027  0073                     	ds	1
  1028                           
  1029                           	psect	dataCOMMON
  1030  0078                     __pdataCOMMON:	
  1031  0078                     _nroLote:	
  1032  0078                     	ds	1
  1033                           
  1034                           	psect	bssBANK0
  1035  006E                     __pbssBANK0:	
  1036  006E                     _ventasLote:	
  1037  006E                     	ds	1
  1038                           
  1039                           	psect	bssBANK1
  1040  00CD                     __pbssBANK1:	
  1041  00CD                     _prodIngresados:	
  1042  00CD                     	ds	13
  1043  00DA                     _montosLote:	
  1044  00DA                     	ds	2
  1045  00DC                     _numProd:	
  1046  00DC                     	ds	2
  1047  00DE                     _productoIngresado:	
  1048  00DE                     	ds	2
  1049  00E0                     _codigoEntrada:	
  1050  00E0                     	ds	10
  1051                           
  1052                           	psect	bssBANK3
  1053  01D2                     __pbssBANK3:	
  1054  01D2                     _huboInt:	
  1055  01D2                     	ds	2
  1056  01D4                     _auxCuenta:	
  1057  01D4                     	ds	2
  1058  01D6                     _pedidoVoltaje:	
  1059  01D6                     	ds	1
  1060  01D7                     _cierreLotePedido:	
  1061  01D7                     	ds	1
  1062  01D8                     _adresult:	
  1063  01D8                     	ds	2
  1064                           
  1065                           	psect	clrtext
  1066  082E                     clear_ram0:	
  1067                           ;	Called with FSR containing the base address, and
  1068                           ;	W with the last address+1
  1069                           
  1070  082E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1071  082F                     clrloop0:	
  1072  082F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1073  0830  0A84               	incf	4,f	;increment pointer
  1074  0831  0604               	xorwf	4,w	;XOR with final address
  1075  0832  1903               	btfsc	3,2	;have we reached the end yet?
  1076  0833  3400               	retlw	0	;all done for this memory range, return
  1077  0834  0604               	xorwf	4,w	;XOR again to restore value
  1078  0835  282F               	goto	clrloop0	;do the next byte
  1079                           
  1080                           	psect	cstackBANK3
  1081  0190                     __pcstackBANK3:	
  1082  0190                     accionesPuertoSerial@mensaje:	
  1083                           
  1084                           ; 12 bytes @ 0x0
  1085  0190                     	ds	12
  1086  019C                     main@strLote:	
  1087                           
  1088                           ; 32 bytes @ 0xC
  1089  019C                     	ds	32
  1090  01BC                     main@bufferMsj:	
  1091                           
  1092                           ; 16 bytes @ 0x2C
  1093  01BC                     	ds	16
  1094  01CC                     _main$1097:	
  1095                           
  1096                           ; 2 bytes @ 0x3C
  1097  01CC                     	ds	2
  1098  01CE                     _main$1098:	
  1099                           
  1100                           ; 2 bytes @ 0x3E
  1101  01CE                     	ds	2
  1102  01D0                     main@i:	
  1103                           
  1104                           ; 1 bytes @ 0x40
  1105  01D0                     	ds	1
  1106  01D1                     main@i_307:	
  1107                           
  1108                           ; 1 bytes @ 0x41
  1109  01D1                     	ds	1
  1110                           
  1111                           	psect	cstackBANK1
  1112  00A0                     __pcstackBANK1:	
  1113  00A0                     ??_lecturaConsulta:	
  1114  00A0                     accionesAceptar@strLote:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117                           
  1118                           ; 32 bytes @ 0x0
  1119  00A0                     	ds	4
  1120  00A4                     lecturaConsulta@strLote:	
  1121                           
  1122                           ; 32 bytes @ 0x4
  1123  00A4                     	ds	28
  1124  00C0                     accionesAceptar@i:	
  1125                           
  1126                           ; 2 bytes @ 0x20
  1127  00C0                     	ds	4
  1128  00C4                     lecturaConsulta@articulo:	
  1129                           
  1130                           ; 2 bytes @ 0x24
  1131  00C4                     	ds	2
  1132  00C6                     ??_accionesPuertoSerial:	
  1133                           
  1134                           ; 1 bytes @ 0x26
  1135  00C6                     	ds	3
  1136  00C9                     ??_main:	
  1137                           
  1138                           ; 1 bytes @ 0x29
  1139  00C9                     	ds	4
  1140                           
  1141                           	psect	cstackCOMMON
  1142  0074                     __pcstackCOMMON:	
  1143  0074                     ?_bailenLeds:	
  1144  0074                     ?_lecturaComando:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0074                     ?_lecturaEtiqueta:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0074                     ?_eeprom_read:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0074                     ?_agregarModificarPrecio:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0074                     ?_accionesAceptar:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0074                     ?_accionesDeshacer:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0074                     ?_accionesPuertoSerial:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0074                     ?_escrituraDeCierre:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0074                     ?_verificacionEntrada:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0074                     ?_cierreDeLote:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0074                     ?_lecturaMas:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0074                     ?_lecturaMenos:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0074                     ?_lecturaConsulta:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0074                     ?_main:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0074                     ?_int_usart:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0074                     ??_int_usart:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0x0
  1194  0074                     	ds	4
  1195                           
  1196                           	psect	cstackBANK0
  1197  0020                     __pcstackBANK0:	
  1198  0020                     ?_envioTX:	
  1199  0020                     ??_bailenLeds:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0020                     ?_eeprom_write:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0020                     ??_eeprom_read:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0020                     ??_verificacionEntrada:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0020                     ?___bmul:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0020                     ?___wmul:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0020                     ?___awdiv:	
  1218                           ; 2 bytes @ 0x0
  1219                           
  1220  0020                     ?___awmod:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223  0020                     eeprom_write@value:	
  1224                           ; 2 bytes @ 0x0
  1225                           
  1226  0020                     ___bmul@multiplicand:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0020                     envioTX@mensaje:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0020                     ___wmul@multiplier:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235  0020                     ___awdiv@divisor:	
  1236                           ; 2 bytes @ 0x0
  1237                           
  1238  0020                     ___awmod@divisor:	
  1239                           ; 2 bytes @ 0x0
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x0
  1243  0020                     	ds	1
  1244  0021                     ??_eeprom_write:	
  1245  0021                     ??___bmul:	
  1246                           ; 1 bytes @ 0x1
  1247                           
  1248  0021                     verificacionEntrada@ret:	
  1249                           ; 1 bytes @ 0x1
  1250                           
  1251  0021                     eeprom_read@addr:	
  1252                           ; 1 bytes @ 0x1
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x1
  1256  0021                     	ds	1
  1257  0022                     ??_envioTX:	
  1258  0022                     verificacionEntrada@i:	
  1259                           ; 1 bytes @ 0x2
  1260                           
  1261  0022                     eeprom_write@addr:	
  1262                           ; 1 bytes @ 0x2
  1263                           
  1264  0022                     ___bmul@product:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267  0022                     ___wmul@multiplicand:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0022                     ___awdiv@dividend:	
  1271                           ; 2 bytes @ 0x2
  1272                           
  1273  0022                     ___awmod@dividend:	
  1274                           ; 2 bytes @ 0x2
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x2
  1278  0022                     	ds	1
  1279  0023                     ??_escrituraDeCierre:	
  1280  0023                     ___bmul@multiplier:	
  1281                           ; 1 bytes @ 0x3
  1282                           
  1283  0023                     bailenLeds@i:	
  1284                           ; 1 bytes @ 0x3
  1285                           
  1286                           
  1287                           ; 2 bytes @ 0x3
  1288  0023                     	ds	1
  1289  0024                     ??___wmul:	
  1290  0024                     ??___awdiv:	
  1291                           ; 1 bytes @ 0x4
  1292                           
  1293  0024                     ??___awmod:	
  1294                           ; 1 bytes @ 0x4
  1295                           
  1296  0024                     escrituraDeCierre@lower_8bits:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0024                     ___wmul@product:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x4
  1304  0024                     	ds	1
  1305  0025                     escrituraDeCierre@upper_8bits:	
  1306  0025                     ___awdiv@counter:	
  1307                           ; 1 bytes @ 0x5
  1308                           
  1309  0025                     ___awmod@counter:	
  1310                           ; 1 bytes @ 0x5
  1311                           
  1312  0025                     envioTX@i:	
  1313                           ; 1 bytes @ 0x5
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x5
  1317  0025                     	ds	1
  1318  0026                     ?_pow:	
  1319  0026                     ?___lwdiv:	
  1320                           ; 2 bytes @ 0x6
  1321                           
  1322  0026                     ___awdiv@sign:	
  1323                           ; 2 bytes @ 0x6
  1324                           
  1325  0026                     ___awmod@sign:	
  1326                           ; 1 bytes @ 0x6
  1327                           
  1328  0026                     pow@numero:	
  1329                           ; 1 bytes @ 0x6
  1330                           
  1331  0026                     ___lwdiv@divisor:	
  1332                           ; 2 bytes @ 0x6
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x6
  1336  0026                     	ds	1
  1337  0027                     envioTX@transmitir:	
  1338  0027                     ___awdiv@quotient:	
  1339                           ; 1 bytes @ 0x7
  1340                           
  1341                           
  1342                           ; 2 bytes @ 0x7
  1343  0027                     	ds	1
  1344  0028                     ??_lecturaMenos:	
  1345  0028                     pow@potencia:	
  1346                           ; 1 bytes @ 0x8
  1347                           
  1348  0028                     ___lwdiv@dividend:	
  1349                           ; 2 bytes @ 0x8
  1350                           
  1351                           
  1352                           ; 2 bytes @ 0x8
  1353  0028                     	ds	2
  1354  002A                     ??_pow:	
  1355  002A                     ??___lwdiv:	
  1356                           ; 1 bytes @ 0xA
  1357                           
  1358  002A                     pow@i:	
  1359                           ; 1 bytes @ 0xA
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0xA
  1363  002A                     	ds	1
  1364  002B                     ___lwdiv@counter:	
  1365                           
  1366                           ; 1 bytes @ 0xB
  1367  002B                     	ds	1
  1368  002C                     pow@resultado:	
  1369  002C                     ___lwdiv@quotient:	
  1370                           ; 2 bytes @ 0xC
  1371                           
  1372                           
  1373                           ; 2 bytes @ 0xC
  1374  002C                     	ds	2
  1375  002E                     ?_eliminarProd:	
  1376  002E                     ?_verificarProd:	
  1377                           ; 1 bytes @ 0xE
  1378                           
  1379  002E                     ?_ingresoProd:	
  1380                           ; 1 bytes @ 0xE
  1381                           
  1382  002E                     ?___lwmod:	
  1383                           ; 1 bytes @ 0xE
  1384                           
  1385  002E                     ingresoProd@tp:	
  1386                           ; 2 bytes @ 0xE
  1387                           
  1388  002E                     verificarProd@tp:	
  1389                           ; 2 bytes @ 0xE
  1390                           
  1391  002E                     eliminarProd@tp:	
  1392                           ; 2 bytes @ 0xE
  1393                           
  1394  002E                     ___lwmod@divisor:	
  1395                           ; 2 bytes @ 0xE
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0xE
  1399  002E                     	ds	2
  1400  0030                     ??_eliminarProd:	
  1401  0030                     ??_verificarProd:	
  1402                           ; 1 bytes @ 0x10
  1403                           
  1404  0030                     ??_ingresoProd:	
  1405                           ; 1 bytes @ 0x10
  1406                           
  1407  0030                     ___lwmod@dividend:	
  1408                           ; 1 bytes @ 0x10
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x10
  1412  0030                     	ds	2
  1413  0032                     ??___lwmod:	
  1414                           
  1415                           ; 1 bytes @ 0x12
  1416  0032                     	ds	1
  1417  0033                     verificarProd@ret:	
  1418  0033                     ___lwmod@counter:	
  1419                           ; 1 bytes @ 0x13
  1420                           
  1421  0033                     ingresoProd@i:	
  1422                           ; 1 bytes @ 0x13
  1423                           
  1424  0033                     eliminarProd@i:	
  1425                           ; 2 bytes @ 0x13
  1426                           
  1427                           
  1428                           ; 2 bytes @ 0x13
  1429  0033                     	ds	1
  1430  0034                     ?_mostrarDigitos:	
  1431  0034                     ?_sprintf:	
  1432                           ; 1 bytes @ 0x14
  1433                           
  1434  0034                     verificarProd@i:	
  1435                           ; 2 bytes @ 0x14
  1436                           
  1437  0034                     mostrarDigitos@num:	
  1438                           ; 2 bytes @ 0x14
  1439                           
  1440  0034                     sprintf@sp:	
  1441                           ; 2 bytes @ 0x14
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x14
  1445  0034                     	ds	2
  1446  0036                     ??_mostrarDigitos:	
  1447  0036                     ?_EEPROM_search:	
  1448                           ; 1 bytes @ 0x16
  1449                           
  1450  0036                     sprintf@f:	
  1451                           ; 2 bytes @ 0x16
  1452                           
  1453  0036                     _mostrarDigitos$1099:	
  1454                           ; 2 bytes @ 0x16
  1455                           
  1456                           
  1457                           ; 2 bytes @ 0x16
  1458  0036                     	ds	2
  1459  0038                     ??_accionesDeshacer:	
  1460  0038                     ??_EEPROM_search:	
  1461                           ; 1 bytes @ 0x18
  1462                           
  1463                           
  1464                           ; 1 bytes @ 0x18
  1465  0038                     	ds	4
  1466  003C                     EEPROM_search@precio:	
  1467                           
  1468                           ; 2 bytes @ 0x1C
  1469  003C                     	ds	2
  1470  003E                     ??_sprintf:	
  1471  003E                     EEPROM_search@tp:	
  1472                           ; 1 bytes @ 0x1E
  1473                           
  1474                           
  1475                           ; 1 bytes @ 0x1E
  1476  003E                     	ds	1
  1477  003F                     ??_lecturaEtiqueta:	
  1478                           
  1479                           ; 1 bytes @ 0x1F
  1480  003F                     	ds	3
  1481  0042                     lecturaEtiqueta@letra:	
  1482  0042                     sprintf@flag:	
  1483                           ; 1 bytes @ 0x22
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x22
  1487  0042                     	ds	1
  1488  0043                     lecturaEtiqueta@tp:	
  1489  0043                     sprintf@prec:	
  1490                           ; 1 bytes @ 0x23
  1491                           
  1492                           
  1493                           ; 1 bytes @ 0x23
  1494  0043                     	ds	1
  1495  0044                     sprintf@ap:	
  1496  0044                     lecturaEtiqueta@Aux:	
  1497                           ; 1 bytes @ 0x24
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x24
  1501  0044                     	ds	1
  1502  0045                     sprintf@cp:	
  1503                           
  1504                           ; 2 bytes @ 0x25
  1505  0045                     	ds	1
  1506  0046                     lecturaEtiqueta@i:	
  1507                           
  1508                           ; 2 bytes @ 0x26
  1509  0046                     	ds	1
  1510  0047                     sprintf@val:	
  1511                           
  1512                           ; 2 bytes @ 0x27
  1513  0047                     	ds	2
  1514  0049                     sprintf@c:	
  1515                           
  1516                           ; 1 bytes @ 0x29
  1517  0049                     	ds	1
  1518  004A                     ??_agregarModificarPrecio:	
  1519  004A                     ??_accionesAceptar:	
  1520                           ; 1 bytes @ 0x2A
  1521                           
  1522  004A                     ??_cierreDeLote:	
  1523                           ; 1 bytes @ 0x2A
  1524                           
  1525  004A                     ?_consultaPrecio:	
  1526                           ; 1 bytes @ 0x2A
  1527                           
  1528  004A                     consultaPrecio@articulo:	
  1529                           ; 1 bytes @ 0x2A
  1530                           
  1531                           
  1532                           ; 2 bytes @ 0x2A
  1533  004A                     	ds	2
  1534  004C                     ??_consultaPrecio:	
  1535                           
  1536                           ; 1 bytes @ 0x2C
  1537  004C                     	ds	2
  1538  004E                     cierreDeLote@strLote:	
  1539                           
  1540                           ; 32 bytes @ 0x2E
  1541  004E                     	ds	2
  1542  0050                     consultaPrecio@mensaje:	
  1543                           
  1544                           ; 26 bytes @ 0x30
  1545  0050                     	ds	4
  1546  0054                     agregarModificarPrecio@mensaje:	
  1547                           
  1548                           ; 10 bytes @ 0x34
  1549  0054                     	ds	10
  1550  005E                     agregarModificarPrecio@lower_8bits:	
  1551                           
  1552                           ; 1 bytes @ 0x3E
  1553  005E                     	ds	1
  1554  005F                     agregarModificarPrecio@upper_8bits:	
  1555                           
  1556                           ; 1 bytes @ 0x3F
  1557  005F                     	ds	1
  1558  0060                     agregarModificarPrecio@precio:	
  1559                           
  1560                           ; 2 bytes @ 0x40
  1561  0060                     	ds	2
  1562  0062                     agregarModificarPrecio@tp:	
  1563                           
  1564                           ; 1 bytes @ 0x42
  1565  0062                     	ds	8
  1566  006A                     consultaPrecio@precio:	
  1567                           
  1568                           ; 2 bytes @ 0x4A
  1569  006A                     	ds	4
  1570  006E                     ??_lecturaComando:	
  1571  006E                     ??_lecturaMas:	
  1572                           ; 1 bytes @ 0x4E
  1573                           
  1574                           
  1575                           	psect	maintext
  1576  0032                     __pmaintext:	
  1577                           ; 1 bytes @ 0x4E
  1578 ;;
  1579 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1580 ;;
  1581 ;; *************** function _main *****************
  1582 ;; Defined at:
  1583 ;;		line 8 in file "main.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  i               1   64[BANK3 ] unsigned char 
  1588 ;;  bufferMsj      16   44[BANK3 ] unsigned char [16]
  1589 ;;  i               1   65[BANK3 ] unsigned char 
  1590 ;;  strLote        32   12[BANK3 ] unsigned char [32]
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : B00/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       0       0      54       0
  1602 ;;      Temps:          0       0       4       0       0
  1603 ;;      Totals:         0       0       4      54       0
  1604 ;;Total ram usage:       58 bytes
  1605 ;; Hardware stack levels required when called:    7
  1606 ;; This function calls:
  1607 ;;		___lwdiv
  1608 ;;		___lwmod
  1609 ;;		___wmul
  1610 ;;		_accionesAceptar
  1611 ;;		_accionesDeshacer
  1612 ;;		_accionesPuertoSerial
  1613 ;;		_eeprom_read
  1614 ;;		_envioTX
  1615 ;;		_escrituraDeCierre
  1616 ;;		_mostrarDigitos
  1617 ;;		_sprintf
  1618 ;; This function is called by:
  1619 ;;		Startup code after reset
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function _main
  1625  0032                     _main:	
  1626  0032                     l3377:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1629                           
  1630                           
  1631                           ;main.c: 11:     if(eeprom_read(255) != 0xFF){
  1632  0032  30FF               	movlw	255
  1633  0033  120A  158A  2063  120A  118A  	fcall	_eeprom_read
  1634  0038  3AFF               	xorlw	255
  1635  0039  1903               	skipnz
  1636  003A  283C               	goto	u3811
  1637  003B  283D               	goto	u3810
  1638  003C                     u3811:	
  1639  003C  2872               	goto	l3385
  1640  003D                     u3810:	
  1641  003D                     l3379:	
  1642                           
  1643                           ;main.c: 12:         montosLote = (eeprom_read(252) << 8) | (eeprom_read(253));
  1644  003D  30FD               	movlw	253
  1645  003E  120A  158A  2063  120A  118A  	fcall	_eeprom_read
  1646  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1648  0045  00C9               	movwf	??_main^(0+128)
  1649  0046  01CA               	clrf	(??_main^(0+128)+1)
  1650  0047  30FC               	movlw	252
  1651  0048  120A  158A  2063  120A  118A  	fcall	_eeprom_read
  1652  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1653  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1654  004F  00CB               	movwf	(??_main+2)^(0+128)
  1655  0050  01CC               	clrf	((??_main+2)^(0+128)+1)
  1656  0051  084B               	movf	(??_main+2)^(0+128),w
  1657  0052  00CC               	movwf	((??_main+2)^(0+128)+1)
  1658  0053  01CB               	clrf	(??_main+2)^(0+128)
  1659  0054  0849               	movf	??_main^(0+128),w
  1660  0055  044B               	iorwf	(??_main+2)^(0+128),w
  1661  0056  00DA               	movwf	_montosLote^(0+128)
  1662  0057  084A               	movf	(??_main+1)^(0+128),w
  1663  0058  044C               	iorwf	(??_main+3)^(0+128),w
  1664  0059  00DB               	movwf	(_montosLote+1)^(0+128)
  1665  005A                     l3381:	
  1666                           
  1667                           ;main.c: 13:         ventasLote = eeprom_read(254);
  1668  005A  30FE               	movlw	254
  1669  005B  120A  158A  2063  120A  118A  	fcall	_eeprom_read
  1670  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0062  00C9               	movwf	??_main^(0+128)
  1673  0063  0849               	movf	??_main^(0+128),w
  1674  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0066  00EE               	movwf	_ventasLote
  1677  0067                     l3383:	
  1678                           
  1679                           ;main.c: 14:         nroLote = eeprom_read(255);
  1680  0067  30FF               	movlw	255
  1681  0068  120A  158A  2063  120A  118A  	fcall	_eeprom_read
  1682  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1683  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1684  006F  00C9               	movwf	??_main^(0+128)
  1685  0070  0849               	movf	??_main^(0+128),w
  1686  0071  00F8               	movwf	_nroLote
  1687  0072                     l3385:	
  1688                           
  1689                           ;main.c: 18:     TRISA = 0x01;
  1690  0072  3001               	movlw	1
  1691  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1693  0075  0085               	movwf	5	;volatile
  1694  0076                     l3387:	
  1695                           
  1696                           ;main.c: 19:     TRISE = 0x07;
  1697  0076  3007               	movlw	7
  1698  0077  0089               	movwf	9	;volatile
  1699  0078                     l3389:	
  1700                           
  1701                           ;main.c: 20:     TRISB = 0x00;
  1702  0078  0186               	clrf	6	;volatile
  1703  0079                     l3391:	
  1704                           
  1705                           ;main.c: 21:     TRISD = 0x00;
  1706  0079  0188               	clrf	8	;volatile
  1707  007A                     l3393:	
  1708                           
  1709                           ;main.c: 22:     T1CON = 0b00010001;
  1710  007A  3011               	movlw	17
  1711  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1712  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1713  007D  0090               	movwf	16	;volatile
  1714  007E                     l3395:	
  1715                           
  1716                           ;main.c: 23:     TMR1 = 15536;
  1717  007E  303C               	movlw	60
  1718  007F  008F               	movwf	15	;volatile
  1719  0080  30B0               	movlw	176
  1720  0081  008E               	movwf	14	;volatile
  1721  0082                     l3397:	
  1722                           
  1723                           ;main.c: 25:     ADCON0 = 0b01000001;
  1724  0082  3041               	movlw	65
  1725  0083  009F               	movwf	31	;volatile
  1726  0084                     l3399:	
  1727                           
  1728                           ;main.c: 26:     ADCON1 = 0b10001110;
  1729  0084  308E               	movlw	142
  1730  0085  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0086  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0087  009F               	movwf	31	;volatile
  1733  0088                     l3401:	
  1734                           
  1735                           ;main.c: 27:     INTCON = 0b11000000;
  1736  0088  30C0               	movlw	192
  1737  0089  008B               	movwf	11	;volatile
  1738  008A                     l3403:	
  1739                           
  1740                           ;main.c: 30:     TRISC = 0b10000000;
  1741  008A  3080               	movlw	128
  1742  008B  0087               	movwf	7	;volatile
  1743  008C                     l3405:	
  1744                           
  1745                           ;main.c: 31:     TXSTA = 0b00100110;
  1746  008C  3026               	movlw	38
  1747  008D  0098               	movwf	24	;volatile
  1748  008E                     l3407:	
  1749                           
  1750                           ;main.c: 32:     RCSTA = 0b10010000;
  1751  008E  3090               	movlw	144
  1752  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0091  0098               	movwf	24	;volatile
  1755  0092                     l3409:	
  1756                           
  1757                           ;main.c: 33:     SPBRG = 25;
  1758  0092  3019               	movlw	25
  1759  0093  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0094  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0095  0099               	movwf	25	;volatile
  1762  0096                     l3411:	
  1763                           
  1764                           ;main.c: 36:     ADIF = 0;
  1765  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0098  130C               	bcf	12,6	;volatile
  1768  0099                     l3413:	
  1769                           
  1770                           ;main.c: 37:     PIE1bits.ADIE = 1;
  1771  0099  1683               	bsf	3,5	;RP0=1, select bank1
  1772  009A  1303               	bcf	3,6	;RP1=0, select bank1
  1773  009B  170C               	bsf	12,6	;volatile
  1774  009C                     l3415:	
  1775                           
  1776                           ;main.c: 38:     PIE1bits.RCIE = 1;
  1777  009C  168C               	bsf	12,5	;volatile
  1778  009D                     l3417:	
  1779                           
  1780                           ;main.c: 39:     PIE1bits.TMR1IE = 1;
  1781  009D  140C               	bsf	12,0	;volatile
  1782  009E                     l3419:	
  1783                           
  1784                           ;main.c: 40:     cuenta = 0;
  1785  009E  01F0               	clrf	_cuenta
  1786  009F  01F1               	clrf	_cuenta+1
  1787  00A0                     l3421:	
  1788                           
  1789                           ;main.c: 41:     auxCuenta = 0;
  1790  00A0  1683               	bsf	3,5	;RP0=1, select bank3
  1791  00A1  1703               	bsf	3,6	;RP1=1, select bank3
  1792  00A2  01D4               	clrf	_auxCuenta^(0+384)
  1793  00A3  01D5               	clrf	(_auxCuenta+1)^(0+384)
  1794  00A4                     l3423:	
  1795                           
  1796                           ;main.c: 42:     mostrarDigitos(cuenta);
  1797  00A4  0871               	movf	_cuenta+1,w
  1798  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1799  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1800  00A7  00B5               	movwf	mostrarDigitos@num+1
  1801  00A8  0870               	movf	_cuenta,w
  1802  00A9  00B4               	movwf	mostrarDigitos@num
  1803  00AA  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  1804  00AF                     l3425:	
  1805                           
  1806                           ;main.c: 43:     RC0 = 0;
  1807  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1808  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1809  00B1  1007               	bcf	7,0	;volatile
  1810  00B2                     l3427:	
  1811                           
  1812                           ;main.c: 49:         if(RE0) {
  1813  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1814  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1815  00B4  1C09               	btfss	9,0	;volatile
  1816  00B5  28B7               	goto	u3821
  1817  00B6  28B8               	goto	u3820
  1818  00B7                     u3821:	
  1819  00B7  28C2               	goto	l305
  1820  00B8                     u3820:	
  1821  00B8                     l306:	
  1822  00B8  1809               	btfsc	9,0	;volatile
  1823  00B9  28BB               	goto	u3831
  1824  00BA  28BC               	goto	u3830
  1825  00BB                     u3831:	
  1826  00BB  28B8               	goto	l306
  1827  00BC                     u3830:	
  1828  00BC                     l3431:	
  1829                           
  1830                           ;main.c: 51:             accionesAceptar();
  1831  00BC  120A  118A  224B  120A  118A  	fcall	_accionesAceptar
  1832                           
  1833                           ;main.c: 52:         }
  1834  00C1  28B2               	goto	l3427
  1835  00C2                     l305:	
  1836                           ;main.c: 53:         else if(RE1) {
  1837                           
  1838  00C2  1C89               	btfss	9,1	;volatile
  1839  00C3  28C5               	goto	u3841
  1840  00C4  28C6               	goto	u3840
  1841  00C5                     u3841:	
  1842  00C5  28D0               	goto	l310
  1843  00C6                     u3840:	
  1844  00C6                     l311:	
  1845  00C6  1889               	btfsc	9,1	;volatile
  1846  00C7  28C9               	goto	u3851
  1847  00C8  28CA               	goto	u3850
  1848  00C9                     u3851:	
  1849  00C9  28C6               	goto	l311
  1850  00CA                     u3850:	
  1851  00CA                     l3435:	
  1852                           
  1853                           ;main.c: 55:             accionesDeshacer();
  1854  00CA  120A  158A  21E7  120A  118A  	fcall	_accionesDeshacer
  1855                           
  1856                           ;main.c: 56:         }
  1857  00CF  28B2               	goto	l3427
  1858  00D0                     l310:	
  1859                           ;main.c: 57:         else if(RE2) {
  1860                           
  1861  00D0  1D09               	btfss	9,2	;volatile
  1862  00D1  28D3               	goto	u3861
  1863  00D2  28D4               	goto	u3860
  1864  00D3                     u3861:	
  1865  00D3  2955               	goto	l3461
  1866  00D4                     u3860:	
  1867  00D4                     l316:	
  1868  00D4  1909               	btfsc	9,2	;volatile
  1869  00D5  28D7               	goto	u3871
  1870  00D6  28D8               	goto	u3870
  1871  00D7                     u3871:	
  1872  00D7  28D4               	goto	l316
  1873  00D8                     u3870:	
  1874  00D8                     l3439:	
  1875                           
  1876                           ;main.c: 59:             if (cuenta == 0){
  1877  00D8  0870               	movf	_cuenta,w
  1878  00D9  0471               	iorwf	_cuenta+1,w
  1879  00DA  1D03               	btfss	3,2
  1880  00DB  28DD               	goto	u3881
  1881  00DC  28DE               	goto	u3880
  1882  00DD                     u3881:	
  1883  00DD  2942               	goto	l319
  1884  00DE                     u3880:	
  1885  00DE                     l3441:	
  1886                           
  1887                           ;main.c: 60:                 cierreLotePedido = 1;
  1888  00DE  1683               	bsf	3,5	;RP0=1, select bank3
  1889  00DF  1703               	bsf	3,6	;RP1=1, select bank3
  1890  00E0  01D7               	clrf	_cierreLotePedido^(0+384)
  1891  00E1  0AD7               	incf	_cierreLotePedido^(0+384),f
  1892  00E2                     l3443:	
  1893                           
  1894                           ;main.c: 61:                 char strLote[32];;main.c: 62:                 sprintf(strLo
      +                          te,"\nCierre, L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  1895  00E2  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1896  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1897  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1898  00E5  00B4               	movwf	sprintf@sp
  1899  00E6  3001               	movlw	1
  1900  00E7  00B5               	movwf	sprintf@sp+1
  1901  00E8  304E               	movlw	low (STR_15| (0+32768))
  1902  00E9  00B6               	movwf	sprintf@f
  1903  00EA  3083               	movlw	high (STR_15| (0+32768))
  1904  00EB  00B7               	movwf	sprintf@f+1
  1905  00EC  0878               	movf	_nroLote,w
  1906  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1907  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1908  00EF  00C9               	movwf	??_main^(0+128)
  1909  00F0  01CA               	clrf	(??_main^(0+128)+1)
  1910  00F1  0849               	movf	??_main^(0+128),w
  1911  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1912  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1913  00F4  00B8               	movwf	?_sprintf+4
  1914  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1915  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1916  00F7  084A               	movf	(??_main+1)^(0+128),w
  1917  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1918  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1919  00FA  00B9               	movwf	?_sprintf+5
  1920  00FB  086E               	movf	_ventasLote,w
  1921  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1922  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1923  00FE  00CB               	movwf	(??_main+2)^(0+128)
  1924  00FF  01CC               	clrf	((??_main+2)^(0+128)+1)
  1925  0100  084B               	movf	(??_main+2)^(0+128),w
  1926  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0103  00BA               	movwf	?_sprintf+6
  1929  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0106  084C               	movf	(??_main+3)^(0+128),w
  1932  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0109  00BB               	movwf	?_sprintf+7
  1935  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1936  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1937  010C  085B               	movf	(_montosLote+1)^(0+128),w
  1938  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1939  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1940  010F  00BD               	movwf	?_sprintf+9
  1941  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0112  085A               	movf	_montosLote^(0+128),w
  1944  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0115  00BC               	movwf	?_sprintf+8
  1947  0116  120A  118A  2453  120A  118A  	fcall	_sprintf
  1948                           
  1949                           ;main.c: 63:                 envioTX(strLote);
  1950  011B  309C               	movlw	(low (main@strLote| (0+256)))& (0+255)
  1951  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1952  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1953  011E  00A0               	movwf	envioTX@mensaje
  1954  011F  3001               	movlw	1
  1955  0120  00A1               	movwf	envioTX@mensaje+1
  1956  0121  120A  158A  216F  120A  118A  	fcall	_envioTX
  1957  0126                     l3445:	
  1958                           
  1959                           ;main.c: 64:                 for(char i = 0; i<10; i++){
  1960  0126  1683               	bsf	3,5	;RP0=1, select bank3
  1961  0127  1703               	bsf	3,6	;RP1=1, select bank3
  1962  0128  01D0               	clrf	main@i^(0+384)
  1963  0129                     l3451:	
  1964                           
  1965                           ;main.c: 65:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  1966  0129  3082               	movlw	130
  1967  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1968  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1969  012C  00CA               	movwf	(??_main^(0+128)+1)
  1970  012D  30DD               	movlw	221
  1971  012E  00C9               	movwf	??_main^(0+128)
  1972  012F                     u3957:	
  1973  012F  0BC9               	decfsz	??_main^(0+128),f
  1974  0130  292F               	goto	u3957
  1975  0131  0BCA               	decfsz	(??_main^(0+128)+1),f
  1976  0132  292F               	goto	u3957
  1977  0133                     l3453:	
  1978                           
  1979                           ;main.c: 66:                 }
  1980  0133  3001               	movlw	1
  1981  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1983  0136  00C9               	movwf	??_main^(0+128)
  1984  0137  0849               	movf	??_main^(0+128),w
  1985  0138  1683               	bsf	3,5	;RP0=1, select bank3
  1986  0139  1703               	bsf	3,6	;RP1=1, select bank3
  1987  013A  07D0               	addwf	main@i^(0+384),f
  1988  013B                     l3455:	
  1989  013B  300A               	movlw	10
  1990  013C  0250               	subwf	main@i^(0+384),w
  1991  013D  1C03               	skipc
  1992  013E  2940               	goto	u3891
  1993  013F  2941               	goto	u3890
  1994  0140                     u3891:	
  1995  0140  2929               	goto	l3451
  1996  0141                     u3890:	
  1997  0141  28B2               	goto	l3427
  1998  0142                     l319:	
  1999                           ;main.c: 68:             else{
  2000                           
  2001                           
  2002                           ;main.c: 69:                 RA5 = 1;
  2003  0142  1685               	bsf	5,5	;volatile
  2004  0143                     l3457:	
  2005                           
  2006                           ;main.c: 70:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
  2007  0143  3006               	movlw	6
  2008  0144  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0145  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0146  00CB               	movwf	(??_main^(0+128)+2)
  2011  0147  3013               	movlw	19
  2012  0148  00CA               	movwf	(??_main^(0+128)+1)
  2013  0149  30AD               	movlw	173
  2014  014A  00C9               	movwf	??_main^(0+128)
  2015  014B                     u3967:	
  2016  014B  0BC9               	decfsz	??_main^(0+128),f
  2017  014C  294B               	goto	u3967
  2018  014D  0BCA               	decfsz	(??_main^(0+128)+1),f
  2019  014E  294B               	goto	u3967
  2020  014F  0BCB               	decfsz	(??_main^(0+128)+2),f
  2021  0150  294B               	goto	u3967
  2022  0151                     l3459:	
  2023                           
  2024                           ;main.c: 71:                 RA5 = 0;
  2025  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0153  1285               	bcf	5,5	;volatile
  2028  0154  28B2               	goto	l3427
  2029  0155                     l3461:	
  2030  0155  1683               	bsf	3,5	;RP0=1, select bank3
  2031  0156  1703               	bsf	3,6	;RP1=1, select bank3
  2032  0157  0852               	movf	_huboInt^(0+384),w
  2033  0158  0453               	iorwf	(_huboInt+1)^(0+384),w
  2034  0159  1903               	btfsc	3,2
  2035  015A  295C               	goto	u3901
  2036  015B  295D               	goto	u3900
  2037  015C                     u3901:	
  2038  015C  297B               	goto	l3479
  2039  015D                     u3900:	
  2040  015D                     l3463:	
  2041                           
  2042                           ;main.c: 75:             huboInt = 0;
  2043  015D  01D2               	clrf	_huboInt^(0+384)
  2044  015E  01D3               	clrf	(_huboInt+1)^(0+384)
  2045  015F                     l3465:	
  2046                           
  2047                           ;main.c: 76:             accionesPuertoSerial();
  2048  015F  120A  158A  24BF  120A  118A  	fcall	_accionesPuertoSerial
  2049  0164                     l3467:	
  2050                           
  2051                           ;main.c: 77:             for(char i = 0; i < 10; i++){
  2052  0164  1683               	bsf	3,5	;RP0=1, select bank3
  2053  0165  1703               	bsf	3,6	;RP1=1, select bank3
  2054  0166  01D1               	clrf	main@i_307^(0+384)
  2055  0167                     l3473:	
  2056                           
  2057                           ;main.c: 78:                 codigoEntrada[i] = 0;
  2058  0167  0851               	movf	main@i_307^(0+384),w
  2059  0168  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2060  0169  0084               	movwf	4
  2061  016A  1383               	bcf	3,7	;select IRP bank1
  2062  016B  0180               	clrf	0
  2063  016C                     l3475:	
  2064                           
  2065                           ;main.c: 79:             }
  2066  016C  3001               	movlw	1
  2067  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2068  016E  1303               	bcf	3,6	;RP1=0, select bank1
  2069  016F  00C9               	movwf	??_main^(0+128)
  2070  0170  0849               	movf	??_main^(0+128),w
  2071  0171  1683               	bsf	3,5	;RP0=1, select bank3
  2072  0172  1703               	bsf	3,6	;RP1=1, select bank3
  2073  0173  07D1               	addwf	main@i_307^(0+384),f
  2074  0174                     l3477:	
  2075  0174  300A               	movlw	10
  2076  0175  0251               	subwf	main@i_307^(0+384),w
  2077  0176  1C03               	skipc
  2078  0177  2979               	goto	u3911
  2079  0178  297A               	goto	u3910
  2080  0179                     u3911:	
  2081  0179  2967               	goto	l3473
  2082  017A                     u3910:	
  2083  017A  28B2               	goto	l3427
  2084  017B                     l3479:	
  2085  017B  0858               	movf	_adresult^(0+384),w
  2086  017C  0459               	iorwf	(_adresult+1)^(0+384),w
  2087  017D  1903               	btfsc	3,2
  2088  017E  2980               	goto	u3921
  2089  017F  2981               	goto	u3920
  2090  0180                     u3921:	
  2091  0180  2A47               	goto	l314
  2092  0181                     u3920:	
  2093  0181                     l3481:	
  2094                           
  2095                           ;main.c: 82:             adresult = 2*(adresult*10*5/1023);
  2096  0181  30FF               	movlw	255
  2097  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0184  00A6               	movwf	___lwdiv@divisor
  2100  0185  3003               	movlw	3
  2101  0186  00A7               	movwf	___lwdiv@divisor+1
  2102  0187  1683               	bsf	3,5	;RP0=1, select bank3
  2103  0188  1703               	bsf	3,6	;RP1=1, select bank3
  2104  0189  0859               	movf	(_adresult+1)^(0+384),w
  2105  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2106  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2107  018C  00A1               	movwf	___wmul@multiplier+1
  2108  018D  1683               	bsf	3,5	;RP0=1, select bank3
  2109  018E  1703               	bsf	3,6	;RP1=1, select bank3
  2110  018F  0858               	movf	_adresult^(0+384),w
  2111  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0192  00A0               	movwf	___wmul@multiplier
  2114  0193  3032               	movlw	50
  2115  0194  00A2               	movwf	___wmul@multiplicand
  2116  0195  3000               	movlw	0
  2117  0196  00A3               	movwf	___wmul@multiplicand+1
  2118  0197  120A  158A  20A2  120A  118A  	fcall	___wmul
  2119  019C  1283               	bcf	3,5	;RP0=0, select bank0
  2120  019D  1303               	bcf	3,6	;RP1=0, select bank0
  2121  019E  0821               	movf	?___wmul+1,w
  2122  019F  00A9               	movwf	___lwdiv@dividend+1
  2123  01A0  0820               	movf	?___wmul,w
  2124  01A1  00A8               	movwf	___lwdiv@dividend
  2125  01A2  120A  158A  2266  120A  118A  	fcall	___lwdiv
  2126  01A7  1003               	clrc
  2127  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2128  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2129  01AA  0D26               	rlf	?___lwdiv,w
  2130  01AB  1683               	bsf	3,5	;RP0=1, select bank3
  2131  01AC  1703               	bsf	3,6	;RP1=1, select bank3
  2132  01AD  00D8               	movwf	_adresult^(0+384)
  2133  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2134  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2135  01B0  0D27               	rlf	?___lwdiv+1,w
  2136  01B1  1683               	bsf	3,5	;RP0=1, select bank3
  2137  01B2  1703               	bsf	3,6	;RP1=1, select bank3
  2138  01B3  00D9               	movwf	(_adresult+1)^(0+384)
  2139  01B4                     l3483:	
  2140                           
  2141                           ;main.c: 83:             if(adresult < 75){
  2142  01B4  3000               	movlw	0
  2143  01B5  0259               	subwf	(_adresult+1)^(0+384),w
  2144  01B6  304B               	movlw	75
  2145  01B7  1903               	skipnz
  2146  01B8  0258               	subwf	_adresult^(0+384),w
  2147  01B9  1803               	skipnc
  2148  01BA  29BC               	goto	u3931
  2149  01BB  29BD               	goto	u3930
  2150  01BC                     u3931:	
  2151  01BC  29C2               	goto	l3487
  2152  01BD                     u3930:	
  2153  01BD                     l3485:	
  2154                           
  2155                           ;main.c: 84:                 escrituraDeCierre();
  2156  01BD  120A  158A  2224  120A  118A  	fcall	_escrituraDeCierre
  2157  01C2                     l3487:	
  2158                           
  2159                           ;main.c: 86:             if(pedidoVoltaje){
  2160  01C2  1683               	bsf	3,5	;RP0=1, select bank3
  2161  01C3  1703               	bsf	3,6	;RP1=1, select bank3
  2162  01C4  0856               	movf	_pedidoVoltaje^(0+384),w
  2163  01C5  1903               	btfsc	3,2
  2164  01C6  29C8               	goto	u3941
  2165  01C7  29C9               	goto	u3940
  2166  01C8                     u3941:	
  2167  01C8  2A44               	goto	l3497
  2168  01C9                     u3940:	
  2169  01C9                     l3489:	
  2170                           
  2171                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2172  01C9  300A               	movlw	10
  2173  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2174  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2175  01CC  00A6               	movwf	___lwdiv@divisor
  2176  01CD  3000               	movlw	0
  2177  01CE  00A7               	movwf	___lwdiv@divisor+1
  2178  01CF  1683               	bsf	3,5	;RP0=1, select bank3
  2179  01D0  1703               	bsf	3,6	;RP1=1, select bank3
  2180  01D1  0859               	movf	(_adresult+1)^(0+384),w
  2181  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2182  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2183  01D4  00A9               	movwf	___lwdiv@dividend+1
  2184  01D5  1683               	bsf	3,5	;RP0=1, select bank3
  2185  01D6  1703               	bsf	3,6	;RP1=1, select bank3
  2186  01D7  0858               	movf	_adresult^(0+384),w
  2187  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2188  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2189  01DA  00A8               	movwf	___lwdiv@dividend
  2190  01DB  120A  158A  2266  120A  118A  	fcall	___lwdiv
  2191  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2192  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2193  01E2  0827               	movf	?___lwdiv+1,w
  2194  01E3  1683               	bsf	3,5	;RP0=1, select bank3
  2195  01E4  1703               	bsf	3,6	;RP1=1, select bank3
  2196  01E5  00CD               	movwf	(_main$1097+1)^(0+384)
  2197  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2198  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2199  01E8  0826               	movf	?___lwdiv,w
  2200  01E9  1683               	bsf	3,5	;RP0=1, select bank3
  2201  01EA  1703               	bsf	3,6	;RP1=1, select bank3
  2202  01EB  00CC               	movwf	_main$1097^(0+384)
  2203                           
  2204                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2205  01EC  300A               	movlw	10
  2206  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2207  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2208  01EF  00AE               	movwf	___lwmod@divisor
  2209  01F0  3000               	movlw	0
  2210  01F1  00AF               	movwf	___lwmod@divisor+1
  2211  01F2  1683               	bsf	3,5	;RP0=1, select bank3
  2212  01F3  1703               	bsf	3,6	;RP1=1, select bank3
  2213  01F4  0859               	movf	(_adresult+1)^(0+384),w
  2214  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2216  01F7  00B1               	movwf	___lwmod@dividend+1
  2217  01F8  1683               	bsf	3,5	;RP0=1, select bank3
  2218  01F9  1703               	bsf	3,6	;RP1=1, select bank3
  2219  01FA  0858               	movf	_adresult^(0+384),w
  2220  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2221  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2222  01FD  00B0               	movwf	___lwmod@dividend
  2223  01FE  120A  158A  21AB  120A  118A  	fcall	___lwmod
  2224  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0205  082F               	movf	?___lwmod+1,w
  2227  0206  1683               	bsf	3,5	;RP0=1, select bank3
  2228  0207  1703               	bsf	3,6	;RP1=1, select bank3
  2229  0208  00CF               	movwf	(_main$1098+1)^(0+384)
  2230  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2231  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2232  020B  082E               	movf	?___lwmod,w
  2233  020C  1683               	bsf	3,5	;RP0=1, select bank3
  2234  020D  1703               	bsf	3,6	;RP1=1, select bank3
  2235  020E  00CE               	movwf	_main$1098^(0+384)
  2236  020F                     l3491:	
  2237                           
  2238                           ;main.c: 87:                 char bufferMsj[16];;main.c: 88:                 sprintf(buf
      +                          ferMsj,"V=%d.%dV\n", adresult/10, adresult%10);
  2239  020F  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2240  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0212  00B4               	movwf	sprintf@sp
  2243  0213  3001               	movlw	1
  2244  0214  00B5               	movwf	sprintf@sp+1
  2245  0215  3034               	movlw	low (STR_16| (0+32768))
  2246  0216  00B6               	movwf	sprintf@f
  2247  0217  3084               	movlw	high (STR_16| (0+32768))
  2248  0218  00B7               	movwf	sprintf@f+1
  2249  0219  1683               	bsf	3,5	;RP0=1, select bank3
  2250  021A  1703               	bsf	3,6	;RP1=1, select bank3
  2251  021B  084D               	movf	(_main$1097+1)^(0+384),w
  2252  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2253  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2254  021E  00B9               	movwf	?_sprintf+5
  2255  021F  1683               	bsf	3,5	;RP0=1, select bank3
  2256  0220  1703               	bsf	3,6	;RP1=1, select bank3
  2257  0221  084C               	movf	_main$1097^(0+384),w
  2258  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0224  00B8               	movwf	?_sprintf+4
  2261  0225  1683               	bsf	3,5	;RP0=1, select bank3
  2262  0226  1703               	bsf	3,6	;RP1=1, select bank3
  2263  0227  084F               	movf	(_main$1098+1)^(0+384),w
  2264  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2266  022A  00BB               	movwf	?_sprintf+7
  2267  022B  1683               	bsf	3,5	;RP0=1, select bank3
  2268  022C  1703               	bsf	3,6	;RP1=1, select bank3
  2269  022D  084E               	movf	_main$1098^(0+384),w
  2270  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2271  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0230  00BA               	movwf	?_sprintf+6
  2273  0231  120A  118A  2453  120A  118A  	fcall	_sprintf
  2274  0236                     l3493:	
  2275                           
  2276                           ;main.c: 89:                 envioTX(bufferMsj);
  2277  0236  30BC               	movlw	(low (main@bufferMsj| (0+256)))& (0+255)
  2278  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0239  00A0               	movwf	envioTX@mensaje
  2281  023A  3001               	movlw	1
  2282  023B  00A1               	movwf	envioTX@mensaje+1
  2283  023C  120A  158A  216F  120A  118A  	fcall	_envioTX
  2284  0241                     l3495:	
  2285                           
  2286                           ;main.c: 90:                 pedidoVoltaje = 0;
  2287  0241  1683               	bsf	3,5	;RP0=1, select bank3
  2288  0242  1703               	bsf	3,6	;RP1=1, select bank3
  2289  0243  01D6               	clrf	_pedidoVoltaje^(0+384)
  2290  0244                     l3497:	
  2291                           
  2292                           ;main.c: 92:             adresult = 0;
  2293  0244  01D8               	clrf	_adresult^(0+384)
  2294  0245  01D9               	clrf	(_adresult+1)^(0+384)
  2295  0246  28B2               	goto	l3427
  2296  0247                     l314:	
  2297  0247  28B2               	goto	l3427
  2298  0248  120A  118A  280E   	ljmp	start
  2299  024B                     __end_of_main:	
  2300                           
  2301                           	psect	text1
  2302  0A24                     __ptext1:	
  2303 ;; *************** function _escrituraDeCierre *****************
  2304 ;; Defined at:
  2305 ;;		line 56 in file "acciones.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  upper_8bits     1    5[BANK0 ] unsigned char 
  2310 ;;  lower_8bits     1    4[BANK0 ] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         0       2       0       0       0
  2322 ;;      Temps:          0       1       0       0       0
  2323 ;;      Totals:         0       3       0       0       0
  2324 ;;Total ram usage:        3 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    2
  2327 ;; This function calls:
  2328 ;;		_eeprom_write
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _escrituraDeCierre
  2336  0A24                     _escrituraDeCierre:	
  2337  0A24                     l3363:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _escrituraDeCierre: [wreg+status,2+status,0+pclath+cstack]
  2340                           
  2341                           
  2342                           ;acciones.c: 58:     char lower_8bits;;acciones.c: 59:     char upper_8bits;;acciones.c:
      +                           60:     lower_8bits = montosLote & 0xff;
  2343  0A24  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0A25  1303               	bcf	3,6	;RP1=0, select bank1
  2345  0A26  085A               	movf	_montosLote^(0+128),w
  2346  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0A29  00A3               	movwf	??_escrituraDeCierre
  2349  0A2A  0823               	movf	??_escrituraDeCierre,w
  2350  0A2B  00A4               	movwf	escrituraDeCierre@lower_8bits
  2351  0A2C                     l3365:	
  2352                           
  2353                           ;acciones.c: 61:     upper_8bits = (montosLote >> 8) & 0xff;
  2354  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0A2E  085B               	movf	(_montosLote+1)^(0+128),w
  2357  0A2F  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0A30  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0A31  00A3               	movwf	??_escrituraDeCierre
  2360  0A32  0823               	movf	??_escrituraDeCierre,w
  2361  0A33  00A5               	movwf	escrituraDeCierre@upper_8bits
  2362  0A34                     l3367:	
  2363                           
  2364                           ;acciones.c: 62:     eeprom_write(252, upper_8bits);
  2365  0A34  0825               	movf	escrituraDeCierre@upper_8bits,w
  2366  0A35  00A3               	movwf	??_escrituraDeCierre
  2367  0A36  0823               	movf	??_escrituraDeCierre,w
  2368  0A37  00A0               	movwf	eeprom_write@value
  2369  0A38  30FC               	movlw	252
  2370  0A39  120A  158A  20FE  120A  158A  	fcall	_eeprom_write
  2371  0A3E                     l3369:	
  2372                           
  2373                           ;acciones.c: 63:     eeprom_write(253, lower_8bits);
  2374  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0A40  0824               	movf	escrituraDeCierre@lower_8bits,w
  2377  0A41  00A3               	movwf	??_escrituraDeCierre
  2378  0A42  0823               	movf	??_escrituraDeCierre,w
  2379  0A43  00A0               	movwf	eeprom_write@value
  2380  0A44  30FD               	movlw	253
  2381  0A45  120A  158A  20FE  120A  158A  	fcall	_eeprom_write
  2382  0A4A                     l3371:	
  2383                           
  2384                           ;acciones.c: 64:     eeprom_write(254, ventasLote);
  2385  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0A4C  086E               	movf	_ventasLote,w
  2388  0A4D  00A3               	movwf	??_escrituraDeCierre
  2389  0A4E  0823               	movf	??_escrituraDeCierre,w
  2390  0A4F  00A0               	movwf	eeprom_write@value
  2391  0A50  30FE               	movlw	254
  2392  0A51  120A  158A  20FE  120A  158A  	fcall	_eeprom_write
  2393  0A56                     l3373:	
  2394                           
  2395                           ;acciones.c: 65:     eeprom_write(255, nroLote);
  2396  0A56  0878               	movf	_nroLote,w
  2397  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0A58  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0A59  00A3               	movwf	??_escrituraDeCierre
  2400  0A5A  0823               	movf	??_escrituraDeCierre,w
  2401  0A5B  00A0               	movwf	eeprom_write@value
  2402  0A5C  30FF               	movlw	255
  2403  0A5D  120A  158A  20FE  120A  158A  	fcall	_eeprom_write
  2404  0A62                     l3375:	
  2405                           
  2406                           ;acciones.c: 66:     RC0 = 1;
  2407  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0A63  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0A64  1407               	bsf	7,0	;volatile
  2410  0A65                     l76:	
  2411  0A65  0008               	return
  2412  0A66                     __end_of_escrituraDeCierre:	
  2413                           
  2414                           	psect	text2
  2415  0CBF                     __ptext2:	
  2416 ;; *************** function _accionesPuertoSerial *****************
  2417 ;; Defined at:
  2418 ;;		line 35 in file "acciones.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  mensaje        12    0[BANK3 ] unsigned char [12]
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       0       0      12       0
  2434 ;;      Temps:          0       0       3       0       0
  2435 ;;      Totals:         0       0       3      12       0
  2436 ;;Total ram usage:       15 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    6
  2439 ;; This function calls:
  2440 ;;		_envioTX
  2441 ;;		_lecturaComando
  2442 ;;		_lecturaEtiqueta
  2443 ;;		_sprintf
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _accionesPuertoSerial
  2451  0CBF                     _accionesPuertoSerial:	
  2452  0CBF                     l3343:	
  2453                           ;incstack = 0
  2454                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2455                           
  2456                           
  2457                           ;acciones.c: 36:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codi
      +                          goEntrada[0] == '-')) {
  2458  0CBF  303F               	movlw	63
  2459  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0CC2  0660               	xorwf	_codigoEntrada^(0+128),w
  2462  0CC3  1903               	btfsc	3,2
  2463  0CC4  2CC6               	goto	u3751
  2464  0CC5  2CC7               	goto	u3750
  2465  0CC6                     u3751:	
  2466  0CC6  2CD3               	goto	l3349
  2467  0CC7                     u3750:	
  2468  0CC7                     l3345:	
  2469  0CC7  302B               	movlw	43
  2470  0CC8  0660               	xorwf	_codigoEntrada^(0+128),w
  2471  0CC9  1903               	btfsc	3,2
  2472  0CCA  2CCC               	goto	u3761
  2473  0CCB  2CCD               	goto	u3760
  2474  0CCC                     u3761:	
  2475  0CCC  2CD3               	goto	l3349
  2476  0CCD                     u3760:	
  2477  0CCD                     l3347:	
  2478  0CCD  302D               	movlw	45
  2479  0CCE  0660               	xorwf	_codigoEntrada^(0+128),w
  2480  0CCF  1D03               	btfss	3,2
  2481  0CD0  2CD2               	goto	u3771
  2482  0CD1  2CD3               	goto	u3770
  2483  0CD2                     u3771:	
  2484  0CD2  2CD9               	goto	l3351
  2485  0CD3                     u3770:	
  2486  0CD3                     l3349:	
  2487                           
  2488                           ;acciones.c: 37:         lecturaComando();
  2489  0CD3  120A  158A  2082  120A  158A  	fcall	_lecturaComando
  2490                           
  2491                           ;acciones.c: 38:     }
  2492  0CD8  2D22               	goto	l73
  2493  0CD9                     l3351:	
  2494  0CD9  303A               	movlw	58
  2495  0CDA  0260               	subwf	_codigoEntrada^(0+128),w
  2496  0CDB  1803               	skipnc
  2497  0CDC  2CDE               	goto	u3781
  2498  0CDD  2CDF               	goto	u3780
  2499  0CDE                     u3781:	
  2500  0CDE  2D0E               	goto	l70
  2501  0CDF                     u3780:	
  2502  0CDF                     l3353:	
  2503  0CDF  3030               	movlw	48
  2504  0CE0  0260               	subwf	_codigoEntrada^(0+128),w
  2505  0CE1  1C03               	skipc
  2506  0CE2  2CE4               	goto	u3791
  2507  0CE3  2CE5               	goto	u3790
  2508  0CE4                     u3791:	
  2509  0CE4  2D0E               	goto	l70
  2510  0CE5                     u3790:	
  2511  0CE5                     l3355:	
  2512                           
  2513                           ;acciones.c: 40:         if (modoDebug){
  2514  0CE5  0872               	movf	_modoDebug,w
  2515  0CE6  1903               	btfsc	3,2
  2516  0CE7  2CE9               	goto	u3801
  2517  0CE8  2CEA               	goto	u3800
  2518  0CE9                     u3801:	
  2519  0CE9  2D08               	goto	l71
  2520  0CEA                     u3800:	
  2521  0CEA                     l3357:	
  2522                           
  2523                           ;acciones.c: 41:             char mensaje[12];;acciones.c: 42:             sprintf(mensa
      +                          je,"E:%s", codigoEntrada);
  2524  0CEA  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2525  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0CED  00B4               	movwf	sprintf@sp
  2528  0CEE  3001               	movlw	1
  2529  0CEF  00B5               	movwf	sprintf@sp+1
  2530  0CF0  304E               	movlw	low (STR_3| (0+32768))
  2531  0CF1  00B6               	movwf	sprintf@f
  2532  0CF2  3084               	movlw	high (STR_3| (0+32768))
  2533  0CF3  00B7               	movwf	sprintf@f+1
  2534  0CF4  30E0               	movlw	(low (_codigoEntrada| 0))& (0+255)
  2535  0CF5  00B8               	movwf	low ((?_sprintf| 0+4))
  2536  0CF6  3000               	movlw	0
  2537  0CF7  00B9               	movwf	(low ((?_sprintf| 0+4))+1)
  2538  0CF8  120A  118A  2453  120A  158A  	fcall	_sprintf
  2539                           
  2540                           ;acciones.c: 43:             envioTX(mensaje);
  2541  0CFD  3090               	movlw	(low (accionesPuertoSerial@mensaje| (0+256)))& (0+255)
  2542  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0D00  00A0               	movwf	envioTX@mensaje
  2545  0D01  3001               	movlw	1
  2546  0D02  00A1               	movwf	envioTX@mensaje+1
  2547  0D03  120A  158A  216F  120A  158A  	fcall	_envioTX
  2548  0D08                     l71:	
  2549                           ;acciones.c: 44:         }
  2550                           
  2551                           
  2552                           ;acciones.c: 45:         lecturaEtiqueta();
  2553  0D08  120A  118A  25A6  120A  158A  	fcall	_lecturaEtiqueta
  2554                           
  2555                           ;acciones.c: 46:     }
  2556  0D0D  2D22               	goto	l73
  2557  0D0E                     l70:	
  2558                           ;acciones.c: 47:     else{
  2559                           
  2560                           
  2561                           ;acciones.c: 49:         RA5 = 1;
  2562  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0D10  1685               	bsf	5,5	;volatile
  2565  0D11                     l3359:	
  2566                           
  2567                           ;acciones.c: 50:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2568  0D11  3006               	movlw	6
  2569  0D12  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0D13  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0D14  00C8               	movwf	(??_accionesPuertoSerial^(0+128)+2)
  2572  0D15  3013               	movlw	19
  2573  0D16  00C7               	movwf	(??_accionesPuertoSerial^(0+128)+1)
  2574  0D17  30AD               	movlw	173
  2575  0D18  00C6               	movwf	??_accionesPuertoSerial^(0+128)
  2576  0D19                     u3977:	
  2577  0D19  0BC6               	decfsz	??_accionesPuertoSerial^(0+128),f
  2578  0D1A  2D19               	goto	u3977
  2579  0D1B  0BC7               	decfsz	(??_accionesPuertoSerial^(0+128)+1),f
  2580  0D1C  2D19               	goto	u3977
  2581  0D1D  0BC8               	decfsz	(??_accionesPuertoSerial^(0+128)+2),f
  2582  0D1E  2D19               	goto	u3977
  2583  0D1F                     l3361:	
  2584                           
  2585                           ;acciones.c: 51:         RA5 = 0;
  2586  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0D21  1285               	bcf	5,5	;volatile
  2589  0D22                     l73:	
  2590  0D22  0008               	return
  2591  0D23                     __end_of_accionesPuertoSerial:	
  2592                           
  2593                           	psect	text3
  2594  05A6                     __ptext3:	
  2595 ;; *************** function _lecturaEtiqueta *****************
  2596 ;; Defined at:
  2597 ;;		line 17 in file "lectura.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  tp              1   35[BANK0 ] unsigned char 
  2602 ;;  i               2   38[BANK0 ] int 
  2603 ;;  Aux             2   36[BANK0 ] short 
  2604 ;;  letra           1   34[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         0       6       0       0       0
  2616 ;;      Temps:          0       3       0       0       0
  2617 ;;      Totals:         0       9       0       0       0
  2618 ;;Total ram usage:        9 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    5
  2621 ;; This function calls:
  2622 ;;		_EEPROM_search
  2623 ;;		___awmod
  2624 ;;		___bmul
  2625 ;;		_envioTX
  2626 ;;		_ingresoProd
  2627 ;;		_mostrarDigitos
  2628 ;; This function is called by:
  2629 ;;		_accionesPuertoSerial
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _lecturaEtiqueta
  2635  05A6                     _lecturaEtiqueta:	
  2636  05A6                     l3247:	
  2637                           ;incstack = 0
  2638                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2639                           
  2640                           
  2641                           ;lectura.c: 18:     short int Aux = 0;
  2642  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2643  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2644  05A8  01C4               	clrf	lecturaEtiqueta@Aux
  2645  05A9  01C5               	clrf	lecturaEtiqueta@Aux+1
  2646                           
  2647                           ;lectura.c: 19:     unsigned char letra = 0;
  2648  05AA  01C2               	clrf	lecturaEtiqueta@letra
  2649                           
  2650                           ;lectura.c: 22:     for (int i = 0; i < 8; i++ ) {
  2651  05AB  01C6               	clrf	lecturaEtiqueta@i
  2652  05AC  01C7               	clrf	lecturaEtiqueta@i+1
  2653  05AD                     l3253:	
  2654                           
  2655                           ;lectura.c: 23:         if(codigoEntrada[i] >= '0' && codigoEntrada[i] <= '9'){
  2656  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  2657  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  2658  05AF  0846               	movf	lecturaEtiqueta@i,w
  2659  05B0  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2660  05B1  0084               	movwf	4
  2661  05B2  3030               	movlw	48
  2662  05B3  1383               	bcf	3,7	;select IRP bank1
  2663  05B4  0200               	subwf	0,w
  2664  05B5  1C03               	skipc
  2665  05B6  2DB8               	goto	u3631
  2666  05B7  2DB9               	goto	u3630
  2667  05B8                     u3631:	
  2668  05B8  2DD3               	goto	l127
  2669  05B9                     u3630:	
  2670  05B9                     l3255:	
  2671  05B9  0846               	movf	lecturaEtiqueta@i,w
  2672  05BA  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2673  05BB  0084               	movwf	4
  2674  05BC  303A               	movlw	58
  2675  05BD  0200               	subwf	0,w
  2676  05BE  1803               	skipnc
  2677  05BF  2DC1               	goto	u3641
  2678  05C0  2DC2               	goto	u3640
  2679  05C1                     u3641:	
  2680  05C1  2DD3               	goto	l127
  2681  05C2                     u3640:	
  2682  05C2                     l3257:	
  2683                           
  2684                           ;lectura.c: 24:             Aux += (codigoEntrada[i] - '0');
  2685  05C2  0846               	movf	lecturaEtiqueta@i,w
  2686  05C3  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2687  05C4  0084               	movwf	4
  2688  05C5  0800               	movf	0,w
  2689  05C6  3ED0               	addlw	208
  2690  05C7  00BF               	movwf	??_lecturaEtiqueta
  2691  05C8  30FF               	movlw	255
  2692  05C9  1803               	skipnc
  2693  05CA  3000               	movlw	0
  2694  05CB  00C0               	movwf	??_lecturaEtiqueta+1
  2695  05CC  083F               	movf	??_lecturaEtiqueta,w
  2696  05CD  07C4               	addwf	lecturaEtiqueta@Aux,f
  2697  05CE  1803               	skipnc
  2698  05CF  0AC5               	incf	lecturaEtiqueta@Aux+1,f
  2699  05D0  0840               	movf	??_lecturaEtiqueta+1,w
  2700  05D1  07C5               	addwf	lecturaEtiqueta@Aux+1,f
  2701                           
  2702                           ;lectura.c: 25:         }
  2703  05D2  2DD5               	goto	l3259
  2704  05D3                     l127:	
  2705                           ;lectura.c: 26:         else{
  2706                           
  2707                           
  2708                           ;lectura.c: 27:             letra = 1;
  2709  05D3  01C2               	clrf	lecturaEtiqueta@letra
  2710  05D4  0AC2               	incf	lecturaEtiqueta@letra,f
  2711  05D5                     l3259:	
  2712                           
  2713                           ;lectura.c: 29:     }
  2714  05D5  3001               	movlw	1
  2715  05D6  07C6               	addwf	lecturaEtiqueta@i,f
  2716  05D7  1803               	skipnc
  2717  05D8  0AC7               	incf	lecturaEtiqueta@i+1,f
  2718  05D9  3000               	movlw	0
  2719  05DA  07C7               	addwf	lecturaEtiqueta@i+1,f
  2720  05DB                     l3261:	
  2721  05DB  0847               	movf	lecturaEtiqueta@i+1,w
  2722  05DC  3A80               	xorlw	128
  2723  05DD  00FF               	movwf	btemp+1
  2724  05DE  3080               	movlw	128
  2725  05DF  027F               	subwf	btemp+1,w
  2726  05E0  1D03               	skipz
  2727  05E1  2DE4               	goto	u3655
  2728  05E2  3008               	movlw	8
  2729  05E3  0246               	subwf	lecturaEtiqueta@i,w
  2730  05E4                     u3655:	
  2731  05E4  1C03               	skipc
  2732  05E5  2DE7               	goto	u3651
  2733  05E6  2DE8               	goto	u3650
  2734  05E7                     u3651:	
  2735  05E7  2DAD               	goto	l3253
  2736  05E8                     u3650:	
  2737  05E8                     l3263:	
  2738                           
  2739                           ;lectura.c: 31:     if ( ((Aux%10) == (codigoEntrada[8] - '0')) && letra == 0) {
  2740  05E8  300A               	movlw	10
  2741  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  2742  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  2743  05EB  00A0               	movwf	___awmod@divisor
  2744  05EC  3000               	movlw	0
  2745  05ED  00A1               	movwf	___awmod@divisor+1
  2746  05EE  0845               	movf	lecturaEtiqueta@Aux+1,w
  2747  05EF  00A3               	movwf	___awmod@dividend+1
  2748  05F0  0844               	movf	lecturaEtiqueta@Aux,w
  2749  05F1  00A2               	movwf	___awmod@dividend
  2750  05F2  120A  158A  2340  120A  118A  	fcall	___awmod
  2751  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  2752  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  2753  05F9  0868               	movf	(_codigoEntrada^(0+128)+8),w
  2754  05FA  3ED0               	addlw	208
  2755  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  2756  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  2757  05FD  00BF               	movwf	??_lecturaEtiqueta
  2758  05FE  30FF               	movlw	255
  2759  05FF  1803               	skipnc
  2760  0600  3000               	movlw	0
  2761  0601  00C0               	movwf	??_lecturaEtiqueta+1
  2762  0602  0821               	movf	?___awmod+1,w
  2763  0603  0640               	xorwf	??_lecturaEtiqueta+1,w
  2764  0604  1D03               	skipz
  2765  0605  2E08               	goto	u3665
  2766  0606  0820               	movf	?___awmod,w
  2767  0607  063F               	xorwf	??_lecturaEtiqueta,w
  2768  0608                     u3665:	
  2769  0608  1D03               	skipz
  2770  0609  2E0B               	goto	u3661
  2771  060A  2E0C               	goto	u3660
  2772  060B                     u3661:	
  2773  060B  2EA4               	goto	l130
  2774  060C                     u3660:	
  2775  060C                     l3265:	
  2776  060C  0842               	movf	lecturaEtiqueta@letra,w
  2777  060D  1D03               	btfss	3,2
  2778  060E  2E10               	goto	u3671
  2779  060F  2E11               	goto	u3670
  2780  0610                     u3671:	
  2781  0610  2EA4               	goto	l130
  2782  0611                     u3670:	
  2783  0611                     l3267:	
  2784                           
  2785                           ;lectura.c: 33:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1]
      +                           - '0');
  2786  0611  300A               	movlw	10
  2787  0612  00BF               	movwf	??_lecturaEtiqueta
  2788  0613  083F               	movf	??_lecturaEtiqueta,w
  2789  0614  00A0               	movwf	___bmul@multiplicand
  2790  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0617  0860               	movf	_codigoEntrada^(0+128),w
  2793  0618  120A  158A  204C  120A  118A  	fcall	___bmul
  2794  061D  1683               	bsf	3,5	;RP0=1, select bank1
  2795  061E  1303               	bcf	3,6	;RP1=0, select bank1
  2796  061F  0761               	addwf	(_codigoEntrada^(0+128)+1),w
  2797  0620  3EF0               	addlw	240
  2798  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0623  00C0               	movwf	??_lecturaEtiqueta+1
  2801  0624  0840               	movf	??_lecturaEtiqueta+1,w
  2802  0625  00C3               	movwf	lecturaEtiqueta@tp
  2803  0626                     l3269:	
  2804                           
  2805                           ;lectura.c: 34:         Aux = EEPROM_search(tp);
  2806  0626  0843               	movf	lecturaEtiqueta@tp,w
  2807  0627  120A  158A  258C  120A  118A  	fcall	_EEPROM_search
  2808  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2809  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2810  062E  0837               	movf	?_EEPROM_search+1,w
  2811  062F  00C5               	movwf	lecturaEtiqueta@Aux+1
  2812  0630  0836               	movf	?_EEPROM_search,w
  2813  0631  00C4               	movwf	lecturaEtiqueta@Aux
  2814  0632                     l3271:	
  2815                           
  2816                           ;lectura.c: 36:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  2817  0632  0870               	movf	_cuenta,w
  2818  0633  0744               	addwf	lecturaEtiqueta@Aux,w
  2819  0634  00BF               	movwf	??_lecturaEtiqueta
  2820  0635  0871               	movf	_cuenta+1,w
  2821  0636  1803               	skipnc
  2822  0637  0A71               	incf	_cuenta+1,w
  2823  0638  0745               	addwf	lecturaEtiqueta@Aux+1,w
  2824  0639  00C0               	movwf	??_lecturaEtiqueta+1
  2825  063A  3003               	movlw	3
  2826  063B  0240               	subwf	??_lecturaEtiqueta+1,w
  2827  063C  30E8               	movlw	232
  2828  063D  1903               	skipnz
  2829  063E  023F               	subwf	??_lecturaEtiqueta,w
  2830  063F  1803               	skipnc
  2831  0640  2E42               	goto	u3681
  2832  0641  2E43               	goto	u3680
  2833  0642                     u3681:	
  2834  0642  2EA4               	goto	l130
  2835  0643                     u3680:	
  2836  0643                     l3273:	
  2837  0643  0A44               	incf	lecturaEtiqueta@Aux,w
  2838  0644  1D03               	skipz
  2839  0645  2E4B               	goto	u3690
  2840  0646  0A45               	incf	lecturaEtiqueta@Aux+1,w
  2841  0647  1903               	btfsc	3,2
  2842  0648  2E4A               	goto	u3691
  2843  0649  2E4B               	goto	u3690
  2844  064A                     u3691:	
  2845  064A  2EA4               	goto	l130
  2846  064B                     u3690:	
  2847  064B                     l3275:	
  2848                           
  2849                           ;lectura.c: 37:             if(modoDebug){
  2850  064B  0872               	movf	_modoDebug,w
  2851  064C  1903               	btfsc	3,2
  2852  064D  2E4F               	goto	u3701
  2853  064E  2E50               	goto	u3700
  2854  064F                     u3701:	
  2855  064F  2E59               	goto	l3279
  2856  0650                     u3700:	
  2857  0650                     l3277:	
  2858                           
  2859                           ;lectura.c: 38:                 envioTX("Producto ingresado\n");
  2860  0650  30D8               	movlw	low (STR_4| (0+32768))
  2861  0651  00A0               	movwf	envioTX@mensaje
  2862  0652  3083               	movlw	high (STR_4| (0+32768))
  2863  0653  00A1               	movwf	envioTX@mensaje+1
  2864  0654  120A  158A  216F  120A  118A  	fcall	_envioTX
  2865  0659                     l3279:	
  2866                           
  2867                           ;lectura.c: 40:             tp--;
  2868  0659  3001               	movlw	1
  2869  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2870  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2871  065C  02C3               	subwf	lecturaEtiqueta@tp,f
  2872  065D                     l3281:	
  2873                           
  2874                           ;lectura.c: 41:             ingresoProd(tp);
  2875  065D  0843               	movf	lecturaEtiqueta@tp,w
  2876  065E  00BF               	movwf	??_lecturaEtiqueta
  2877  065F  01C0               	clrf	??_lecturaEtiqueta+1
  2878  0660  083F               	movf	??_lecturaEtiqueta,w
  2879  0661  00AE               	movwf	ingresoProd@tp
  2880  0662  0840               	movf	??_lecturaEtiqueta+1,w
  2881  0663  00AF               	movwf	ingresoProd@tp+1
  2882  0664  120A  118A  279D  120A  118A  	fcall	_ingresoProd
  2883  0669                     l3283:	
  2884                           
  2885                           ;lectura.c: 42:             productoIngresado = tp;
  2886  0669  1283               	bcf	3,5	;RP0=0, select bank0
  2887  066A  1303               	bcf	3,6	;RP1=0, select bank0
  2888  066B  0843               	movf	lecturaEtiqueta@tp,w
  2889  066C  00BF               	movwf	??_lecturaEtiqueta
  2890  066D  01C0               	clrf	??_lecturaEtiqueta+1
  2891  066E  083F               	movf	??_lecturaEtiqueta,w
  2892  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0670  1303               	bcf	3,6	;RP1=0, select bank1
  2894  0671  00DE               	movwf	_productoIngresado^(0+128)
  2895  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2896  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0674  0840               	movf	??_lecturaEtiqueta+1,w
  2898  0675  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0676  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0677  00DF               	movwf	(_productoIngresado+1)^(0+128)
  2901  0678                     l3285:	
  2902                           
  2903                           ;lectura.c: 43:             auxCuenta = cuenta;
  2904  0678  0871               	movf	_cuenta+1,w
  2905  0679  1683               	bsf	3,5	;RP0=1, select bank3
  2906  067A  1703               	bsf	3,6	;RP1=1, select bank3
  2907  067B  00D5               	movwf	(_auxCuenta+1)^(0+384)
  2908  067C  0870               	movf	_cuenta,w
  2909  067D  00D4               	movwf	_auxCuenta^(0+384)
  2910  067E                     l3287:	
  2911                           
  2912                           ;lectura.c: 44:             cuenta += Aux;
  2913  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2914  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0680  0844               	movf	lecturaEtiqueta@Aux,w
  2916  0681  07F0               	addwf	_cuenta,f
  2917  0682  1803               	skipnc
  2918  0683  0AF1               	incf	_cuenta+1,f
  2919  0684  0845               	movf	lecturaEtiqueta@Aux+1,w
  2920  0685  07F1               	addwf	_cuenta+1,f
  2921  0686                     l3289:	
  2922                           
  2923                           ;lectura.c: 45:             mostrarDigitos(cuenta);
  2924  0686  0871               	movf	_cuenta+1,w
  2925  0687  00B5               	movwf	mostrarDigitos@num+1
  2926  0688  0870               	movf	_cuenta,w
  2927  0689  00B4               	movwf	mostrarDigitos@num
  2928  068A  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  2929  068F                     l3291:	
  2930                           
  2931                           ;lectura.c: 46:             RA3 = 1;
  2932  068F  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0690  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0691  1585               	bsf	5,3	;volatile
  2935  0692                     l3293:	
  2936                           
  2937                           ;lectura.c: 47:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2938  0692  3006               	movlw	6
  2939  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0695  00C1               	movwf	??_lecturaEtiqueta+2
  2942  0696  3013               	movlw	19
  2943  0697  00C0               	movwf	??_lecturaEtiqueta+1
  2944  0698  30AD               	movlw	173
  2945  0699  00BF               	movwf	??_lecturaEtiqueta
  2946  069A                     u3987:	
  2947  069A  0BBF               	decfsz	??_lecturaEtiqueta,f
  2948  069B  2E9A               	goto	u3987
  2949  069C  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2950  069D  2E9A               	goto	u3987
  2951  069E  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2952  069F  2E9A               	goto	u3987
  2953  06A0                     l3295:	
  2954                           
  2955                           ;lectura.c: 48:             RA3 = 0;
  2956  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2957  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2958  06A2  1185               	bcf	5,3	;volatile
  2959                           
  2960                           ;lectura.c: 50:         }
  2961  06A3  2EB6               	goto	l134
  2962  06A4                     l130:	
  2963                           ;lectura.c: 51:         else {
  2964                           
  2965                           
  2966                           ;lectura.c: 53:             RA5 = 1;
  2967  06A4  1685               	bsf	5,5	;volatile
  2968  06A5                     l3297:	
  2969                           
  2970                           ;lectura.c: 54:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2971  06A5  3006               	movlw	6
  2972  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2973  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2974  06A8  00C1               	movwf	??_lecturaEtiqueta+2
  2975  06A9  3013               	movlw	19
  2976  06AA  00C0               	movwf	??_lecturaEtiqueta+1
  2977  06AB  30AD               	movlw	173
  2978  06AC  00BF               	movwf	??_lecturaEtiqueta
  2979  06AD                     u3997:	
  2980  06AD  0BBF               	decfsz	??_lecturaEtiqueta,f
  2981  06AE  2EAD               	goto	u3997
  2982  06AF  0BC0               	decfsz	??_lecturaEtiqueta+1,f
  2983  06B0  2EAD               	goto	u3997
  2984  06B1  0BC1               	decfsz	??_lecturaEtiqueta+2,f
  2985  06B2  2EAD               	goto	u3997
  2986  06B3                     l3299:	
  2987                           
  2988                           ;lectura.c: 55:             RA5 = 0;
  2989  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2990  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2991  06B5  1285               	bcf	5,5	;volatile
  2992  06B6                     l134:	
  2993  06B6  0008               	return
  2994  06B7                     __end_of_lecturaEtiqueta:	
  2995                           
  2996                           	psect	text4
  2997  079D                     __ptext4:	
  2998 ;; *************** function _ingresoProd *****************
  2999 ;; Defined at:
  3000 ;;		line 17 in file "manejoProductos.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  tp              2   14[BANK0 ] short 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  i               2   19[BANK0 ] short 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       2       0       0       0
  3015 ;;      Locals:         0       2       0       0       0
  3016 ;;      Temps:          0       3       0       0       0
  3017 ;;      Totals:         0       7       0       0       0
  3018 ;;Total ram usage:        7 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    3
  3021 ;; This function calls:
  3022 ;;		_pow
  3023 ;; This function is called by:
  3024 ;;		_lecturaEtiqueta
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _ingresoProd
  3030  079D                     _ingresoProd:	
  3031  079D                     l3135:	
  3032                           ;incstack = 0
  3033                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3034                           
  3035                           
  3036                           ;manejoProductos.c: 19:     for(short int i = 12; i>=0; i--) {
  3037  079D  300C               	movlw	12
  3038  079E  1283               	bcf	3,5	;RP0=0, select bank0
  3039  079F  1303               	bcf	3,6	;RP1=0, select bank0
  3040  07A0  00B3               	movwf	ingresoProd@i
  3041  07A1  3000               	movlw	0
  3042  07A2  00B4               	movwf	ingresoProd@i+1
  3043  07A3                     l3141:	
  3044                           
  3045                           ;manejoProductos.c: 20:         if( tp >= 8*i) {
  3046  07A3  0834               	movf	ingresoProd@i+1,w
  3047  07A4  00B1               	movwf	??_ingresoProd+1
  3048  07A5  0833               	movf	ingresoProd@i,w
  3049  07A6  00B0               	movwf	??_ingresoProd
  3050  07A7  1003               	clrc
  3051  07A8  0DB0               	rlf	??_ingresoProd,f
  3052  07A9  0DB1               	rlf	??_ingresoProd+1,f
  3053  07AA  1003               	clrc
  3054  07AB  0DB0               	rlf	??_ingresoProd,f
  3055  07AC  0DB1               	rlf	??_ingresoProd+1,f
  3056  07AD  1003               	clrc
  3057  07AE  0DB0               	rlf	??_ingresoProd,f
  3058  07AF  0DB1               	rlf	??_ingresoProd+1,f
  3059  07B0  082F               	movf	ingresoProd@tp+1,w
  3060  07B1  3A80               	xorlw	128
  3061  07B2  00B2               	movwf	??_ingresoProd+2
  3062  07B3  0831               	movf	??_ingresoProd+1,w
  3063  07B4  3A80               	xorlw	128
  3064  07B5  0232               	subwf	??_ingresoProd+2,w
  3065  07B6  1D03               	skipz
  3066  07B7  2FBA               	goto	u3435
  3067  07B8  0830               	movf	??_ingresoProd,w
  3068  07B9  022E               	subwf	ingresoProd@tp,w
  3069  07BA                     u3435:	
  3070  07BA  1C03               	skipc
  3071  07BB  2FBD               	goto	u3431
  3072  07BC  2FBE               	goto	u3430
  3073  07BD                     u3431:	
  3074  07BD  2FF2               	goto	l3149
  3075  07BE                     u3430:	
  3076  07BE                     l3143:	
  3077                           
  3078                           ;manejoProductos.c: 22:             tp = tp - 8*i;
  3079  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3080  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3081  07C0  0834               	movf	ingresoProd@i+1,w
  3082  07C1  00B1               	movwf	??_ingresoProd+1
  3083  07C2  0833               	movf	ingresoProd@i,w
  3084  07C3  00B0               	movwf	??_ingresoProd
  3085  07C4  1003               	clrc
  3086  07C5  0DB0               	rlf	??_ingresoProd,f
  3087  07C6  0DB1               	rlf	??_ingresoProd+1,f
  3088  07C7  1003               	clrc
  3089  07C8  0DB0               	rlf	??_ingresoProd,f
  3090  07C9  0DB1               	rlf	??_ingresoProd+1,f
  3091  07CA  1003               	clrc
  3092  07CB  0DB0               	rlf	??_ingresoProd,f
  3093  07CC  0DB1               	rlf	??_ingresoProd+1,f
  3094  07CD  0830               	movf	??_ingresoProd,w
  3095  07CE  022E               	subwf	ingresoProd@tp,w
  3096  07CF  00AE               	movwf	ingresoProd@tp
  3097  07D0  0831               	movf	??_ingresoProd+1,w
  3098  07D1  1C03               	skipc
  3099  07D2  0A31               	incf	??_ingresoProd+1,w
  3100  07D3  022F               	subwf	ingresoProd@tp+1,w
  3101  07D4  00AF               	movwf	ingresoProd@tp+1
  3102  07D5                     l3145:	
  3103                           
  3104                           ;manejoProductos.c: 23:             prodIngresados[i] = prodIngresados[i] | pow(2,tp);
  3105  07D5  0833               	movf	ingresoProd@i,w
  3106  07D6  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3107  07D7  0084               	movwf	4
  3108  07D8  3002               	movlw	2
  3109  07D9  00A6               	movwf	pow@numero
  3110  07DA  3000               	movlw	0
  3111  07DB  00A7               	movwf	pow@numero+1
  3112  07DC  082F               	movf	ingresoProd@tp+1,w
  3113  07DD  00A9               	movwf	pow@potencia+1
  3114  07DE  082E               	movf	ingresoProd@tp,w
  3115  07DF  00A8               	movwf	pow@potencia
  3116  07E0  120A  158A  2135  120A  118A  	fcall	_pow
  3117  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  3118  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  3119  07E7  0826               	movf	?_pow,w
  3120  07E8  1383               	bcf	3,7	;select IRP bank1
  3121  07E9  0400               	iorwf	0,w
  3122  07EA  00B0               	movwf	??_ingresoProd
  3123  07EB  0833               	movf	ingresoProd@i,w
  3124  07EC  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3125  07ED  0084               	movwf	4
  3126  07EE  0830               	movf	??_ingresoProd,w
  3127  07EF  0080               	movwf	0
  3128  07F0                     l3147:	
  3129                           
  3130                           ;manejoProductos.c: 24:             i = 0;
  3131  07F0  01B3               	clrf	ingresoProd@i
  3132  07F1  01B4               	clrf	ingresoProd@i+1
  3133  07F2                     l3149:	
  3134                           
  3135                           ;manejoProductos.c: 27:     }
  3136  07F2  30FF               	movlw	255
  3137  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  3138  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  3139  07F5  07B3               	addwf	ingresoProd@i,f
  3140  07F6  1803               	skipnc
  3141  07F7  0AB4               	incf	ingresoProd@i+1,f
  3142  07F8  30FF               	movlw	255
  3143  07F9  07B4               	addwf	ingresoProd@i+1,f
  3144  07FA                     l3151:	
  3145  07FA  1FB4               	btfss	ingresoProd@i+1,7
  3146  07FB  2FFD               	goto	u3441
  3147  07FC  2FFE               	goto	u3440
  3148  07FD                     u3441:	
  3149  07FD  2FA3               	goto	l3141
  3150  07FE                     u3440:	
  3151  07FE                     l369:	
  3152  07FE  0008               	return
  3153  07FF                     __end_of_ingresoProd:	
  3154                           
  3155                           	psect	text5
  3156  0D8C                     __ptext5:	
  3157 ;; *************** function _EEPROM_search *****************
  3158 ;; Defined at:
  3159 ;;		line 3 in file "lectura.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  tp              1    wreg     unsigned char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  tp              1   30[BANK0 ] unsigned char 
  3164 ;;  precio          2   28[BANK0 ] short 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2   22[BANK0 ] short 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       2       0       0       0
  3175 ;;      Locals:         0       3       0       0       0
  3176 ;;      Temps:          0       4       0       0       0
  3177 ;;      Totals:         0       9       0       0       0
  3178 ;;Total ram usage:        9 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    4
  3181 ;; This function calls:
  3182 ;;		___awdiv
  3183 ;;		_eeprom_read
  3184 ;;		_verificarProd
  3185 ;; This function is called by:
  3186 ;;		_lecturaEtiqueta
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _EEPROM_search
  3192  0D8C                     _EEPROM_search:	
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3196                           ;EEPROM_search@tp stored from wreg
  3197  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0D8E  00BE               	movwf	EEPROM_search@tp
  3200  0D8F                     l3119:	
  3201                           
  3202                           ;lectura.c: 5:     short int precio;;lectura.c: 6:     tp--;
  3203  0D8F  3001               	movlw	1
  3204  0D90  02BE               	subwf	EEPROM_search@tp,f
  3205  0D91                     l3121:	
  3206                           
  3207                           ;lectura.c: 7:     tp = tp*2;
  3208  0D91  083E               	movf	EEPROM_search@tp,w
  3209  0D92  00B8               	movwf	??_EEPROM_search
  3210  0D93  0738               	addwf	??_EEPROM_search,w
  3211  0D94  00B9               	movwf	??_EEPROM_search+1
  3212  0D95  0839               	movf	??_EEPROM_search+1,w
  3213  0D96  00BE               	movwf	EEPROM_search@tp
  3214  0D97                     l3123:	
  3215                           
  3216                           ;lectura.c: 8:     precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  3217  0D97  083E               	movf	EEPROM_search@tp,w
  3218  0D98  3E01               	addlw	1
  3219  0D99  120A  158A  2063  120A  158A  	fcall	_eeprom_read
  3220  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0DA0  00B8               	movwf	??_EEPROM_search
  3223  0DA1  01B9               	clrf	??_EEPROM_search+1
  3224  0DA2  083E               	movf	EEPROM_search@tp,w
  3225  0DA3  120A  158A  2063  120A  158A  	fcall	_eeprom_read
  3226  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0DAA  00BA               	movwf	??_EEPROM_search+2
  3229  0DAB  01BB               	clrf	??_EEPROM_search+3
  3230  0DAC  083A               	movf	??_EEPROM_search+2,w
  3231  0DAD  00BB               	movwf	??_EEPROM_search+3
  3232  0DAE  01BA               	clrf	??_EEPROM_search+2
  3233  0DAF  0838               	movf	??_EEPROM_search,w
  3234  0DB0  043A               	iorwf	??_EEPROM_search+2,w
  3235  0DB1  00BC               	movwf	EEPROM_search@precio
  3236  0DB2  0839               	movf	??_EEPROM_search+1,w
  3237  0DB3  043B               	iorwf	??_EEPROM_search+3,w
  3238  0DB4  00BD               	movwf	EEPROM_search@precio+1
  3239  0DB5                     l3125:	
  3240                           
  3241                           ;lectura.c: 10:     if( (precio < 0 || precio > 999) || verificarProd(tp/2)) {
  3242  0DB5  1BBD               	btfsc	EEPROM_search@precio+1,7
  3243  0DB6  2DB8               	goto	u3401
  3244  0DB7  2DB9               	goto	u3400
  3245  0DB8                     u3401:	
  3246  0DB8  2DE8               	goto	l3131
  3247  0DB9                     u3400:	
  3248  0DB9                     l3127:	
  3249  0DB9  083D               	movf	EEPROM_search@precio+1,w
  3250  0DBA  3A80               	xorlw	128
  3251  0DBB  00FF               	movwf	btemp+1
  3252  0DBC  3083               	movlw	131
  3253  0DBD  027F               	subwf	btemp+1,w
  3254  0DBE  1D03               	skipz
  3255  0DBF  2DC2               	goto	u3415
  3256  0DC0  30E8               	movlw	232
  3257  0DC1  023C               	subwf	EEPROM_search@precio,w
  3258  0DC2                     u3415:	
  3259  0DC2  1803               	skipnc
  3260  0DC3  2DC5               	goto	u3411
  3261  0DC4  2DC6               	goto	u3410
  3262  0DC5                     u3411:	
  3263  0DC5  2DE8               	goto	l3131
  3264  0DC6                     u3410:	
  3265  0DC6                     l3129:	
  3266  0DC6  3002               	movlw	2
  3267  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0DC9  00A0               	movwf	___awdiv@divisor
  3270  0DCA  3000               	movlw	0
  3271  0DCB  00A1               	movwf	___awdiv@divisor+1
  3272  0DCC  083E               	movf	EEPROM_search@tp,w
  3273  0DCD  00B8               	movwf	??_EEPROM_search
  3274  0DCE  01B9               	clrf	??_EEPROM_search+1
  3275  0DCF  0838               	movf	??_EEPROM_search,w
  3276  0DD0  00A2               	movwf	___awdiv@dividend
  3277  0DD1  0839               	movf	??_EEPROM_search+1,w
  3278  0DD2  00A3               	movwf	___awdiv@dividend+1
  3279  0DD3  120A  158A  2523  120A  158A  	fcall	___awdiv
  3280  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0DDA  0821               	movf	?___awdiv+1,w
  3283  0DDB  00AF               	movwf	verificarProd@tp+1
  3284  0DDC  0820               	movf	?___awdiv,w
  3285  0DDD  00AE               	movwf	verificarProd@tp
  3286  0DDE  120A  158A  245B  120A  158A  	fcall	_verificarProd
  3287  0DE3  3A00               	xorlw	0
  3288  0DE4  1903               	skipnz
  3289  0DE5  2DE7               	goto	u3421
  3290  0DE6  2DE8               	goto	u3420
  3291  0DE7                     u3421:	
  3292  0DE7  2DEE               	goto	l119
  3293  0DE8                     u3420:	
  3294  0DE8                     l3131:	
  3295                           
  3296                           ;lectura.c: 11:         precio = -1;
  3297  0DE8  30FF               	movlw	255
  3298  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0DEB  00BC               	movwf	EEPROM_search@precio
  3301  0DEC  30FF               	movlw	255
  3302  0DED  00BD               	movwf	EEPROM_search@precio+1
  3303  0DEE                     l119:	
  3304                           ;lectura.c: 12:     }
  3305                           
  3306                           
  3307                           ;lectura.c: 14:     return precio;
  3308  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0DF0  083D               	movf	EEPROM_search@precio+1,w
  3311  0DF1  00B7               	movwf	?_EEPROM_search+1
  3312  0DF2  083C               	movf	EEPROM_search@precio,w
  3313  0DF3  00B6               	movwf	?_EEPROM_search
  3314  0DF4                     l122:	
  3315  0DF4  0008               	return
  3316  0DF5                     __end_of_EEPROM_search:	
  3317                           
  3318                           	psect	text6
  3319  0C5B                     __ptext6:	
  3320 ;; *************** function _verificarProd *****************
  3321 ;; Defined at:
  3322 ;;		line 30 in file "manejoProductos.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  tp              2   14[BANK0 ] short 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  i               2   20[BANK0 ] short 
  3327 ;;  ret             1   19[BANK0 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      unsigned char 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       2       0       0       0
  3338 ;;      Locals:         0       3       0       0       0
  3339 ;;      Temps:          0       3       0       0       0
  3340 ;;      Totals:         0       8       0       0       0
  3341 ;;Total ram usage:        8 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    3
  3344 ;; This function calls:
  3345 ;;		_pow
  3346 ;; This function is called by:
  3347 ;;		_EEPROM_search
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _verificarProd
  3353  0C5B                     _verificarProd:	
  3354  0C5B                     l3017:	
  3355                           ;incstack = 0
  3356                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3357                           
  3358                           
  3359                           ;manejoProductos.c: 31:     char ret = 0;
  3360  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0C5D  01B3               	clrf	verificarProd@ret
  3363  0C5E                     l3019:	
  3364                           
  3365                           ;manejoProductos.c: 32:     for(short int i = 12; i>=0; i--) {
  3366  0C5E  300C               	movlw	12
  3367  0C5F  00B4               	movwf	verificarProd@i
  3368  0C60  3000               	movlw	0
  3369  0C61  00B5               	movwf	verificarProd@i+1
  3370  0C62                     l3025:	
  3371                           
  3372                           ;manejoProductos.c: 33:         if( tp >= 8*i) {
  3373  0C62  0835               	movf	verificarProd@i+1,w
  3374  0C63  00B1               	movwf	??_verificarProd+1
  3375  0C64  0834               	movf	verificarProd@i,w
  3376  0C65  00B0               	movwf	??_verificarProd
  3377  0C66  1003               	clrc
  3378  0C67  0DB0               	rlf	??_verificarProd,f
  3379  0C68  0DB1               	rlf	??_verificarProd+1,f
  3380  0C69  1003               	clrc
  3381  0C6A  0DB0               	rlf	??_verificarProd,f
  3382  0C6B  0DB1               	rlf	??_verificarProd+1,f
  3383  0C6C  1003               	clrc
  3384  0C6D  0DB0               	rlf	??_verificarProd,f
  3385  0C6E  0DB1               	rlf	??_verificarProd+1,f
  3386  0C6F  082F               	movf	verificarProd@tp+1,w
  3387  0C70  3A80               	xorlw	128
  3388  0C71  00B2               	movwf	??_verificarProd+2
  3389  0C72  0831               	movf	??_verificarProd+1,w
  3390  0C73  3A80               	xorlw	128
  3391  0C74  0232               	subwf	??_verificarProd+2,w
  3392  0C75  1D03               	skipz
  3393  0C76  2C79               	goto	u3275
  3394  0C77  0830               	movf	??_verificarProd,w
  3395  0C78  022E               	subwf	verificarProd@tp,w
  3396  0C79                     u3275:	
  3397  0C79  1C03               	skipc
  3398  0C7A  2C7C               	goto	u3271
  3399  0C7B  2C7D               	goto	u3270
  3400  0C7C                     u3271:	
  3401  0C7C  2CB1               	goto	l3035
  3402  0C7D                     u3270:	
  3403  0C7D                     l3027:	
  3404                           
  3405                           ;manejoProductos.c: 35:             tp = tp - 8*i;
  3406  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0C7F  0835               	movf	verificarProd@i+1,w
  3409  0C80  00B1               	movwf	??_verificarProd+1
  3410  0C81  0834               	movf	verificarProd@i,w
  3411  0C82  00B0               	movwf	??_verificarProd
  3412  0C83  1003               	clrc
  3413  0C84  0DB0               	rlf	??_verificarProd,f
  3414  0C85  0DB1               	rlf	??_verificarProd+1,f
  3415  0C86  1003               	clrc
  3416  0C87  0DB0               	rlf	??_verificarProd,f
  3417  0C88  0DB1               	rlf	??_verificarProd+1,f
  3418  0C89  1003               	clrc
  3419  0C8A  0DB0               	rlf	??_verificarProd,f
  3420  0C8B  0DB1               	rlf	??_verificarProd+1,f
  3421  0C8C  0830               	movf	??_verificarProd,w
  3422  0C8D  022E               	subwf	verificarProd@tp,w
  3423  0C8E  00AE               	movwf	verificarProd@tp
  3424  0C8F  0831               	movf	??_verificarProd+1,w
  3425  0C90  1C03               	skipc
  3426  0C91  0A31               	incf	??_verificarProd+1,w
  3427  0C92  022F               	subwf	verificarProd@tp+1,w
  3428  0C93  00AF               	movwf	verificarProd@tp+1
  3429  0C94                     l3029:	
  3430                           
  3431                           ;manejoProductos.c: 36:             if(prodIngresados[i] & pow(2,tp)) {
  3432  0C94  0834               	movf	verificarProd@i,w
  3433  0C95  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  3434  0C96  0084               	movwf	4
  3435  0C97  3002               	movlw	2
  3436  0C98  00A6               	movwf	pow@numero
  3437  0C99  3000               	movlw	0
  3438  0C9A  00A7               	movwf	pow@numero+1
  3439  0C9B  082F               	movf	verificarProd@tp+1,w
  3440  0C9C  00A9               	movwf	pow@potencia+1
  3441  0C9D  082E               	movf	verificarProd@tp,w
  3442  0C9E  00A8               	movwf	pow@potencia
  3443  0C9F  120A  158A  2135  120A  158A  	fcall	_pow
  3444  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0CA6  0826               	movf	?_pow,w
  3447  0CA7  1383               	bcf	3,7	;select IRP bank1
  3448  0CA8  0500               	andwf	0,w
  3449  0CA9  1903               	btfsc	3,2
  3450  0CAA  2CAC               	goto	u3281
  3451  0CAB  2CAD               	goto	u3280
  3452  0CAC                     u3281:	
  3453  0CAC  2CAF               	goto	l3033
  3454  0CAD                     u3280:	
  3455  0CAD                     l3031:	
  3456                           
  3457                           ;manejoProductos.c: 37:                 ret = 1;
  3458  0CAD  01B3               	clrf	verificarProd@ret
  3459  0CAE  0AB3               	incf	verificarProd@ret,f
  3460  0CAF                     l3033:	
  3461                           
  3462                           ;manejoProductos.c: 39:             i = 0;
  3463  0CAF  01B4               	clrf	verificarProd@i
  3464  0CB0  01B5               	clrf	verificarProd@i+1
  3465  0CB1                     l3035:	
  3466                           
  3467                           ;manejoProductos.c: 42:     }
  3468  0CB1  30FF               	movlw	255
  3469  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  3471  0CB4  07B4               	addwf	verificarProd@i,f
  3472  0CB5  1803               	skipnc
  3473  0CB6  0AB5               	incf	verificarProd@i+1,f
  3474  0CB7  30FF               	movlw	255
  3475  0CB8  07B5               	addwf	verificarProd@i+1,f
  3476  0CB9                     l3037:	
  3477  0CB9  1FB5               	btfss	verificarProd@i+1,7
  3478  0CBA  2CBC               	goto	u3291
  3479  0CBB  2CBD               	goto	u3290
  3480  0CBC                     u3291:	
  3481  0CBC  2C62               	goto	l3025
  3482  0CBD                     u3290:	
  3483  0CBD                     l3039:	
  3484                           
  3485                           ;manejoProductos.c: 44:     return ret;
  3486  0CBD  0833               	movf	verificarProd@ret,w
  3487  0CBE                     l376:	
  3488  0CBE  0008               	return
  3489  0CBF                     __end_of_verificarProd:	
  3490                           
  3491                           	psect	text7
  3492  0882                     __ptext7:	
  3493 ;; *************** function _lecturaComando *****************
  3494 ;; Defined at:
  3495 ;;		line 179 in file "lectura.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0
  3512 ;;      Totals:         0       0       0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    5
  3516 ;; This function calls:
  3517 ;;		_lecturaConsulta
  3518 ;;		_lecturaMas
  3519 ;;		_lecturaMenos
  3520 ;; This function is called by:
  3521 ;;		_accionesPuertoSerial
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _lecturaComando
  3527  0882                     _lecturaComando:	
  3528  0882                     l3237:	
  3529                           ;incstack = 0
  3530                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3531                           
  3532                           
  3533                           ;lectura.c: 180:     if(codigoEntrada[0] == '?') {
  3534  0882  303F               	movlw	63
  3535  0883  1683               	bsf	3,5	;RP0=1, select bank1
  3536  0884  1303               	bcf	3,6	;RP1=0, select bank1
  3537  0885  0660               	xorwf	_codigoEntrada^(0+128),w
  3538  0886  1D03               	btfss	3,2
  3539  0887  2889               	goto	u3611
  3540  0888  288A               	goto	u3610
  3541  0889                     u3611:	
  3542  0889  2890               	goto	l3241
  3543  088A                     u3610:	
  3544  088A                     l3239:	
  3545                           
  3546                           ;lectura.c: 181:         lecturaConsulta();
  3547  088A  120A  118A  26B7  120A  158A  	fcall	_lecturaConsulta
  3548                           
  3549                           ;lectura.c: 182:     }
  3550  088F  28A1               	goto	l196
  3551  0890                     l3241:	
  3552  0890  302B               	movlw	43
  3553  0891  0660               	xorwf	_codigoEntrada^(0+128),w
  3554  0892  1D03               	btfss	3,2
  3555  0893  2895               	goto	u3621
  3556  0894  2896               	goto	u3620
  3557  0895                     u3621:	
  3558  0895  289C               	goto	l3245
  3559  0896                     u3620:	
  3560  0896                     l3243:	
  3561                           
  3562                           ;lectura.c: 184:         lecturaMas();
  3563  0896  120A  158A  20C9  120A  158A  	fcall	_lecturaMas
  3564                           
  3565                           ;lectura.c: 185:     }
  3566  089B  28A1               	goto	l196
  3567  089C                     l3245:	
  3568                           
  3569                           ;lectura.c: 187:         lecturaMenos();
  3570  089C  120A  158A  2036  120A  158A  	fcall	_lecturaMenos
  3571  08A1                     l196:	
  3572  08A1  0008               	return
  3573  08A2                     __end_of_lecturaComando:	
  3574                           
  3575                           	psect	text8
  3576  0836                     __ptext8:	
  3577 ;; *************** function _lecturaMenos *****************
  3578 ;; Defined at:
  3579 ;;		line 110 in file "lectura.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    3
  3600 ;; This function calls:
  3601 ;;		_envioTX
  3602 ;; This function is called by:
  3603 ;;		_lecturaComando
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function _lecturaMenos
  3609  0836                     _lecturaMenos:	
  3610  0836                     l3167:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _lecturaMenos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3613                           
  3614                           
  3615                           ;lectura.c: 111:     if(codigoEntrada[1] == 'D') {
  3616  0836  3044               	movlw	68
  3617  0837  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0838  1303               	bcf	3,6	;RP1=0, select bank1
  3619  0839  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3620  083A  1D03               	btfss	3,2
  3621  083B  283D               	goto	u3481
  3622  083C  283E               	goto	u3480
  3623  083D                     u3481:	
  3624  083D  2840               	goto	l3171
  3625  083E                     u3480:	
  3626  083E                     l3169:	
  3627                           
  3628                           ;lectura.c: 112:         modoDebug = 0;
  3629  083E  01F2               	clrf	_modoDebug
  3630                           
  3631                           ;lectura.c: 114:     }
  3632  083F  284B               	goto	l165
  3633  0840                     l3171:	
  3634                           
  3635                           ;lectura.c: 116:         envioTX("Ocurrio un error en la interpretacion.\n");
  3636  0840  3026               	movlw	low (STR_6| (0+32768))
  3637  0841  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0842  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0843  00A0               	movwf	envioTX@mensaje
  3640  0844  3083               	movlw	high (STR_6| (0+32768))
  3641  0845  00A1               	movwf	envioTX@mensaje+1
  3642  0846  120A  158A  216F  120A  158A  	fcall	_envioTX
  3643  084B                     l165:	
  3644  084B  0008               	return
  3645  084C                     __end_of_lecturaMenos:	
  3646                           
  3647                           	psect	text9
  3648  08C9                     __ptext9:	
  3649 ;; *************** function _lecturaMas *****************
  3650 ;; Defined at:
  3651 ;;		line 95 in file "lectura.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         0       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0
  3668 ;;      Totals:         0       0       0       0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    4
  3672 ;; This function calls:
  3673 ;;		_agregarModificarPrecio
  3674 ;;		_cierreDeLote
  3675 ;;		_envioTX
  3676 ;;		_verificacionEntrada
  3677 ;; This function is called by:
  3678 ;;		_lecturaComando
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _lecturaMas
  3684  08C9                     _lecturaMas:	
  3685  08C9                     l3153:	
  3686                           ;incstack = 0
  3687                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3688                           
  3689                           
  3690                           ;lectura.c: 96:     if (codigoEntrada[1] == 'L') {
  3691  08C9  304C               	movlw	76
  3692  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  3693  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  3694  08CC  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3695  08CD  1D03               	btfss	3,2
  3696  08CE  28D0               	goto	u3451
  3697  08CF  28D1               	goto	u3450
  3698  08D0                     u3451:	
  3699  08D0  28D7               	goto	l3157
  3700  08D1                     u3450:	
  3701  08D1                     l3155:	
  3702                           
  3703                           ;lectura.c: 97:         cierreDeLote();
  3704  08D1  120A  158A  22AC  120A  158A  	fcall	_cierreDeLote
  3705                           
  3706                           ;lectura.c: 98:     }
  3707  08D6  28FD               	goto	l160
  3708  08D7                     l3157:	
  3709  08D7  120A  118A  22C7  120A  158A  	fcall	_verificacionEntrada
  3710  08DC  3A06               	xorlw	6
  3711  08DD  1D03               	skipz
  3712  08DE  28E0               	goto	u3461
  3713  08DF  28E1               	goto	u3460
  3714  08E0                     u3461:	
  3715  08E0  28E7               	goto	l3161
  3716  08E1                     u3460:	
  3717  08E1                     l3159:	
  3718                           
  3719                           ;lectura.c: 100:         agregarModificarPrecio();
  3720  08E1  120A  158A  272E  120A  158A  	fcall	_agregarModificarPrecio
  3721                           
  3722                           ;lectura.c: 101:     }
  3723  08E6  28FD               	goto	l160
  3724  08E7                     l3161:	
  3725  08E7  3044               	movlw	68
  3726  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  3727  08E9  1303               	bcf	3,6	;RP1=0, select bank1
  3728  08EA  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  3729  08EB  1D03               	btfss	3,2
  3730  08EC  28EE               	goto	u3471
  3731  08ED  28EF               	goto	u3470
  3732  08EE                     u3471:	
  3733  08EE  28F2               	goto	l3165
  3734  08EF                     u3470:	
  3735  08EF                     l3163:	
  3736                           
  3737                           ;lectura.c: 103:         modoDebug = 1;
  3738  08EF  01F2               	clrf	_modoDebug
  3739  08F0  0AF2               	incf	_modoDebug,f
  3740                           
  3741                           ;lectura.c: 104:     }
  3742  08F1  28FD               	goto	l160
  3743  08F2                     l3165:	
  3744                           
  3745                           ;lectura.c: 106:         envioTX("Ocurrio un error en la interpretacion.\n");
  3746  08F2  3026               	movlw	low (STR_6| (0+32768))
  3747  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  3748  08F4  1303               	bcf	3,6	;RP1=0, select bank0
  3749  08F5  00A0               	movwf	envioTX@mensaje
  3750  08F6  3083               	movlw	high (STR_6| (0+32768))
  3751  08F7  00A1               	movwf	envioTX@mensaje+1
  3752  08F8  120A  158A  216F  120A  158A  	fcall	_envioTX
  3753  08FD                     l160:	
  3754  08FD  0008               	return
  3755  08FE                     __end_of_lecturaMas:	
  3756                           
  3757                           	psect	text10
  3758  02C7                     __ptext10:	
  3759 ;; *************** function _verificacionEntrada *****************
  3760 ;; Defined at:
  3761 ;;		line 68 in file "lectura.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  i               1    2[BANK0 ] unsigned char 
  3766 ;;  ret             1    1[BANK0 ] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      unsigned char 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       0       0       0       0
  3777 ;;      Locals:         0       2       0       0       0
  3778 ;;      Temps:          0       1       0       0       0
  3779 ;;      Totals:         0       3       0       0       0
  3780 ;;Total ram usage:        3 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_lecturaMas
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _verificacionEntrada
  3792  02C7                     _verificacionEntrada:	
  3793  02C7                     l3043:	
  3794                           ;incstack = 0
  3795                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  3796                           
  3797                           
  3798                           ;lectura.c: 69:     char i = 1;
  3799  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  3800  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  3801  02C9  01A2               	clrf	verificacionEntrada@i
  3802  02CA  0AA2               	incf	verificacionEntrada@i,f
  3803  02CB                     l3045:	
  3804                           
  3805                           ;lectura.c: 70:     char ret = 0;
  3806  02CB  01A1               	clrf	verificacionEntrada@ret
  3807                           
  3808                           ;lectura.c: 71:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          (codigoEntrada[i] == '=' && i == 3)) && (i<=6) ) {
  3809  02CC  2AD5               	goto	l3049
  3810  02CD                     l3047:	
  3811                           
  3812                           ;lectura.c: 72:         i++;
  3813  02CD  3001               	movlw	1
  3814  02CE  00A0               	movwf	??_verificacionEntrada
  3815  02CF  0820               	movf	??_verificacionEntrada,w
  3816  02D0  07A2               	addwf	verificacionEntrada@i,f
  3817                           
  3818                           ;lectura.c: 73:         ret++;
  3819  02D1  3001               	movlw	1
  3820  02D2  00A0               	movwf	??_verificacionEntrada
  3821  02D3  0820               	movf	??_verificacionEntrada,w
  3822  02D4  07A1               	addwf	verificacionEntrada@ret,f
  3823  02D5                     l3049:	
  3824                           
  3825                           ;lectura.c: 71:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          (codigoEntrada[i] == '=' && i == 3)) && (i<=6) ) {
  3826  02D5  0822               	movf	verificacionEntrada@i,w
  3827  02D6  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3828  02D7  0084               	movwf	4
  3829  02D8  303A               	movlw	58
  3830  02D9  1383               	bcf	3,7	;select IRP bank1
  3831  02DA  0200               	subwf	0,w
  3832  02DB  1803               	skipnc
  3833  02DC  2ADE               	goto	u3301
  3834  02DD  2ADF               	goto	u3300
  3835  02DE                     u3301:	
  3836  02DE  2AE8               	goto	l3053
  3837  02DF                     u3300:	
  3838  02DF                     l3051:	
  3839  02DF  0822               	movf	verificacionEntrada@i,w
  3840  02E0  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3841  02E1  0084               	movwf	4
  3842  02E2  3030               	movlw	48
  3843  02E3  0200               	subwf	0,w
  3844  02E4  1803               	skipnc
  3845  02E5  2AE7               	goto	u3311
  3846  02E6  2AE8               	goto	u3310
  3847  02E7                     u3311:	
  3848  02E7  2AF7               	goto	l3057
  3849  02E8                     u3310:	
  3850  02E8                     l3053:	
  3851  02E8  0822               	movf	verificacionEntrada@i,w
  3852  02E9  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3853  02EA  0084               	movwf	4
  3854  02EB  303D               	movlw	61
  3855  02EC  0600               	xorwf	0,w
  3856  02ED  1D03               	btfss	3,2
  3857  02EE  2AF0               	goto	u3321
  3858  02EF  2AF1               	goto	u3320
  3859  02F0                     u3321:	
  3860  02F0  2AFD               	goto	l3059
  3861  02F1                     u3320:	
  3862  02F1                     l3055:	
  3863  02F1  3003               	movlw	3
  3864  02F2  0622               	xorwf	verificacionEntrada@i,w
  3865  02F3  1D03               	btfss	3,2
  3866  02F4  2AF6               	goto	u3331
  3867  02F5  2AF7               	goto	u3330
  3868  02F6                     u3331:	
  3869  02F6  2AFD               	goto	l3059
  3870  02F7                     u3330:	
  3871  02F7                     l3057:	
  3872  02F7  3007               	movlw	7
  3873  02F8  0222               	subwf	verificacionEntrada@i,w
  3874  02F9  1C03               	skipc
  3875  02FA  2AFC               	goto	u3341
  3876  02FB  2AFD               	goto	u3340
  3877  02FC                     u3341:	
  3878  02FC  2ACD               	goto	l3047
  3879  02FD                     u3340:	
  3880  02FD                     l3059:	
  3881                           
  3882                           ;lectura.c: 75:     return ret;
  3883  02FD  0821               	movf	verificacionEntrada@ret,w
  3884  02FE                     l146:	
  3885  02FE  0008               	return
  3886  02FF                     __end_of_verificacionEntrada:	
  3887                           
  3888                           	psect	text11
  3889  0AAC                     __ptext11:	
  3890 ;; *************** function _cierreDeLote *****************
  3891 ;; Defined at:
  3892 ;;		line 78 in file "lectura.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  strLote        32   46[BANK0 ] unsigned char [32]
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         0       0       0       0       0
  3907 ;;      Locals:         0      32       0       0       0
  3908 ;;      Temps:          0       4       0       0       0
  3909 ;;      Totals:         0      36       0       0       0
  3910 ;;Total ram usage:       36 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    3
  3913 ;; This function calls:
  3914 ;;		_envioTX
  3915 ;;		_sprintf
  3916 ;; This function is called by:
  3917 ;;		_lecturaMas
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           
  3922                           ;psect for function _cierreDeLote
  3923  0AAC                     _cierreDeLote:	
  3924  0AAC                     l3063:	
  3925                           ;incstack = 0
  3926                           ; Regs used in _cierreDeLote: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3927                           
  3928                           
  3929                           ;lectura.c: 80:     if (cierreLotePedido == 0) {
  3930  0AAC  1683               	bsf	3,5	;RP0=1, select bank3
  3931  0AAD  1703               	bsf	3,6	;RP1=1, select bank3
  3932  0AAE  0857               	movf	_cierreLotePedido^(0+384),w
  3933  0AAF  1D03               	btfss	3,2
  3934  0AB0  2AB2               	goto	u3351
  3935  0AB1  2AB3               	goto	u3350
  3936  0AB2                     u3351:	
  3937  0AB2  2AE8               	goto	l3067
  3938  0AB3                     u3350:	
  3939  0AB3                     l3065:	
  3940                           
  3941                           ;lectura.c: 81:         char strLote[32];;lectura.c: 83:         sprintf(strLote,"\nCier
      +                          re,L:%d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  3942  0AB3  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3943  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  3944  0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  3945  0AB6  00B4               	movwf	sprintf@sp
  3946  0AB7  3000               	movlw	0
  3947  0AB8  00B5               	movwf	sprintf@sp+1
  3948  0AB9  3080               	movlw	low (STR_5| (0+32768))
  3949  0ABA  00B6               	movwf	sprintf@f
  3950  0ABB  3083               	movlw	high (STR_5| (0+32768))
  3951  0ABC  00B7               	movwf	sprintf@f+1
  3952  0ABD  0878               	movf	_nroLote,w
  3953  0ABE  00CA               	movwf	??_cierreDeLote
  3954  0ABF  01CB               	clrf	??_cierreDeLote+1
  3955  0AC0  084A               	movf	??_cierreDeLote,w
  3956  0AC1  00B8               	movwf	?_sprintf+4
  3957  0AC2  084B               	movf	??_cierreDeLote+1,w
  3958  0AC3  00B9               	movwf	?_sprintf+5
  3959  0AC4  086E               	movf	_ventasLote,w
  3960  0AC5  00CC               	movwf	??_cierreDeLote+2
  3961  0AC6  01CD               	clrf	??_cierreDeLote+3
  3962  0AC7  084C               	movf	??_cierreDeLote+2,w
  3963  0AC8  00BA               	movwf	?_sprintf+6
  3964  0AC9  084D               	movf	??_cierreDeLote+3,w
  3965  0ACA  00BB               	movwf	?_sprintf+7
  3966  0ACB  1683               	bsf	3,5	;RP0=1, select bank1
  3967  0ACC  1303               	bcf	3,6	;RP1=0, select bank1
  3968  0ACD  085B               	movf	(_montosLote+1)^(0+128),w
  3969  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  3971  0AD0  00BD               	movwf	?_sprintf+9
  3972  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  3973  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  3974  0AD3  085A               	movf	_montosLote^(0+128),w
  3975  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0AD6  00BC               	movwf	?_sprintf+8
  3978  0AD7  120A  118A  2453  120A  158A  	fcall	_sprintf
  3979                           
  3980                           ;lectura.c: 84:         envioTX(strLote);
  3981  0ADC  304E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3982  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0ADF  00A0               	movwf	envioTX@mensaje
  3985  0AE0  3000               	movlw	0
  3986  0AE1  00A1               	movwf	envioTX@mensaje+1
  3987  0AE2  120A  158A  216F  120A  158A  	fcall	_envioTX
  3988                           
  3989                           ;lectura.c: 85:     }
  3990  0AE7  2AE9               	goto	l3069
  3991  0AE8                     l3067:	
  3992                           
  3993                           ;lectura.c: 87:         cierreLotePedido = 0;
  3994  0AE8  01D7               	clrf	_cierreLotePedido^(0+384)
  3995  0AE9                     l3069:	
  3996                           
  3997                           ;lectura.c: 90:     nroLote++;
  3998  0AE9  3001               	movlw	1
  3999  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  4000  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  4001  0AEC  00CA               	movwf	??_cierreDeLote
  4002  0AED  084A               	movf	??_cierreDeLote,w
  4003  0AEE  07F8               	addwf	_nroLote,f
  4004  0AEF                     l3071:	
  4005                           
  4006                           ;lectura.c: 91:     ventasLote=0;
  4007  0AEF  01EE               	clrf	_ventasLote
  4008  0AF0                     l3073:	
  4009                           
  4010                           ;lectura.c: 92:     montosLote=0;
  4011  0AF0  1683               	bsf	3,5	;RP0=1, select bank1
  4012  0AF1  1303               	bcf	3,6	;RP1=0, select bank1
  4013  0AF2  01DA               	clrf	_montosLote^(0+128)
  4014  0AF3  01DB               	clrf	(_montosLote+1)^(0+128)
  4015  0AF4                     l151:	
  4016  0AF4  0008               	return
  4017  0AF5                     __end_of_cierreDeLote:	
  4018                           
  4019                           	psect	text12
  4020  0F2E                     __ptext12:	
  4021 ;; *************** function _agregarModificarPrecio *****************
  4022 ;; Defined at:
  4023 ;;		line 61 in file "manejoProductos.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  mensaje        10   52[BANK0 ] unsigned char [10]
  4028 ;;  precio          2   64[BANK0 ] short 
  4029 ;;  upper_8bits     1   63[BANK0 ] unsigned char 
  4030 ;;  lower_8bits     1   62[BANK0 ] unsigned char 
  4031 ;;  tp              1   66[BANK0 ] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4041 ;;      Params:         0       0       0       0       0
  4042 ;;      Locals:         0      15       0       0       0
  4043 ;;      Temps:          0      10       0       0       0
  4044 ;;      Totals:         0      25       0       0       0
  4045 ;;Total ram usage:       25 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    3
  4048 ;; This function calls:
  4049 ;;		___awdiv
  4050 ;;		___bmul
  4051 ;;		___wmul
  4052 ;;		_eeprom_write
  4053 ;;		_envioTX
  4054 ;;		_sprintf
  4055 ;; This function is called by:
  4056 ;;		_lecturaMas
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _agregarModificarPrecio
  4062  0F2E                     _agregarModificarPrecio:	
  4063  0F2E                     l3075:	
  4064                           ;incstack = 0
  4065                           ; Regs used in _agregarModificarPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4066                           
  4067                           
  4068                           ;manejoProductos.c: 62:     unsigned char tp = 10*(codigoEntrada[1]-'0') + (codigoEntrad
      +                          a[2] - '0');
  4069  0F2E  300A               	movlw	10
  4070  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4071  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4072  0F31  00CA               	movwf	??_agregarModificarPrecio
  4073  0F32  084A               	movf	??_agregarModificarPrecio,w
  4074  0F33  00A0               	movwf	___bmul@multiplicand
  4075  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  4076  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  4077  0F36  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4078  0F37  120A  158A  204C  120A  158A  	fcall	___bmul
  4079  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  4080  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  4081  0F3E  0762               	addwf	(_codigoEntrada^(0+128)+2),w
  4082  0F3F  3EF0               	addlw	240
  4083  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0F42  00CB               	movwf	??_agregarModificarPrecio+1
  4086  0F43  084B               	movf	??_agregarModificarPrecio+1,w
  4087  0F44  00E2               	movwf	agregarModificarPrecio@tp
  4088  0F45                     l3077:	
  4089                           
  4090                           ;manejoProductos.c: 63:     if (tp > 0){
  4091  0F45  0862               	movf	agregarModificarPrecio@tp,w
  4092  0F46  1903               	btfsc	3,2
  4093  0F47  2F49               	goto	u3361
  4094  0F48  2F4A               	goto	u3360
  4095  0F49                     u3361:	
  4096  0F49  2FF6               	goto	l3095
  4097  0F4A                     u3360:	
  4098  0F4A                     l3079:	
  4099                           
  4100                           ;manejoProductos.c: 64:         char lower_8bits;;manejoProductos.c: 65:         char up
      +                          per_8bits;;manejoProductos.c: 66:         char mensaje[10];;manejoProductos.c: 67:      
      +                             tp--;
  4101  0F4A  3001               	movlw	1
  4102  0F4B  02E2               	subwf	agregarModificarPrecio@tp,f
  4103                           
  4104                           ;manejoProductos.c: 68:         tp = tp * 2;
  4105  0F4C  0862               	movf	agregarModificarPrecio@tp,w
  4106  0F4D  00CA               	movwf	??_agregarModificarPrecio
  4107  0F4E  074A               	addwf	??_agregarModificarPrecio,w
  4108  0F4F  00CB               	movwf	??_agregarModificarPrecio+1
  4109  0F50  084B               	movf	??_agregarModificarPrecio+1,w
  4110  0F51  00E2               	movwf	agregarModificarPrecio@tp
  4111  0F52                     l3081:	
  4112                           
  4113                           ;manejoProductos.c: 69:         short int precio;;manejoProductos.c: 72:         precio 
      +                          = 100 * (codigoEntrada[4] - '0')+ 10 * (codigoEntrada[5] - '0') + (codigoEntrada[6] - '0
      +                          ');
  4114  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  4115  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  4116  0F54  0864               	movf	(_codigoEntrada^(0+128)+4),w
  4117  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0F57  00CA               	movwf	??_agregarModificarPrecio
  4120  0F58  01CB               	clrf	??_agregarModificarPrecio+1
  4121  0F59  084A               	movf	??_agregarModificarPrecio,w
  4122  0F5A  00A0               	movwf	___wmul@multiplier
  4123  0F5B  084B               	movf	??_agregarModificarPrecio+1,w
  4124  0F5C  00A1               	movwf	___wmul@multiplier+1
  4125  0F5D  3064               	movlw	100
  4126  0F5E  00A2               	movwf	___wmul@multiplicand
  4127  0F5F  3000               	movlw	0
  4128  0F60  00A3               	movwf	___wmul@multiplicand+1
  4129  0F61  120A  158A  20A2  120A  158A  	fcall	___wmul
  4130  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4132  0F68  0820               	movf	?___wmul,w
  4133  0F69  00CC               	movwf	??_agregarModificarPrecio+2
  4134  0F6A  0821               	movf	?___wmul+1,w
  4135  0F6B  00CD               	movwf	??_agregarModificarPrecio+3
  4136  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  4137  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  4138  0F6E  0865               	movf	(_codigoEntrada^(0+128)+5),w
  4139  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4140  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  4141  0F71  00CE               	movwf	??_agregarModificarPrecio+4
  4142  0F72  01CF               	clrf	??_agregarModificarPrecio+5
  4143  0F73  084E               	movf	??_agregarModificarPrecio+4,w
  4144  0F74  00A0               	movwf	___wmul@multiplier
  4145  0F75  084F               	movf	??_agregarModificarPrecio+5,w
  4146  0F76  00A1               	movwf	___wmul@multiplier+1
  4147  0F77  300A               	movlw	10
  4148  0F78  00A2               	movwf	___wmul@multiplicand
  4149  0F79  3000               	movlw	0
  4150  0F7A  00A3               	movwf	___wmul@multiplicand+1
  4151  0F7B  120A  158A  20A2  120A  158A  	fcall	___wmul
  4152  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0F82  0820               	movf	?___wmul,w
  4155  0F83  074C               	addwf	??_agregarModificarPrecio+2,w
  4156  0F84  00D0               	movwf	??_agregarModificarPrecio+6
  4157  0F85  0821               	movf	?___wmul+1,w
  4158  0F86  1803               	skipnc
  4159  0F87  0A21               	incf	?___wmul+1,w
  4160  0F88  074D               	addwf	??_agregarModificarPrecio+3,w
  4161  0F89  00D1               	movwf	??_agregarModificarPrecio+7
  4162  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  4163  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  4164  0F8C  0866               	movf	(_codigoEntrada^(0+128)+6),w
  4165  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4166  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4167  0F8F  0750               	addwf	??_agregarModificarPrecio+6,w
  4168  0F90  00D2               	movwf	??_agregarModificarPrecio+8
  4169  0F91  3000               	movlw	0
  4170  0F92  1803               	skipnc
  4171  0F93  3001               	movlw	1
  4172  0F94  0751               	addwf	??_agregarModificarPrecio+7,w
  4173  0F95  00D3               	movwf	??_agregarModificarPrecio+9
  4174  0F96  0852               	movf	??_agregarModificarPrecio+8,w
  4175  0F97  3E30               	addlw	48
  4176  0F98  00E0               	movwf	agregarModificarPrecio@precio
  4177  0F99  0853               	movf	??_agregarModificarPrecio+9,w
  4178  0F9A  1803               	skipnc
  4179  0F9B  3E01               	addlw	1
  4180  0F9C  3EEB               	addlw	235
  4181  0F9D  00E1               	movwf	agregarModificarPrecio@precio+1
  4182  0F9E                     l3083:	
  4183                           
  4184                           ;manejoProductos.c: 73:         lower_8bits = precio & 0xff;
  4185  0F9E  0860               	movf	agregarModificarPrecio@precio,w
  4186  0F9F  00CA               	movwf	??_agregarModificarPrecio
  4187  0FA0  084A               	movf	??_agregarModificarPrecio,w
  4188  0FA1  00DE               	movwf	agregarModificarPrecio@lower_8bits
  4189  0FA2                     l3085:	
  4190                           
  4191                           ;manejoProductos.c: 74:         upper_8bits = (precio >> 8) & 0xff;
  4192  0FA2  0861               	movf	agregarModificarPrecio@precio+1,w
  4193  0FA3  00CA               	movwf	??_agregarModificarPrecio
  4194  0FA4  084A               	movf	??_agregarModificarPrecio,w
  4195  0FA5  00DF               	movwf	agregarModificarPrecio@upper_8bits
  4196  0FA6                     l3087:	
  4197                           
  4198                           ;manejoProductos.c: 75:         eeprom_write(tp ,upper_8bits);
  4199  0FA6  085F               	movf	agregarModificarPrecio@upper_8bits,w
  4200  0FA7  00CA               	movwf	??_agregarModificarPrecio
  4201  0FA8  084A               	movf	??_agregarModificarPrecio,w
  4202  0FA9  00A0               	movwf	eeprom_write@value
  4203  0FAA  0862               	movf	agregarModificarPrecio@tp,w
  4204  0FAB  120A  158A  20FE  120A  158A  	fcall	_eeprom_write
  4205  0FB0                     l3089:	
  4206                           
  4207                           ;manejoProductos.c: 76:         eeprom_write(tp + 1,lower_8bits);
  4208  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0FB2  085E               	movf	agregarModificarPrecio@lower_8bits,w
  4211  0FB3  00CA               	movwf	??_agregarModificarPrecio
  4212  0FB4  084A               	movf	??_agregarModificarPrecio,w
  4213  0FB5  00A0               	movwf	eeprom_write@value
  4214  0FB6  0862               	movf	agregarModificarPrecio@tp,w
  4215  0FB7  3E01               	addlw	1
  4216  0FB8  120A  158A  20FE  120A  158A  	fcall	_eeprom_write
  4217  0FBD                     l3091:	
  4218                           
  4219                           ;manejoProductos.c: 77:         sprintf(mensaje, "\nP%d=%d\n", tp/2 + 1, precio);
  4220  0FBD  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4221  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  4223  0FC0  00B4               	movwf	sprintf@sp
  4224  0FC1  3000               	movlw	0
  4225  0FC2  00B5               	movwf	sprintf@sp+1
  4226  0FC3  303E               	movlw	low (STR_17| (0+32768))
  4227  0FC4  00B6               	movwf	sprintf@f
  4228  0FC5  3084               	movlw	high (STR_17| (0+32768))
  4229  0FC6  00B7               	movwf	sprintf@f+1
  4230  0FC7  3002               	movlw	2
  4231  0FC8  00A0               	movwf	___awdiv@divisor
  4232  0FC9  3000               	movlw	0
  4233  0FCA  00A1               	movwf	___awdiv@divisor+1
  4234  0FCB  0862               	movf	agregarModificarPrecio@tp,w
  4235  0FCC  00CA               	movwf	??_agregarModificarPrecio
  4236  0FCD  01CB               	clrf	??_agregarModificarPrecio+1
  4237  0FCE  084A               	movf	??_agregarModificarPrecio,w
  4238  0FCF  00A2               	movwf	___awdiv@dividend
  4239  0FD0  084B               	movf	??_agregarModificarPrecio+1,w
  4240  0FD1  00A3               	movwf	___awdiv@dividend+1
  4241  0FD2  120A  158A  2523  120A  158A  	fcall	___awdiv
  4242  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0FD9  0820               	movf	?___awdiv,w
  4245  0FDA  3E01               	addlw	1
  4246  0FDB  00B8               	movwf	?_sprintf+4
  4247  0FDC  0821               	movf	?___awdiv+1,w
  4248  0FDD  1803               	skipnc
  4249  0FDE  3E01               	addlw	1
  4250  0FDF  3E00               	addlw	0
  4251  0FE0  00B9               	movwf	?_sprintf+5
  4252  0FE1  0861               	movf	agregarModificarPrecio@precio+1,w
  4253  0FE2  00BB               	movwf	?_sprintf+7
  4254  0FE3  0860               	movf	agregarModificarPrecio@precio,w
  4255  0FE4  00BA               	movwf	?_sprintf+6
  4256  0FE5  120A  118A  2453  120A  158A  	fcall	_sprintf
  4257  0FEA                     l3093:	
  4258                           
  4259                           ;manejoProductos.c: 78:         envioTX(mensaje);
  4260  0FEA  3054               	movlw	(low (agregarModificarPrecio@mensaje| 0))& (0+255)
  4261  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  4263  0FED  00A0               	movwf	envioTX@mensaje
  4264  0FEE  3000               	movlw	0
  4265  0FEF  00A1               	movwf	envioTX@mensaje+1
  4266  0FF0  120A  158A  216F  120A  158A  	fcall	_envioTX
  4267                           
  4268                           ;manejoProductos.c: 79:     }
  4269  0FF5  2FFF               	goto	l387
  4270  0FF6                     l3095:	
  4271                           
  4272                           ;manejoProductos.c: 81:         envioTX("No hay producto 00");
  4273  0FF6  30EC               	movlw	low (STR_18| (0+32768))
  4274  0FF7  00A0               	movwf	envioTX@mensaje
  4275  0FF8  3083               	movlw	high (STR_18| (0+32768))
  4276  0FF9  00A1               	movwf	envioTX@mensaje+1
  4277  0FFA  120A  158A  216F  120A  158A  	fcall	_envioTX
  4278  0FFF                     l387:	
  4279  0FFF  0008               	return
  4280  1000                     __end_of_agregarModificarPrecio:	
  4281                           
  4282                           	psect	text13
  4283  08FE                     __ptext13:	
  4284 ;; *************** function _eeprom_write *****************
  4285 ;; Defined at:
  4286 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  addr            1    wreg     unsigned char 
  4289 ;;  value           1    0[BANK0 ] unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  addr            1    2[BANK0 ] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       1       0       0       0
  4302 ;;      Locals:         0       1       0       0       0
  4303 ;;      Temps:          0       1       0       0       0
  4304 ;;      Totals:         0       3       0       0       0
  4305 ;;Total ram usage:        3 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    1
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_escrituraDeCierre
  4312 ;;		_agregarModificarPrecio
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _eeprom_write
  4318  08FE                     _eeprom_write:	
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4322                           ;eeprom_write@addr stored from wreg
  4323  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  4324  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  4325  0900  00A2               	movwf	eeprom_write@addr
  4326  0901                     l537:	
  4327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.10
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  4328                           
  4329  0901                     l538:	
  4330  0901  1683               	bsf	3,5	;RP0=1, select bank3
  4331  0902  1703               	bsf	3,6	;RP1=1, select bank3
  4332  0903  188C               	btfsc	12,1	;volsfr
  4333  0904  2906               	goto	u3001
  4334  0905  2907               	goto	u3000
  4335  0906                     u3001:	
  4336  0906  2901               	goto	l538
  4337  0907                     u3000:	
  4338  0907                     l2881:	
  4339  0907  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0908  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0909  0822               	movf	eeprom_write@addr,w
  4342  090A  1283               	bcf	3,5	;RP0=0, select bank2
  4343  090B  1703               	bsf	3,6	;RP1=1, select bank2
  4344  090C  008D               	movwf	13	;volatile
  4345  090D  1283               	bcf	3,5	;RP0=0, select bank0
  4346  090E  1303               	bcf	3,6	;RP1=0, select bank0
  4347  090F  0820               	movf	eeprom_write@value,w
  4348  0910  1283               	bcf	3,5	;RP0=0, select bank2
  4349  0911  1703               	bsf	3,6	;RP1=1, select bank2
  4350  0912  008C               	movwf	12	;volatile
  4351  0913                     l2883:	
  4352  0913  303F               	movlw	63
  4353  0914  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0915  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0916  00A1               	movwf	??_eeprom_write
  4356  0917  0821               	movf	??_eeprom_write,w
  4357  0918  1683               	bsf	3,5	;RP0=1, select bank3
  4358  0919  1703               	bsf	3,6	;RP1=1, select bank3
  4359  091A  058C               	andwf	12,f	;volsfr
  4360  091B                     l2885:	
  4361  091B  1283               	bcf	3,5	;RP0=0, select bank0
  4362  091C  1303               	bcf	3,6	;RP1=0, select bank0
  4363  091D  1003               	bcf	3,0	;volatile
  4364  091E                     l2887:	
  4365  091E  1F8B               	btfss	11,7	;volatile
  4366  091F  2921               	goto	u3011
  4367  0920  2922               	goto	u3010
  4368  0921                     u3011:	
  4369  0921  2923               	goto	l541
  4370  0922                     u3010:	
  4371  0922                     l2889:	
  4372  0922  1403               	bsf	3,0	;volatile
  4373  0923                     l541:	
  4374  0923  138B               	bcf	11,7	;volatile
  4375  0924  1683               	bsf	3,5	;RP0=1, select bank3
  4376  0925  1703               	bsf	3,6	;RP1=1, select bank3
  4377  0926  150C               	bsf	12,2	;volsfr
  4378  0927                     l2891:	
  4379  0927  3055               	movlw	85
  4380  0928  008D               	movwf	13	;volsfr
  4381  0929  30AA               	movlw	170
  4382  092A  008D               	movwf	13	;volsfr
  4383  092B                     l2893:	
  4384  092B  148C               	bsf	12,1	;volsfr
  4385  092C                     l2895:	
  4386  092C  110C               	bcf	12,2	;volsfr
  4387  092D                     l2897:	
  4388  092D  1283               	bcf	3,5	;RP0=0, select bank0
  4389  092E  1303               	bcf	3,6	;RP1=0, select bank0
  4390  092F  1C03               	btfss	3,0	;volatile
  4391  0930  2932               	goto	u3021
  4392  0931  2933               	goto	u3020
  4393  0932                     u3021:	
  4394  0932  2934               	goto	l544
  4395  0933                     u3020:	
  4396  0933                     l2899:	
  4397  0933  178B               	bsf	11,7	;volatile
  4398  0934                     l544:	
  4399  0934  0008               	return
  4400  0935                     __end_of_eeprom_write:	
  4401                           
  4402                           	psect	text14
  4403  084C                     __ptext14:	
  4404 ;; *************** function ___bmul *****************
  4405 ;; Defined at:
  4406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  multiplier      1    wreg     unsigned char 
  4409 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4412 ;;  product         1    2[BANK0 ] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      unsigned char 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       1       0       0       0
  4423 ;;      Locals:         0       2       0       0       0
  4424 ;;      Temps:          0       1       0       0       0
  4425 ;;      Totals:         0       4       0       0       0
  4426 ;;Total ram usage:        4 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_lecturaEtiqueta
  4433 ;;		_agregarModificarPrecio
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function ___bmul
  4439  084C                     ___bmul:	
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4443                           ;___bmul@multiplier stored from wreg
  4444  084C  1283               	bcf	3,5	;RP0=0, select bank0
  4445  084D  1303               	bcf	3,6	;RP1=0, select bank0
  4446  084E  00A3               	movwf	___bmul@multiplier
  4447  084F                     l2921:	
  4448  084F  01A2               	clrf	___bmul@product
  4449  0850                     l2923:	
  4450  0850  1C23               	btfss	___bmul@multiplier,0
  4451  0851  2853               	goto	u3061
  4452  0852  2854               	goto	u3060
  4453  0853                     u3061:	
  4454  0853  2858               	goto	l2927
  4455  0854                     u3060:	
  4456  0854                     l2925:	
  4457  0854  0820               	movf	___bmul@multiplicand,w
  4458  0855  00A1               	movwf	??___bmul
  4459  0856  0821               	movf	??___bmul,w
  4460  0857  07A2               	addwf	___bmul@product,f
  4461  0858                     l2927:	
  4462  0858  1003               	clrc
  4463  0859  0DA0               	rlf	___bmul@multiplicand,f
  4464  085A                     l2929:	
  4465  085A  1003               	clrc
  4466  085B  0CA3               	rrf	___bmul@multiplier,f
  4467  085C  0823               	movf	___bmul@multiplier,w
  4468  085D  1D03               	btfss	3,2
  4469  085E  2860               	goto	u3071
  4470  085F  2861               	goto	u3070
  4471  0860                     u3071:	
  4472  0860  2850               	goto	l2923
  4473  0861                     u3070:	
  4474  0861                     l2931:	
  4475  0861  0822               	movf	___bmul@product,w
  4476  0862                     l607:	
  4477  0862  0008               	return
  4478  0863                     __end_of___bmul:	
  4479                           
  4480                           	psect	text15
  4481  06B7                     __ptext15:	
  4482 ;; *************** function _lecturaConsulta *****************
  4483 ;; Defined at:
  4484 ;;		line 142 in file "lectura.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  articulo        2   36[BANK1 ] unsigned short 
  4489 ;;  strLote        32    4[BANK1 ] unsigned char [32]
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      void 
  4492 ;; Registers used:
  4493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4499 ;;      Params:         0       0       0       0       0
  4500 ;;      Locals:         0       0      34       0       0
  4501 ;;      Temps:          0       0       4       0       0
  4502 ;;      Totals:         0       0      38       0       0
  4503 ;;Total ram usage:       38 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    4
  4506 ;; This function calls:
  4507 ;;		___wmul
  4508 ;;		_consultaPrecio
  4509 ;;		_envioTX
  4510 ;;		_sprintf
  4511 ;; This function is called by:
  4512 ;;		_lecturaComando
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function _lecturaConsulta
  4518  06B7                     _lecturaConsulta:	
  4519  06B7                     l3173:	
  4520                           ;incstack = 0
  4521                           ; Regs used in _lecturaConsulta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4522                           
  4523                           
  4524                           ;lectura.c: 144:     if (codigoEntrada[1] == 0x0D || codigoEntrada[1] == 0x0A) {
  4525  06B7  300D               	movlw	13
  4526  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  4527  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  4528  06BA  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4529  06BB  1903               	btfsc	3,2
  4530  06BC  2EBE               	goto	u3491
  4531  06BD  2EBF               	goto	u3490
  4532  06BE                     u3491:	
  4533  06BE  2EC5               	goto	l3177
  4534  06BF                     u3490:	
  4535  06BF                     l3175:	
  4536  06BF  300A               	movlw	10
  4537  06C0  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4538  06C1  1D03               	btfss	3,2
  4539  06C2  2EC4               	goto	u3501
  4540  06C3  2EC5               	goto	u3500
  4541  06C4                     u3501:	
  4542  06C4  2EE3               	goto	l3183
  4543  06C5                     u3500:	
  4544  06C5                     l3177:	
  4545                           
  4546                           ;lectura.c: 146:         if (cuenta != 0) {
  4547  06C5  0870               	movf	_cuenta,w
  4548  06C6  0471               	iorwf	_cuenta+1,w
  4549  06C7  1903               	btfsc	3,2
  4550  06C8  2ECA               	goto	u3511
  4551  06C9  2ECB               	goto	u3510
  4552  06CA                     u3511:	
  4553  06CA  2ED7               	goto	l3181
  4554  06CB                     u3510:	
  4555  06CB                     l3179:	
  4556                           
  4557                           ;lectura.c: 147:             envioTX("\nEstado: Activo\n");
  4558  06CB  3012               	movlw	low (STR_11| (0+32768))
  4559  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  4560  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  4561  06CE  00A0               	movwf	envioTX@mensaje
  4562  06CF  3084               	movlw	high (STR_11| (0+32768))
  4563  06D0  00A1               	movwf	envioTX@mensaje+1
  4564  06D1  120A  158A  216F  120A  118A  	fcall	_envioTX
  4565                           
  4566                           ;lectura.c: 148:         }
  4567  06D6  2F9C               	goto	l189
  4568  06D7                     l3181:	
  4569                           
  4570                           ;lectura.c: 150:             envioTX("\nEstado: En espera\n");
  4571  06D7  30C4               	movlw	low (STR_12| (0+32768))
  4572  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4573  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4574  06DA  00A0               	movwf	envioTX@mensaje
  4575  06DB  3083               	movlw	high (STR_12| (0+32768))
  4576  06DC  00A1               	movwf	envioTX@mensaje+1
  4577  06DD  120A  158A  216F  120A  118A  	fcall	_envioTX
  4578  06E2  2F9C               	goto	l189
  4579  06E3                     l3183:	
  4580  06E3  304C               	movlw	76
  4581  06E4  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4582  06E5  1D03               	btfss	3,2
  4583  06E6  2EE8               	goto	u3521
  4584  06E7  2EE9               	goto	u3520
  4585  06E8                     u3521:	
  4586  06E8  2F2E               	goto	l3187
  4587  06E9                     u3520:	
  4588  06E9                     l3185:	
  4589                           
  4590                           ;lectura.c: 154:         char strLote[32];;lectura.c: 156:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  4591  06E9  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4592  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  4593  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  4594  06EC  00B4               	movwf	sprintf@sp
  4595  06ED  3000               	movlw	0
  4596  06EE  00B5               	movwf	sprintf@sp+1
  4597  06EF  3023               	movlw	low (STR_1| (0+32768))
  4598  06F0  00B6               	movwf	sprintf@f
  4599  06F1  3084               	movlw	high (STR_1| (0+32768))
  4600  06F2  00B7               	movwf	sprintf@f+1
  4601  06F3  0878               	movf	_nroLote,w
  4602  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  4603  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  4604  06F6  00A0               	movwf	??_lecturaConsulta^(0+128)
  4605  06F7  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4606  06F8  0820               	movf	??_lecturaConsulta^(0+128),w
  4607  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  4608  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  4609  06FB  00B8               	movwf	?_sprintf+4
  4610  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  4611  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  4612  06FE  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4613  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0700  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0701  00B9               	movwf	?_sprintf+5
  4616  0702  086E               	movf	_ventasLote,w
  4617  0703  1683               	bsf	3,5	;RP0=1, select bank1
  4618  0704  1303               	bcf	3,6	;RP1=0, select bank1
  4619  0705  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4620  0706  01A3               	clrf	((??_lecturaConsulta+2)^(0+128)+1)
  4621  0707  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4622  0708  1283               	bcf	3,5	;RP0=0, select bank0
  4623  0709  1303               	bcf	3,6	;RP1=0, select bank0
  4624  070A  00BA               	movwf	?_sprintf+6
  4625  070B  1683               	bsf	3,5	;RP0=1, select bank1
  4626  070C  1303               	bcf	3,6	;RP1=0, select bank1
  4627  070D  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4628  070E  1283               	bcf	3,5	;RP0=0, select bank0
  4629  070F  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0710  00BB               	movwf	?_sprintf+7
  4631  0711  1683               	bsf	3,5	;RP0=1, select bank1
  4632  0712  1303               	bcf	3,6	;RP1=0, select bank1
  4633  0713  085B               	movf	(_montosLote+1)^(0+128),w
  4634  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4635  0715  1303               	bcf	3,6	;RP1=0, select bank0
  4636  0716  00BD               	movwf	?_sprintf+9
  4637  0717  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0718  1303               	bcf	3,6	;RP1=0, select bank1
  4639  0719  085A               	movf	_montosLote^(0+128),w
  4640  071A  1283               	bcf	3,5	;RP0=0, select bank0
  4641  071B  1303               	bcf	3,6	;RP1=0, select bank0
  4642  071C  00BC               	movwf	?_sprintf+8
  4643  071D  120A  118A  2453  120A  118A  	fcall	_sprintf
  4644                           
  4645                           ;lectura.c: 157:         envioTX(strLote);
  4646  0722  30A4               	movlw	(low (lecturaConsulta@strLote| 0))& (0+255)
  4647  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0724  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0725  00A0               	movwf	envioTX@mensaje
  4650  0726  3000               	movlw	0
  4651  0727  00A1               	movwf	envioTX@mensaje+1
  4652  0728  120A  158A  216F  120A  118A  	fcall	_envioTX
  4653                           
  4654                           ;lectura.c: 159:     }
  4655  072D  2F9C               	goto	l189
  4656  072E                     l3187:	
  4657  072E  3056               	movlw	86
  4658  072F  0661               	xorwf	(_codigoEntrada^(0+128)+1),w
  4659  0730  1D03               	btfss	3,2
  4660  0731  2F33               	goto	u3531
  4661  0732  2F34               	goto	u3530
  4662  0733                     u3531:	
  4663  0733  2F39               	goto	l3191
  4664  0734                     u3530:	
  4665  0734                     l3189:	
  4666                           
  4667                           ;lectura.c: 162:         pedidoVoltaje = 1;
  4668  0734  1683               	bsf	3,5	;RP0=1, select bank3
  4669  0735  1703               	bsf	3,6	;RP1=1, select bank3
  4670  0736  01D6               	clrf	_pedidoVoltaje^(0+384)
  4671  0737  0AD6               	incf	_pedidoVoltaje^(0+384),f
  4672                           
  4673                           ;lectura.c: 163:     }
  4674  0738  2F9C               	goto	l189
  4675  0739                     l3191:	
  4676  0739  303A               	movlw	58
  4677  073A  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4678  073B  1803               	skipnc
  4679  073C  2F3E               	goto	u3541
  4680  073D  2F3F               	goto	u3540
  4681  073E                     u3541:	
  4682  073E  2F91               	goto	l3203
  4683  073F                     u3540:	
  4684  073F                     l3193:	
  4685  073F  3030               	movlw	48
  4686  0740  0261               	subwf	(_codigoEntrada^(0+128)+1),w
  4687  0741  1C03               	skipc
  4688  0742  2F44               	goto	u3551
  4689  0743  2F45               	goto	u3550
  4690  0744                     u3551:	
  4691  0744  2F91               	goto	l3203
  4692  0745                     u3550:	
  4693  0745                     l3195:	
  4694  0745  303A               	movlw	58
  4695  0746  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4696  0747  1803               	skipnc
  4697  0748  2F4A               	goto	u3561
  4698  0749  2F4B               	goto	u3560
  4699  074A                     u3561:	
  4700  074A  2F91               	goto	l3203
  4701  074B                     u3560:	
  4702  074B                     l3197:	
  4703  074B  3030               	movlw	48
  4704  074C  0262               	subwf	(_codigoEntrada^(0+128)+2),w
  4705  074D  1C03               	skipc
  4706  074E  2F50               	goto	u3571
  4707  074F  2F51               	goto	u3570
  4708  0750                     u3571:	
  4709  0750  2F91               	goto	l3203
  4710  0751                     u3570:	
  4711  0751                     l3199:	
  4712                           
  4713                           ;lectura.c: 167:         unsigned short int articulo = 10*(codigoEntrada[1] - '0') + (co
      +                          digoEntrada[2] - '0');
  4714  0751  0861               	movf	(_codigoEntrada^(0+128)+1),w
  4715  0752  00A0               	movwf	??_lecturaConsulta^(0+128)
  4716  0753  01A1               	clrf	(??_lecturaConsulta^(0+128)+1)
  4717  0754  0820               	movf	??_lecturaConsulta^(0+128),w
  4718  0755  1283               	bcf	3,5	;RP0=0, select bank0
  4719  0756  1303               	bcf	3,6	;RP1=0, select bank0
  4720  0757  00A0               	movwf	___wmul@multiplier
  4721  0758  1683               	bsf	3,5	;RP0=1, select bank1
  4722  0759  1303               	bcf	3,6	;RP1=0, select bank1
  4723  075A  0821               	movf	(??_lecturaConsulta+1)^(0+128),w
  4724  075B  1283               	bcf	3,5	;RP0=0, select bank0
  4725  075C  1303               	bcf	3,6	;RP1=0, select bank0
  4726  075D  00A1               	movwf	___wmul@multiplier+1
  4727  075E  300A               	movlw	10
  4728  075F  00A2               	movwf	___wmul@multiplicand
  4729  0760  3000               	movlw	0
  4730  0761  00A3               	movwf	___wmul@multiplicand+1
  4731  0762  120A  158A  20A2  120A  118A  	fcall	___wmul
  4732  0767  1683               	bsf	3,5	;RP0=1, select bank1
  4733  0768  1303               	bcf	3,6	;RP1=0, select bank1
  4734  0769  0862               	movf	(_codigoEntrada^(0+128)+2),w
  4735  076A  1283               	bcf	3,5	;RP0=0, select bank0
  4736  076B  1303               	bcf	3,6	;RP1=0, select bank0
  4737  076C  0720               	addwf	?___wmul,w
  4738  076D  1683               	bsf	3,5	;RP0=1, select bank1
  4739  076E  1303               	bcf	3,6	;RP1=0, select bank1
  4740  076F  00A2               	movwf	(??_lecturaConsulta+2)^(0+128)
  4741  0770  3000               	movlw	0
  4742  0771  1803               	skipnc
  4743  0772  3001               	movlw	1
  4744  0773  1283               	bcf	3,5	;RP0=0, select bank0
  4745  0774  1303               	bcf	3,6	;RP1=0, select bank0
  4746  0775  0721               	addwf	?___wmul+1,w
  4747  0776  1683               	bsf	3,5	;RP0=1, select bank1
  4748  0777  1303               	bcf	3,6	;RP1=0, select bank1
  4749  0778  00A3               	movwf	(??_lecturaConsulta+3)^(0+128)
  4750  0779  0822               	movf	(??_lecturaConsulta+2)^(0+128),w
  4751  077A  3EF0               	addlw	240
  4752  077B  00C4               	movwf	lecturaConsulta@articulo^(0+128)
  4753  077C  0823               	movf	(??_lecturaConsulta+3)^(0+128),w
  4754  077D  1803               	skipnc
  4755  077E  3E01               	addlw	1
  4756  077F  3EFD               	addlw	253
  4757  0780  00C5               	movwf	(lecturaConsulta@articulo+1)^(0+128)
  4758  0781                     l3201:	
  4759                           
  4760                           ;lectura.c: 169:         consultaPrecio(articulo);
  4761  0781  0845               	movf	(lecturaConsulta@articulo+1)^(0+128),w
  4762  0782  1283               	bcf	3,5	;RP0=0, select bank0
  4763  0783  1303               	bcf	3,6	;RP1=0, select bank0
  4764  0784  00CB               	movwf	consultaPrecio@articulo+1
  4765  0785  1683               	bsf	3,5	;RP0=1, select bank1
  4766  0786  1303               	bcf	3,6	;RP1=0, select bank1
  4767  0787  0844               	movf	lecturaConsulta@articulo^(0+128),w
  4768  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4769  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4770  078A  00CA               	movwf	consultaPrecio@articulo
  4771  078B  120A  158A  2664  120A  118A  	fcall	_consultaPrecio
  4772                           
  4773                           ;lectura.c: 171:     }
  4774  0790  2F9C               	goto	l189
  4775  0791                     l3203:	
  4776                           
  4777                           ;lectura.c: 173:         envioTX("Ocurrio un error en la interpretacion.\n");
  4778  0791  3026               	movlw	low (STR_6| (0+32768))
  4779  0792  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0793  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0794  00A0               	movwf	envioTX@mensaje
  4782  0795  3083               	movlw	high (STR_6| (0+32768))
  4783  0796  00A1               	movwf	envioTX@mensaje+1
  4784  0797  120A  158A  216F  120A  118A  	fcall	_envioTX
  4785  079C                     l189:	
  4786  079C  0008               	return
  4787  079D                     __end_of_lecturaConsulta:	
  4788                           
  4789                           	psect	text16
  4790  0E64                     __ptext16:	
  4791 ;; *************** function _consultaPrecio *****************
  4792 ;; Defined at:
  4793 ;;		line 120 in file "lectura.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  articulo        2   42[BANK0 ] short 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  precio          2   74[BANK0 ] short 
  4798 ;;  mensaje        26   48[BANK0 ] unsigned char [26]
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4808 ;;      Params:         0       2       0       0       0
  4809 ;;      Locals:         0      28       0       0       0
  4810 ;;      Temps:          0       4       0       0       0
  4811 ;;      Totals:         0      34       0       0       0
  4812 ;;Total ram usage:       34 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; Hardware stack levels required when called:    3
  4815 ;; This function calls:
  4816 ;;		___awdiv
  4817 ;;		___awmod
  4818 ;;		_eeprom_read
  4819 ;;		_envioTX
  4820 ;;		_sprintf
  4821 ;; This function is called by:
  4822 ;;		_lecturaConsulta
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _consultaPrecio
  4828  0E64                     _consultaPrecio:	
  4829  0E64                     l3097:	
  4830                           ;incstack = 0
  4831                           ; Regs used in _consultaPrecio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4832                           
  4833                           
  4834                           ;lectura.c: 121:     char mensaje[26];;lectura.c: 122:     if(articulo > 0){
  4835  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0E66  084B               	movf	consultaPrecio@articulo+1,w
  4838  0E67  3A80               	xorlw	128
  4839  0E68  00FF               	movwf	btemp+1
  4840  0E69  3080               	movlw	128
  4841  0E6A  027F               	subwf	btemp+1,w
  4842  0E6B  1D03               	skipz
  4843  0E6C  2E6F               	goto	u3375
  4844  0E6D  3001               	movlw	1
  4845  0E6E  024A               	subwf	consultaPrecio@articulo,w
  4846  0E6F                     u3375:	
  4847  0E6F  1C03               	skipc
  4848  0E70  2E72               	goto	u3371
  4849  0E71  2E73               	goto	u3370
  4850  0E72                     u3371:	
  4851  0E72  2F22               	goto	l3111
  4852  0E73                     u3370:	
  4853  0E73                     l3099:	
  4854                           
  4855                           ;lectura.c: 123:         articulo--;
  4856  0E73  30FF               	movlw	255
  4857  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  4858  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  4859  0E76  07CA               	addwf	consultaPrecio@articulo,f
  4860  0E77  1803               	skipnc
  4861  0E78  0ACB               	incf	consultaPrecio@articulo+1,f
  4862  0E79  30FF               	movlw	255
  4863  0E7A  07CB               	addwf	consultaPrecio@articulo+1,f
  4864                           
  4865                           ;lectura.c: 124:         articulo = articulo * 2;
  4866  0E7B  1003               	clrc
  4867  0E7C  0D4A               	rlf	consultaPrecio@articulo,w
  4868  0E7D  00CA               	movwf	consultaPrecio@articulo
  4869  0E7E  0D4B               	rlf	consultaPrecio@articulo+1,w
  4870  0E7F  00CB               	movwf	consultaPrecio@articulo+1
  4871  0E80                     l3101:	
  4872                           
  4873                           ;lectura.c: 125:         short int precio = (eeprom_read(articulo) << 8) | (eeprom_read(
      +                          articulo+1));
  4874  0E80  084A               	movf	consultaPrecio@articulo,w
  4875  0E81  3E01               	addlw	1
  4876  0E82  120A  158A  2063  120A  158A  	fcall	_eeprom_read
  4877  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0E89  00CC               	movwf	??_consultaPrecio
  4880  0E8A  01CD               	clrf	??_consultaPrecio+1
  4881  0E8B  084A               	movf	consultaPrecio@articulo,w
  4882  0E8C  120A  158A  2063  120A  158A  	fcall	_eeprom_read
  4883  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  4884  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  4885  0E93  00CE               	movwf	??_consultaPrecio+2
  4886  0E94  01CF               	clrf	??_consultaPrecio+3
  4887  0E95  084E               	movf	??_consultaPrecio+2,w
  4888  0E96  00CF               	movwf	??_consultaPrecio+3
  4889  0E97  01CE               	clrf	??_consultaPrecio+2
  4890  0E98  084C               	movf	??_consultaPrecio,w
  4891  0E99  044E               	iorwf	??_consultaPrecio+2,w
  4892  0E9A  00EA               	movwf	consultaPrecio@precio
  4893  0E9B  084D               	movf	??_consultaPrecio+1,w
  4894  0E9C  044F               	iorwf	??_consultaPrecio+3,w
  4895  0E9D  00EB               	movwf	consultaPrecio@precio+1
  4896  0E9E                     l3103:	
  4897                           
  4898                           ;lectura.c: 127:         if (precio > 999 || precio < 0) {
  4899  0E9E  086B               	movf	consultaPrecio@precio+1,w
  4900  0E9F  3A80               	xorlw	128
  4901  0EA0  00FF               	movwf	btemp+1
  4902  0EA1  3083               	movlw	131
  4903  0EA2  027F               	subwf	btemp+1,w
  4904  0EA3  1D03               	skipz
  4905  0EA4  2EA7               	goto	u3385
  4906  0EA5  30E8               	movlw	232
  4907  0EA6  026A               	subwf	consultaPrecio@precio,w
  4908  0EA7                     u3385:	
  4909  0EA7  1803               	skipnc
  4910  0EA8  2EAA               	goto	u3381
  4911  0EA9  2EAB               	goto	u3380
  4912  0EAA                     u3381:	
  4913  0EAA  2EB1               	goto	l3107
  4914  0EAB                     u3380:	
  4915  0EAB                     l3105:	
  4916  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4917  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4918  0EAD  1FEB               	btfss	consultaPrecio@precio+1,7
  4919  0EAE  2EB0               	goto	u3391
  4920  0EAF  2EB1               	goto	u3390
  4921  0EB0                     u3391:	
  4922  0EB0  2ECC               	goto	l3109
  4923  0EB1                     u3390:	
  4924  0EB1                     l3107:	
  4925                           
  4926                           ;lectura.c: 128:             sprintf(mensaje, "\nProducto no encontrado\n");
  4927  0EB1  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4928  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  4929  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  4930  0EB4  00B4               	movwf	sprintf@sp
  4931  0EB5  3000               	movlw	0
  4932  0EB6  00B5               	movwf	sprintf@sp+1
  4933  0EB7  3067               	movlw	low (STR_8| (0+32768))
  4934  0EB8  00B6               	movwf	sprintf@f
  4935  0EB9  3083               	movlw	high (STR_8| (0+32768))
  4936  0EBA  00B7               	movwf	sprintf@f+1
  4937  0EBB  120A  118A  2453  120A  158A  	fcall	_sprintf
  4938                           
  4939                           ;lectura.c: 129:             envioTX(mensaje);
  4940  0EC0  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4941  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  4942  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  4943  0EC3  00A0               	movwf	envioTX@mensaje
  4944  0EC4  3000               	movlw	0
  4945  0EC5  00A1               	movwf	envioTX@mensaje+1
  4946  0EC6  120A  158A  216F  120A  158A  	fcall	_envioTX
  4947                           
  4948                           ;lectura.c: 130:         }
  4949  0ECB  2F2D               	goto	l174
  4950  0ECC                     l3109:	
  4951                           
  4952                           ;lectura.c: 132:             sprintf(mensaje, "TP: %d P: %d,%d Euros", articulo/2 + 1, p
      +                          recio/10, precio%10);
  4953  0ECC  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  4954  0ECD  00B4               	movwf	sprintf@sp
  4955  0ECE  3000               	movlw	0
  4956  0ECF  00B5               	movwf	sprintf@sp+1
  4957  0ED0  30AE               	movlw	low (STR_9| (0+32768))
  4958  0ED1  00B6               	movwf	sprintf@f
  4959  0ED2  3083               	movlw	high (STR_9| (0+32768))
  4960  0ED3  00B7               	movwf	sprintf@f+1
  4961  0ED4  3002               	movlw	2
  4962  0ED5  00A0               	movwf	___awdiv@divisor
  4963  0ED6  3000               	movlw	0
  4964  0ED7  00A1               	movwf	___awdiv@divisor+1
  4965  0ED8  084B               	movf	consultaPrecio@articulo+1,w
  4966  0ED9  00A3               	movwf	___awdiv@dividend+1
  4967  0EDA  084A               	movf	consultaPrecio@articulo,w
  4968  0EDB  00A2               	movwf	___awdiv@dividend
  4969  0EDC  120A  158A  2523  120A  158A  	fcall	___awdiv
  4970  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0EE3  0820               	movf	?___awdiv,w
  4973  0EE4  3E01               	addlw	1
  4974  0EE5  00B8               	movwf	?_sprintf+4
  4975  0EE6  0821               	movf	?___awdiv+1,w
  4976  0EE7  1803               	skipnc
  4977  0EE8  3E01               	addlw	1
  4978  0EE9  3E00               	addlw	0
  4979  0EEA  00B9               	movwf	?_sprintf+5
  4980  0EEB  300A               	movlw	10
  4981  0EEC  00A0               	movwf	___awdiv@divisor
  4982  0EED  3000               	movlw	0
  4983  0EEE  00A1               	movwf	___awdiv@divisor+1
  4984  0EEF  086B               	movf	consultaPrecio@precio+1,w
  4985  0EF0  00A3               	movwf	___awdiv@dividend+1
  4986  0EF1  086A               	movf	consultaPrecio@precio,w
  4987  0EF2  00A2               	movwf	___awdiv@dividend
  4988  0EF3  120A  158A  2523  120A  158A  	fcall	___awdiv
  4989  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  4990  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  4991  0EFA  0821               	movf	?___awdiv+1,w
  4992  0EFB  00BB               	movwf	?_sprintf+7
  4993  0EFC  0820               	movf	?___awdiv,w
  4994  0EFD  00BA               	movwf	?_sprintf+6
  4995  0EFE  300A               	movlw	10
  4996  0EFF  00A0               	movwf	___awmod@divisor
  4997  0F00  3000               	movlw	0
  4998  0F01  00A1               	movwf	___awmod@divisor+1
  4999  0F02  086B               	movf	consultaPrecio@precio+1,w
  5000  0F03  00A3               	movwf	___awmod@dividend+1
  5001  0F04  086A               	movf	consultaPrecio@precio,w
  5002  0F05  00A2               	movwf	___awmod@dividend
  5003  0F06  120A  158A  2340  120A  158A  	fcall	___awmod
  5004  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  5005  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  5006  0F0D  0821               	movf	?___awmod+1,w
  5007  0F0E  00BD               	movwf	?_sprintf+9
  5008  0F0F  0820               	movf	?___awmod,w
  5009  0F10  00BC               	movwf	?_sprintf+8
  5010  0F11  120A  118A  2453  120A  158A  	fcall	_sprintf
  5011                           
  5012                           ;lectura.c: 133:             envioTX(mensaje);
  5013  0F16  3050               	movlw	(low (consultaPrecio@mensaje| 0))& (0+255)
  5014  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0F19  00A0               	movwf	envioTX@mensaje
  5017  0F1A  3000               	movlw	0
  5018  0F1B  00A1               	movwf	envioTX@mensaje+1
  5019  0F1C  120A  158A  216F  120A  158A  	fcall	_envioTX
  5020  0F21  2F2D               	goto	l174
  5021  0F22                     l3111:	
  5022                           
  5023                           ;lectura.c: 137:         envioTX("No existe producto 00");
  5024  0F22  3098               	movlw	low (STR_10| (0+32768))
  5025  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0F25  00A0               	movwf	envioTX@mensaje
  5028  0F26  3083               	movlw	high (STR_10| (0+32768))
  5029  0F27  00A1               	movwf	envioTX@mensaje+1
  5030  0F28  120A  158A  216F  120A  158A  	fcall	_envioTX
  5031  0F2D                     l174:	
  5032  0F2D  0008               	return
  5033  0F2E                     __end_of_consultaPrecio:	
  5034                           
  5035                           	psect	text17
  5036  0863                     __ptext17:	
  5037 ;; *************** function _eeprom_read *****************
  5038 ;; Defined at:
  5039 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  addr            1    wreg     unsigned char 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  addr            1    1[BANK0 ] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         0       0       0       0       0
  5054 ;;      Locals:         0       1       0       0       0
  5055 ;;      Temps:          0       1       0       0       0
  5056 ;;      Totals:         0       2       0       0       0
  5057 ;;Total ram usage:        2 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_EEPROM_search
  5064 ;;		_consultaPrecio
  5065 ;;		_main
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _eeprom_read
  5071  0863                     _eeprom_read:	
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5075                           ;eeprom_read@addr stored from wreg
  5076  0863  1283               	bcf	3,5	;RP0=0, select bank0
  5077  0864  1303               	bcf	3,6	;RP1=0, select bank0
  5078  0865  00A1               	movwf	eeprom_read@addr
  5079  0866                     l518:	
  5080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  5081                           
  5082  0866  0064               	clrwdt	;# 
  5083  0867  1683               	bsf	3,5	;RP0=1, select bank3
  5084  0868  1703               	bsf	3,6	;RP1=1, select bank3
  5085  0869  188C               	btfsc	12,1	;volsfr
  5086  086A  286C               	goto	u3031
  5087  086B  286F               	goto	u3030
  5088  086C                     u3031:	
  5089  086C  1283               	bcf	3,5	;RP0=0, select bank0
  5090  086D  1303               	bcf	3,6	;RP1=0, select bank0
  5091  086E  2866               	goto	l518
  5092  086F                     u3030:	
  5093  086F                     l2901:	
  5094                           
  5095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  5096  086F  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0870  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0871  0821               	movf	eeprom_read@addr,w
  5099  0872  1283               	bcf	3,5	;RP0=0, select bank2
  5100  0873  1703               	bsf	3,6	;RP1=1, select bank2
  5101  0874  008D               	movwf	13	;volatile
  5102  0875  303F               	movlw	63
  5103  0876  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0877  1303               	bcf	3,6	;RP1=0, select bank0
  5105  0878  00A0               	movwf	??_eeprom_read
  5106  0879  0820               	movf	??_eeprom_read,w
  5107  087A  1683               	bsf	3,5	;RP0=1, select bank3
  5108  087B  1703               	bsf	3,6	;RP1=1, select bank3
  5109  087C  058C               	andwf	12,f	;volsfr
  5110  087D  140C               	bsf	12,0	;volsfr
  5111  087E  1283               	bcf	3,5	;RP0=0, select bank2
  5112  087F  1703               	bsf	3,6	;RP1=1, select bank2
  5113  0880  080C               	movf	12,w	;volatile
  5114  0881                     l520:	
  5115  0881  0008               	return
  5116  0882                     __end_of_eeprom_read:	
  5117                           
  5118                           	psect	text18
  5119  0B40                     __ptext18:	
  5120 ;; *************** function ___awmod *****************
  5121 ;; Defined at:
  5122 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  divisor         2    0[BANK0 ] int 
  5125 ;;  dividend        2    2[BANK0 ] int 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  sign            1    6[BANK0 ] unsigned char 
  5128 ;;  counter         1    5[BANK0 ] unsigned char 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  2    0[BANK0 ] int 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5138 ;;      Params:         0       4       0       0       0
  5139 ;;      Locals:         0       2       0       0       0
  5140 ;;      Temps:          0       1       0       0       0
  5141 ;;      Totals:         0       7       0       0       0
  5142 ;;Total ram usage:        7 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    1
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_lecturaEtiqueta
  5149 ;;		_consultaPrecio
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function ___awmod
  5155  0B40                     ___awmod:	
  5156  0B40                     l2979:	
  5157                           ;incstack = 0
  5158                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5159                           
  5160  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0B42  01A6               	clrf	___awmod@sign
  5163  0B43                     l2981:	
  5164  0B43  1FA3               	btfss	___awmod@dividend+1,7
  5165  0B44  2B46               	goto	u3181
  5166  0B45  2B47               	goto	u3180
  5167  0B46                     u3181:	
  5168  0B46  2B4E               	goto	l2987
  5169  0B47                     u3180:	
  5170  0B47                     l2983:	
  5171  0B47  09A2               	comf	___awmod@dividend,f
  5172  0B48  09A3               	comf	___awmod@dividend+1,f
  5173  0B49  0AA2               	incf	___awmod@dividend,f
  5174  0B4A  1903               	skipnz
  5175  0B4B  0AA3               	incf	___awmod@dividend+1,f
  5176  0B4C                     l2985:	
  5177  0B4C  01A6               	clrf	___awmod@sign
  5178  0B4D  0AA6               	incf	___awmod@sign,f
  5179  0B4E                     l2987:	
  5180  0B4E  1FA1               	btfss	___awmod@divisor+1,7
  5181  0B4F  2B51               	goto	u3191
  5182  0B50  2B52               	goto	u3190
  5183  0B51                     u3191:	
  5184  0B51  2B57               	goto	l2991
  5185  0B52                     u3190:	
  5186  0B52                     l2989:	
  5187  0B52  09A0               	comf	___awmod@divisor,f
  5188  0B53  09A1               	comf	___awmod@divisor+1,f
  5189  0B54  0AA0               	incf	___awmod@divisor,f
  5190  0B55  1903               	skipnz
  5191  0B56  0AA1               	incf	___awmod@divisor+1,f
  5192  0B57                     l2991:	
  5193  0B57  0820               	movf	___awmod@divisor,w
  5194  0B58  0421               	iorwf	___awmod@divisor+1,w
  5195  0B59  1903               	btfsc	3,2
  5196  0B5A  2B5C               	goto	u3201
  5197  0B5B  2B5D               	goto	u3200
  5198  0B5C                     u3201:	
  5199  0B5C  2B8C               	goto	l3009
  5200  0B5D                     u3200:	
  5201  0B5D                     l2993:	
  5202  0B5D  01A5               	clrf	___awmod@counter
  5203  0B5E  0AA5               	incf	___awmod@counter,f
  5204  0B5F  2B6B               	goto	l2999
  5205  0B60                     l2995:	
  5206  0B60  3001               	movlw	1
  5207  0B61                     u3215:	
  5208  0B61  1003               	clrc
  5209  0B62  0DA0               	rlf	___awmod@divisor,f
  5210  0B63  0DA1               	rlf	___awmod@divisor+1,f
  5211  0B64  3EFF               	addlw	-1
  5212  0B65  1D03               	skipz
  5213  0B66  2B61               	goto	u3215
  5214  0B67                     l2997:	
  5215  0B67  3001               	movlw	1
  5216  0B68  00A4               	movwf	??___awmod
  5217  0B69  0824               	movf	??___awmod,w
  5218  0B6A  07A5               	addwf	___awmod@counter,f
  5219  0B6B                     l2999:	
  5220  0B6B  1FA1               	btfss	___awmod@divisor+1,7
  5221  0B6C  2B6E               	goto	u3221
  5222  0B6D  2B6F               	goto	u3220
  5223  0B6E                     u3221:	
  5224  0B6E  2B60               	goto	l2995
  5225  0B6F                     u3220:	
  5226  0B6F                     l3001:	
  5227  0B6F  0821               	movf	___awmod@divisor+1,w
  5228  0B70  0223               	subwf	___awmod@dividend+1,w
  5229  0B71  1D03               	skipz
  5230  0B72  2B75               	goto	u3235
  5231  0B73  0820               	movf	___awmod@divisor,w
  5232  0B74  0222               	subwf	___awmod@dividend,w
  5233  0B75                     u3235:	
  5234  0B75  1C03               	skipc
  5235  0B76  2B78               	goto	u3231
  5236  0B77  2B79               	goto	u3230
  5237  0B78                     u3231:	
  5238  0B78  2B7F               	goto	l3005
  5239  0B79                     u3230:	
  5240  0B79                     l3003:	
  5241  0B79  0820               	movf	___awmod@divisor,w
  5242  0B7A  02A2               	subwf	___awmod@dividend,f
  5243  0B7B  0821               	movf	___awmod@divisor+1,w
  5244  0B7C  1C03               	skipc
  5245  0B7D  03A3               	decf	___awmod@dividend+1,f
  5246  0B7E  02A3               	subwf	___awmod@dividend+1,f
  5247  0B7F                     l3005:	
  5248  0B7F  3001               	movlw	1
  5249  0B80                     u3245:	
  5250  0B80  1003               	clrc
  5251  0B81  0CA1               	rrf	___awmod@divisor+1,f
  5252  0B82  0CA0               	rrf	___awmod@divisor,f
  5253  0B83  3EFF               	addlw	-1
  5254  0B84  1D03               	skipz
  5255  0B85  2B80               	goto	u3245
  5256  0B86                     l3007:	
  5257  0B86  3001               	movlw	1
  5258  0B87  02A5               	subwf	___awmod@counter,f
  5259  0B88  1D03               	btfss	3,2
  5260  0B89  2B8B               	goto	u3251
  5261  0B8A  2B8C               	goto	u3250
  5262  0B8B                     u3251:	
  5263  0B8B  2B6F               	goto	l3001
  5264  0B8C                     u3250:	
  5265  0B8C                     l3009:	
  5266  0B8C  0826               	movf	___awmod@sign,w
  5267  0B8D  1903               	btfsc	3,2
  5268  0B8E  2B90               	goto	u3261
  5269  0B8F  2B91               	goto	u3260
  5270  0B90                     u3261:	
  5271  0B90  2B96               	goto	l3013
  5272  0B91                     u3260:	
  5273  0B91                     l3011:	
  5274  0B91  09A2               	comf	___awmod@dividend,f
  5275  0B92  09A3               	comf	___awmod@dividend+1,f
  5276  0B93  0AA2               	incf	___awmod@dividend,f
  5277  0B94  1903               	skipnz
  5278  0B95  0AA3               	incf	___awmod@dividend+1,f
  5279  0B96                     l3013:	
  5280  0B96  0823               	movf	___awmod@dividend+1,w
  5281  0B97  00A1               	movwf	?___awmod+1
  5282  0B98  0822               	movf	___awmod@dividend,w
  5283  0B99  00A0               	movwf	?___awmod
  5284  0B9A                     l747:	
  5285  0B9A  0008               	return
  5286  0B9B                     __end_of___awmod:	
  5287                           
  5288                           	psect	text19
  5289  0D23                     __ptext19:	
  5290 ;; *************** function ___awdiv *****************
  5291 ;; Defined at:
  5292 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  divisor         2    0[BANK0 ] int 
  5295 ;;  dividend        2    2[BANK0 ] int 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  quotient        2    7[BANK0 ] int 
  5298 ;;  sign            1    6[BANK0 ] unsigned char 
  5299 ;;  counter         1    5[BANK0 ] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  2    0[BANK0 ] int 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5309 ;;      Params:         0       4       0       0       0
  5310 ;;      Locals:         0       4       0       0       0
  5311 ;;      Temps:          0       1       0       0       0
  5312 ;;      Totals:         0       9       0       0       0
  5313 ;;Total ram usage:        9 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    1
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_EEPROM_search
  5320 ;;		_consultaPrecio
  5321 ;;		_agregarModificarPrecio
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           
  5326                           ;psect for function ___awdiv
  5327  0D23                     ___awdiv:	
  5328  0D23                     l2935:	
  5329                           ;incstack = 0
  5330                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5331                           
  5332  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0D25  01A6               	clrf	___awdiv@sign
  5335  0D26                     l2937:	
  5336  0D26  1FA1               	btfss	___awdiv@divisor+1,7
  5337  0D27  2D29               	goto	u3081
  5338  0D28  2D2A               	goto	u3080
  5339  0D29                     u3081:	
  5340  0D29  2D31               	goto	l2943
  5341  0D2A                     u3080:	
  5342  0D2A                     l2939:	
  5343  0D2A  09A0               	comf	___awdiv@divisor,f
  5344  0D2B  09A1               	comf	___awdiv@divisor+1,f
  5345  0D2C  0AA0               	incf	___awdiv@divisor,f
  5346  0D2D  1903               	skipnz
  5347  0D2E  0AA1               	incf	___awdiv@divisor+1,f
  5348  0D2F                     l2941:	
  5349  0D2F  01A6               	clrf	___awdiv@sign
  5350  0D30  0AA6               	incf	___awdiv@sign,f
  5351  0D31                     l2943:	
  5352  0D31  1FA3               	btfss	___awdiv@dividend+1,7
  5353  0D32  2D34               	goto	u3091
  5354  0D33  2D35               	goto	u3090
  5355  0D34                     u3091:	
  5356  0D34  2D3E               	goto	l2949
  5357  0D35                     u3090:	
  5358  0D35                     l2945:	
  5359  0D35  09A2               	comf	___awdiv@dividend,f
  5360  0D36  09A3               	comf	___awdiv@dividend+1,f
  5361  0D37  0AA2               	incf	___awdiv@dividend,f
  5362  0D38  1903               	skipnz
  5363  0D39  0AA3               	incf	___awdiv@dividend+1,f
  5364  0D3A                     l2947:	
  5365  0D3A  3001               	movlw	1
  5366  0D3B  00A4               	movwf	??___awdiv
  5367  0D3C  0824               	movf	??___awdiv,w
  5368  0D3D  06A6               	xorwf	___awdiv@sign,f
  5369  0D3E                     l2949:	
  5370  0D3E  01A7               	clrf	___awdiv@quotient
  5371  0D3F  01A8               	clrf	___awdiv@quotient+1
  5372  0D40                     l2951:	
  5373  0D40  0820               	movf	___awdiv@divisor,w
  5374  0D41  0421               	iorwf	___awdiv@divisor+1,w
  5375  0D42  1903               	btfsc	3,2
  5376  0D43  2D45               	goto	u3101
  5377  0D44  2D46               	goto	u3100
  5378  0D45                     u3101:	
  5379  0D45  2D7D               	goto	l2971
  5380  0D46                     u3100:	
  5381  0D46                     l2953:	
  5382  0D46  01A5               	clrf	___awdiv@counter
  5383  0D47  0AA5               	incf	___awdiv@counter,f
  5384  0D48  2D54               	goto	l2959
  5385  0D49                     l2955:	
  5386  0D49  3001               	movlw	1
  5387  0D4A                     u3115:	
  5388  0D4A  1003               	clrc
  5389  0D4B  0DA0               	rlf	___awdiv@divisor,f
  5390  0D4C  0DA1               	rlf	___awdiv@divisor+1,f
  5391  0D4D  3EFF               	addlw	-1
  5392  0D4E  1D03               	skipz
  5393  0D4F  2D4A               	goto	u3115
  5394  0D50                     l2957:	
  5395  0D50  3001               	movlw	1
  5396  0D51  00A4               	movwf	??___awdiv
  5397  0D52  0824               	movf	??___awdiv,w
  5398  0D53  07A5               	addwf	___awdiv@counter,f
  5399  0D54                     l2959:	
  5400  0D54  1FA1               	btfss	___awdiv@divisor+1,7
  5401  0D55  2D57               	goto	u3121
  5402  0D56  2D58               	goto	u3120
  5403  0D57                     u3121:	
  5404  0D57  2D49               	goto	l2955
  5405  0D58                     u3120:	
  5406  0D58                     l2961:	
  5407  0D58  3001               	movlw	1
  5408  0D59                     u3135:	
  5409  0D59  1003               	clrc
  5410  0D5A  0DA7               	rlf	___awdiv@quotient,f
  5411  0D5B  0DA8               	rlf	___awdiv@quotient+1,f
  5412  0D5C  3EFF               	addlw	-1
  5413  0D5D  1D03               	skipz
  5414  0D5E  2D59               	goto	u3135
  5415  0D5F  0821               	movf	___awdiv@divisor+1,w
  5416  0D60  0223               	subwf	___awdiv@dividend+1,w
  5417  0D61  1D03               	skipz
  5418  0D62  2D65               	goto	u3145
  5419  0D63  0820               	movf	___awdiv@divisor,w
  5420  0D64  0222               	subwf	___awdiv@dividend,w
  5421  0D65                     u3145:	
  5422  0D65  1C03               	skipc
  5423  0D66  2D68               	goto	u3141
  5424  0D67  2D69               	goto	u3140
  5425  0D68                     u3141:	
  5426  0D68  2D70               	goto	l2967
  5427  0D69                     u3140:	
  5428  0D69                     l2963:	
  5429  0D69  0820               	movf	___awdiv@divisor,w
  5430  0D6A  02A2               	subwf	___awdiv@dividend,f
  5431  0D6B  0821               	movf	___awdiv@divisor+1,w
  5432  0D6C  1C03               	skipc
  5433  0D6D  03A3               	decf	___awdiv@dividend+1,f
  5434  0D6E  02A3               	subwf	___awdiv@dividend+1,f
  5435  0D6F                     l2965:	
  5436  0D6F  1427               	bsf	___awdiv@quotient,0
  5437  0D70                     l2967:	
  5438  0D70  3001               	movlw	1
  5439  0D71                     u3155:	
  5440  0D71  1003               	clrc
  5441  0D72  0CA1               	rrf	___awdiv@divisor+1,f
  5442  0D73  0CA0               	rrf	___awdiv@divisor,f
  5443  0D74  3EFF               	addlw	-1
  5444  0D75  1D03               	skipz
  5445  0D76  2D71               	goto	u3155
  5446  0D77                     l2969:	
  5447  0D77  3001               	movlw	1
  5448  0D78  02A5               	subwf	___awdiv@counter,f
  5449  0D79  1D03               	btfss	3,2
  5450  0D7A  2D7C               	goto	u3161
  5451  0D7B  2D7D               	goto	u3160
  5452  0D7C                     u3161:	
  5453  0D7C  2D58               	goto	l2961
  5454  0D7D                     u3160:	
  5455  0D7D                     l2971:	
  5456  0D7D  0826               	movf	___awdiv@sign,w
  5457  0D7E  1903               	btfsc	3,2
  5458  0D7F  2D81               	goto	u3171
  5459  0D80  2D82               	goto	u3170
  5460  0D81                     u3171:	
  5461  0D81  2D87               	goto	l2975
  5462  0D82                     u3170:	
  5463  0D82                     l2973:	
  5464  0D82  09A7               	comf	___awdiv@quotient,f
  5465  0D83  09A8               	comf	___awdiv@quotient+1,f
  5466  0D84  0AA7               	incf	___awdiv@quotient,f
  5467  0D85  1903               	skipnz
  5468  0D86  0AA8               	incf	___awdiv@quotient+1,f
  5469  0D87                     l2975:	
  5470  0D87  0828               	movf	___awdiv@quotient+1,w
  5471  0D88  00A1               	movwf	?___awdiv+1
  5472  0D89  0827               	movf	___awdiv@quotient,w
  5473  0D8A  00A0               	movwf	?___awdiv
  5474  0D8B                     l734:	
  5475  0D8B  0008               	return
  5476  0D8C                     __end_of___awdiv:	
  5477                           
  5478                           	psect	text20
  5479  09E7                     __ptext20:	
  5480 ;; *************** function _accionesDeshacer *****************
  5481 ;; Defined at:
  5482 ;;		line 23 in file "acciones.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5496 ;;      Params:         0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    4
  5503 ;; This function calls:
  5504 ;;		_eliminarProd
  5505 ;;		_envioTX
  5506 ;;		_mostrarDigitos
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           
  5513                           ;psect for function _accionesDeshacer
  5514  09E7                     _accionesDeshacer:	
  5515  09E7                     l3331:	
  5516                           ;incstack = 0
  5517                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5518                           
  5519                           
  5520                           ;acciones.c: 24:     if (cuenta != auxCuenta) {
  5521  09E7  1683               	bsf	3,5	;RP0=1, select bank3
  5522  09E8  1703               	bsf	3,6	;RP1=1, select bank3
  5523  09E9  0855               	movf	(_auxCuenta+1)^(0+384),w
  5524  09EA  0671               	xorwf	_cuenta+1,w
  5525  09EB  1D03               	skipz
  5526  09EC  29EF               	goto	u3735
  5527  09ED  0854               	movf	_auxCuenta^(0+384),w
  5528  09EE  0670               	xorwf	_cuenta,w
  5529  09EF                     u3735:	
  5530  09EF  1903               	skipnz
  5531  09F0  29F2               	goto	u3731
  5532  09F1  29F3               	goto	u3730
  5533  09F2                     u3731:	
  5534  09F2  2A13               	goto	l3339
  5535  09F3                     u3730:	
  5536  09F3                     l3333:	
  5537                           
  5538                           ;acciones.c: 25:         cuenta = auxCuenta;
  5539  09F3  0855               	movf	(_auxCuenta+1)^(0+384),w
  5540  09F4  00F1               	movwf	_cuenta+1
  5541  09F5  0854               	movf	_auxCuenta^(0+384),w
  5542  09F6  00F0               	movwf	_cuenta
  5543  09F7                     l3335:	
  5544                           
  5545                           ;acciones.c: 27:         eliminarProd(productoIngresado);
  5546  09F7  1683               	bsf	3,5	;RP0=1, select bank1
  5547  09F8  1303               	bcf	3,6	;RP1=0, select bank1
  5548  09F9  085F               	movf	(_productoIngresado+1)^(0+128),w
  5549  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  5550  09FB  1303               	bcf	3,6	;RP1=0, select bank0
  5551  09FC  00AF               	movwf	eliminarProd@tp+1
  5552  09FD  1683               	bsf	3,5	;RP0=1, select bank1
  5553  09FE  1303               	bcf	3,6	;RP1=0, select bank1
  5554  09FF  085E               	movf	_productoIngresado^(0+128),w
  5555  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  5556  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  5557  0A02  00AE               	movwf	eliminarProd@tp
  5558  0A03  120A  158A  23F9  120A  158A  	fcall	_eliminarProd
  5559  0A08                     l3337:	
  5560                           
  5561                           ;acciones.c: 28:         mostrarDigitos(cuenta);
  5562  0A08  0871               	movf	_cuenta+1,w
  5563  0A09  1283               	bcf	3,5	;RP0=0, select bank0
  5564  0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  5565  0A0B  00B5               	movwf	mostrarDigitos@num+1
  5566  0A0C  0870               	movf	_cuenta,w
  5567  0A0D  00B4               	movwf	mostrarDigitos@num
  5568  0A0E  120A  158A  25F5  120A  158A  	fcall	_mostrarDigitos
  5569  0A13                     l3339:	
  5570                           
  5571                           ;acciones.c: 30:     if (modoDebug){
  5572  0A13  0872               	movf	_modoDebug,w
  5573  0A14  1903               	btfsc	3,2
  5574  0A15  2A17               	goto	u3741
  5575  0A16  2A18               	goto	u3740
  5576  0A17                     u3741:	
  5577  0A17  2A23               	goto	l63
  5578  0A18                     u3740:	
  5579  0A18                     l3341:	
  5580                           
  5581                           ;acciones.c: 31:         envioTX("Producto cancelado");
  5582  0A18  30FF               	movlw	low (STR_2| (0+32768))
  5583  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0A1B  00A0               	movwf	envioTX@mensaje
  5586  0A1C  3083               	movlw	high (STR_2| (0+32768))
  5587  0A1D  00A1               	movwf	envioTX@mensaje+1
  5588  0A1E  120A  158A  216F  120A  158A  	fcall	_envioTX
  5589  0A23                     l63:	
  5590  0A23  0008               	return
  5591  0A24                     __end_of_accionesDeshacer:	
  5592                           
  5593                           	psect	text21
  5594  0BF9                     __ptext21:	
  5595 ;; *************** function _eliminarProd *****************
  5596 ;; Defined at:
  5597 ;;		line 47 in file "manejoProductos.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  tp              2   14[BANK0 ] short 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  i               2   19[BANK0 ] short 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5611 ;;      Params:         0       2       0       0       0
  5612 ;;      Locals:         0       2       0       0       0
  5613 ;;      Temps:          0       3       0       0       0
  5614 ;;      Totals:         0       7       0       0       0
  5615 ;;Total ram usage:        7 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    3
  5618 ;; This function calls:
  5619 ;;		_pow
  5620 ;; This function is called by:
  5621 ;;		_accionesDeshacer
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           
  5626                           ;psect for function _eliminarProd
  5627  0BF9                     _eliminarProd:	
  5628  0BF9                     l3219:	
  5629                           ;incstack = 0
  5630                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5631                           
  5632                           
  5633                           ;manejoProductos.c: 48:         for(short int i = 12; i>=0; i--) {
  5634  0BF9  300C               	movlw	12
  5635  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  5636  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  5637  0BFC  00B3               	movwf	eliminarProd@i
  5638  0BFD  3000               	movlw	0
  5639  0BFE  00B4               	movwf	eliminarProd@i+1
  5640  0BFF                     l3225:	
  5641                           
  5642                           ;manejoProductos.c: 49:         if( tp >= 8*i) {
  5643  0BFF  0834               	movf	eliminarProd@i+1,w
  5644  0C00  00B1               	movwf	??_eliminarProd+1
  5645  0C01  0833               	movf	eliminarProd@i,w
  5646  0C02  00B0               	movwf	??_eliminarProd
  5647  0C03  1003               	clrc
  5648  0C04  0DB0               	rlf	??_eliminarProd,f
  5649  0C05  0DB1               	rlf	??_eliminarProd+1,f
  5650  0C06  1003               	clrc
  5651  0C07  0DB0               	rlf	??_eliminarProd,f
  5652  0C08  0DB1               	rlf	??_eliminarProd+1,f
  5653  0C09  1003               	clrc
  5654  0C0A  0DB0               	rlf	??_eliminarProd,f
  5655  0C0B  0DB1               	rlf	??_eliminarProd+1,f
  5656  0C0C  082F               	movf	eliminarProd@tp+1,w
  5657  0C0D  3A80               	xorlw	128
  5658  0C0E  00B2               	movwf	??_eliminarProd+2
  5659  0C0F  0831               	movf	??_eliminarProd+1,w
  5660  0C10  3A80               	xorlw	128
  5661  0C11  0232               	subwf	??_eliminarProd+2,w
  5662  0C12  1D03               	skipz
  5663  0C13  2C16               	goto	u3595
  5664  0C14  0830               	movf	??_eliminarProd,w
  5665  0C15  022E               	subwf	eliminarProd@tp,w
  5666  0C16                     u3595:	
  5667  0C16  1C03               	skipc
  5668  0C17  2C19               	goto	u3591
  5669  0C18  2C1A               	goto	u3590
  5670  0C19                     u3591:	
  5671  0C19  2C4E               	goto	l3233
  5672  0C1A                     u3590:	
  5673  0C1A                     l3227:	
  5674                           
  5675                           ;manejoProductos.c: 51:             tp = tp - 8*i;
  5676  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  5677  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  5678  0C1C  0834               	movf	eliminarProd@i+1,w
  5679  0C1D  00B1               	movwf	??_eliminarProd+1
  5680  0C1E  0833               	movf	eliminarProd@i,w
  5681  0C1F  00B0               	movwf	??_eliminarProd
  5682  0C20  1003               	clrc
  5683  0C21  0DB0               	rlf	??_eliminarProd,f
  5684  0C22  0DB1               	rlf	??_eliminarProd+1,f
  5685  0C23  1003               	clrc
  5686  0C24  0DB0               	rlf	??_eliminarProd,f
  5687  0C25  0DB1               	rlf	??_eliminarProd+1,f
  5688  0C26  1003               	clrc
  5689  0C27  0DB0               	rlf	??_eliminarProd,f
  5690  0C28  0DB1               	rlf	??_eliminarProd+1,f
  5691  0C29  0830               	movf	??_eliminarProd,w
  5692  0C2A  022E               	subwf	eliminarProd@tp,w
  5693  0C2B  00AE               	movwf	eliminarProd@tp
  5694  0C2C  0831               	movf	??_eliminarProd+1,w
  5695  0C2D  1C03               	skipc
  5696  0C2E  0A31               	incf	??_eliminarProd+1,w
  5697  0C2F  022F               	subwf	eliminarProd@tp+1,w
  5698  0C30  00AF               	movwf	eliminarProd@tp+1
  5699  0C31                     l3229:	
  5700                           
  5701                           ;manejoProductos.c: 52:             prodIngresados[i] = prodIngresados[i] ^ pow(2,tp);
  5702  0C31  0833               	movf	eliminarProd@i,w
  5703  0C32  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5704  0C33  0084               	movwf	4
  5705  0C34  3002               	movlw	2
  5706  0C35  00A6               	movwf	pow@numero
  5707  0C36  3000               	movlw	0
  5708  0C37  00A7               	movwf	pow@numero+1
  5709  0C38  082F               	movf	eliminarProd@tp+1,w
  5710  0C39  00A9               	movwf	pow@potencia+1
  5711  0C3A  082E               	movf	eliminarProd@tp,w
  5712  0C3B  00A8               	movwf	pow@potencia
  5713  0C3C  120A  158A  2135  120A  158A  	fcall	_pow
  5714  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  5715  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  5716  0C43  0826               	movf	?_pow,w
  5717  0C44  1383               	bcf	3,7	;select IRP bank1
  5718  0C45  0600               	xorwf	0,w
  5719  0C46  00B0               	movwf	??_eliminarProd
  5720  0C47  0833               	movf	eliminarProd@i,w
  5721  0C48  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  5722  0C49  0084               	movwf	4
  5723  0C4A  0830               	movf	??_eliminarProd,w
  5724  0C4B  0080               	movwf	0
  5725  0C4C                     l3231:	
  5726                           
  5727                           ;manejoProductos.c: 53:             i = 0;
  5728  0C4C  01B3               	clrf	eliminarProd@i
  5729  0C4D  01B4               	clrf	eliminarProd@i+1
  5730  0C4E                     l3233:	
  5731                           
  5732                           ;manejoProductos.c: 56:     }
  5733  0C4E  30FF               	movlw	255
  5734  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  5735  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  5736  0C51  07B3               	addwf	eliminarProd@i,f
  5737  0C52  1803               	skipnc
  5738  0C53  0AB4               	incf	eliminarProd@i+1,f
  5739  0C54  30FF               	movlw	255
  5740  0C55  07B4               	addwf	eliminarProd@i+1,f
  5741  0C56                     l3235:	
  5742  0C56  1FB4               	btfss	eliminarProd@i+1,7
  5743  0C57  2C59               	goto	u3601
  5744  0C58  2C5A               	goto	u3600
  5745  0C59                     u3601:	
  5746  0C59  2BFF               	goto	l3225
  5747  0C5A                     u3600:	
  5748  0C5A                     l382:	
  5749  0C5A  0008               	return
  5750  0C5B                     __end_of_eliminarProd:	
  5751                           
  5752                           	psect	text22
  5753  0935                     __ptext22:	
  5754 ;; *************** function _pow *****************
  5755 ;; Defined at:
  5756 ;;		line 3 in file "manejoProductos.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  numero          2    6[BANK0 ] unsigned int 
  5759 ;;  potencia        2    8[BANK0 ] unsigned int 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  i               2   10[BANK0 ] int 
  5762 ;;  resultado       2   12[BANK0 ] unsigned int 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  2    6[BANK0 ] unsigned int 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0, pclath, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5772 ;;      Params:         0       4       0       0       0
  5773 ;;      Locals:         0       4       0       0       0
  5774 ;;      Temps:          0       0       0       0       0
  5775 ;;      Totals:         0       8       0       0       0
  5776 ;;Total ram usage:        8 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    2
  5779 ;; This function calls:
  5780 ;;		___wmul
  5781 ;; This function is called by:
  5782 ;;		_ingresoProd
  5783 ;;		_verificarProd
  5784 ;;		_eliminarProd
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function _pow
  5790  0935                     _pow:	
  5791  0935                     l2905:	
  5792                           ;incstack = 0
  5793                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  5794                           
  5795                           
  5796                           ;manejoProductos.c: 4:     unsigned int resultado = 0;
  5797  0935  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0936  1303               	bcf	3,6	;RP1=0, select bank0
  5799  0937  01AC               	clrf	pow@resultado
  5800  0938  01AD               	clrf	pow@resultado+1
  5801                           
  5802                           ;manejoProductos.c: 6:     for (int i = 0; i <= potencia; i++){
  5803  0939  01AA               	clrf	pow@i
  5804  093A  01AB               	clrf	pow@i+1
  5805  093B  2960               	goto	l2915
  5806  093C                     l2907:	
  5807                           
  5808                           ;manejoProductos.c: 7:         if (i == 0){
  5809  093C  082A               	movf	pow@i,w
  5810  093D  042B               	iorwf	pow@i+1,w
  5811  093E  1D03               	btfss	3,2
  5812  093F  2941               	goto	u3041
  5813  0940  2942               	goto	u3040
  5814  0941                     u3041:	
  5815  0941  2947               	goto	l2911
  5816  0942                     u3040:	
  5817  0942                     l2909:	
  5818                           
  5819                           ;manejoProductos.c: 8:         resultado = 1;
  5820  0942  3001               	movlw	1
  5821  0943  00AC               	movwf	pow@resultado
  5822  0944  3000               	movlw	0
  5823  0945  00AD               	movwf	pow@resultado+1
  5824                           
  5825                           ;manejoProductos.c: 9:         }
  5826  0946  295A               	goto	l2913
  5827  0947                     l2911:	
  5828                           
  5829                           ;manejoProductos.c: 11:             resultado = resultado * numero;
  5830  0947  082D               	movf	pow@resultado+1,w
  5831  0948  00A1               	movwf	___wmul@multiplier+1
  5832  0949  082C               	movf	pow@resultado,w
  5833  094A  00A0               	movwf	___wmul@multiplier
  5834  094B  0827               	movf	pow@numero+1,w
  5835  094C  00A3               	movwf	___wmul@multiplicand+1
  5836  094D  0826               	movf	pow@numero,w
  5837  094E  00A2               	movwf	___wmul@multiplicand
  5838  094F  120A  158A  20A2  120A  158A  	fcall	___wmul
  5839  0954  1283               	bcf	3,5	;RP0=0, select bank0
  5840  0955  1303               	bcf	3,6	;RP1=0, select bank0
  5841  0956  0821               	movf	?___wmul+1,w
  5842  0957  00AD               	movwf	pow@resultado+1
  5843  0958  0820               	movf	?___wmul,w
  5844  0959  00AC               	movwf	pow@resultado
  5845  095A                     l2913:	
  5846                           
  5847                           ;manejoProductos.c: 13:     }
  5848  095A  3001               	movlw	1
  5849  095B  07AA               	addwf	pow@i,f
  5850  095C  1803               	skipnc
  5851  095D  0AAB               	incf	pow@i+1,f
  5852  095E  3000               	movlw	0
  5853  095F  07AB               	addwf	pow@i+1,f
  5854  0960                     l2915:	
  5855  0960  082B               	movf	pow@i+1,w
  5856  0961  0229               	subwf	pow@potencia+1,w
  5857  0962  1D03               	skipz
  5858  0963  2966               	goto	u3055
  5859  0964  082A               	movf	pow@i,w
  5860  0965  0228               	subwf	pow@potencia,w
  5861  0966                     u3055:	
  5862  0966  1803               	skipnc
  5863  0967  2969               	goto	u3051
  5864  0968  296A               	goto	u3050
  5865  0969                     u3051:	
  5866  0969  293C               	goto	l2907
  5867  096A                     u3050:	
  5868  096A                     l2917:	
  5869                           
  5870                           ;manejoProductos.c: 14:     return resultado;
  5871  096A  082D               	movf	pow@resultado+1,w
  5872  096B  00A7               	movwf	?_pow+1
  5873  096C  082C               	movf	pow@resultado,w
  5874  096D  00A6               	movwf	?_pow
  5875  096E                     l363:	
  5876  096E  0008               	return
  5877  096F                     __end_of_pow:	
  5878                           
  5879                           	psect	text23
  5880  08A2                     __ptext23:	
  5881 ;; *************** function ___wmul *****************
  5882 ;; Defined at:
  5883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5886 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  product         2    4[BANK0 ] unsigned int 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  2    0[BANK0 ] unsigned int 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5898 ;;      Params:         0       4       0       0       0
  5899 ;;      Locals:         0       2       0       0       0
  5900 ;;      Temps:          0       0       0       0       0
  5901 ;;      Totals:         0       6       0       0       0
  5902 ;;Total ram usage:        6 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    1
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_lecturaConsulta
  5909 ;;		_main
  5910 ;;		_pow
  5911 ;;		_agregarModificarPrecio
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           
  5916                           ;psect for function ___wmul
  5917  08A2                     ___wmul:	
  5918  08A2                     l2727:	
  5919                           ;incstack = 0
  5920                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5921                           
  5922  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  5923  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  5924  08A4  01A4               	clrf	___wmul@product
  5925  08A5  01A5               	clrf	___wmul@product+1
  5926  08A6                     l2729:	
  5927  08A6  1C20               	btfss	___wmul@multiplier,0
  5928  08A7  28A9               	goto	u2691
  5929  08A8  28AA               	goto	u2690
  5930  08A9                     u2691:	
  5931  08A9  28B0               	goto	l581
  5932  08AA                     u2690:	
  5933  08AA                     l2731:	
  5934  08AA  0822               	movf	___wmul@multiplicand,w
  5935  08AB  07A4               	addwf	___wmul@product,f
  5936  08AC  1803               	skipnc
  5937  08AD  0AA5               	incf	___wmul@product+1,f
  5938  08AE  0823               	movf	___wmul@multiplicand+1,w
  5939  08AF  07A5               	addwf	___wmul@product+1,f
  5940  08B0                     l581:	
  5941  08B0  3001               	movlw	1
  5942  08B1                     u2705:	
  5943  08B1  1003               	clrc
  5944  08B2  0DA2               	rlf	___wmul@multiplicand,f
  5945  08B3  0DA3               	rlf	___wmul@multiplicand+1,f
  5946  08B4  3EFF               	addlw	-1
  5947  08B5  1D03               	skipz
  5948  08B6  28B1               	goto	u2705
  5949  08B7                     l2733:	
  5950  08B7  3001               	movlw	1
  5951  08B8                     u2715:	
  5952  08B8  1003               	clrc
  5953  08B9  0CA1               	rrf	___wmul@multiplier+1,f
  5954  08BA  0CA0               	rrf	___wmul@multiplier,f
  5955  08BB  3EFF               	addlw	-1
  5956  08BC  1D03               	skipz
  5957  08BD  28B8               	goto	u2715
  5958  08BE                     l2735:	
  5959  08BE  0820               	movf	___wmul@multiplier,w
  5960  08BF  0421               	iorwf	___wmul@multiplier+1,w
  5961  08C0  1D03               	btfss	3,2
  5962  08C1  28C3               	goto	u2721
  5963  08C2  28C4               	goto	u2720
  5964  08C3                     u2721:	
  5965  08C3  28A6               	goto	l2729
  5966  08C4                     u2720:	
  5967  08C4                     l2737:	
  5968  08C4  0825               	movf	___wmul@product+1,w
  5969  08C5  00A1               	movwf	?___wmul+1
  5970  08C6  0824               	movf	___wmul@product,w
  5971  08C7  00A0               	movwf	?___wmul
  5972  08C8                     l583:	
  5973  08C8  0008               	return
  5974  08C9                     __end_of___wmul:	
  5975                           
  5976                           	psect	text24
  5977  024B                     __ptext24:	
  5978 ;; *************** function _accionesAceptar *****************
  5979 ;; Defined at:
  5980 ;;		line 4 in file "acciones.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  strLote        32    0[BANK1 ] unsigned char [32]
  5985 ;;  i               2   32[BANK1 ] short 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5995 ;;      Params:         0       0       0       0       0
  5996 ;;      Locals:         0       0      34       0       0
  5997 ;;      Temps:          0       4       0       0       0
  5998 ;;      Totals:         0       4      34       0       0
  5999 ;;Total ram usage:       38 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    3
  6002 ;; This function calls:
  6003 ;;		_bailenLeds
  6004 ;;		_envioTX
  6005 ;;		_mostrarDigitos
  6006 ;;		_sprintf
  6007 ;; This function is called by:
  6008 ;;		_main
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function _accionesAceptar
  6014  024B                     _accionesAceptar:	
  6015  024B                     l3305:	
  6016                           ;incstack = 0
  6017                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6018                           
  6019                           
  6020                           ;acciones.c: 6:     ventasLote++;
  6021  024B  3001               	movlw	1
  6022  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6023  024D  1303               	bcf	3,6	;RP1=0, select bank0
  6024  024E  00CA               	movwf	??_accionesAceptar
  6025  024F  084A               	movf	??_accionesAceptar,w
  6026  0250  07EE               	addwf	_ventasLote,f
  6027  0251                     l3307:	
  6028                           
  6029                           ;acciones.c: 7:     montosLote+=cuenta;
  6030  0251  0870               	movf	_cuenta,w
  6031  0252  1683               	bsf	3,5	;RP0=1, select bank1
  6032  0253  1303               	bcf	3,6	;RP1=0, select bank1
  6033  0254  07DA               	addwf	_montosLote^(0+128),f
  6034  0255  1803               	skipnc
  6035  0256  0ADB               	incf	(_montosLote+1)^(0+128),f
  6036  0257  0871               	movf	_cuenta+1,w
  6037  0258  07DB               	addwf	(_montosLote+1)^(0+128),f
  6038  0259                     l3309:	
  6039                           
  6040                           ;acciones.c: 8:     cuenta = 0;
  6041  0259  01F0               	clrf	_cuenta
  6042  025A  01F1               	clrf	_cuenta+1
  6043  025B                     l3311:	
  6044                           
  6045                           ;acciones.c: 9:     auxCuenta = 0;
  6046  025B  1683               	bsf	3,5	;RP0=1, select bank3
  6047  025C  1703               	bsf	3,6	;RP1=1, select bank3
  6048  025D  01D4               	clrf	_auxCuenta^(0+384)
  6049  025E  01D5               	clrf	(_auxCuenta+1)^(0+384)
  6050  025F                     l3313:	
  6051                           
  6052                           ;acciones.c: 10:     for(short int i = 0; i < 13; i++){
  6053  025F  1683               	bsf	3,5	;RP0=1, select bank1
  6054  0260  1303               	bcf	3,6	;RP1=0, select bank1
  6055  0261  01C0               	clrf	accionesAceptar@i^(0+128)
  6056  0262  01C1               	clrf	(accionesAceptar@i+1)^(0+128)
  6057  0263                     l3319:	
  6058                           
  6059                           ;acciones.c: 11:         prodIngresados[i] = 0;
  6060  0263  1683               	bsf	3,5	;RP0=1, select bank1
  6061  0264  1303               	bcf	3,6	;RP1=0, select bank1
  6062  0265  0840               	movf	accionesAceptar@i^(0+128),w
  6063  0266  3ECD               	addlw	(low (_prodIngresados| 0))& (0+255)
  6064  0267  0084               	movwf	4
  6065  0268  1383               	bcf	3,7	;select IRP bank1
  6066  0269  0180               	clrf	0
  6067  026A                     l3321:	
  6068                           
  6069                           ;acciones.c: 12:     }
  6070  026A  3001               	movlw	1
  6071  026B  07C0               	addwf	accionesAceptar@i^(0+128),f
  6072  026C  1803               	skipnc
  6073  026D  0AC1               	incf	(accionesAceptar@i+1)^(0+128),f
  6074  026E  3000               	movlw	0
  6075  026F  07C1               	addwf	(accionesAceptar@i+1)^(0+128),f
  6076  0270                     l3323:	
  6077  0270  0841               	movf	(accionesAceptar@i+1)^(0+128),w
  6078  0271  3A80               	xorlw	128
  6079  0272  00FF               	movwf	btemp+1
  6080  0273  3080               	movlw	128
  6081  0274  027F               	subwf	btemp+1,w
  6082  0275  1D03               	skipz
  6083  0276  2A79               	goto	u3715
  6084  0277  300D               	movlw	13
  6085  0278  0240               	subwf	accionesAceptar@i^(0+128),w
  6086  0279                     u3715:	
  6087  0279  1C03               	skipc
  6088  027A  2A7C               	goto	u3711
  6089  027B  2A7D               	goto	u3710
  6090  027C                     u3711:	
  6091  027C  2A63               	goto	l3319
  6092  027D                     u3710:	
  6093  027D                     l3325:	
  6094                           
  6095                           ;acciones.c: 13:     if(modoDebug){
  6096  027D  0872               	movf	_modoDebug,w
  6097  027E  1903               	btfsc	3,2
  6098  027F  2A81               	goto	u3721
  6099  0280  2A82               	goto	u3720
  6100  0281                     u3721:	
  6101  0281  2AB6               	goto	l57
  6102  0282                     u3720:	
  6103  0282                     l3327:	
  6104                           
  6105                           ;acciones.c: 14:         char strLote[32];;acciones.c: 16:         sprintf(strLote,"\nL:
      +                          %d,N:%d,T:%d\n", nroLote, ventasLote, montosLote);
  6106  0282  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6107  0283  1283               	bcf	3,5	;RP0=0, select bank0
  6108  0284  1303               	bcf	3,6	;RP1=0, select bank0
  6109  0285  00B4               	movwf	sprintf@sp
  6110  0286  3000               	movlw	0
  6111  0287  00B5               	movwf	sprintf@sp+1
  6112  0288  3023               	movlw	low (STR_1| (0+32768))
  6113  0289  00B6               	movwf	sprintf@f
  6114  028A  3084               	movlw	high (STR_1| (0+32768))
  6115  028B  00B7               	movwf	sprintf@f+1
  6116  028C  0878               	movf	_nroLote,w
  6117  028D  00CA               	movwf	??_accionesAceptar
  6118  028E  01CB               	clrf	??_accionesAceptar+1
  6119  028F  084A               	movf	??_accionesAceptar,w
  6120  0290  00B8               	movwf	?_sprintf+4
  6121  0291  084B               	movf	??_accionesAceptar+1,w
  6122  0292  00B9               	movwf	?_sprintf+5
  6123  0293  086E               	movf	_ventasLote,w
  6124  0294  00CC               	movwf	??_accionesAceptar+2
  6125  0295  01CD               	clrf	??_accionesAceptar+3
  6126  0296  084C               	movf	??_accionesAceptar+2,w
  6127  0297  00BA               	movwf	?_sprintf+6
  6128  0298  084D               	movf	??_accionesAceptar+3,w
  6129  0299  00BB               	movwf	?_sprintf+7
  6130  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6131  029B  1303               	bcf	3,6	;RP1=0, select bank1
  6132  029C  085B               	movf	(_montosLote+1)^(0+128),w
  6133  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6134  029E  1303               	bcf	3,6	;RP1=0, select bank0
  6135  029F  00BD               	movwf	?_sprintf+9
  6136  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6137  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  6138  02A2  085A               	movf	_montosLote^(0+128),w
  6139  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6140  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6141  02A5  00BC               	movwf	?_sprintf+8
  6142  02A6  120A  118A  2453  120A  118A  	fcall	_sprintf
  6143                           
  6144                           ;acciones.c: 17:         envioTX(strLote);
  6145  02AB  30A0               	movlw	(low (accionesAceptar@strLote| 0))& (0+255)
  6146  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6147  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  6148  02AE  00A0               	movwf	envioTX@mensaje
  6149  02AF  3000               	movlw	0
  6150  02B0  00A1               	movwf	envioTX@mensaje+1
  6151  02B1  120A  158A  216F  120A  118A  	fcall	_envioTX
  6152  02B6                     l57:	
  6153                           ;acciones.c: 18:     }
  6154                           
  6155                           
  6156                           ;acciones.c: 19:     mostrarDigitos(cuenta);
  6157  02B6  0871               	movf	_cuenta+1,w
  6158  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  6159  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  6160  02B9  00B5               	movwf	mostrarDigitos@num+1
  6161  02BA  0870               	movf	_cuenta,w
  6162  02BB  00B4               	movwf	mostrarDigitos@num
  6163  02BC  120A  158A  25F5  120A  118A  	fcall	_mostrarDigitos
  6164  02C1                     l3329:	
  6165                           
  6166                           ;acciones.c: 20:     bailenLeds();
  6167  02C1  120A  158A  22F5  120A  118A  	fcall	_bailenLeds
  6168  02C6                     l58:	
  6169  02C6  0008               	return
  6170  02C7                     __end_of_accionesAceptar:	
  6171                           
  6172                           	psect	text25
  6173  0453                     __ptext25:	
  6174 ;; *************** function _sprintf *****************
  6175 ;; Defined at:
  6176 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  sp              2   20[BANK0 ] PTR unsigned char 
  6179 ;;		 -> agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), lecturaConsulta@strLote(32), 
  6180 ;;		 -> consultaPrecio@mensaje(26), cierreDeLote@strLote(32), accionesPuertoSerial@mensaje(12), accionesAceptar@strLote(
      +32), 
  6181 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  6182 ;;		 -> STR_17(9), STR_16(10), STR_15(25), STR_13(17), 
  6183 ;;		 -> STR_9(22), STR_8(25), STR_5(24), STR_3(5), 
  6184 ;;		 -> STR_1(17), 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  tmpval          4    0        struct .
  6187 ;;  val             2   39[BANK0 ] unsigned int 
  6188 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  6189 ;;		 -> STR_19(7), ?_sprintf(2), adresult(2), codigoEntrada(10), 
  6190 ;;  len             2    0        unsigned int 
  6191 ;;  c               1   41[BANK0 ] unsigned char 
  6192 ;;  ap              1   36[BANK0 ] PTR void [1]
  6193 ;;		 -> ?_sprintf(2), 
  6194 ;;  prec            1   35[BANK0 ] char 
  6195 ;;  flag            1   34[BANK0 ] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  2   20[BANK0 ] int 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6205 ;;      Params:         0      10       0       0       0
  6206 ;;      Locals:         0       8       0       0       0
  6207 ;;      Temps:          0       4       0       0       0
  6208 ;;      Totals:         0      22       0       0       0
  6209 ;;Total ram usage:       22 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    2
  6212 ;; This function calls:
  6213 ;;		___lwdiv
  6214 ;;		___lwmod
  6215 ;; This function is called by:
  6216 ;;		_accionesAceptar
  6217 ;;		_accionesPuertoSerial
  6218 ;;		_cierreDeLote
  6219 ;;		_consultaPrecio
  6220 ;;		_lecturaConsulta
  6221 ;;		_main
  6222 ;;		_agregarModificarPrecio
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function _sprintf
  6228  0453                     _sprintf:	
  6229  0453                     l2789:	
  6230                           ;incstack = 0
  6231                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6232                           
  6233                           
  6234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  6235  0453  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6236  0454  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0455  1303               	bcf	3,6	;RP1=0, select bank0
  6238  0456  00BE               	movwf	??_sprintf
  6239  0457  083E               	movf	??_sprintf,w
  6240  0458  00C4               	movwf	sprintf@ap
  6241                           
  6242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6243  0459  2D87               	goto	l2855
  6244  045A                     l2791:	
  6245                           
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  6247  045A  3025               	movlw	37
  6248  045B  0649               	xorwf	sprintf@c,w
  6249  045C  1903               	btfsc	3,2
  6250  045D  2C5F               	goto	u2861
  6251  045E  2C60               	goto	u2860
  6252  045F                     u2861:	
  6253  045F  2C70               	goto	l2797
  6254  0460                     u2860:	
  6255  0460                     l2793:	
  6256                           
  6257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  6258  0460  0849               	movf	sprintf@c,w
  6259  0461  00BE               	movwf	??_sprintf
  6260  0462  0834               	movf	sprintf@sp,w
  6261  0463  0084               	movwf	4
  6262  0464  1783               	bsf	3,7
  6263  0465  1C35               	btfss	sprintf@sp+1,0
  6264  0466  1383               	bcf	3,7
  6265  0467  083E               	movf	??_sprintf,w
  6266  0468  0080               	movwf	0
  6267  0469                     l2795:	
  6268  0469  3001               	movlw	1
  6269  046A  07B4               	addwf	sprintf@sp,f
  6270  046B  1803               	skipnc
  6271  046C  0AB5               	incf	sprintf@sp+1,f
  6272  046D  3000               	movlw	0
  6273  046E  07B5               	addwf	sprintf@sp+1,f
  6274                           
  6275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  6276  046F  2D87               	goto	l2855
  6277  0470                     l2797:	
  6278                           
  6279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  6280  0470  01C2               	clrf	sprintf@flag
  6281                           
  6282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  6283  0471  2CB6               	goto	l2815
  6284  0472                     l2799:	
  6285                           
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 760:     cp
      +                           = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  6287  0472  0844               	movf	sprintf@ap,w
  6288  0473  0084               	movwf	4
  6289  0474  1383               	bcf	3,7	;select IRP bank0
  6290  0475  0800               	movf	0,w
  6291  0476  00C5               	movwf	sprintf@cp
  6292  0477  0A84               	incf	4,f
  6293  0478  0800               	movf	0,w
  6294  0479  0384               	decf	4,f
  6295  047A  00C6               	movwf	sprintf@cp+1
  6296  047B                     l2801:	
  6297  047B  3002               	movlw	2
  6298  047C  00BE               	movwf	??_sprintf
  6299  047D  083E               	movf	??_sprintf,w
  6300  047E  07C4               	addwf	sprintf@ap,f
  6301  047F                     l2803:	
  6302                           
  6303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 766:    if(
      +                          !cp)
  6304  047F  0845               	movf	sprintf@cp,w
  6305  0480  0446               	iorwf	sprintf@cp+1,w
  6306  0481  1D03               	btfss	3,2
  6307  0482  2C84               	goto	u2871
  6308  0483  2C85               	goto	u2870
  6309  0484                     u2871:	
  6310  0484  2CA7               	goto	l564
  6311  0485                     u2870:	
  6312  0485                     l2805:	
  6313                           
  6314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 767:     cp
      +                           = "(null)";
  6315  0485  3047               	movlw	low (STR_19| (0+32768))
  6316  0486  00C5               	movwf	sprintf@cp
  6317  0487  3084               	movlw	high (STR_19| (0+32768))
  6318  0488  00C6               	movwf	sprintf@cp+1
  6319  0489  2CA7               	goto	l564
  6320  048A                     l2807:	
  6321                           
  6322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 804:     ((
      +                          *sp++ = (*cp++)));
  6323  048A  0846               	movf	sprintf@cp+1,w
  6324  048B  00FF               	movwf	btemp+1
  6325  048C  0845               	movf	sprintf@cp,w
  6326  048D  0084               	movwf	4
  6327  048E  120A  118A  2300  120A  118A  	fcall	stringtab
  6328  0493  00BE               	movwf	??_sprintf
  6329  0494  0834               	movf	sprintf@sp,w
  6330  0495  0084               	movwf	4
  6331  0496  1783               	bsf	3,7
  6332  0497  1C35               	btfss	sprintf@sp+1,0
  6333  0498  1383               	bcf	3,7
  6334  0499  083E               	movf	??_sprintf,w
  6335  049A  0080               	movwf	0
  6336  049B                     l2809:	
  6337  049B  3001               	movlw	1
  6338  049C  07C5               	addwf	sprintf@cp,f
  6339  049D  1803               	skipnc
  6340  049E  0AC6               	incf	sprintf@cp+1,f
  6341  049F  3000               	movlw	0
  6342  04A0  07C6               	addwf	sprintf@cp+1,f
  6343  04A1                     l2811:	
  6344  04A1  3001               	movlw	1
  6345  04A2  07B4               	addwf	sprintf@sp,f
  6346  04A3  1803               	skipnc
  6347  04A4  0AB5               	incf	sprintf@sp+1,f
  6348  04A5  3000               	movlw	0
  6349  04A6  07B5               	addwf	sprintf@sp+1,f
  6350  04A7                     l564:	
  6351                           
  6352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 803:    whi
      +                          le(*cp)
  6353  04A7  0846               	movf	sprintf@cp+1,w
  6354  04A8  00FF               	movwf	btemp+1
  6355  04A9  0845               	movf	sprintf@cp,w
  6356  04AA  0084               	movwf	4
  6357  04AB  120A  118A  2300  120A  118A  	fcall	stringtab
  6358  04B0  3A00               	xorlw	0
  6359  04B1  1D03               	skipz
  6360  04B2  2CB4               	goto	u2881
  6361  04B3  2CB5               	goto	u2880
  6362  04B4                     u2881:	
  6363  04B4  2C8A               	goto	l2807
  6364  04B5                     u2880:	
  6365  04B5  2D87               	goto	l2855
  6366  04B6                     l2815:	
  6367  04B6  0837               	movf	sprintf@f+1,w
  6368  04B7  00BF               	movwf	??_sprintf+1
  6369  04B8  0836               	movf	sprintf@f,w
  6370  04B9  00BE               	movwf	??_sprintf
  6371  04BA  0AB6               	incf	sprintf@f,f
  6372  04BB  1903               	skipnz
  6373  04BC  0AB7               	incf	sprintf@f+1,f
  6374  04BD  083F               	movf	??_sprintf+1,w
  6375  04BE  00FF               	movwf	btemp+1
  6376  04BF  083E               	movf	??_sprintf,w
  6377  04C0  0084               	movwf	4
  6378  04C1  120A  118A  2300  120A  118A  	fcall	stringtab
  6379  04C6  00C9               	movwf	sprintf@c
  6380  04C7  00C0               	movwf	??_sprintf+2
  6381  04C8  01C1               	clrf	??_sprintf+3
  6382                           
  6383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6384                           ; Switch size 1, requested type "simple"
  6385                           ; Number of cases is 1, Range of values is 0 to 0
  6386                           ; switch strategies available:
  6387                           ; Name         Instructions Cycles
  6388                           ; simple_byte            4     3 (average)
  6389                           ; direct_byte           11     8 (fixed)
  6390                           ; jumptable            260     6 (fixed)
  6391                           ;	Chosen strategy is simple_byte
  6392  04C9  0841               	movf	??_sprintf+3,w
  6393  04CA  3A00               	xorlw	0	; case 0
  6394  04CB  1903               	skipnz
  6395  04CC  2CCE               	goto	l3519
  6396  04CD  2D87               	goto	l2855
  6397  04CE                     l3519:	
  6398                           
  6399                           ; Switch size 1, requested type "simple"
  6400                           ; Number of cases is 4, Range of values is 0 to 115
  6401                           ; switch strategies available:
  6402                           ; Name         Instructions Cycles
  6403                           ; simple_byte           13     7 (average)
  6404                           ; jumptable            260     6 (fixed)
  6405                           ;	Chosen strategy is simple_byte
  6406  04CE  0840               	movf	??_sprintf+2,w
  6407  04CF  3A00               	xorlw	0	; case 0
  6408  04D0  1903               	skipnz
  6409  04D1  2D9F               	goto	l2857
  6410  04D2  3A64               	xorlw	100	; case 100
  6411  04D3  1903               	skipnz
  6412  04D4  2CDC               	goto	l2817
  6413  04D5  3A0D               	xorlw	13	; case 105
  6414  04D6  1903               	skipnz
  6415  04D7  2CDC               	goto	l2817
  6416  04D8  3A1A               	xorlw	26	; case 115
  6417  04D9  1903               	skipnz
  6418  04DA  2C72               	goto	l2799
  6419  04DB  2D87               	goto	l2855
  6420  04DC                     l2817:	
  6421                           
  6422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6423  04DC  0844               	movf	sprintf@ap,w
  6424  04DD  0084               	movwf	4
  6425  04DE  1383               	bcf	3,7	;select IRP bank0
  6426  04DF  0800               	movf	0,w
  6427  04E0  00C7               	movwf	sprintf@val
  6428  04E1  0A84               	incf	4,f
  6429  04E2  0800               	movf	0,w
  6430  04E3  00C8               	movwf	sprintf@val+1
  6431  04E4                     l2819:	
  6432  04E4  3002               	movlw	2
  6433  04E5  00BE               	movwf	??_sprintf
  6434  04E6  083E               	movf	??_sprintf,w
  6435  04E7  07C4               	addwf	sprintf@ap,f
  6436  04E8                     l2821:	
  6437                           
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  6439  04E8  1FC8               	btfss	sprintf@val+1,7
  6440  04E9  2CEB               	goto	u2891
  6441  04EA  2CEC               	goto	u2890
  6442  04EB                     u2891:	
  6443  04EB  2CF5               	goto	l2827
  6444  04EC                     u2890:	
  6445  04EC                     l2823:	
  6446                           
  6447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  6448  04EC  3003               	movlw	3
  6449  04ED  00BE               	movwf	??_sprintf
  6450  04EE  083E               	movf	??_sprintf,w
  6451  04EF  04C2               	iorwf	sprintf@flag,f
  6452  04F0                     l2825:	
  6453                           
  6454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  6455  04F0  09C7               	comf	sprintf@val,f
  6456  04F1  09C8               	comf	sprintf@val+1,f
  6457  04F2  0AC7               	incf	sprintf@val,f
  6458  04F3  1903               	skipnz
  6459  04F4  0AC8               	incf	sprintf@val+1,f
  6460  04F5                     l2827:	
  6461                           
  6462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6463  04F5  01C9               	clrf	sprintf@c
  6464  04F6  0AC9               	incf	sprintf@c,f
  6465  04F7                     l2833:	
  6466                           
  6467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  6468  04F7  0849               	movf	sprintf@c,w
  6469  04F8  00BE               	movwf	??_sprintf
  6470  04F9  073E               	addwf	??_sprintf,w
  6471  04FA  3E12               	addlw	low (_dpowers| (0+32768))
  6472  04FB  0084               	movwf	4
  6473  04FC  3083               	movlw	high (_dpowers| (0+32768))
  6474  04FD  1803               	skipnc
  6475  04FE  3E01               	addlw	1
  6476  04FF  00FF               	movwf	btemp+1
  6477  0500  120A  118A  2300  120A  118A  	fcall	stringtab
  6478  0505  00BF               	movwf	??_sprintf+1
  6479  0506  120A  118A  2300  120A  118A  	fcall	stringtab
  6480  050B  00C0               	movwf	??_sprintf+2
  6481  050C  0840               	movf	??_sprintf+2,w
  6482  050D  0248               	subwf	sprintf@val+1,w
  6483  050E  1D03               	skipz
  6484  050F  2D12               	goto	u2905
  6485  0510  083F               	movf	??_sprintf+1,w
  6486  0511  0247               	subwf	sprintf@val,w
  6487  0512                     u2905:	
  6488  0512  1803               	skipnc
  6489  0513  2D15               	goto	u2901
  6490  0514  2D16               	goto	u2900
  6491  0515                     u2901:	
  6492  0515  2D17               	goto	l2837
  6493  0516                     u2900:	
  6494  0516  2D21               	goto	l2839
  6495  0517                     l2837:	
  6496  0517  3001               	movlw	1
  6497  0518  00BE               	movwf	??_sprintf
  6498  0519  083E               	movf	??_sprintf,w
  6499  051A  07C9               	addwf	sprintf@c,f
  6500  051B  3005               	movlw	5
  6501  051C  0649               	xorwf	sprintf@c,w
  6502  051D  1D03               	btfss	3,2
  6503  051E  2D20               	goto	u2911
  6504  051F  2D21               	goto	u2910
  6505  0520                     u2911:	
  6506  0520  2CF7               	goto	l2833
  6507  0521                     u2910:	
  6508  0521                     l2839:	
  6509                           
  6510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  6511  0521  0842               	movf	sprintf@flag,w
  6512  0522  3903               	andlw	3
  6513  0523  1903               	btfsc	3,2
  6514  0524  2D26               	goto	u2921
  6515  0525  2D27               	goto	u2920
  6516  0526                     u2921:	
  6517  0526  2D36               	goto	l2845
  6518  0527                     u2920:	
  6519  0527                     l2841:	
  6520                           
  6521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  6522  0527  302D               	movlw	45
  6523  0528  00BE               	movwf	??_sprintf
  6524  0529  0834               	movf	sprintf@sp,w
  6525  052A  0084               	movwf	4
  6526  052B  1783               	bsf	3,7
  6527  052C  1C35               	btfss	sprintf@sp+1,0
  6528  052D  1383               	bcf	3,7
  6529  052E  083E               	movf	??_sprintf,w
  6530  052F  0080               	movwf	0
  6531  0530                     l2843:	
  6532  0530  3001               	movlw	1
  6533  0531  07B4               	addwf	sprintf@sp,f
  6534  0532  1803               	skipnc
  6535  0533  0AB5               	incf	sprintf@sp+1,f
  6536  0534  3000               	movlw	0
  6537  0535  07B5               	addwf	sprintf@sp+1,f
  6538  0536                     l2845:	
  6539                           
  6540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  6541  0536  0849               	movf	sprintf@c,w
  6542  0537  00BE               	movwf	??_sprintf
  6543  0538  083E               	movf	??_sprintf,w
  6544  0539  00C3               	movwf	sprintf@prec
  6545                           
  6546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6547  053A  2D7E               	goto	l2853
  6548  053B                     l2847:	
  6549                           
  6550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  6551  053B  300A               	movlw	10
  6552  053C  00AE               	movwf	___lwmod@divisor
  6553  053D  3000               	movlw	0
  6554  053E  00AF               	movwf	___lwmod@divisor+1
  6555  053F  0843               	movf	sprintf@prec,w
  6556  0540  00BE               	movwf	??_sprintf
  6557  0541  073E               	addwf	??_sprintf,w
  6558  0542  3E12               	addlw	low (_dpowers| (0+32768))
  6559  0543  0084               	movwf	4
  6560  0544  3083               	movlw	high (_dpowers| (0+32768))
  6561  0545  1803               	skipnc
  6562  0546  3E01               	addlw	1
  6563  0547  00FF               	movwf	btemp+1
  6564  0548  120A  118A  2300  120A  118A  	fcall	stringtab
  6565  054D  00A6               	movwf	___lwdiv@divisor
  6566  054E  120A  118A  2300  120A  118A  	fcall	stringtab
  6567  0553  00A7               	movwf	___lwdiv@divisor+1
  6568  0554  0848               	movf	sprintf@val+1,w
  6569  0555  00A9               	movwf	___lwdiv@dividend+1
  6570  0556  0847               	movf	sprintf@val,w
  6571  0557  00A8               	movwf	___lwdiv@dividend
  6572  0558  120A  158A  2266  120A  118A  	fcall	___lwdiv
  6573  055D  1283               	bcf	3,5	;RP0=0, select bank0
  6574  055E  1303               	bcf	3,6	;RP1=0, select bank0
  6575  055F  0827               	movf	?___lwdiv+1,w
  6576  0560  00B1               	movwf	___lwmod@dividend+1
  6577  0561  0826               	movf	?___lwdiv,w
  6578  0562  00B0               	movwf	___lwmod@dividend
  6579  0563  120A  158A  21AB  120A  118A  	fcall	___lwmod
  6580  0568  1283               	bcf	3,5	;RP0=0, select bank0
  6581  0569  1303               	bcf	3,6	;RP1=0, select bank0
  6582  056A  082E               	movf	?___lwmod,w
  6583  056B  3E30               	addlw	48
  6584  056C  00BF               	movwf	??_sprintf+1
  6585  056D  083F               	movf	??_sprintf+1,w
  6586  056E  00C9               	movwf	sprintf@c
  6587  056F                     l2849:	
  6588                           
  6589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  6590  056F  0849               	movf	sprintf@c,w
  6591  0570  00BE               	movwf	??_sprintf
  6592  0571  0834               	movf	sprintf@sp,w
  6593  0572  0084               	movwf	4
  6594  0573  1783               	bsf	3,7
  6595  0574  1C35               	btfss	sprintf@sp+1,0
  6596  0575  1383               	bcf	3,7
  6597  0576  083E               	movf	??_sprintf,w
  6598  0577  0080               	movwf	0
  6599  0578                     l2851:	
  6600  0578  3001               	movlw	1
  6601  0579  07B4               	addwf	sprintf@sp,f
  6602  057A  1803               	skipnc
  6603  057B  0AB5               	incf	sprintf@sp+1,f
  6604  057C  3000               	movlw	0
  6605  057D  07B5               	addwf	sprintf@sp+1,f
  6606  057E                     l2853:	
  6607                           
  6608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  6609  057E  30FF               	movlw	255
  6610  057F  00BE               	movwf	??_sprintf
  6611  0580  083E               	movf	??_sprintf,w
  6612  0581  07C3               	addwf	sprintf@prec,f
  6613  0582  0A43               	incf	sprintf@prec,w
  6614  0583  1D03               	btfss	3,2
  6615  0584  2D86               	goto	u2931
  6616  0585  2D87               	goto	u2930
  6617  0586                     u2931:	
  6618  0586  2D3B               	goto	l2847
  6619  0587                     u2930:	
  6620  0587                     l2855:	
  6621                           
  6622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6623  0587  0837               	movf	sprintf@f+1,w
  6624  0588  00BF               	movwf	??_sprintf+1
  6625  0589  0836               	movf	sprintf@f,w
  6626  058A  00BE               	movwf	??_sprintf
  6627  058B  0AB6               	incf	sprintf@f,f
  6628  058C  1903               	skipnz
  6629  058D  0AB7               	incf	sprintf@f+1,f
  6630  058E  083F               	movf	??_sprintf+1,w
  6631  058F  00FF               	movwf	btemp+1
  6632  0590  083E               	movf	??_sprintf,w
  6633  0591  0084               	movwf	4
  6634  0592  120A  118A  2300  120A  118A  	fcall	stringtab
  6635  0597  00C0               	movwf	??_sprintf+2
  6636  0598  0840               	movf	??_sprintf+2,w
  6637  0599  00C9               	movwf	sprintf@c
  6638  059A  0849               	movf	sprintf@c,w
  6639  059B  1D03               	btfss	3,2
  6640  059C  2D9E               	goto	u2941
  6641  059D  2D9F               	goto	u2940
  6642  059E                     u2941:	
  6643  059E  2C5A               	goto	l2791
  6644  059F                     u2940:	
  6645  059F                     l2857:	
  6646                           
  6647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  6648  059F  0834               	movf	sprintf@sp,w
  6649  05A0  0084               	movwf	4
  6650  05A1  1783               	bsf	3,7
  6651  05A2  1C35               	btfss	sprintf@sp+1,0
  6652  05A3  1383               	bcf	3,7
  6653  05A4  0180               	clrf	0
  6654  05A5                     l577:	
  6655  05A5  0008               	return
  6656  05A6                     __end_of_sprintf:	
  6657                           
  6658                           	psect	text26
  6659  0DF5                     __ptext26:	
  6660 ;; *************** function _mostrarDigitos *****************
  6661 ;; Defined at:
  6662 ;;		line 17 in file "mostrarInicializar.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  num             2   20[BANK0 ] unsigned int 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6676 ;;      Params:         0       2       0       0       0
  6677 ;;      Locals:         0       2       0       0       0
  6678 ;;      Temps:          0       0       0       0       0
  6679 ;;      Totals:         0       4       0       0       0
  6680 ;;Total ram usage:        4 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    2
  6683 ;; This function calls:
  6684 ;;		___lwdiv
  6685 ;;		___lwmod
  6686 ;; This function is called by:
  6687 ;;		_accionesAceptar
  6688 ;;		_accionesDeshacer
  6689 ;;		_lecturaEtiqueta
  6690 ;;		_main
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           
  6695                           ;psect for function _mostrarDigitos
  6696  0DF5                     _mostrarDigitos:	
  6697  0DF5                     l3113:	
  6698                           ;incstack = 0
  6699                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6700                           
  6701                           
  6702                           ;mostrarInicializar.c: 19:     PORTB = BS[num/100];
  6703  0DF5  3064               	movlw	100
  6704  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  6705  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  6706  0DF8  00A6               	movwf	___lwdiv@divisor
  6707  0DF9  3000               	movlw	0
  6708  0DFA  00A7               	movwf	___lwdiv@divisor+1
  6709  0DFB  0835               	movf	mostrarDigitos@num+1,w
  6710  0DFC  00A9               	movwf	___lwdiv@dividend+1
  6711  0DFD  0834               	movf	mostrarDigitos@num,w
  6712  0DFE  00A8               	movwf	___lwdiv@dividend
  6713  0DFF  120A  158A  2266  120A  158A  	fcall	___lwdiv
  6714  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  6715  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  6716  0E06  0826               	movf	?___lwdiv,w
  6717  0E07  3E1C               	addlw	low (_BS| (0+32768))
  6718  0E08  0084               	movwf	4
  6719  0E09  3083               	movlw	high (_BS| (0+32768))
  6720  0E0A  1803               	skipnc
  6721  0E0B  3E01               	addlw	1
  6722  0E0C  00FF               	movwf	btemp+1
  6723  0E0D  120A  118A  2300  120A  158A  	fcall	stringtab
  6724  0E12  0086               	movwf	6	;volatile
  6725  0E13                     l3115:	
  6726                           
  6727                           ;mostrarInicializar.c: 20:     PORTB = PORTB | ((num%100)/10);
  6728  0E13  300A               	movlw	10
  6729  0E14  00A6               	movwf	___lwdiv@divisor
  6730  0E15  3000               	movlw	0
  6731  0E16  00A7               	movwf	___lwdiv@divisor+1
  6732  0E17  0835               	movf	mostrarDigitos@num+1,w
  6733  0E18  00B1               	movwf	___lwmod@dividend+1
  6734  0E19  0834               	movf	mostrarDigitos@num,w
  6735  0E1A  00B0               	movwf	___lwmod@dividend
  6736  0E1B  3064               	movlw	100
  6737  0E1C  00AE               	movwf	___lwmod@divisor
  6738  0E1D  3000               	movlw	0
  6739  0E1E  00AF               	movwf	___lwmod@divisor+1
  6740  0E1F  120A  158A  21AB  120A  158A  	fcall	___lwmod
  6741  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  6742  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  6743  0E26  082F               	movf	?___lwmod+1,w
  6744  0E27  00A9               	movwf	___lwdiv@dividend+1
  6745  0E28  082E               	movf	?___lwmod,w
  6746  0E29  00A8               	movwf	___lwdiv@dividend
  6747  0E2A  120A  158A  2266  120A  158A  	fcall	___lwdiv
  6748  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  6749  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  6750  0E31  0826               	movf	?___lwdiv,w
  6751  0E32  0406               	iorwf	6,w
  6752  0E33  0086               	movwf	6	;volatile
  6753  0E34                     l3117:	
  6754                           
  6755                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6756  0E34  0835               	movf	mostrarDigitos@num+1,w
  6757  0E35  00B1               	movwf	___lwmod@dividend+1
  6758  0E36  0834               	movf	mostrarDigitos@num,w
  6759  0E37  00B0               	movwf	___lwmod@dividend
  6760  0E38  3064               	movlw	100
  6761  0E39  00AE               	movwf	___lwmod@divisor
  6762  0E3A  3000               	movlw	0
  6763  0E3B  00AF               	movwf	___lwmod@divisor+1
  6764  0E3C  120A  158A  21AB  120A  158A  	fcall	___lwmod
  6765  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  6766  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  6767  0E43  082F               	movf	?___lwmod+1,w
  6768  0E44  00B7               	movwf	_mostrarDigitos$1099+1
  6769  0E45  082E               	movf	?___lwmod,w
  6770  0E46  00B6               	movwf	_mostrarDigitos$1099
  6771                           
  6772                           ;mostrarInicializar.c: 21:     PORTD = BS[(num%100)%10];
  6773  0E47  300A               	movlw	10
  6774  0E48  00AE               	movwf	___lwmod@divisor
  6775  0E49  3000               	movlw	0
  6776  0E4A  00AF               	movwf	___lwmod@divisor+1
  6777  0E4B  0837               	movf	_mostrarDigitos$1099+1,w
  6778  0E4C  00B1               	movwf	___lwmod@dividend+1
  6779  0E4D  0836               	movf	_mostrarDigitos$1099,w
  6780  0E4E  00B0               	movwf	___lwmod@dividend
  6781  0E4F  120A  158A  21AB  120A  158A  	fcall	___lwmod
  6782  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  6783  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  6784  0E56  082E               	movf	?___lwmod,w
  6785  0E57  3E1C               	addlw	low (_BS| (0+32768))
  6786  0E58  0084               	movwf	4
  6787  0E59  3083               	movlw	high (_BS| (0+32768))
  6788  0E5A  1803               	skipnc
  6789  0E5B  3E01               	addlw	1
  6790  0E5C  00FF               	movwf	btemp+1
  6791  0E5D  120A  118A  2300  120A  158A  	fcall	stringtab
  6792  0E62  0088               	movwf	8	;volatile
  6793  0E63                     l406:	
  6794  0E63  0008               	return
  6795  0E64                     __end_of_mostrarDigitos:	
  6796                           
  6797                           	psect	text27
  6798  09AB                     __ptext27:	
  6799 ;; *************** function ___lwmod *****************
  6800 ;; Defined at:
  6801 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  divisor         2   14[BANK0 ] unsigned int 
  6804 ;;  dividend        2   16[BANK0 ] unsigned int 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  counter         1   19[BANK0 ] unsigned char 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  2   14[BANK0 ] unsigned int 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6816 ;;      Params:         0       4       0       0       0
  6817 ;;      Locals:         0       1       0       0       0
  6818 ;;      Temps:          0       1       0       0       0
  6819 ;;      Totals:         0       6       0       0       0
  6820 ;;Total ram usage:        6 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    1
  6823 ;; This function calls:
  6824 ;;		Nothing
  6825 ;; This function is called by:
  6826 ;;		_main
  6827 ;;		_mostrarDigitos
  6828 ;;		_sprintf
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           
  6833                           ;psect for function ___lwmod
  6834  09AB                     ___lwmod:	
  6835  09AB                     l2767:	
  6836                           ;incstack = 0
  6837                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6838                           
  6839  09AB  1283               	bcf	3,5	;RP0=0, select bank0
  6840  09AC  1303               	bcf	3,6	;RP1=0, select bank0
  6841  09AD  082E               	movf	___lwmod@divisor,w
  6842  09AE  042F               	iorwf	___lwmod@divisor+1,w
  6843  09AF  1903               	btfsc	3,2
  6844  09B0  29B2               	goto	u2801
  6845  09B1  29B3               	goto	u2800
  6846  09B2                     u2801:	
  6847  09B2  29E2               	goto	l2785
  6848  09B3                     u2800:	
  6849  09B3                     l2769:	
  6850  09B3  01B3               	clrf	___lwmod@counter
  6851  09B4  0AB3               	incf	___lwmod@counter,f
  6852  09B5  29C1               	goto	l2775
  6853  09B6                     l2771:	
  6854  09B6  3001               	movlw	1
  6855  09B7                     u2815:	
  6856  09B7  1003               	clrc
  6857  09B8  0DAE               	rlf	___lwmod@divisor,f
  6858  09B9  0DAF               	rlf	___lwmod@divisor+1,f
  6859  09BA  3EFF               	addlw	-1
  6860  09BB  1D03               	skipz
  6861  09BC  29B7               	goto	u2815
  6862  09BD                     l2773:	
  6863  09BD  3001               	movlw	1
  6864  09BE  00B2               	movwf	??___lwmod
  6865  09BF  0832               	movf	??___lwmod,w
  6866  09C0  07B3               	addwf	___lwmod@counter,f
  6867  09C1                     l2775:	
  6868  09C1  1FAF               	btfss	___lwmod@divisor+1,7
  6869  09C2  29C4               	goto	u2821
  6870  09C3  29C5               	goto	u2820
  6871  09C4                     u2821:	
  6872  09C4  29B6               	goto	l2771
  6873  09C5                     u2820:	
  6874  09C5                     l2777:	
  6875  09C5  082F               	movf	___lwmod@divisor+1,w
  6876  09C6  0231               	subwf	___lwmod@dividend+1,w
  6877  09C7  1D03               	skipz
  6878  09C8  29CB               	goto	u2835
  6879  09C9  082E               	movf	___lwmod@divisor,w
  6880  09CA  0230               	subwf	___lwmod@dividend,w
  6881  09CB                     u2835:	
  6882  09CB  1C03               	skipc
  6883  09CC  29CE               	goto	u2831
  6884  09CD  29CF               	goto	u2830
  6885  09CE                     u2831:	
  6886  09CE  29D5               	goto	l2781
  6887  09CF                     u2830:	
  6888  09CF                     l2779:	
  6889  09CF  082E               	movf	___lwmod@divisor,w
  6890  09D0  02B0               	subwf	___lwmod@dividend,f
  6891  09D1  082F               	movf	___lwmod@divisor+1,w
  6892  09D2  1C03               	skipc
  6893  09D3  03B1               	decf	___lwmod@dividend+1,f
  6894  09D4  02B1               	subwf	___lwmod@dividend+1,f
  6895  09D5                     l2781:	
  6896  09D5  3001               	movlw	1
  6897  09D6                     u2845:	
  6898  09D6  1003               	clrc
  6899  09D7  0CAF               	rrf	___lwmod@divisor+1,f
  6900  09D8  0CAE               	rrf	___lwmod@divisor,f
  6901  09D9  3EFF               	addlw	-1
  6902  09DA  1D03               	skipz
  6903  09DB  29D6               	goto	u2845
  6904  09DC                     l2783:	
  6905  09DC  3001               	movlw	1
  6906  09DD  02B3               	subwf	___lwmod@counter,f
  6907  09DE  1D03               	btfss	3,2
  6908  09DF  29E1               	goto	u2851
  6909  09E0  29E2               	goto	u2850
  6910  09E1                     u2851:	
  6911  09E1  29C5               	goto	l2777
  6912  09E2                     u2850:	
  6913  09E2                     l2785:	
  6914  09E2  0831               	movf	___lwmod@dividend+1,w
  6915  09E3  00AF               	movwf	?___lwmod+1
  6916  09E4  0830               	movf	___lwmod@dividend,w
  6917  09E5  00AE               	movwf	?___lwmod
  6918  09E6                     l863:	
  6919  09E6  0008               	return
  6920  09E7                     __end_of___lwmod:	
  6921                           
  6922                           	psect	text28
  6923  0A66                     __ptext28:	
  6924 ;; *************** function ___lwdiv *****************
  6925 ;; Defined at:
  6926 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  divisor         2    6[BANK0 ] unsigned int 
  6929 ;;  dividend        2    8[BANK0 ] unsigned int 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  quotient        2   12[BANK0 ] unsigned int 
  6932 ;;  counter         1   11[BANK0 ] unsigned char 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  2    6[BANK0 ] unsigned int 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         0       4       0       0       0
  6943 ;;      Locals:         0       3       0       0       0
  6944 ;;      Temps:          0       1       0       0       0
  6945 ;;      Totals:         0       8       0       0       0
  6946 ;;Total ram usage:        8 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_main
  6953 ;;		_mostrarDigitos
  6954 ;;		_sprintf
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function ___lwdiv
  6960  0A66                     ___lwdiv:	
  6961  0A66                     l2741:	
  6962                           ;incstack = 0
  6963                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6964                           
  6965  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  6966  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  6967  0A68  01AC               	clrf	___lwdiv@quotient
  6968  0A69  01AD               	clrf	___lwdiv@quotient+1
  6969  0A6A                     l2743:	
  6970  0A6A  0826               	movf	___lwdiv@divisor,w
  6971  0A6B  0427               	iorwf	___lwdiv@divisor+1,w
  6972  0A6C  1903               	btfsc	3,2
  6973  0A6D  2A6F               	goto	u2731
  6974  0A6E  2A70               	goto	u2730
  6975  0A6F                     u2731:	
  6976  0A6F  2AA7               	goto	l2763
  6977  0A70                     u2730:	
  6978  0A70                     l2745:	
  6979  0A70  01AB               	clrf	___lwdiv@counter
  6980  0A71  0AAB               	incf	___lwdiv@counter,f
  6981  0A72  2A7E               	goto	l2751
  6982  0A73                     l2747:	
  6983  0A73  3001               	movlw	1
  6984  0A74                     u2745:	
  6985  0A74  1003               	clrc
  6986  0A75  0DA6               	rlf	___lwdiv@divisor,f
  6987  0A76  0DA7               	rlf	___lwdiv@divisor+1,f
  6988  0A77  3EFF               	addlw	-1
  6989  0A78  1D03               	skipz
  6990  0A79  2A74               	goto	u2745
  6991  0A7A                     l2749:	
  6992  0A7A  3001               	movlw	1
  6993  0A7B  00AA               	movwf	??___lwdiv
  6994  0A7C  082A               	movf	??___lwdiv,w
  6995  0A7D  07AB               	addwf	___lwdiv@counter,f
  6996  0A7E                     l2751:	
  6997  0A7E  1FA7               	btfss	___lwdiv@divisor+1,7
  6998  0A7F  2A81               	goto	u2751
  6999  0A80  2A82               	goto	u2750
  7000  0A81                     u2751:	
  7001  0A81  2A73               	goto	l2747
  7002  0A82                     u2750:	
  7003  0A82                     l2753:	
  7004  0A82  3001               	movlw	1
  7005  0A83                     u2765:	
  7006  0A83  1003               	clrc
  7007  0A84  0DAC               	rlf	___lwdiv@quotient,f
  7008  0A85  0DAD               	rlf	___lwdiv@quotient+1,f
  7009  0A86  3EFF               	addlw	-1
  7010  0A87  1D03               	skipz
  7011  0A88  2A83               	goto	u2765
  7012  0A89  0827               	movf	___lwdiv@divisor+1,w
  7013  0A8A  0229               	subwf	___lwdiv@dividend+1,w
  7014  0A8B  1D03               	skipz
  7015  0A8C  2A8F               	goto	u2775
  7016  0A8D  0826               	movf	___lwdiv@divisor,w
  7017  0A8E  0228               	subwf	___lwdiv@dividend,w
  7018  0A8F                     u2775:	
  7019  0A8F  1C03               	skipc
  7020  0A90  2A92               	goto	u2771
  7021  0A91  2A93               	goto	u2770
  7022  0A92                     u2771:	
  7023  0A92  2A9A               	goto	l2759
  7024  0A93                     u2770:	
  7025  0A93                     l2755:	
  7026  0A93  0826               	movf	___lwdiv@divisor,w
  7027  0A94  02A8               	subwf	___lwdiv@dividend,f
  7028  0A95  0827               	movf	___lwdiv@divisor+1,w
  7029  0A96  1C03               	skipc
  7030  0A97  03A9               	decf	___lwdiv@dividend+1,f
  7031  0A98  02A9               	subwf	___lwdiv@dividend+1,f
  7032  0A99                     l2757:	
  7033  0A99  142C               	bsf	___lwdiv@quotient,0
  7034  0A9A                     l2759:	
  7035  0A9A  3001               	movlw	1
  7036  0A9B                     u2785:	
  7037  0A9B  1003               	clrc
  7038  0A9C  0CA7               	rrf	___lwdiv@divisor+1,f
  7039  0A9D  0CA6               	rrf	___lwdiv@divisor,f
  7040  0A9E  3EFF               	addlw	-1
  7041  0A9F  1D03               	skipz
  7042  0AA0  2A9B               	goto	u2785
  7043  0AA1                     l2761:	
  7044  0AA1  3001               	movlw	1
  7045  0AA2  02AB               	subwf	___lwdiv@counter,f
  7046  0AA3  1D03               	btfss	3,2
  7047  0AA4  2AA6               	goto	u2791
  7048  0AA5  2AA7               	goto	u2790
  7049  0AA6                     u2791:	
  7050  0AA6  2A82               	goto	l2753
  7051  0AA7                     u2790:	
  7052  0AA7                     l2763:	
  7053  0AA7  082D               	movf	___lwdiv@quotient+1,w
  7054  0AA8  00A7               	movwf	?___lwdiv+1
  7055  0AA9  082C               	movf	___lwdiv@quotient,w
  7056  0AAA  00A6               	movwf	?___lwdiv
  7057  0AAB                     l853:	
  7058  0AAB  0008               	return
  7059  0AAC                     __end_of___lwdiv:	
  7060                           
  7061                           	psect	text29
  7062  096F                     __ptext29:	
  7063 ;; *************** function _envioTX *****************
  7064 ;; Defined at:
  7065 ;;		line 39 in file "mostrarInicializar.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  mensaje         2    0[BANK0 ] PTR unsigned char 
  7068 ;;		 -> STR_18(19), agregarModificarPrecio@mensaje(10), main@bufferMsj(16), main@strLote(32), 
  7069 ;;		 -> STR_14(40), lecturaConsulta@strLote(32), STR_12(20), STR_11(17), 
  7070 ;;		 -> STR_10(22), consultaPrecio@mensaje(26), STR_7(40), STR_6(40), 
  7071 ;;		 -> cierreDeLote@strLote(32), STR_4(20), accionesPuertoSerial@mensaje(12), STR_2(19), 
  7072 ;;		 -> accionesAceptar@strLote(32), 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  i               2    5[BANK0 ] int 
  7075 ;;  transmitir      1    7[BANK0 ] unsigned char 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7085 ;;      Params:         0       2       0       0       0
  7086 ;;      Locals:         0       3       0       0       0
  7087 ;;      Temps:          0       3       0       0       0
  7088 ;;      Totals:         0       8       0       0       0
  7089 ;;Total ram usage:        8 bytes
  7090 ;; Hardware stack levels used:    2
  7091 ;; Hardware stack levels required when called:    1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_accionesAceptar
  7096 ;;		_accionesDeshacer
  7097 ;;		_accionesPuertoSerial
  7098 ;;		_lecturaEtiqueta
  7099 ;;		_cierreDeLote
  7100 ;;		_lecturaMas
  7101 ;;		_lecturaMenos
  7102 ;;		_consultaPrecio
  7103 ;;		_lecturaConsulta
  7104 ;;		_main
  7105 ;;		_agregarModificarPrecio
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           
  7110                           ;psect for function _envioTX
  7111  096F                     _envioTX:	
  7112  096F                     l2865:	
  7113                           ;incstack = 0
  7114                           ; Regs used in _envioTX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7115                           
  7116                           
  7117                           ;mostrarInicializar.c: 40:     int i = 0;
  7118  096F  1283               	bcf	3,5	;RP0=0, select bank0
  7119  0970  1303               	bcf	3,6	;RP1=0, select bank0
  7120  0971  01A5               	clrf	envioTX@i
  7121  0972  01A6               	clrf	envioTX@i+1
  7122  0973                     l2867:	
  7123                           
  7124                           ;mostrarInicializar.c: 41:     char transmitir=1;
  7125  0973  01A7               	clrf	envioTX@transmitir
  7126  0974  0AA7               	incf	envioTX@transmitir,f
  7127                           
  7128                           ;mostrarInicializar.c: 42:  while(transmitir){
  7129  0975  299F               	goto	l2877
  7130  0976                     l2869:	
  7131                           
  7132                           ;mostrarInicializar.c: 43:   TXREG = mensaje[i];
  7133  0976  0825               	movf	envioTX@i,w
  7134  0977  0720               	addwf	envioTX@mensaje,w
  7135  0978  00A3               	movwf	??_envioTX+1
  7136  0979  0821               	movf	envioTX@mensaje+1,w
  7137  097A  00A2               	movwf	??_envioTX
  7138  097B  1803               	skipnc
  7139  097C  0AA2               	incf	??_envioTX,f
  7140  097D  1FA5               	btfss	envioTX@i,7
  7141  097E  2980               	goto	u2950
  7142  097F  03A2               	decf	??_envioTX,f
  7143  0980                     u2950:	
  7144  0980  1283               	bcf	3,5	;RP0=0, select bank0
  7145  0981  1303               	bcf	3,6	;RP1=0, select bank0
  7146  0982  0822               	movf	??_envioTX,w
  7147  0983  00A4               	movwf	??_envioTX+2
  7148  0984  0824               	movf	??_envioTX+2,w
  7149  0985  00FF               	movwf	btemp+1
  7150  0986  0823               	movf	??_envioTX+1,w
  7151  0987  0084               	movwf	4
  7152  0988  120A  118A  2300  120A  158A  	fcall	stringtab
  7153  098D  0099               	movwf	25	;volatile
  7154  098E                     l2871:	
  7155                           
  7156                           ;mostrarInicializar.c: 44:   if (TXREG==0){
  7157  098E  0819               	movf	25,w	;volatile
  7158  098F  1D03               	btfss	3,2
  7159  0990  2992               	goto	u2961
  7160  0991  2993               	goto	u2960
  7161  0992                     u2961:	
  7162  0992  2995               	goto	l2875
  7163  0993                     u2960:	
  7164  0993                     l2873:	
  7165                           
  7166                           ;mostrarInicializar.c: 45:    transmitir=0;
  7167  0993  01A7               	clrf	envioTX@transmitir
  7168                           
  7169                           ;mostrarInicializar.c: 46:         }
  7170  0994  299B               	goto	l418
  7171  0995                     l2875:	
  7172                           
  7173                           ;mostrarInicializar.c: 48:    i++;
  7174  0995  3001               	movlw	1
  7175  0996  07A5               	addwf	envioTX@i,f
  7176  0997  1803               	skipnc
  7177  0998  0AA6               	incf	envioTX@i+1,f
  7178  0999  3000               	movlw	0
  7179  099A  07A6               	addwf	envioTX@i+1,f
  7180  099B                     l418:	
  7181  099B  1E0C               	btfss	12,4	;volatile
  7182  099C  299E               	goto	u2971
  7183  099D  299F               	goto	u2970
  7184  099E                     u2971:	
  7185  099E  299B               	goto	l418
  7186  099F                     u2970:	
  7187  099F                     l2877:	
  7188                           
  7189                           ;mostrarInicializar.c: 42:  while(transmitir){
  7190  099F  0827               	movf	envioTX@transmitir,w
  7191  09A0  1D03               	btfss	3,2
  7192  09A1  29A3               	goto	u2981
  7193  09A2  29A4               	goto	u2980
  7194  09A3                     u2981:	
  7195  09A3  2976               	goto	l2869
  7196  09A4                     u2980:	
  7197  09A4                     l2879:	
  7198                           
  7199                           ;mostrarInicializar.c: 53:     TXREG = 13;
  7200  09A4  300D               	movlw	13
  7201  09A5  0099               	movwf	25	;volatile
  7202  09A6                     l422:	
  7203                           ;mostrarInicializar.c: 54:     while(TXIF == 0);
  7204                           
  7205  09A6  1E0C               	btfss	12,4	;volatile
  7206  09A7  29A9               	goto	u2991
  7207  09A8  29AA               	goto	u2990
  7208  09A9                     u2991:	
  7209  09A9  29A6               	goto	l422
  7210  09AA                     u2990:	
  7211  09AA                     l425:	
  7212  09AA  0008               	return
  7213  09AB                     __end_of_envioTX:	
  7214                           
  7215                           	psect	text30
  7216  0AF5                     __ptext30:	
  7217 ;; *************** function _bailenLeds *****************
  7218 ;; Defined at:
  7219 ;;		line 25 in file "mostrarInicializar.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  i               2    3[BANK0 ] unsigned short 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      void 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7233 ;;      Params:         0       0       0       0       0
  7234 ;;      Locals:         0       2       0       0       0
  7235 ;;      Temps:          0       3       0       0       0
  7236 ;;      Totals:         0       5       0       0       0
  7237 ;;Total ram usage:        5 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    1
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_accionesAceptar
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function _bailenLeds
  7249  0AF5                     _bailenLeds:	
  7250  0AF5                     l3205:	
  7251                           ;incstack = 0
  7252                           ; Regs used in _bailenLeds: [wreg+status,2]
  7253                           
  7254                           
  7255                           ;mostrarInicializar.c: 27:     unsigned short int i;;mostrarInicializar.c: 28:     for (
      +                          i = 0; i < 3; i++) {
  7256  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  7257  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  7258  0AF7  01A3               	clrf	bailenLeds@i
  7259  0AF8  01A4               	clrf	bailenLeds@i+1
  7260  0AF9                     l409:	
  7261                           
  7262                           ;mostrarInicializar.c: 29:         RA3 = 1;
  7263  0AF9  1585               	bsf	5,3	;volatile
  7264  0AFA                     l3211:	
  7265                           
  7266                           ;mostrarInicializar.c: 30:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7267  0AFA  3002               	movlw	2
  7268  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  7269  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  7270  0AFD  00A2               	movwf	??_bailenLeds+2
  7271  0AFE  3004               	movlw	4
  7272  0AFF  00A1               	movwf	??_bailenLeds+1
  7273  0B00  30B9               	movlw	185
  7274  0B01  00A0               	movwf	??_bailenLeds
  7275  0B02                     u4007:	
  7276  0B02  0BA0               	decfsz	??_bailenLeds,f
  7277  0B03  2B02               	goto	u4007
  7278  0B04  0BA1               	decfsz	??_bailenLeds+1,f
  7279  0B05  2B02               	goto	u4007
  7280  0B06  0BA2               	decfsz	??_bailenLeds+2,f
  7281  0B07  2B02               	goto	u4007
  7282  0B08  2B09               	nop2
  7283  0B09                     l3213:	
  7284                           
  7285                           ;mostrarInicializar.c: 31:         RA5 = 1;
  7286  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  7287  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  7288  0B0B  1685               	bsf	5,5	;volatile
  7289                           
  7290                           ;mostrarInicializar.c: 32:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7291  0B0C  3002               	movlw	2
  7292  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  7293  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  7294  0B0F  00A2               	movwf	??_bailenLeds+2
  7295  0B10  3004               	movlw	4
  7296  0B11  00A1               	movwf	??_bailenLeds+1
  7297  0B12  30B9               	movlw	185
  7298  0B13  00A0               	movwf	??_bailenLeds
  7299  0B14                     u4017:	
  7300  0B14  0BA0               	decfsz	??_bailenLeds,f
  7301  0B15  2B14               	goto	u4017
  7302  0B16  0BA1               	decfsz	??_bailenLeds+1,f
  7303  0B17  2B14               	goto	u4017
  7304  0B18  0BA2               	decfsz	??_bailenLeds+2,f
  7305  0B19  2B14               	goto	u4017
  7306  0B1A  2B1B               	nop2
  7307  0B1B                     l3215:	
  7308                           
  7309                           ;mostrarInicializar.c: 33:         RA3 = 0;
  7310  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7311  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  7312  0B1D  1185               	bcf	5,3	;volatile
  7313                           
  7314                           ;mostrarInicializar.c: 34:         _delay((unsigned long)((200)*(4000000/4000.0)));
  7315  0B1E  3002               	movlw	2
  7316  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  7317  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  7318  0B21  00A2               	movwf	??_bailenLeds+2
  7319  0B22  3004               	movlw	4
  7320  0B23  00A1               	movwf	??_bailenLeds+1
  7321  0B24  30B9               	movlw	185
  7322  0B25  00A0               	movwf	??_bailenLeds
  7323  0B26                     u4027:	
  7324  0B26  0BA0               	decfsz	??_bailenLeds,f
  7325  0B27  2B26               	goto	u4027
  7326  0B28  0BA1               	decfsz	??_bailenLeds+1,f
  7327  0B29  2B26               	goto	u4027
  7328  0B2A  0BA2               	decfsz	??_bailenLeds+2,f
  7329  0B2B  2B26               	goto	u4027
  7330  0B2C  2B2D               	nop2
  7331  0B2D                     l3217:	
  7332                           
  7333                           ;mostrarInicializar.c: 35:         RA5 = 0;
  7334  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  7335  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  7336  0B2F  1285               	bcf	5,5	;volatile
  7337                           
  7338                           ;mostrarInicializar.c: 36:     }
  7339  0B30  3001               	movlw	1
  7340  0B31  07A3               	addwf	bailenLeds@i,f
  7341  0B32  1803               	skipnc
  7342  0B33  0AA4               	incf	bailenLeds@i+1,f
  7343  0B34  3000               	movlw	0
  7344  0B35  07A4               	addwf	bailenLeds@i+1,f
  7345  0B36  3000               	movlw	0
  7346  0B37  0224               	subwf	bailenLeds@i+1,w
  7347  0B38  3003               	movlw	3
  7348  0B39  1903               	skipnz
  7349  0B3A  0223               	subwf	bailenLeds@i,w
  7350  0B3B  1C03               	skipc
  7351  0B3C  2B3E               	goto	u3581
  7352  0B3D  2B3F               	goto	u3580
  7353  0B3E                     u3581:	
  7354  0B3E  2AF9               	goto	l409
  7355  0B3F                     u3580:	
  7356  0B3F                     l411:	
  7357  0B3F  0008               	return
  7358  0B40                     __end_of_bailenLeds:	
  7359                           
  7360                           	psect	text31
  7361  0B9B                     __ptext31:	
  7362 ;; *************** function _int_usart *****************
  7363 ;; Defined at:
  7364 ;;		line 99 in file "main.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;		None
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  basura          1    0        unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7378 ;;      Params:         0       0       0       0       0
  7379 ;;      Locals:         1       0       0       0       0
  7380 ;;      Temps:          4       0       0       0       0
  7381 ;;      Totals:         5       0       0       0       0
  7382 ;;Total ram usage:        5 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		Interrupt level 1
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           
  7392                           ;psect for function _int_usart
  7393  0B9B                     _int_usart:	
  7394  0B9B                     i1l2679:	
  7395                           
  7396                           ;main.c: 101:     if(TMR1IF){
  7397  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  7398  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  7399  0B9D  1C0C               	btfss	12,0	;volatile
  7400  0B9E  2BA0               	goto	u261_21
  7401  0B9F  2BA1               	goto	u261_20
  7402  0BA0                     u261_21:	
  7403  0BA0  2BA7               	goto	i1l338
  7404  0BA1                     u261_20:	
  7405  0BA1                     i1l2681:	
  7406                           
  7407                           ;main.c: 102:         GO_nDONE = 1;
  7408  0BA1  151F               	bsf	31,2	;volatile
  7409                           
  7410                           ;main.c: 103:         TMR1 = 15536;
  7411  0BA2  303C               	movlw	60
  7412  0BA3  008F               	movwf	15	;volatile
  7413  0BA4  30B0               	movlw	176
  7414  0BA5  008E               	movwf	14	;volatile
  7415                           
  7416                           ;main.c: 104:         TMR1IF = 0;
  7417  0BA6  100C               	bcf	12,0	;volatile
  7418  0BA7                     i1l338:	
  7419                           ;main.c: 105:     }
  7420                           
  7421                           
  7422                           ;main.c: 106:     if(RCSTAbits.FERR){
  7423  0BA7  1D18               	btfss	24,2	;volatile
  7424  0BA8  2BAA               	goto	u262_21
  7425  0BA9  2BAB               	goto	u262_20
  7426  0BAA                     u262_21:	
  7427  0BAA  2BAC               	goto	i1l2685
  7428  0BAB                     u262_20:	
  7429  0BAB                     i1l2683:	
  7430  0BAB  081A               	movf	26,w	;volatile
  7431  0BAC                     i1l2685:	
  7432                           
  7433                           ;main.c: 109:     if (RCSTAbits.OERR){
  7434  0BAC  1C98               	btfss	24,1	;volatile
  7435  0BAD  2BAF               	goto	u263_21
  7436  0BAE  2BB0               	goto	u263_20
  7437  0BAF                     u263_21:	
  7438  0BAF  2BB2               	goto	i1l340
  7439  0BB0                     u263_20:	
  7440  0BB0                     i1l2687:	
  7441                           
  7442                           ;main.c: 110:         RCSTAbits.CREN=0;
  7443  0BB0  1218               	bcf	24,4	;volatile
  7444                           
  7445                           ;main.c: 111:         RCSTAbits.CREN=1;
  7446  0BB1  1618               	bsf	24,4	;volatile
  7447  0BB2                     i1l340:	
  7448                           ;main.c: 112:     }
  7449                           
  7450                           
  7451                           ;main.c: 113:     if(RCIF) {
  7452  0BB2  1E8C               	btfss	12,5	;volatile
  7453  0BB3  2BB5               	goto	u264_21
  7454  0BB4  2BB6               	goto	u264_20
  7455  0BB5                     u264_21:	
  7456  0BB5  2BDF               	goto	i1l2701
  7457  0BB6                     u264_20:	
  7458  0BB6                     i1l2689:	
  7459                           
  7460                           ;main.c: 114:         if((codigoEntrada[serial] = RCREG) != 0x0D && (codigoEntrada[seria
      +                          l]) != 0x0A && serial < (10 -1)) {
  7461  0BB6  081A               	movf	26,w	;volatile
  7462  0BB7  00F4               	movwf	??_int_usart
  7463  0BB8  0873               	movf	_serial,w
  7464  0BB9  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7465  0BBA  0084               	movwf	4
  7466  0BBB  0874               	movf	??_int_usart,w
  7467  0BBC  1383               	bcf	3,7	;select IRP bank1
  7468  0BBD  0080               	movwf	0
  7469  0BBE  300D               	movlw	13
  7470  0BBF  0600               	xorwf	0,w
  7471  0BC0  1903               	btfsc	3,2
  7472  0BC1  2BC3               	goto	u265_21
  7473  0BC2  2BC4               	goto	u265_20
  7474  0BC3                     u265_21:	
  7475  0BC3  2BD8               	goto	i1l2697
  7476  0BC4                     u265_20:	
  7477  0BC4                     i1l2691:	
  7478  0BC4  0873               	movf	_serial,w
  7479  0BC5  3EE0               	addlw	(low (_codigoEntrada| 0))& (0+255)
  7480  0BC6  0084               	movwf	4
  7481  0BC7  300A               	movlw	10
  7482  0BC8  0600               	xorwf	0,w
  7483  0BC9  1903               	btfsc	3,2
  7484  0BCA  2BCC               	goto	u266_21
  7485  0BCB  2BCD               	goto	u266_20
  7486  0BCC                     u266_21:	
  7487  0BCC  2BD8               	goto	i1l2697
  7488  0BCD                     u266_20:	
  7489  0BCD                     i1l2693:	
  7490  0BCD  3009               	movlw	9
  7491  0BCE  0273               	subwf	_serial,w
  7492  0BCF  1803               	skipnc
  7493  0BD0  2BD2               	goto	u267_21
  7494  0BD1  2BD3               	goto	u267_20
  7495  0BD2                     u267_21:	
  7496  0BD2  2BD8               	goto	i1l2697
  7497  0BD3                     u267_20:	
  7498  0BD3                     i1l2695:	
  7499                           
  7500                           ;main.c: 115:             serial++;
  7501  0BD3  3001               	movlw	1
  7502  0BD4  00F4               	movwf	??_int_usart
  7503  0BD5  0874               	movf	??_int_usart,w
  7504  0BD6  07F3               	addwf	_serial,f
  7505                           
  7506                           ;main.c: 116:         }
  7507  0BD7  2BDF               	goto	i1l2701
  7508  0BD8                     i1l2697:	
  7509                           
  7510                           ;main.c: 118:             serial = 0;
  7511  0BD8  01F3               	clrf	_serial
  7512  0BD9                     i1l2699:	
  7513                           
  7514                           ;main.c: 119:             huboInt = 1;
  7515  0BD9  3001               	movlw	1
  7516  0BDA  1683               	bsf	3,5	;RP0=1, select bank3
  7517  0BDB  1703               	bsf	3,6	;RP1=1, select bank3
  7518  0BDC  00D2               	movwf	_huboInt^(0+384)
  7519  0BDD  3000               	movlw	0
  7520  0BDE  00D3               	movwf	(_huboInt^(0+384)+1)
  7521  0BDF                     i1l2701:	
  7522                           
  7523                           ;main.c: 122:     if(ADIF) {
  7524  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  7525  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  7526  0BE1  1F0C               	btfss	12,6	;volatile
  7527  0BE2  2BE4               	goto	u268_21
  7528  0BE3  2BE5               	goto	u268_20
  7529  0BE4                     u268_21:	
  7530  0BE4  2BF0               	goto	i1l345
  7531  0BE5                     u268_20:	
  7532  0BE5                     i1l2703:	
  7533                           
  7534                           ;main.c: 123:         ADIF = 0;
  7535  0BE5  130C               	bcf	12,6	;volatile
  7536  0BE6                     i1l2705:	
  7537                           
  7538                           ;main.c: 124:         adresult = (ADRESH<<8)+ADRESL;
  7539  0BE6  081E               	movf	30,w	;volatile
  7540  0BE7  1683               	bsf	3,5	;RP0=1, select bank3
  7541  0BE8  1703               	bsf	3,6	;RP1=1, select bank3
  7542  0BE9  00D9               	movwf	(_adresult+1)^(0+384)
  7543  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  7544  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  7545  0BEC  081E               	movf	30,w	;volatile
  7546  0BED  1683               	bsf	3,5	;RP0=1, select bank3
  7547  0BEE  1703               	bsf	3,6	;RP1=1, select bank3
  7548  0BEF  00D8               	movwf	_adresult^(0+384)
  7549  0BF0                     i1l345:	
  7550  0BF0  0877               	movf	??_int_usart+3,w
  7551  0BF1  008A               	movwf	10
  7552  0BF2  0876               	movf	??_int_usart+2,w
  7553  0BF3  0084               	movwf	4
  7554  0BF4  0E75               	swapf	(??_int_usart+1)^(0+4294967168),w
  7555  0BF5  0083               	movwf	3
  7556  0BF6  0EFE               	swapf	btemp,f
  7557  0BF7  0E7E               	swapf	btemp,w
  7558  0BF8  0009               	retfie
  7559  0BF9                     __end_of_int_usart:	
  7560  007E                     btemp	set	126	;btemp
  7561  007E                     wtemp0	set	126
  7562                           
  7563                           	psect	intentry
  7564  0004                     __pintentry:	
  7565                           ;incstack = 0
  7566                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  7567                           
  7568  0004                     interrupt_function:	
  7569  007E                     saved_w	set	btemp
  7570  0004  00FE               	movwf	btemp
  7571  0005  0E03               	swapf	3,w
  7572  0006  00F5               	movwf	??_int_usart+1
  7573  0007  0804               	movf	4,w
  7574  0008  00F6               	movwf	??_int_usart+2
  7575  0009  080A               	movf	10,w
  7576  000A  00F7               	movwf	??_int_usart+3
  7577  000B  120A  158A  2B9B   	ljmp	_int_usart


Data Sizes:
    Strings     301
    Constant    20
    Data        1
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     78      79
    BANK1            80     45      74
    BANK3            96     66      74
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[25]), STR_13(CODE[17]), 
		 -> STR_9(CODE[22]), STR_8(CODE[25]), STR_5(CODE[24]), STR_3(CODE[5]), 
		 -> STR_1(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[7]), ?_sprintf(BANK0[2]), adresult(BANK3[2]), codigoEntrada(BANK1[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), lecturaConsulta@strLote(BANK1[32]), 
		 -> consultaPrecio@mensaje(BANK0[26]), cierreDeLote@strLote(BANK0[32]), accionesPuertoSerial@mensaje(BANK3[12]), accionesAceptar@strLote(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envioTX@mensaje	PTR unsigned char  size(2) Largest target is 40
		 -> STR_18(CODE[19]), agregarModificarPrecio@mensaje(BANK0[10]), main@bufferMsj(BANK3[16]), main@strLote(BANK3[32]), 
		 -> STR_14(CODE[40]), lecturaConsulta@strLote(BANK1[32]), STR_12(CODE[20]), STR_11(CODE[17]), 
		 -> STR_10(CODE[22]), consultaPrecio@mensaje(BANK0[26]), STR_7(CODE[40]), STR_6(CODE[40]), 
		 -> cierreDeLote@strLote(BANK0[32]), STR_4(CODE[20]), accionesPuertoSerial@mensaje(BANK3[12]), STR_2(CODE[19]), 
		 -> accionesAceptar@strLote(BANK1[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _escrituraDeCierre->_eeprom_write
    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaMenos->_envioTX
    _lecturaMas->_cierreDeLote
    _cierreDeLote->_sprintf
    _agregarModificarPrecio->_sprintf
    _lecturaConsulta->_consultaPrecio
    _consultaPrecio->_sprintf
    _accionesDeshacer->_mostrarDigitos
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_sprintf
    _sprintf->___lwmod
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_accionesPuertoSerial
    _lecturaComando->_lecturaConsulta

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_accionesPuertoSerial

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   82253
                                             41 BANK1      4     4      0
                                             12 BANK3     54    54      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                        _eeprom_read
                            _envioTX
                  _escrituraDeCierre
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _escrituraDeCierre                                    3     3      0     670
                                              3 BANK0      3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                15    15      0   53235
                                             38 BANK1      3     3      0
                                              0 BANK3     12    12      0
                            _envioTX
                     _lecturaComando
                    _lecturaEtiqueta
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      9     9      0   11771
                                             31 BANK0      9     9      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                            _envioTX
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    3589
                                             22 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    2164
                                             14 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0   35290
                    _lecturaConsulta
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0    1725
                            _envioTX
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0   17718
             _agregarModificarPrecio
                       _cierreDeLote
                            _envioTX
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  3     3      0     198
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cierreDeLote                                        36    36      0    6174
                                             42 BANK0     36    36      0
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _agregarModificarPrecio                              25    25      0    9621
                                             42 BANK0     25    25      0
                            ___awdiv
                             ___bmul
                             ___wmul
                       _eeprom_write
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     602
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _lecturaConsulta                                     38    38      0   15847
                                              0 BANK1     38    38      0
                             ___wmul
                     _consultaPrecio
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _consultaPrecio                                      34    32      2    8603
                                             42 BANK0     34    32      2
                            ___awdiv
                            ___awmod
                        _eeprom_read
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    6643
                       _eliminarProd
                            _envioTX
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    2158
                                             14 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    1777
                                              6 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                     38    38      0    9101
                                             42 BANK0      4     4      0
                                              0 BANK1     34    34      0
                         _bailenLeds
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    18     10    4354
                                             20 BANK0     22    12     10
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    2760
                                             20 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1132
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1141
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _envioTX                                              8     6      2    1725
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_usart                                            5     5      0       1
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
       ___wmul (ARG)
   ___wmul
   _accionesAceptar
     _bailenLeds
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _envioTX
     _mostrarDigitos
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
   _accionesPuertoSerial
     _envioTX
     _lecturaComando
       _lecturaConsulta
         ___wmul
         _consultaPrecio
           ___awdiv
           ___awmod
           _eeprom_read
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _sprintf
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
       _lecturaMas
         _agregarModificarPrecio
           ___awdiv
           ___bmul
           ___wmul
           _eeprom_write
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _cierreDeLote
           _envioTX
           _sprintf
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
         _envioTX
         _verificacionEntrada
       _lecturaMenos
         _envioTX
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _envioTX
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
   _eeprom_read
   _envioTX
   _escrituraDeCierre
     _eeprom_write
   _mostrarDigitos
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     42      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      ED      12        0.0%
ABS                  0      0      ED       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 16 23:48:52 2020

                 ?_lecturaConsulta 0074                      ?_eliminarProd 002E  
                                pc 0002                     ___bmul@product 0022  
                 ?_lecturaEtiqueta 0074                        __CFG_CP$OFF 0000  
                               l70 0D0E                                 l63 0A23  
                               l71 0D08                                 l57 02B6  
                               l73 0D22                                 l58 02C6  
                               _BS 031C                                 l76 0A65  
                     ___awdiv@sign 0026                                 fsr 0004  
              ___wmul@multiplicand 0022            __size_of_consultaPrecio 00CA  
                   ?_verificarProd 002E                                l122 0DF4  
                              l130 06A4                                l134 06B6  
                              l310 00D0                                l151 0AF4  
                              l119 0DEE                                l127 05D3  
                              l311 00C6                                l160 08FD  
                              l305 00C2                                l146 02FE  
                              l314 0247                                l306 00B8  
                              l411 0B3F                                l316 00D4  
                              l165 084B                                l422 09A6  
                              l406 0E63                                l174 0F2D  
                              l319 0142                                l520 0881  
                              l409 0AF9                                l425 09AA  
                              l418 099B                                l363 096E  
                              l196 08A1                                l189 079C  
                              l541 0923                                l382 0C5A  
                              l518 0866                                l607 0862  
                              l544 0934                                l376 0CBE  
                              l537 0901                                l369 07FE  
                              l538 0901                                l387 0FFF  
                              l564 04A7                                l581 08B0  
                              l734 0D8B                                l583 08C8  
                              l577 05A5                                l747 0B9A  
                              l853 0AAB                                l863 09E6  
                              _RA3 002B                                _RC0 0038  
                              _RA5 002D                                _RE0 0048  
                              _RE1 0049                                _RE2 004A  
                     __CFG_CPD$OFF 0000                                _pow 0935  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0026  agregarModificarPrecio@upper_8bits 005F  
                     __CFG_FOSC$XT 0000                       __CFG_LVP$OFF 0000  
                 ??_mostrarDigitos 0036                               l3001 0B6F  
                             l3011 0B91                               l3003 0B79  
                             l3013 0B96                               l3005 0B7F  
                             l3101 0E80                               l3007 0B86  
                             l3103 0E9E                               l3111 0F22  
                             l3031 0CAD                               l3113 0DF5  
                             l3009 0B8C                               l3105 0EAB  
                             l3201 0781                               l3033 0CAF  
                             l3025 0C62                               l3017 0C5B  
                             l3121 0D91                               l3211 0AFA  
                             l3115 0E13                               l3107 0EB1  
                             l3203 0791                               l3051 02DF  
                             l3043 02C7                               l3027 0C7D  
                             l3035 0CB1                               l3019 0C5E  
                             l3131 0DE8                               l3123 0D97  
                             l3213 0B09                               l3205 0AF5  
                             l3117 0E34                               l3109 0ECC  
                             l3053 02E8                               l3045 02CB  
                             l3037 0CB9                               l3029 0C94  
                             l3125 0DB5                               l3141 07A3  
                             l3215 0B1B                               l3311 025B  
                             l3231 0C4C                               l3071 0AEF  
                             l3063 0AAC                               l3055 02F1  
                             l3047 02CD                               l3039 0CBD  
                             l3127 0DB9                               l3119 0D8F  
                             l3151 07FA                               l3143 07BE  
                             l3135 079D                               l3217 0B2D  
                             l3321 026A                               l3313 025F  
                             l3305 024B                               l3233 0C4E  
                             l3225 0BFF                               l3081 0F52  
                             l3073 0AF0                               l3065 0AB3  
                             l3057 02F7                               l3049 02D5  
                             l3161 08E7                               l3153 08C9  
                             l3241 0890                               l3129 0DC6  
                             l3145 07D5                               l3401 0088  
                             l3323 0270                               l3307 0251  
                             l3235 0C56                               l3227 0C1A  
                             l3219 0BF9                               l3331 09E7  
                             l3091 0FBD                               l3083 0F9E  
                             l3075 0F2E                               l3067 0AE8  
                             l3059 02FD                               l3163 08EF  
                             l3155 08D1                               l3171 0840  
                             l3243 0896                               l3147 07F0  
                             l3411 0096                               l3403 008A  
                             l3325 027D                               l3309 0259  
                             l3229 0C31                               l3341 0A18  
                             l3333 09F3                               l3181 06D7  
                             l3173 06B7                               l3093 0FEA  
                             l3085 0FA2                               l3077 0F45  
                             l3069 0AE9                               l3165 08F2  
                             l3157 08D7                               l3245 089C  
                             l3237 0882                               l3149 07F2  
                             l3261 05DB                               l3253 05AD  
                             l3421 00A0                               l3413 0099  
                             l3405 008C                               l3327 0282  
                             l3319 0263                               l3335 09F7  
                             l3191 0739                               l3183 06E3  
                             l3175 06BF                               l3087 0FA6  
                             l3079 0F4A                               l3095 0FF6  
                             l3159 08E1                               l3167 0836  
                             l3239 088A                               l3271 0632  
                             l3263 05E8                               l3255 05B9  
                             l3247 05A6                               l3351 0CD9  
                             l3343 0CBF                               l3431 00BC  
                             l3423 00A4                               l3415 009C  
                             l3407 008E                               l2801 047B  
                             l3329 02C1                               l3337 0A08  
                             l3097 0E64                               l3193 073F  
                             l3185 06E9                               l3177 06C5  
                             l3089 0FB0                               l3169 083E  
                             l3281 065D                               l3273 0643  
                             l3265 060C                               l3257 05C2  
                             l3361 0D1F                               l3353 0CDF  
                             l3345 0CC7                               l3441 00DE  
                             l3425 00AF                               l3417 009D  
                             l3409 0092                               l2811 04A1  
                             l2803 047F                               l2731 08AA  
                             l3339 0A13                               l3099 0E73  
                             l3195 0745                               l3187 072E  
                             l3179 06CB                               l3291 068F  
                             l3283 0669                               l3275 064B  
                             l3267 0611                               l3259 05D5  
                             l3355 0CE5                               l3347 0CCD  
                             l3371 0A4A                               l3363 0A24  
                             l3451 0129                               l3443 00E2  
                             l3435 00CA                               l3427 00B2  
                             l3419 009E                               l2741 0A66  
                             l2821 04E8                               l2805 0485  
                             l2733 08B7                               l2901 086F  
                             l3197 074B                               l3189 0734  
                             l3293 0692                               l3285 0678  
                             l3277 0650                               l3269 0626  
                             l3357 0CEA                               l3349 0CD3  
                             l3373 0A56                               l3365 0A2C  
                             l3453 0133                               l3445 0126  
                             l3461 0155                               l3381 005A  
                             l2751 0A7E                               l2743 0A6A  
                             l2823 04EC                               l3519 04CE  
                             l2807 048A                               l2815 04B6  
                             l2735 08BE                               l2727 08A2  
                             l2911 0947                               l3199 0751  
                             l3295 06A0                               l3287 067E  
                             l3279 0659                               l3359 0D11  
                             l3375 0A62                               l3367 0A34  
                             l3463 015D                               l3455 013B  
                             l3439 00D8                               l3391 0079  
                             l3383 0067                               l2761 0AA1  
                             l2753 0A82                               l2745 0A70  
                             l2841 0527                               l2833 04F7  
                             l2825 04F0                               l2817 04DC  
                             l2809 049B                               l2737 08C4  
                             l2729 08A6                               l2913 095A  
                             l2905 0935                               l2921 084F  
                             l3297 06A5                               l3289 0686  
                             l3369 0A3E                               l3481 0181  
                             l3473 0167                               l3465 015F  
                             l3457 0143                               l3393 007A  
                             l3385 0072                               l3377 0032  
                             l2755 0A93                               l2747 0A73  
                             l2763 0AA7                               l2771 09B6  
                             l2851 0578                               l2843 0530  
                             l2827 04F5                               l2819 04E4  
                             l2907 093C                               l2915 0960  
                             l2931 0861                               l2923 0850  
                             l3299 06B3                               l3491 020F  
                             l3483 01B4                               l3475 016C  
                             l3467 0164                               l3459 0151  
                             l3395 007E                               l3387 0076  
                             l3379 003D                               l2757 0A99  
                             l2749 0A7A                               l2781 09D5  
                             l2773 09BD                               l2853 057E  
                             l2845 0536                               l2837 0517  
                             l2917 096A                               l2909 0942  
                             l2941 0D2F                               l2925 0854  
                             l3493 0236                               l3485 01BD  
                             l3477 0174                               l3397 0082  
                             l3389 0078                               l2871 098E  
                             l2759 0A9A                               l2783 09DC  
                             l2775 09C1                               l2767 09AB  
                             l2847 053B                               l2839 0521  
                             l2791 045A                               l2855 0587  
                             l2951 0D40                               l2943 0D31  
                             l2935 0D23                               l2927 0858  
                             l3495 0241                               l3487 01C2  
                             l3479 017B                               l3399 0084  
                             l2873 0993                               l2865 096F  
                             l2777 09C5                               l2769 09B3  
                             l2785 09E2                               l2849 056F  
                             l2857 059F                               l2793 0460  
                             l2961 0D58                               l2953 0D46  
                             l2945 0D35                               l2937 0D26  
                             l2929 085A                               l2881 0907  
                             l3489 01C9                               l3497 0244  
                             l2875 0995                               l2867 0973  
                             l2779 09CF                               l2795 0469  
                             l2963 0D69                               l2955 0D49  
                             l2971 0D7D                               l2947 0D3A  
                             l2939 0D2A                               l2891 0927  
                             l2883 0913                               l2869 0976  
                             l2877 099F                               l2797 0470  
                             l2789 0453                               l2973 0D82  
                             l2965 0D6F                               l2957 0D50  
                             l2949 0D3E                               l2981 0B43  
                             l2893 092B                               l2885 091B  
                             l2879 09A4                               l2799 0472  
                             l2975 0D87                               l2967 0D70  
                             l2959 0D54                               l2991 0B57  
                             l2983 0B47                               l2895 092C  
                             l2887 091E                               l2969 0D77  
                             l2993 0B5D                               l2985 0B4C  
                             l2897 092D                               l2889 0922  
                             l2995 0B60                               l2987 0B4E  
                             l2979 0B40                               l2899 0933  
                             l2997 0B67                               l2989 0B52  
                             l2999 0B6B                               _ADIF 0066  
                             ?_pow 0026                               STR_1 0423  
                             STR_2 03FF                               STR_3 044E  
                             STR_4 03D8                               STR_5 0380  
                             STR_6 0326                               STR_7 0326  
                             STR_8 0367                               STR_9 03AE  
                             u3000 0907                               u3001 0906  
                             u3010 0922                               u3011 0921  
                             u3100 0D46                               u3020 0933  
                             u3101 0D45                               u3021 0932  
                             u3030 086F                               u3031 086C  
                             u3040 0942                               u3120 0D58  
                             u3200 0B5D                               u3041 0941  
                             u3121 0D57                               u3201 0B5C  
                             u3050 096A                               u3051 0969  
                             u3115 0D4A                               u3140 0D69  
                             u3220 0B6F                               u3060 0854  
                             u3300 02DF                               u3141 0D68  
                             u3221 0B6E                               u3061 0853  
                             u3301 02DE                               u3230 0B79  
                             u3070 0861                               u3310 02E8  
                             u4007 0B02                               u3055 0966  
                             u3135 0D59                               u3231 0B78  
                             u3215 0B61                               u3071 0860  
                             u3311 02E7                               u3160 0D7D  
                             u3080 0D2A                               u3320 02F1  
                             u3400 0DB9                               u4017 0B14  
                             u3161 0D7C                               u3145 0D65  
                             u3081 0D29                               u3321 02F0  
                             u3401 0DB8                               u3170 0D82  
                             u3090 0D35                               u3250 0B8C  
                             u3330 02F7                               u3410 0DC6  
                             u4027 0B26                               u3171 0D81  
                             u3155 0D71                               u3091 0D34  
                             u3251 0B8B                               u3235 0B75  
                             u3331 02F6                               u3411 0DC5  
                             u3260 0B91                               u3180 0B47  
                             u3500 06C5                               u3340 02FD  
                             u3420 0DE8                               u3261 0B90  
                             u3245 0B80                               u3181 0B46  
                             u3501 06C4                               u3341 02FC  
                             u3421 0DE7                               u3190 0B52  
                             u3510 06CB                               u3350 0AB3  
                             u3270 0C7D                               u3430 07BE  
                             u3191 0B51                               u3511 06CA  
                             u3351 0AB2                               u3271 0C7C  
                             u3415 0DC2                               u3431 07BD  
                             u2800 09B3                               u2720 08C4  
                             u3600 0C5A                               u3520 06E9  
                             u3360 0F4A                               u3280 0CAD  
                             u3440 07FE                               u2801 09B2  
                             u2721 08C3                               u2705 08B1  
                             u3601 0C59                               u3521 06E8  
                             u3361 0F49                               u3281 0CAC  
                             u3441 07FD                               u2730 0A70  
                             u3370 0E73                               u3530 0734  
                             u3450 08D1                               u3610 088A  
                             u3290 0CBD                               u2731 0A6F  
                             u2715 08B8                               u3371 0E72  
                             u3531 0733                               u3451 08D0  
                             u3611 0889                               u3291 0CBC  
                             u3275 0C79                               u3435 07BA  
                             u2820 09C5                               u2900 0516  
                             u3380 0EAB                               u3540 073F  
                             u3460 08E1                               u3620 0896  
                             u3700 0650                               u2821 09C4  
                             u2901 0515                               u3381 0EAA  
                             u3541 073E                               u3461 08E0  
                             u3621 0895                               u3701 064F  
                             u2750 0A82                               u2830 09CF  
                             u2910 0521                               u3710 027D  
                             u3390 0EB1                               u3550 0745  
                             u3470 08EF                               u3630 05B9  
                             u2751 0A81                               u2831 09CE  
                             u2815 09B7                               u2911 0520  
                             u3711 027C                               u3391 0EB0  
                             u3375 0E6F                               u3551 0744  
                             u3471 08EE                               u3631 05B8  
                             u2920 0527                               u3720 0282  
                             u3560 074B                               u3480 083E  
                             u3640 05C2                               u3800 0CEA  
                             u2745 0A74                               u2921 0526  
                             u2905 0512                               u3721 0281  
                             u3385 0EA7                               u3561 074A  
                             u3481 083D                               u3641 05C1  
                             u3801 0CE9                               u2770 0A93  
                             u2850 09E2                               u2930 0587  
                             u2690 08AA                               u3730 09F3  
                             u3570 0751                               u3490 06BF  
                             u3650 05E8                               u3810 003D  
                             u2771 0A92                               u2851 09E1  
                             u2835 09CB                               u2931 0586  
                             u3715 0279                               u2691 08A9  
                             u3731 09F2                               u3571 0750  
                             u3491 06BE                               u3651 05E7  
                             u3811 003C                               u3580 0B3F  
                             u2940 059F                               u2860 0460  
                             u3740 0A18                               u3660 060C  
                             u3900 015D                               u3820 00B8  
                             u3581 0B3E                               u2765 0A83  
                             u2845 09D6                               u2941 059E  
                             u2861 045F                               u3741 0A17  
                             u3661 060B                               u3901 015C  
                             u3821 00B7                               u2950 0980  
                             u2790 0AA7                               u2870 0485  
                             u3590 0C1A                               u3670 0611  
                             u3750 0CC7                               u3910 017A  
                             u3830 00BC                               u2791 0AA6  
                             u2775 0A8F                               u2871 0484  
                             u3591 0C19                               u3735 09EF  
                             u3671 0610                               u3655 05E4  
                             u3751 0CC6                               u3911 0179  
                             u3831 00BB                               u2960 0993  
                             u2880 04B5                               u3680 0643  
                             u3760 0CCD                               u3920 0181  
                             u3840 00C6                               u2961 0992  
                             u2785 0A9B                               u2881 04B4  
                             u3681 0642                               u3665 0608  
                             u3761 0CCC                               u3921 0180  
                             u3841 00C5                               u2970 099F  
                             u2890 04EC                               u3690 064B  
                             u3770 0CD3                               u3930 01BD  
                             u3850 00CA                               u2971 099E  
                             u2891 04EB                               u3595 0C16  
                             u3691 064A                               u3771 0CD2  
                             u3931 01BC                               u3851 00C9  
                             u2980 09A4                               u3780 0CDF  
                             u3940 01C9                               u3860 00D4  
                             _RCIF 0065                               u2981 09A3  
                             u3781 0CDE                               u3941 01C8  
                             u3861 00D3                               u2990 09AA  
                             u3790 0CE5                               u3870 00D8  
                             u2991 09A9                               u3791 0CE4  
                             u3871 00D7                               u3880 00DE  
                             u3881 00DD                               u3890 0141  
                             u3891 0140                               u3957 012F  
                             u3967 014B                               u3977 0D19  
                             u3987 069A                               u3997 06AD  
                             _TMR1 000E                               _TXIF 0064  
                   ??_eeprom_write 0021                       __CFG_WRT$OFF 0000  
                envioTX@transmitir 0027                               _main 0032  
                  _accionesAceptar 024B                               btemp 007E  
                    __CFG_BOREN$ON 0000             accionesAceptar@strLote 00A0  
                             pow@i 002A                               start 000E  
                      main@strLote 019C                  ___bmul@multiplier 0023  
             lecturaEtiqueta@letra 0042                     ??_eliminarProd 0030  
                            ??_pow 002A      __size_of_accionesPuertoSerial 0064  
                            ?_main 0074                    __end_of___awdiv 0D8C  
                            _EEADR 010D                              STR_10 0398  
                            STR_11 0412                              STR_12 03C4  
                            STR_13 0423                              STR_14 0326  
                            STR_15 034E                              STR_16 0434  
                            STR_17 043E                      __CFG_WDTE$OFF 0000  
                            STR_18 03EC                              STR_19 0447  
                  __end_of___awmod 0B9B                    ___awdiv@divisor 0020  
                            _T1CON 0010                       ?_ingresoProd 002E  
                  __end_of___lwdiv 0AAC                              i1l340 0BB2  
                            i1l345 0BF0                    __end_of___lwmod 09E7  
                            i1l338 0BA7                    ___awdiv@counter 0025  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTB 0006  
                            _PORTD 0008                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _TRISE 0089  
                            _TXREG 0019                              _TXSTA 0098  
             __end_of_cierreDeLote 0AF5                    __end_of_envioTX 09AB  
                  __end_of_dpowers 031C                              main@i 01D0  
                            pclath 000A                   _accionesDeshacer 09E7  
                            status 0003                     envioTX@mensaje 0020  
                            wtemp0 007E                    __end_of_sprintf 05A6  
                    ?_lecturaMenos 0074                    __initialization 0011  
                     __end_of_main 024B                    ??_verificarProd 0030  
                  EEPROM_search@tp 003E                             ??_main 00C9  
            __end_of_EEPROM_search 0DF5                      main@bufferMsj 01BC  
         ??_agregarModificarPrecio 004A                      eliminarProd@i 0033  
          __end_of_accionesAceptar 02C7                             _ADCON0 001F  
                           _ADCON1 009F                             _ADRESH 001E  
                           _ADRESL 009E                             _EEDATA 010C  
                           _EECON1 018C                             _EECON2 018D  
                 ___awdiv@dividend 0022            __size_of_lecturaComando 0020  
                           i1l2701 0BDF                             i1l2703 0BE5  
                           i1l2705 0BE6                             i1l2681 0BA1  
                           i1l2691 0BC4                             i1l2683 0BAB  
                           i1l2693 0BCD                             i1l2685 0BAC  
                           i1l2695 0BD3                             i1l2687 0BB0  
                           i1l2679 0B9B                             i1l2697 0BD8  
                           i1l2689 0BB6                             i1l2699 0BD9  
                           _INTCON 000B                             u261_20 0BA1  
                           u261_21 0BA0                             u262_20 0BAB  
                           u262_21 0BAA                             u263_20 0BB0  
                           u263_21 0BAF                             u264_20 0BB6  
                           u264_21 0BB5                             u265_20 0BC4  
                           u265_21 0BC3                             u266_20 0BCD  
                           u266_21 0BCC                             u267_20 0BD3  
                           u267_21 0BD2                             u268_20 0BE5  
                           u268_21 0BE4                             _TMR1IF 0060  
                   ??_lecturaMenos 0028                   lecturaEtiqueta@i 0046  
                   __CFG_PWRTE$OFF 0000               __size_of_eeprom_read 001F  
                           ___bmul 084C                             ___wmul 08A2  
                        ??___awdiv 0024                          ??___awmod 0024  
              _mostrarDigitos$1099 0036                          ??___lwdiv 002A  
                        ??___lwmod 0032                             _cuenta 0070  
              _verificacionEntrada 02C7                   ___awdiv@quotient 0027  
                  ___awmod@divisor 0020                             _serial 0073  
             __end_of_eeprom_write 0935                     _consultaPrecio 0E64  
                  ___awmod@counter 0025                          ??_envioTX 0022  
                     __pdataCOMMON 0078                             saved_w 007E  
             __end_of_eliminarProd 0C5B                          ??_sprintf 003E  
             ?_verificacionEntrada 0074            __end_of__initialization 002E  
                  eeprom_read@addr 0021                ___bmul@multiplicand 0020  
                   __pcstackCOMMON 0074             __end_of_consultaPrecio 0F2E  
                       __end_of_BS 0326              __size_of_cierreDeLote 0049  
                       _bailenLeds 0AF5               __size_of_ingresoProd 0062  
                eeprom_write@value 0020    __size_of_agregarModificarPrecio 00D2  
      accionesPuertoSerial@mensaje 0190                   ?_accionesAceptar 0074  
            ??_verificacionEntrada 0020                         __pbssBANK0 006E  
                       __pbssBANK1 00CD                         __pbssBANK3 01D2  
                    _pedidoVoltaje 01D6                 __size_of_int_usart 005E  
                       __pmaintext 0032                       _cierreDeLote 0AAC  
         agregarModificarPrecio@tp 0062                            ?___bmul 0020  
                   eliminarProd@tp 002E                            ?___wmul 0020  
                       __pintentry 0004                    ?_consultaPrecio 004A  
              EEPROM_search@precio 003C           __end_of_accionesDeshacer 0A24  
         __size_of_lecturaConsulta 00E6               __end_of_lecturaMenos 084C  
         __size_of_lecturaEtiqueta 0111                     verificarProd@i 0034  
                   _lecturaComando 0882                   accionesAceptar@i 00C0  
                       __stringtab 0300       __end_of_accionesPuertoSerial 0D23  
                lecturaEtiqueta@tp 0043                         _lecturaMas 08C9  
           _agregarModificarPrecio 0F2E              __size_of_eeprom_write 0037  
                  __size_of___bmul 0017                            ___awdiv 0D23  
                          ___awmod 0B40                    __size_of___wmul 0027  
                          ___lwdiv 0A66                            ___lwmod 09AB  
                          __ptext1 0A24                            __ptext2 0CBF  
                          __ptext3 05A6                            __ptext4 079D  
                      pow@potencia 0028                            __ptext5 0D8C  
                          __ptext6 0C5B                            __ptext7 0882  
                          __ptext8 0836                            __ptext9 08C9  
                      ?_bailenLeds 0074                            _envioTX 096F  
                          _dpowers 0312                            _huboInt 01D2  
            __size_of_eliminarProd 0062                       __size_of_pow 003A  
             consultaPrecio@precio 006A               verificacionEntrada@i 0022  
                 ___awmod@dividend 0022                       ingresoProd@i 0033  
           __end_of_lecturaComando 08A2                            _nroLote 0078  
                          _numProd 00DC                  __end_of_int_usart 0BF9  
                          _sprintf 0453                            clrloop0 082F  
     agregarModificarPrecio@precio 0060               end_of_initialization 002E  
                     _eeprom_write 08FE      agregarModificarPrecio@mensaje 0054  
          __size_of_mostrarDigitos 006F                          _RCSTAbits 0018  
                       _montosLote 00DA                       _eliminarProd 0BF9  
                     __pstringtext 0300                  _productoIngresado 00DE  
                 verificarProd@ret 0033              __end_of_verificarProd 0CBF  
                       _ventasLote 006E                    ?_lecturaComando 0074  
          lecturaConsulta@articulo 00C4                  ??_lecturaConsulta 00A0  
                 _cierreLotePedido 01D7                  ??_lecturaEtiqueta 003F  
                    ??_eeprom_read 0020                __size_of_bailenLeds 004B  
                      ?_lecturaMas 0074             __size_of_EEPROM_search 0069  
                _escrituraDeCierre 0A24                     __end_of___bmul 0863  
            __size_of_lecturaMenos 0016                     __end_of___wmul 08C9  
               ?_escrituraDeCierre 0074                      __pidataCOMMON 07FF  
             _accionesPuertoSerial 0CBF                ??_escrituraDeCierre 0023  
              start_initialization 0011                        __end_of_pow 096F  
                     _lecturaMenos 0836                   ??_consultaPrecio 004C  
        __end_of_escrituraDeCierre 0A66                     _prodIngresados 00CD  
                         ??___bmul 0021                           ??___wmul 0024  
              __end_of_eeprom_read 0882              ?_accionesPuertoSerial 0074  
                    ??_ingresoProd 0030                  ?_accionesDeshacer 0074  
                      __pbssCOMMON 0070        __end_of_verificacionEntrada 02FF  
                        ___latbits 0002                 ??_accionesDeshacer 0038  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                    __pcstackBANK3 0190                      _EEPROM_search 0D8C  
              __size_of_lecturaMas 0035                   eeprom_write@addr 0022  
                      sprintf@flag 0042                        sprintf@prec 0043  
          ?_agregarModificarPrecio 0074           __size_of_accionesAceptar 007C  
                        _main$1097 01CC                          _main$1098 01CE  
                   _mostrarDigitos 0DF5                   ___lwdiv@dividend 0028  
                         ?___awdiv 0020                           ?___awmod 0020  
                         ?___lwdiv 0026                           ?___lwmod 002E  
                        _auxCuenta 01D4                       ??_bailenLeds 0020  
                         ?_envioTX 0020             consultaPrecio@articulo 004A  
                   ?_EEPROM_search 0036                   ___lwdiv@quotient 002C  
              __end_of_ingresoProd 07FF                           ?_sprintf 0034  
     escrituraDeCierre@lower_8bits 0024                          _modoDebug 0072  
                        _int_usart 0B9B             verificacionEntrada@ret 0021  
   __end_of_agregarModificarPrecio 1000                  interrupt_function 0004  
                   ___wmul@product 0024             __end_of_mostrarDigitos 0E64  
                        clear_ram0 082E                        _eeprom_read 0863  
                         _PIE1bits 008C                        bailenLeds@i 0023  
       __size_of_escrituraDeCierre 0042                 __end_of_bailenLeds 0B40  
                         _GO_nDONE 00FA                    verificarProd@tp 002E  
           ??_accionesPuertoSerial 00C6                   ??_lecturaComando 006E  
                  _lecturaConsulta 06B7                        __stringbase 0312  
                        main@i_307 01D1                  ___wmul@multiplier 0020  
                  _lecturaEtiqueta 05A6                 lecturaEtiqueta@Aux 0044  
                    _codigoEntrada 00E0             lecturaConsulta@strLote 00A4  
              cierreDeLote@strLote 004E                         ?_int_usart 0074  
                  ?_mostrarDigitos 0034                         _EECON1bits 018C  
                     ??_lecturaMas 006E                  ??_accionesAceptar 004A  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
               __end_of__stringtab 0312                    ??_EEPROM_search 0038  
                      _ingresoProd 079D                         sprintf@val 0047  
                 __size_of_envioTX 003C                           _adresult 01D8  
                  ___lwdiv@divisor 0026                       pow@resultado 002C  
                  ___lwdiv@counter 002B                           __ptext10 02C7  
                         __ptext11 0AAC                           __ptext20 09E7  
                         __ptext12 0F2E                           __ptext21 0BF9  
                         __ptext13 08FE                           __ptext30 0AF5  
                         __ptext22 0935                           __ptext14 084C  
                         __ptext31 0B9B                           __ptext23 08A2  
                         __ptext15 06B7                           __ptext24 024B  
                         __ptext16 0E64                           __ptext25 0453  
                         __ptext17 0863                           __ptext26 0DF5  
                         __ptext18 0B40                           __ptext27 09AB  
                         __ptext19 0D23                           __ptext28 0A66  
                         __ptext29 096F                 __end_of_lecturaMas 08FE  
     escrituraDeCierre@upper_8bits 0025                   __size_of_sprintf 0153  
            consultaPrecio@mensaje 0050                      __size_of_main 0219  
                        pow@numero 0026             __size_of_verificarProd 0064  
                    ingresoProd@tp 002E                      ?_cierreDeLote 0074  
          __end_of_lecturaConsulta 079D            __end_of_lecturaEtiqueta 06B7  
                         envioTX@i 0025                         _INTCONbits 000B  
agregarModificarPrecio@lower_8bits 005E                           intlevel1 0000  
                        sprintf@ap 0044                          sprintf@cp 0045  
                      ??_int_usart 0074                          sprintf@sp 0034  
                 ___lwmod@dividend 0030          __size_of_accionesDeshacer 003D  
                   ??_cierreDeLote 004A                          stringcode 030A  
                mostrarDigitos@num 0034                           sprintf@c 0049  
                         sprintf@f 0036                      _verificarProd 0C5B  
                  ___lwmod@divisor 002E                    ___lwmod@counter 0033  
                         stringtab 0300       __size_of_verificacionEntrada 0038  
                    ?_eeprom_write 0020                         _STATUSbits 0003  
                     ?_eeprom_read 0074  
