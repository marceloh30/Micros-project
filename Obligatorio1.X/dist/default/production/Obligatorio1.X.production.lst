

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 26 17:34:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171                           
   172                           	psect	idataCOMMON
   173  0000'                    __pidataCOMMON:	
   174                           
   175                           ;initializer for _nroLote
   176  0000' 3401               	retlw	1
   177  001A                     _RCREG	set	26
   178  000B                     _INTCON	set	11
   179  0065                     _RCIF	set	101
   180  002A                     _RA2	set	42
   181  0029                     _RA1	set	41
   182  0088                     _TRISD	set	136
   183  0086                     _TRISB	set	134
   184  0085                     _TRISA	set	133
   185  009F                     _ADCON1	set	159
   186  0465                     _RCIE	set	1125
   187                           
   188                           ; #config settings
   189  0000                     
   190                           	psect	cinit
   191  0000'                    start_initialization:	
   192  0000'                    __initialization:	
   193                           
   194                           ; Initialize objects allocated to COMMON
   195  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataCOMMON	;fetch initializer
   196  0005' 0080'              	movwf	__pdataCOMMON& (0+127)
   197                           
   198                           ; Clear objects allocated to BANK0
   199  0006' 1383               	bcf	3,7	;select IRP bank0
   200  0007' 3000'              	movlw	low __pbssBANK0
   201  0008' 0084               	movwf	4
   202  0009' 3000'              	movlw	low (__pbssBANK0+29)
   203  000A' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   204                           
   205                           ; Clear objects allocated to COMMON
   206  000F' 3000'              	movlw	low __pbssCOMMON
   207  0010' 0084               	movwf	4
   208  0011' 3000'              	movlw	low (__pbssCOMMON+9)
   209  0012' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   210  0017'                    end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213  0017'                    __end_of__initialization:	
   214  0017' 0183               	clrf	3
   215  0018' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMMON
   218  0000'                    __pbssCOMMON:	
   219  0000'                    _huboInt:	
   220  0000'                    	ds	2
   221  0002'                    _auxCuenta:	
   222  0002'                    	ds	2
   223  0004'                    _cuenta:	
   224  0004'                    	ds	2
   225  0006'                    _ventasLote:	
   226  0006'                    	ds	1
   227  0007'                    _modoDebug:	
   228  0007'                    	ds	1
   229  0008'                    _serial:	
   230  0008'                    	ds	1
   231                           
   232                           	psect	dataCOMMON
   233  0000'                    __pdataCOMMON:	
   234  0000'                    _nroLote:	
   235  0000'                    	ds	1
   236                           
   237                           	psect	bssBANK0
   238  0000'                    __pbssBANK0:	
   239  0000'                    _prodIngresados:	
   240  0000'                    	ds	13
   241  000D'                    _codigoEntrada:	
   242  000D'                    	ds	10
   243  0017'                    _montosLote:	
   244  0017'                    	ds	2
   245  0019'                    _numProd:	
   246  0019'                    	ds	2
   247  001B'                    _productoIngresado:	
   248  001B'                    	ds	2
   249                           
   250                           	psect	clrtext
   251  0000'                    clear_ram0:	
   252                           ;	Called with FSR containing the base address, and
   253                           ;	W with the last address+1
   254                           
   255  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   256  0001'                    clrloop0:	
   257  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   258  0002' 0A84               	incf	4,f	;increment pointer
   259  0003' 0604               	xorwf	4,w	;XOR with final address
   260  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   261  0005' 3400               	retlw	0	;all done for this memory range, return
   262  0006' 0604               	xorwf	4,w	;XOR again to restore value
   263  0007' 2800'              	goto	clrloop0	;do the next byte
   264                           
   265                           	psect	cstackCOMMON
   266  0000'                    __pcstackCOMMON:	
   267  0000'                    ?_iniciar_usart:	
   268  0000'                    ?_accionesAceptar:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0000'                    ?_accionesDeshacer:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0000'                    ?_accionesPuertoSerial:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0000'                    ?_main:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0000'                    ?_int_usart:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0000'                    ??_int_usart:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0000'                    	ds	4
   289                           
   290                           	psect	cstackBANK0
   291  0000'                    __pcstackBANK0:	
   292  0000'                    ??_iniciar_usart:	
   293  0000'                    ?_mostrarDigitos:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0000'                    ??_mostrarDigitos:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0000'                    ??_accionesAceptar:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0000'                    ??_accionesDeshacer:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0000'                    ??_accionesPuertoSerial:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0000'                    ??_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0000'                    _mostrarDigitos$0:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 2 bytes @ 0x0
   316  0000'                    	ds	2
   317                           
   318                           	psect	maintext
   319  0000'                    __pmaintext:	
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 45 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : B00/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   339 ;;      Params:         0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels required when called:    2
   345 ;; This function calls:
   346 ;;		_accionesAceptar
   347 ;;		_accionesDeshacer
   348 ;;		_accionesPuertoSerial
   349 ;;		_iniciar_usart
   350 ;;		_mostrarDigitos
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _main
   358  0000'                    _main:	
   359  0000'                    l769:	
   360                           ;incstack = 0
   361                           ; Regs used in _main: [allreg]
   362                           
   363                           
   364                           ;main.c: 48:     ADCON1 = 0b00000111;
   365  0000' 3007               	movlw	7
   366  0001' 1683               	bsf	3,5	;RP0=1, select bank1
   367  0002' 1303               	bcf	3,6	;RP1=0, select bank1
   368  0003' 009F               	movwf	31	;volatile
   369                           
   370                           ;main.c: 49:     TRISA = 0x06;
   371  0004' 3006               	movlw	6
   372  0005' 0085               	movwf	5	;volatile
   373  0006'                    l771:	
   374                           
   375                           ;main.c: 50:     TRISB = 0x00;
   376  0006' 0186               	clrf	6	;volatile
   377  0007'                    l773:	
   378                           
   379                           ;main.c: 51:     TRISD = 0x00;
   380  0007' 0188               	clrf	8	;volatile
   381                           
   382                           ;main.c: 52:     INTCON = 0b11000000;
   383  0008' 30C0               	movlw	192
   384  0009' 008B               	movwf	11	;volatile
   385  000A'                    l775:	
   386                           
   387                           ;main.c: 53:     RCIE = 1;
   388  000A' 168C               	bsf	12,5	;volatile
   389  000B'                    l777:	
   390                           
   391                           ;main.c: 54:     iniciar_usart();
   392  000B' 120A' 118A' 2000' 120A' 118A' 	fcall	_iniciar_usart
   393  0010'                    l779:	
   394                           
   395                           ;main.c: 55:     cuenta = 0;
   396  0010' 0184'              	clrf	_cuenta
   397  0011' 0185'              	clrf	_cuenta+1
   398  0012'                    l781:	
   399                           
   400                           ;main.c: 56:     auxCuenta = 0;
   401  0012' 0182'              	clrf	_auxCuenta
   402  0013' 0183'              	clrf	_auxCuenta+1
   403  0014'                    l783:	
   404                           
   405                           ;main.c: 57:     mostrarDigitos(cuenta);
   406  0014' 3000               	movlw	0
   407  0015' 1283               	bcf	3,5	;RP0=0, select bank0
   408  0016' 1303               	bcf	3,6	;RP1=0, select bank0
   409  0017' 0080'              	movwf	_mostrarDigitos$0
   410  0018' 0081'              	movwf	_mostrarDigitos$0+1
   411  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	_mostrarDigitos
   412  001E'                    l785:	
   413                           
   414                           ;main.c: 63:         if(RA1) {
   415  001E' 1283               	bcf	3,5	;RP0=0, select bank0
   416  001F' 1303               	bcf	3,6	;RP1=0, select bank0
   417  0020' 1C85               	btfss	5,1	;volatile
   418  0021' 2800'              	goto	u191
   419  0022' 2800'              	goto	u190
   420  0023'                    u191:	
   421  0023' 2800'              	goto	l60
   422  0024'                    u190:	
   423  0024'                    l61:	
   424  0024' 1885               	btfsc	5,1	;volatile
   425  0025' 2800'              	goto	u201
   426  0026' 2800'              	goto	u200
   427  0027'                    u201:	
   428  0027' 2800'              	goto	l61
   429  0028'                    u200:	
   430  0028'                    l789:	
   431                           
   432                           ;main.c: 65:             accionesAceptar();
   433  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	_accionesAceptar
   434                           
   435                           ;main.c: 66:         }
   436  002D' 2800'              	goto	l785
   437  002E'                    l60:	
   438                           ;main.c: 67:         else if(RA2) {
   439                           
   440  002E' 1D05               	btfss	5,2	;volatile
   441  002F' 2800'              	goto	u211
   442  0030' 2800'              	goto	u210
   443  0031'                    u211:	
   444  0031' 2800'              	goto	l795
   445  0032'                    u210:	
   446  0032'                    l66:	
   447  0032' 1905               	btfsc	5,2	;volatile
   448  0033' 2800'              	goto	u221
   449  0034' 2800'              	goto	u220
   450  0035'                    u221:	
   451  0035' 2800'              	goto	l66
   452  0036'                    u220:	
   453  0036'                    l793:	
   454                           
   455                           ;main.c: 69:             accionesDeshacer();
   456  0036' 120A' 118A' 2000' 120A' 118A' 	fcall	_accionesDeshacer
   457                           
   458                           ;main.c: 70:         }
   459  003B' 2800'              	goto	l785
   460  003C'                    l795:	
   461  003C' 0800'              	movf	_huboInt,w
   462  003D' 0401'              	iorwf	_huboInt+1,w
   463  003E' 1903               	btfsc	3,2
   464  003F' 2800'              	goto	u231
   465  0040' 2800'              	goto	u230
   466  0041'                    u231:	
   467  0041' 2800'              	goto	l64
   468  0042'                    u230:	
   469  0042'                    l797:	
   470                           
   471                           ;main.c: 72:             huboInt = 0;
   472  0042' 0180'              	clrf	_huboInt
   473  0043' 0181'              	clrf	_huboInt+1
   474  0044'                    l799:	
   475                           
   476                           ;main.c: 73:             accionesPuertoSerial();
   477  0044' 120A' 118A' 2000' 120A' 118A' 	fcall	_accionesPuertoSerial
   478  0049' 2800'              	goto	l785
   479  004A'                    l64:	
   480  004A' 2800'              	goto	l785
   481  004B' 120A' 118A' 2800'  	ljmp	start
   482  004E'                    __end_of_main:	
   483                           
   484                           	psect	text1
   485  0000'                    __ptext1:	
   486 ;; *************** function _int_usart *****************
   487 ;; Defined at:
   488 ;;		line 80 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          4       0       0       0       0
   505 ;;      Totals:         4       0       0       0       0
   506 ;;Total ram usage:        4 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		Interrupt level 1
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           
   516                           ;psect for function _int_usart
   517  0000'                    _int_usart:	
   518  0000'                    i1l753:	
   519                           
   520                           ;main.c: 82:     if(RCIF == 1) {
   521  0000' 1283               	bcf	3,5	;RP0=0, select bank0
   522  0001' 1303               	bcf	3,6	;RP1=0, select bank0
   523  0002' 1E8C               	btfss	12,5	;volatile
   524  0003' 2800'              	goto	u15_21
   525  0004' 2800'              	goto	u15_20
   526  0005'                    u15_21:	
   527  0005' 2800'              	goto	i1l81
   528  0006'                    u15_20:	
   529  0006'                    i1l755:	
   530                           
   531                           ;main.c: 83:         if(RCREG != 0x0D && RCREG != 0x0A && serial < 9) {
   532  0006' 300D               	movlw	13
   533  0007' 061A               	xorwf	26,w	;volatile
   534  0008' 1903               	btfsc	3,2
   535  0009' 2800'              	goto	u16_21
   536  000A' 2800'              	goto	u16_20
   537  000B'                    u16_21:	
   538  000B' 2800'              	goto	i1l765
   539  000C'                    u16_20:	
   540  000C'                    i1l757:	
   541  000C' 300A               	movlw	10
   542  000D' 061A               	xorwf	26,w	;volatile
   543  000E' 1903               	btfsc	3,2
   544  000F' 2800'              	goto	u17_21
   545  0010' 2800'              	goto	u17_20
   546  0011'                    u17_21:	
   547  0011' 2800'              	goto	i1l765
   548  0012'                    u17_20:	
   549  0012'                    i1l759:	
   550  0012' 3009               	movlw	9
   551  0013' 0208'              	subwf	_serial,w
   552  0014' 1803               	skipnc
   553  0015' 2800'              	goto	u18_21
   554  0016' 2800'              	goto	u18_20
   555  0017'                    u18_21:	
   556  0017' 2800'              	goto	i1l765
   557  0018'                    u18_20:	
   558  0018'                    i1l761:	
   559                           
   560                           ;main.c: 84:             codigoEntrada[serial] = RCREG;
   561  0018' 081A               	movf	26,w	;volatile
   562  0019' 0080'              	movwf	??_int_usart
   563  001A' 0808'              	movf	_serial,w
   564  001B' 3E00'              	addlw	(low (_codigoEntrada| 0))& (0+255)
   565  001C' 0084               	movwf	4
   566  001D' 0800'              	movf	??_int_usart,w
   567  001E' 1383               	bcf	3,7	;select IRP bank0
   568  001F' 0080               	movwf	0
   569  0020'                    i1l763:	
   570                           
   571                           ;main.c: 85:             serial++;
   572  0020' 3001               	movlw	1
   573  0021' 0080'              	movwf	??_int_usart
   574  0022' 0800'              	movf	??_int_usart,w
   575  0023' 0788'              	addwf	_serial,f
   576                           
   577                           ;main.c: 86:         }
   578  0024' 2800'              	goto	i1l81
   579  0025'                    i1l765:	
   580                           
   581                           ;main.c: 88:             serial = 0;
   582  0025' 0188'              	clrf	_serial
   583  0026'                    i1l767:	
   584                           
   585                           ;main.c: 89:             huboInt = 1;
   586  0026' 3001               	movlw	1
   587  0027' 0080'              	movwf	_huboInt
   588  0028' 3000               	movlw	0
   589  0029' 0081'              	movwf	_huboInt+1
   590  002A'                    i1l81:	
   591  002A' 0803'              	movf	??_int_usart+3,w
   592  002B' 008A               	movwf	10
   593  002C' 0802'              	movf	??_int_usart+2,w
   594  002D' 0084               	movwf	4
   595  002E' 0E00'              	swapf	(??_int_usart+1)^(0+4294967168),w
   596  002F' 0083               	movwf	3
   597  0030' 0EFE               	swapf	btemp,f
   598  0031' 0E7E               	swapf	btemp,w
   599  0032' 0009               	retfie
   600  0033'                    __end_of_int_usart:	
   601  007E                     btemp	set	126	;btemp
   602  007E                     wtemp0	set	126
   603                           
   604                           	psect	intentry
   605  0000'                    __pintentry:	
   606                           ;incstack = 0
   607                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
   608                           
   609  0000'                    interrupt_function:	
   610  007E                     saved_w	set	btemp
   611  0000' 00FE               	movwf	btemp
   612  0001' 0E03               	swapf	3,w
   613  0002' 0081'              	movwf	??_int_usart+1
   614  0003' 0804               	movf	4,w
   615  0004' 0082'              	movwf	??_int_usart+2
   616  0005' 080A               	movf	10,w
   617  0006' 0083'              	movwf	??_int_usart+3
   618  0007' 120A' 118A' 2800'  	ljmp	_int_usart


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      26
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                      _iniciar_usart
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       2     0      2      26
 ---------------------------------------------------------------------------------
 (1) _iniciar_usart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _int_usart                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _accionesAceptar
   _accionesDeshacer
   _accionesPuertoSerial
   _iniciar_usart
   _mostrarDigitos

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1D       5       36.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 26 17:34:40 2020

            __CFG_CP$OFF 0000                       l60 002E                       l61 0024  
                     l64 004A                       l66 0032                       fsr 0004  
                    l771 0006                      l781 0012                      l773 0007  
                    l783 0014                      l775 000A                      l793 0036  
                    l785 001E                      l777 000B                      l769 0000  
                    l795 003C                      l779 0010                      l797 0042  
                    l789 0028                      l799 0044                      _RA1 0029  
                    _RA2 002A                      u200 0028                      u201 0027  
                    u210 0032                      u211 0031                      u220 0036  
                    u221 0035                      u230 0042                      u231 0041  
                    u190 0024                      u191 0023             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000         ??_mostrarDigitos 0000                     _RCIE 0465  
                   _RCIF 0065                     i1l81 002A             __CFG_WRT$OFF 0000  
                   _main 0000          _accionesAceptar 0000*                    btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000*                   ?_main 0000  
          __CFG_WDTE$OFF 0000                    i1l761 0018                    i1l753 0000  
                  i1l763 0020                    i1l755 0006                    i1l757 000C  
                  i1l765 0025                    i1l767 0026                    i1l759 0012  
                  _RCREG 001A                    u15_20 0006                    u15_21 0005  
                  u16_20 000C                    u16_21 000B                    u17_20 0012  
                  u17_21 0011                    u18_20 0018                    u18_21 0017  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  pclath 000A         _accionesDeshacer 0000*                   status 0003  
                  wtemp0 007E          __initialization 0000             __end_of_main 004E  
                 ??_main 0000                   _ADCON1 009F                   _INTCON 000B  
          _iniciar_usart 0000*          __CFG_PWRTE$OFF 0000                   _cuenta 0004  
                 _serial 0008             __pdataCOMMON 0000                   saved_w 007E  
__end_of__initialization 0017           ?_iniciar_usart 0000           __pcstackCOMMON 0000  
       ?_accionesAceptar 0000               __pbssBANK0 0000       __size_of_int_usart 0033  
             __pmaintext 0000               __pintentry 0000          ??_iniciar_usart 0000  
                __ptext1 0000                  _huboInt 0000                  _nroLote 0000  
                _numProd 0019        __end_of_int_usart 0033                  clrloop0 0001  
   end_of_initialization 0017               _montosLote 0017        _productoIngresado 001B  
             _ventasLote 0006            __pidataCOMMON 0000     _accionesPuertoSerial 0000* 
    start_initialization 0000           _prodIngresados 0000    ?_accionesPuertoSerial 0000  
      ?_accionesDeshacer 0000              __pbssCOMMON 0000                ___latbits 0002  
     ??_accionesDeshacer 0000            __pcstackBANK0 0000         _mostrarDigitos$0 0000  
         _mostrarDigitos 0000*               _auxCuenta 0002                _modoDebug 0007  
              _int_usart 0000        interrupt_function 0000                clear_ram0 0000  
 ??_accionesPuertoSerial 0000            _codigoEntrada 000D               ?_int_usart 0000  
        ?_mostrarDigitos 0000        ??_accionesAceptar 0000            __size_of_main 004E  
               intlevel1 0000*             ??_int_usart 0000  
