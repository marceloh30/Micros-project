

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed May 27 18:57:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0088                     	;# 
   484  0089                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0094                     	;# 
   492  0098                     	;# 
   493  0099                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010D                     	;# 
   500  010E                     	;# 
   501  010F                     	;# 
   502  018C                     	;# 
   503  018D                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000D                     	;# 
   518  000E                     	;# 
   519  000E                     	;# 
   520  000F                     	;# 
   521  0010                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0013                     	;# 
   525  0014                     	;# 
   526  0015                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001D                     	;# 
   537  001E                     	;# 
   538  001F                     	;# 
   539  0081                     	;# 
   540  0085                     	;# 
   541  0086                     	;# 
   542  0087                     	;# 
   543  0088                     	;# 
   544  0089                     	;# 
   545  008C                     	;# 
   546  008D                     	;# 
   547  008E                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0098                     	;# 
   553  0099                     	;# 
   554  009C                     	;# 
   555  009D                     	;# 
   556  009E                     	;# 
   557  009F                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  010F                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564                           
   565                           	psect	idataBANK0
   566  07FE                     __pidataBANK0:	
   567                           
   568                           ;initializer for _nroLote
   569  07FE  3401               	retlw	1
   570                           
   571                           	psect	strings
   572  060E                     __pstrings:	
   573  060E                     stringtab:	
   574  060E                     __stringtab:	
   575                           
   576                           ;	String table - string pointers are 1 byte each
   577  060E  1BFF               	btfsc	btemp+1,7
   578  060F  2E18               	ljmp	stringcode
   579  0610  1383               	bcf	3,7
   580  0611  187F               	btfsc	btemp+1,0
   581  0612  1783               	bsf	3,7
   582  0613  0800               	movf	0,w
   583  0614  0A84               	incf	4,f
   584  0615  1903               	skipnz
   585  0616  0AFF               	incf	btemp+1,f
   586  0617  0008               	return
   587  0618                     stringcode:	
   588  0618                     stringdir:	
   589  0618  3006               	movlw	high stringdir
   590  0619  008A               	movwf	10
   591  061A  0804               	movf	4,w
   592  061B  0A84               	incf	4,f
   593  061C  0782               	addwf	2,f
   594  061D                     __stringbase:	
   595  061D  3400               	retlw	0
   596  061E                     __end_of__stringtab:	
   597  061E                     _dpowers:	
   598  061E  3401               	retlw	1
   599  061F  3400               	retlw	0
   600  0620  340A               	retlw	10
   601  0621  3400               	retlw	0
   602  0622  3464               	retlw	100
   603  0623  3400               	retlw	0
   604  0624  34E8               	retlw	232
   605  0625  3403               	retlw	3
   606  0626  3410               	retlw	16
   607  0627  3427               	retlw	39
   608  0628                     __end_of_dpowers:	
   609  0628                     _BMS:	
   610  0628  3400               	retlw	0
   611  0629  3410               	retlw	16
   612  062A  3420               	retlw	32
   613  062B  3430               	retlw	48
   614  062C  3440               	retlw	64
   615  062D  3450               	retlw	80
   616  062E  3460               	retlw	96
   617  062F  3470               	retlw	112
   618  0630  3480               	retlw	128
   619  0631  3490               	retlw	144
   620  0632                     __end_of_BMS:	
   621  000B                     _INTCONbits	set	11
   622  0003                     _STATUSbits	set	3
   623  0019                     _TXREG	set	25
   624  0008                     _PORTD	set	8
   625  0006                     _PORTB	set	6
   626  001E                     _ADRESH	set	30
   627  001A                     _RCREG	set	26
   628  0018                     _RCSTA	set	24
   629  000B                     _INTCON	set	11
   630  001F                     _ADCON0	set	31
   631  00FA                     _GO_nDONE	set	250
   632  002D                     _RA5	set	45
   633  002B                     _RA3	set	43
   634  0065                     _RCIF	set	101
   635  0048                     _RE0	set	72
   636  004A                     _RE2	set	74
   637  0049                     _RE1	set	73
   638  0066                     _ADIF	set	102
   639  009E                     _ADRESL	set	158
   640  0099                     _SPBRG	set	153
   641  0098                     _TXSTA	set	152
   642  0087                     _TRISC	set	135
   643  009F                     _ADCON1	set	159
   644  0088                     _TRISD	set	136
   645  0086                     _TRISB	set	134
   646  0089                     _TRISE	set	137
   647  0085                     _TRISA	set	133
   648  0465                     _RCIE	set	1125
   649  0466                     _ADIE	set	1126
   650  010C                     _EEDATA	set	268
   651  010D                     _EEADR	set	269
   652  018D                     _EECON2	set	397
   653  018C                     _EECON1	set	396
   654  018C                     _EECON1bits	set	396
   655  0632                     STR_3:	
   656  0632  344F               	retlw	79	;'O'
   657  0633  3463               	retlw	99	;'c'
   658  0634  3475               	retlw	117	;'u'
   659  0635  3472               	retlw	114	;'r'
   660  0636  3472               	retlw	114	;'r'
   661  0637  3469               	retlw	105	;'i'
   662  0638  346F               	retlw	111	;'o'
   663  0639  3420               	retlw	32	;' '
   664  063A  3475               	retlw	117	;'u'
   665  063B  346E               	retlw	110	;'n'
   666  063C  3420               	retlw	32	;' '
   667  063D  3465               	retlw	101	;'e'
   668  063E  3472               	retlw	114	;'r'
   669  063F  3472               	retlw	114	;'r'
   670  0640  346F               	retlw	111	;'o'
   671  0641  3472               	retlw	114	;'r'
   672  0642  3420               	retlw	32	;' '
   673  0643  3465               	retlw	101	;'e'
   674  0644  346E               	retlw	110	;'n'
   675  0645  3420               	retlw	32	;' '
   676  0646  346C               	retlw	108	;'l'
   677  0647  3461               	retlw	97	;'a'
   678  0648  3420               	retlw	32	;' '
   679  0649  3469               	retlw	105	;'i'
   680  064A  346E               	retlw	110	;'n'
   681  064B  3474               	retlw	116	;'t'
   682  064C  3465               	retlw	101	;'e'
   683  064D  3472               	retlw	114	;'r'
   684  064E  3470               	retlw	112	;'p'
   685  064F  3472               	retlw	114	;'r'
   686  0650  3465               	retlw	101	;'e'
   687  0651  3474               	retlw	116	;'t'
   688  0652  3461               	retlw	97	;'a'
   689  0653  3463               	retlw	99	;'c'
   690  0654  3469               	retlw	105	;'i'
   691  0655  346F               	retlw	111	;'o'
   692  0656  346E               	retlw	110	;'n'
   693  0657  342E               	retlw	46	;'.'
   694  0658  340A               	retlw	10
   695  0659  3400               	retlw	0
   696  065A                     STR_2:	
   697  065A  344C               	retlw	76	;'L'
   698  065B  343A               	retlw	58	;':'
   699  065C  3425               	retlw	37	;'%'
   700  065D  3464               	retlw	100	;'d'
   701  065E  342C               	retlw	44	;','
   702  065F  344E               	retlw	78	;'N'
   703  0660  343A               	retlw	58	;':'
   704  0661  3425               	retlw	37	;'%'
   705  0662  3464               	retlw	100	;'d'
   706  0663  342C               	retlw	44	;','
   707  0664  3454               	retlw	84	;'T'
   708  0665  343A               	retlw	58	;':'
   709  0666  3425               	retlw	37	;'%'
   710  0667  3464               	retlw	100	;'d'
   711  0668  340A               	retlw	10
   712  0669  3400               	retlw	0
   713  066A                     STR_1:	
   714  066A  3456               	retlw	86	;'V'
   715  066B  343D               	retlw	61	;'='
   716  066C  3425               	retlw	37	;'%'
   717  066D  3464               	retlw	100	;'d'
   718  066E  340A               	retlw	10
   719  066F  3400               	retlw	0
   720                           
   721                           ; #config settings
   722  0000                     
   723                           	psect	cinit
   724  0011                     start_initialization:	
   725  0011                     __initialization:	
   726                           
   727                           ; Initialize objects allocated to BANK0
   728  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   729  0016  00EE               	movwf	__pdataBANK0& (0+127)
   730                           
   731                           ; Clear objects allocated to BANK1
   732  0017  1383               	bcf	3,7	;select IRP bank0
   733  0018  30B7               	movlw	low __pbssBANK1
   734  0019  0084               	movwf	4
   735  001A  30CC               	movlw	low (__pbssBANK1+21)
   736  001B  120A  158A  249C  120A  118A  	fcall	clear_ram0
   737                           
   738                           ; Clear objects allocated to BANK0
   739  0020  305E               	movlw	low __pbssBANK0
   740  0021  0084               	movwf	4
   741  0022  306E               	movlw	low (__pbssBANK0+16)
   742  0023  120A  158A  249C  120A  118A  	fcall	clear_ram0
   743                           
   744                           ; Clear objects allocated to COMMON
   745  0028  01F6               	clrf	__pbssCOMMON& (0+127)
   746  0029  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   747  002A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   748  002B  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   749  002C                     end_of_initialization:	
   750                           ;End of C runtime variable initialization code
   751                           
   752  002C                     __end_of__initialization:	
   753  002C  0183               	clrf	3
   754  002D  120A  118A  293E   	ljmp	_main	;jump to C main() function
   755                           
   756                           	psect	bssCOMMON
   757  0076                     __pbssCOMMON:	
   758  0076                     _modoDebug:	
   759  0076                     	ds	1
   760  0077                     _serial:	
   761  0077                     	ds	1
   762  0078                     _montosLote:	
   763  0078                     	ds	2
   764                           
   765                           	psect	bssBANK0
   766  005E                     __pbssBANK0:	
   767  005E                     _productoIngresado:	
   768  005E                     	ds	2
   769  0060                     _auxCuenta:	
   770  0060                     	ds	2
   771  0062                     _cierreLotePedido:	
   772  0062                     	ds	1
   773  0063                     _codigoEntrada:	
   774  0063                     	ds	10
   775  006D                     _ventasLote:	
   776  006D                     	ds	1
   777                           
   778                           	psect	dataBANK0
   779  006E                     __pdataBANK0:	
   780  006E                     _nroLote:	
   781  006E                     	ds	1
   782                           
   783                           	psect	bssBANK1
   784  00B7                     __pbssBANK1:	
   785  00B7                     _prodIngresados:	
   786  00B7                     	ds	13
   787  00C4                     _numProd:	
   788  00C4                     	ds	2
   789  00C6                     _huboInt:	
   790  00C6                     	ds	2
   791  00C8                     _cuenta:	
   792  00C8                     	ds	2
   793  00CA                     _adresult:	
   794  00CA                     	ds	2
   795                           
   796                           	psect	clrtext
   797  0C9C                     clear_ram0:	
   798                           ;	Called with FSR containing the base address, and
   799                           ;	W with the last address+1
   800                           
   801  0C9C  0064               	clrwdt	;clear the watchdog before getting into this loop
   802  0C9D                     clrloop0:	
   803  0C9D  0180               	clrf	0	;clear RAM location pointed to by FSR
   804  0C9E  0A84               	incf	4,f	;increment pointer
   805  0C9F  0604               	xorwf	4,w	;XOR with final address
   806  0CA0  1903               	btfsc	3,2	;have we reached the end yet?
   807  0CA1  3400               	retlw	0	;all done for this memory range, return
   808  0CA2  0604               	xorwf	4,w	;XOR again to restore value
   809  0CA3  2C9D               	goto	clrloop0	;do the next byte
   810                           
   811                           	psect	cstackBANK1
   812  00A0                     __pcstackBANK1:	
   813  00A0                     ??_accionesPuertoSerial:	
   814                           
   815                           ; 1 bytes @ 0x0
   816  00A0                     	ds	3
   817  00A3                     ??_main:	
   818                           
   819                           ; 1 bytes @ 0x3
   820  00A3                     	ds	2
   821  00A5                     main@bufferMsj:	
   822                           
   823                           ; 16 bytes @ 0x5
   824  00A5                     	ds	16
   825  00B5                     _main$966:	
   826                           
   827                           ; 2 bytes @ 0x15
   828  00B5                     	ds	2
   829                           
   830                           	psect	cstackCOMMON
   831  0070                     __pcstackCOMMON:	
   832  0070                     ?_accionesAceptar:	
   833  0070                     ?_accionesDeshacer:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_accionesPuertoSerial:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_eeprom_read:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_agregarModificarPrecio:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_main:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_int_usart:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ??_int_usart:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_lecturaEtiqueta:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_verificacionEntrada:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_cierreDeLote:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_lecturaMas:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_lecturaMenos:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_lecturaConsulta:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_lecturaComando:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_bailenLeds:	
   876                           ; 1 bytes @ 0x0
   877                           
   878                           
   879                           ; 1 bytes @ 0x0
   880  0070                     	ds	4
   881  0074                     ??_eeprom_read:	
   882  0074                     ?_eeprom_write:	
   883                           ; 1 bytes @ 0x4
   884                           
   885  0074                     ??_verificacionEntrada:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0074                     ??___wmul:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     ?___bmul:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     ??___awdiv:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     ??___awmod:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0074                     ??___lwdiv:	
   901                           ; 1 bytes @ 0x4
   902                           
   903  0074                     ?_strlen:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0074                     eeprom_write@value:	
   907                           ; 2 bytes @ 0x4
   908                           
   909  0074                     ___bmul@multiplicand:	
   910                           ; 1 bytes @ 0x4
   911                           
   912  0074                     bailenLeds@i:	
   913                           ; 1 bytes @ 0x4
   914                           
   915  0074                     ___wmul@product:	
   916                           ; 2 bytes @ 0x4
   917                           
   918  0074                     strlen@s:	
   919                           ; 2 bytes @ 0x4
   920                           
   921                           
   922                           ; 2 bytes @ 0x4
   923  0074                     	ds	1
   924  0075                     ??_eeprom_write:	
   925  0075                     ??___bmul:	
   926                           ; 1 bytes @ 0x5
   927                           
   928  0075                     ??___lwmod:	
   929                           ; 1 bytes @ 0x5
   930                           
   931  0075                     eeprom_read@addr:	
   932                           ; 1 bytes @ 0x5
   933                           
   934                           
   935                           ; 1 bytes @ 0x5
   936  0075                     	ds	1
   937  0076                     ??_mostrarDigitos:	
   938  0076                     ??_accionesDeshacer:	
   939                           ; 1 bytes @ 0x6
   940                           
   941  0076                     ??_strlen:	
   942                           ; 1 bytes @ 0x6
   943                           
   944  0076                     ??_lecturaMas:	
   945                           ; 1 bytes @ 0x6
   946                           
   947  0076                     ??_lecturaMenos:	
   948                           ; 1 bytes @ 0x6
   949                           
   950  0076                     ??_consultaPrecio:	
   951                           ; 1 bytes @ 0x6
   952                           
   953  0076                     ??_lecturaComando:	
   954                           ; 1 bytes @ 0x6
   955                           
   956  0076                     ??_pow:	
   957                           ; 1 bytes @ 0x6
   958                           
   959                           
   960                           	psect	cstackBANK0
   961  0020                     __pcstackBANK0:	
   962                           ; 1 bytes @ 0x6
   963                           
   964  0020                     ?_consultaPrecio:	
   965  0020                     ??_bailenLeds:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0020                     ?___wmul:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0020                     ?___awdiv:	
   972                           ; 2 bytes @ 0x0
   973                           
   974  0020                     ?___awmod:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  0020                     ?___lwdiv:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  0020                     verificacionEntrada@ret:	
   981                           ; 2 bytes @ 0x0
   982                           
   983  0020                     eeprom_write@addr:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0020                     ___bmul@product:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0020                     consultaPrecio@articulo:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0020                     ___wmul@multiplier:	
   993                           ; 2 bytes @ 0x0
   994                           
   995  0020                     ___awdiv@divisor:	
   996                           ; 2 bytes @ 0x0
   997                           
   998  0020                     ___awmod@divisor:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001  0020                     ___lwdiv@divisor:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004  0020                     strlen@cp:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007                           
  1008                           ; 2 bytes @ 0x0
  1009  0020                     	ds	1
  1010  0021                     verificacionEntrada@i:	
  1011  0021                     ___bmul@multiplier:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x1
  1016  0021                     	ds	1
  1017  0022                     ?_envioTX:	
  1018  0022                     envioTX@mensaje:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021  0022                     ___wmul@multiplicand:	
  1022                           ; 2 bytes @ 0x2
  1023                           
  1024  0022                     ___awdiv@dividend:	
  1025                           ; 2 bytes @ 0x2
  1026                           
  1027  0022                     ___awmod@dividend:	
  1028                           ; 2 bytes @ 0x2
  1029                           
  1030  0022                     ___lwdiv@dividend:	
  1031                           ; 2 bytes @ 0x2
  1032                           
  1033                           
  1034                           ; 2 bytes @ 0x2
  1035  0022                     	ds	2
  1036  0024                     ??_envioTX:	
  1037  0024                     ??_agregarModificarPrecio:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  0024                     ??_lecturaConsulta:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  0024                     ?_pow:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046  0024                     ___awdiv@counter:	
  1047                           ; 2 bytes @ 0x4
  1048                           
  1049  0024                     ___awmod@counter:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052  0024                     ___lwdiv@counter:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0024                     pow@numero:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x4
  1060  0024                     	ds	1
  1061  0025                     ___awdiv@sign:	
  1062  0025                     ___awmod@sign:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065  0025                     ___lwdiv@quotient:	
  1066                           ; 1 bytes @ 0x5
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x5
  1070  0025                     	ds	1
  1071  0026                     pow@potencia:	
  1072  0026                     ___awdiv@quotient:	
  1073                           ; 2 bytes @ 0x6
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x6
  1077  0026                     	ds	1
  1078  0027                     ?___lwmod:	
  1079  0027                     envioTX@i:	
  1080                           ; 2 bytes @ 0x7
  1081                           
  1082  0027                     ___lwmod@divisor:	
  1083                           ; 2 bytes @ 0x7
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x7
  1087  0027                     	ds	1
  1088  0028                     lecturaConsulta@articulo:	
  1089  0028                     pow@i:	
  1090                           ; 2 bytes @ 0x8
  1091                           
  1092                           
  1093                           ; 2 bytes @ 0x8
  1094  0028                     	ds	1
  1095  0029                     ___lwmod@dividend:	
  1096                           
  1097                           ; 2 bytes @ 0x9
  1098  0029                     	ds	1
  1099  002A                     pow@resultado:	
  1100                           
  1101                           ; 2 bytes @ 0xA
  1102  002A                     	ds	1
  1103  002B                     ___lwmod@counter:	
  1104                           
  1105                           ; 1 bytes @ 0xB
  1106  002B                     	ds	1
  1107  002C                     ?_mostrarDigitos:	
  1108  002C                     ?_verificarProd:	
  1109                           ; 1 bytes @ 0xC
  1110                           
  1111  002C                     ?_ingresoProd:	
  1112                           ; 1 bytes @ 0xC
  1113                           
  1114  002C                     ?_eliminarProd:	
  1115                           ; 1 bytes @ 0xC
  1116                           
  1117  002C                     ?_sprintf:	
  1118                           ; 1 bytes @ 0xC
  1119                           
  1120  002C                     sprintf@f:	
  1121                           ; 2 bytes @ 0xC
  1122                           
  1123  002C                     ingresoProd@tp:	
  1124                           ; 1 bytes @ 0xC
  1125                           
  1126  002C                     verificarProd@tp:	
  1127                           ; 2 bytes @ 0xC
  1128                           
  1129  002C                     eliminarProd@tp:	
  1130                           ; 2 bytes @ 0xC
  1131                           
  1132  002C                     mostrarDigitos@num:	
  1133                           ; 2 bytes @ 0xC
  1134                           
  1135                           
  1136                           ; 2 bytes @ 0xC
  1137  002C                     	ds	2
  1138  002E                     ??_verificarProd:	
  1139  002E                     ??_ingresoProd:	
  1140                           ; 1 bytes @ 0xE
  1141                           
  1142  002E                     ??_eliminarProd:	
  1143                           ; 1 bytes @ 0xE
  1144                           
  1145  002E                     agregarModificarPrecio@lower_8bits:	
  1146                           ; 1 bytes @ 0xE
  1147                           
  1148  002E                     _mostrarDigitos$967:	
  1149                           ; 1 bytes @ 0xE
  1150                           
  1151                           
  1152                           ; 2 bytes @ 0xE
  1153  002E                     	ds	1
  1154  002F                     agregarModificarPrecio@upper_8bits:	
  1155                           
  1156                           ; 1 bytes @ 0xF
  1157  002F                     	ds	1
  1158  0030                     ??_accionesAceptar:	
  1159  0030                     ??_sprintf:	
  1160                           ; 1 bytes @ 0x10
  1161                           
  1162  0030                     agregarModificarPrecio@precio:	
  1163                           ; 1 bytes @ 0x10
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x10
  1167  0030                     	ds	1
  1168  0031                     verificarProd@ret:	
  1169  0031                     ingresoProd@i:	
  1170                           ; 1 bytes @ 0x11
  1171                           
  1172  0031                     eliminarProd@i:	
  1173                           ; 2 bytes @ 0x11
  1174                           
  1175  0031                     accionesAceptar@i:	
  1176                           ; 2 bytes @ 0x11
  1177                           
  1178                           
  1179                           ; 2 bytes @ 0x11
  1180  0031                     	ds	1
  1181  0032                     agregarModificarPrecio@tp:	
  1182  0032                     verificarProd@i:	
  1183                           ; 1 bytes @ 0x12
  1184                           
  1185                           
  1186                           ; 2 bytes @ 0x12
  1187  0032                     	ds	1
  1188  0033                     sprintf@ap:	
  1189                           
  1190                           ; 1 bytes @ 0x13
  1191  0033                     	ds	1
  1192  0034                     ?_EEPROM_search:	
  1193  0034                     sprintf@flag:	
  1194                           ; 2 bytes @ 0x14
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0x14
  1198  0034                     	ds	1
  1199  0035                     sprintf@prec:	
  1200                           
  1201                           ; 1 bytes @ 0x15
  1202  0035                     	ds	1
  1203  0036                     ??_EEPROM_search:	
  1204  0036                     sprintf@val:	
  1205                           ; 1 bytes @ 0x16
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0x16
  1209  0036                     	ds	2
  1210  0038                     sprintf@sp:	
  1211                           
  1212                           ; 1 bytes @ 0x18
  1213  0038                     	ds	1
  1214  0039                     sprintf@c:	
  1215                           
  1216                           ; 1 bytes @ 0x19
  1217  0039                     	ds	1
  1218  003A                     ??_cierreDeLote:	
  1219  003A                     EEPROM_search@precio:	
  1220                           ; 1 bytes @ 0x1A
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x1A
  1224  003A                     	ds	2
  1225  003C                     EEPROM_search@tp:	
  1226                           
  1227                           ; 1 bytes @ 0x1C
  1228  003C                     	ds	1
  1229  003D                     ??_lecturaEtiqueta:	
  1230                           
  1231                           ; 1 bytes @ 0x1D
  1232  003D                     	ds	1
  1233  003E                     cierreDeLote@strLote:	
  1234                           
  1235                           ; 32 bytes @ 0x1E
  1236  003E                     	ds	2
  1237  0040                     lecturaEtiqueta@i:	
  1238                           
  1239                           ; 2 bytes @ 0x20
  1240  0040                     	ds	2
  1241  0042                     lecturaEtiqueta@tp:	
  1242                           
  1243                           ; 1 bytes @ 0x22
  1244  0042                     	ds	1
  1245  0043                     lecturaEtiqueta@Aux:	
  1246                           
  1247                           ; 2 bytes @ 0x23
  1248  0043                     	ds	27
  1249                           
  1250                           	psect	maintext
  1251  013E                     __pmaintext:	
  1252 ;;
  1253 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1254 ;;
  1255 ;; *************** function _main *****************
  1256 ;; Defined at:
  1257 ;;		line 9 in file "main.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  bufferMsj      16    5[BANK1 ] unsigned char [16]
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : B00/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       0       0       0       0
  1272 ;;      Locals:         0       0      18       0       0
  1273 ;;      Temps:          0       0       2       0       0
  1274 ;;      Totals:         0       0      20       0       0
  1275 ;;Total ram usage:       20 bytes
  1276 ;; Hardware stack levels required when called:    8
  1277 ;; This function calls:
  1278 ;;		___lwmod
  1279 ;;		___wmul
  1280 ;;		_accionesAceptar
  1281 ;;		_accionesDeshacer
  1282 ;;		_accionesPuertoSerial
  1283 ;;		_envioTX
  1284 ;;		_mostrarDigitos
  1285 ;;		_sprintf
  1286 ;; This function is called by:
  1287 ;;		Startup code after reset
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _main
  1293  013E                     _main:	
  1294  013E                     l2950:	
  1295                           ;incstack = 0
  1296                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1297                           
  1298                           
  1299                           ;main.c: 13:     TRISA = 0x01;
  1300  013E  3001               	movlw	1
  1301  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0140  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0141  0085               	movwf	5	;volatile
  1304                           
  1305                           ;main.c: 14:     TRISE = 0x07;
  1306  0142  3007               	movlw	7
  1307  0143  0089               	movwf	9	;volatile
  1308  0144                     l2952:	
  1309                           
  1310                           ;main.c: 15:     TRISB = 0x00;
  1311  0144  0186               	clrf	6	;volatile
  1312  0145                     l2954:	
  1313                           
  1314                           ;main.c: 16:     TRISD = 0x00;
  1315  0145  0188               	clrf	8	;volatile
  1316                           
  1317                           ;main.c: 19:     ADCON0 = 0b01000001;
  1318  0146  3041               	movlw	65
  1319  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0149  009F               	movwf	31	;volatile
  1322                           
  1323                           ;main.c: 20:     ADCON1 = 0b00001110;
  1324  014A  300E               	movlw	14
  1325  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1326  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1327  014D  009F               	movwf	31	;volatile
  1328                           
  1329                           ;main.c: 21:     INTCON = 0b11000000;
  1330  014E  30C0               	movlw	192
  1331  014F  008B               	movwf	11	;volatile
  1332                           
  1333                           ;main.c: 24:     TRISC = 0b10000000;
  1334  0150  3080               	movlw	128
  1335  0151  0087               	movwf	7	;volatile
  1336                           
  1337                           ;main.c: 25:     TXSTA = 0b00100110;
  1338  0152  3026               	movlw	38
  1339  0153  0098               	movwf	24	;volatile
  1340                           
  1341                           ;main.c: 26:     RCSTA = 0b10010000;
  1342  0154  3090               	movlw	144
  1343  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0157  0098               	movwf	24	;volatile
  1346                           
  1347                           ;main.c: 27:     SPBRG = 25;
  1348  0158  3019               	movlw	25
  1349  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1350  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1351  015B  0099               	movwf	25	;volatile
  1352  015C                     l2956:	
  1353                           
  1354                           ;main.c: 30:     ADIF = 0;
  1355  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1356  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1357  015E  130C               	bcf	12,6	;volatile
  1358  015F                     l2958:	
  1359                           
  1360                           ;main.c: 31:     ADIE = 1;
  1361  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1362  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1363  0161  170C               	bsf	12,6	;volatile
  1364  0162                     l2960:	
  1365                           
  1366                           ;main.c: 32:     RCIE = 1;
  1367  0162  168C               	bsf	12,5	;volatile
  1368  0163                     l2962:	
  1369                           
  1370                           ;main.c: 33:     cuenta = 0;
  1371  0163  01C8               	clrf	_cuenta^(0+128)
  1372  0164  01C9               	clrf	(_cuenta+1)^(0+128)
  1373  0165                     l2964:	
  1374                           
  1375                           ;main.c: 34:     auxCuenta = 0;
  1376  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0167  01E0               	clrf	_auxCuenta
  1379  0168  01E1               	clrf	_auxCuenta+1
  1380  0169                     l2966:	
  1381                           
  1382                           ;main.c: 35:     mostrarDigitos(cuenta);
  1383  0169  1683               	bsf	3,5	;RP0=1, select bank1
  1384  016A  1303               	bcf	3,6	;RP1=0, select bank1
  1385  016B  0849               	movf	(_cuenta+1)^(0+128),w
  1386  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1387  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1388  016E  00AD               	movwf	mostrarDigitos@num+1
  1389  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1390  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0171  0848               	movf	_cuenta^(0+128),w
  1392  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0174  00AC               	movwf	mostrarDigitos@num
  1395  0175  120A  118A  24E0  120A  118A  	fcall	_mostrarDigitos
  1396  017A                     l2968:	
  1397                           
  1398                           ;main.c: 41:         if(RE1) {
  1399  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1400  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1401  017C  1C89               	btfss	9,1	;volatile
  1402  017D  297F               	goto	u3141
  1403  017E  2980               	goto	u3140
  1404  017F                     u3141:	
  1405  017F  298A               	goto	l88
  1406  0180                     u3140:	
  1407  0180                     l89:	
  1408  0180  1889               	btfsc	9,1	;volatile
  1409  0181  2983               	goto	u3151
  1410  0182  2984               	goto	u3150
  1411  0183                     u3151:	
  1412  0183  2980               	goto	l89
  1413  0184                     u3150:	
  1414  0184                     l2972:	
  1415                           
  1416                           ;main.c: 43:             accionesAceptar();
  1417  0184  120A  158A  27B9  120A  118A  	fcall	_accionesAceptar
  1418                           
  1419                           ;main.c: 44:         }
  1420  0189  297A               	goto	l2968
  1421  018A                     l88:	
  1422                           ;main.c: 45:         else if(RE2) {
  1423                           
  1424  018A  1D09               	btfss	9,2	;volatile
  1425  018B  298D               	goto	u3161
  1426  018C  298E               	goto	u3160
  1427  018D                     u3161:	
  1428  018D  2998               	goto	l93
  1429  018E                     u3160:	
  1430  018E                     l94:	
  1431  018E  1909               	btfsc	9,2	;volatile
  1432  018F  2991               	goto	u3171
  1433  0190  2992               	goto	u3170
  1434  0191                     u3171:	
  1435  0191  298E               	goto	l94
  1436  0192                     u3170:	
  1437  0192                     l2976:	
  1438                           
  1439                           ;main.c: 47:             accionesDeshacer();
  1440  0192  120A  158A  267C  120A  118A  	fcall	_accionesDeshacer
  1441                           
  1442                           ;main.c: 48:         }
  1443  0197  297A               	goto	l2968
  1444  0198                     l93:	
  1445                           ;main.c: 49:         else if(RE0) {
  1446                           
  1447  0198  1C09               	btfss	9,0	;volatile
  1448  0199  299B               	goto	u3181
  1449  019A  299C               	goto	u3180
  1450  019B                     u3181:	
  1451  019B  29A3               	goto	l2980
  1452  019C                     u3180:	
  1453  019C                     l99:	
  1454  019C  1809               	btfsc	9,0	;volatile
  1455  019D  299F               	goto	u3191
  1456  019E  29A0               	goto	u3190
  1457  019F                     u3191:	
  1458  019F  299C               	goto	l99
  1459  01A0                     u3190:	
  1460  01A0                     l101:	
  1461                           
  1462                           ;main.c: 51:             cierreLotePedido = 1;
  1463  01A0  01E2               	clrf	_cierreLotePedido
  1464  01A1  0AE2               	incf	_cierreLotePedido,f
  1465                           
  1466                           ;main.c: 52:         }
  1467  01A2  297A               	goto	l2968
  1468  01A3                     l2980:	
  1469  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1470  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1471  01A5  0846               	movf	_huboInt^(0+128),w
  1472  01A6  0447               	iorwf	(_huboInt+1)^(0+128),w
  1473  01A7  1903               	btfsc	3,2
  1474  01A8  29AA               	goto	u3201
  1475  01A9  29AB               	goto	u3200
  1476  01AA                     u3201:	
  1477  01AA  29B3               	goto	l2986
  1478  01AB                     u3200:	
  1479  01AB                     l2982:	
  1480                           
  1481                           ;main.c: 54:             huboInt = 0;
  1482  01AB  01C6               	clrf	_huboInt^(0+128)
  1483  01AC  01C7               	clrf	(_huboInt+1)^(0+128)
  1484  01AD                     l2984:	
  1485                           
  1486                           ;main.c: 55:             accionesPuertoSerial();
  1487  01AD  120A  158A  26F3  120A  118A  	fcall	_accionesPuertoSerial
  1488                           
  1489                           ;main.c: 56:         }
  1490  01B2  297A               	goto	l2968
  1491  01B3                     l2986:	
  1492  01B3  084A               	movf	_adresult^(0+128),w
  1493  01B4  044B               	iorwf	(_adresult+1)^(0+128),w
  1494  01B5  1903               	btfsc	3,2
  1495  01B6  29B8               	goto	u3211
  1496  01B7  29B9               	goto	u3210
  1497  01B8                     u3211:	
  1498  01B8  2A2E               	goto	l97
  1499  01B9                     u3210:	
  1500  01B9                     l2988:	
  1501                           
  1502                           ;main.c: 59:             adresult = adresult*1000*5/1024;
  1503  01B9  084B               	movf	(_adresult+1)^(0+128),w
  1504  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1505  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1506  01BC  00A1               	movwf	___wmul@multiplier+1
  1507  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1508  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1509  01BF  084A               	movf	_adresult^(0+128),w
  1510  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1511  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1512  01C2  00A0               	movwf	___wmul@multiplier
  1513  01C3  3088               	movlw	136
  1514  01C4  00A2               	movwf	___wmul@multiplicand
  1515  01C5  3013               	movlw	19
  1516  01C6  00A3               	movwf	___wmul@multiplicand+1
  1517  01C7  120A  158A  2523  120A  118A  	fcall	___wmul
  1518  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1519  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1520  01CE  0820               	movf	?___wmul,w
  1521  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1522  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  1523  01D1  00A3               	movwf	??_main^(0+128)
  1524  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1525  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1526  01D4  0821               	movf	?___wmul+1,w
  1527  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1528  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1529  01D7  00A4               	movwf	(??_main^(0+128)+1)
  1530  01D8  300A               	movlw	10
  1531  01D9                     u3225:	
  1532  01D9  1003               	clrc
  1533  01DA  0CA4               	rrf	(??_main^(0+128)+1),f
  1534  01DB  0CA3               	rrf	??_main^(0+128),f
  1535  01DC  3EFF               	addlw	-1
  1536  01DD  1D03               	skipz
  1537  01DE  29D9               	goto	u3225
  1538  01DF  0823               	movf	??_main^(0+128),w
  1539  01E0  00CA               	movwf	_adresult^(0+128)
  1540  01E1  0824               	movf	(??_main+1)^(0+128),w
  1541  01E2  00CB               	movwf	(_adresult+1)^(0+128)
  1542                           
  1543                           ;main.c: 60:             char bufferMsj[16];;main.c: 61:             sprintf(bufferMsj,"
      +                          V=%d\n",adresult%1000);
  1544  01E3  30E8               	movlw	232
  1545  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1546  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1547  01E6  00A7               	movwf	___lwmod@divisor
  1548  01E7  3003               	movlw	3
  1549  01E8  00A8               	movwf	___lwmod@divisor+1
  1550  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  1551  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  1552  01EB  084B               	movf	(_adresult+1)^(0+128),w
  1553  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1554  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1555  01EE  00AA               	movwf	___lwmod@dividend+1
  1556  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1557  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1558  01F1  084A               	movf	_adresult^(0+128),w
  1559  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1560  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1561  01F4  00A9               	movwf	___lwmod@dividend
  1562  01F5  120A  158A  26B7  120A  118A  	fcall	___lwmod
  1563  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1564  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1565  01FC  0828               	movf	?___lwmod+1,w
  1566  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1567  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1568  01FF  00B6               	movwf	(_main$966+1)^(0+128)
  1569  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0202  0827               	movf	?___lwmod,w
  1572  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1573  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1574  0205  00B5               	movwf	_main$966^(0+128)
  1575  0206                     l2990:	
  1576                           
  1577                           ;main.c: 60:             char bufferMsj[16];;main.c: 61:             sprintf(bufferMsj,"
      +                          V=%d\n",adresult%1000);
  1578  0206  304D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1579  0207  00A3               	movwf	??_main^(0+128)
  1580  0208  0823               	movf	??_main^(0+128),w
  1581  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1582  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1583  020B  00AC               	movwf	sprintf@f
  1584  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1585  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1586  020E  0836               	movf	(_main$966+1)^(0+128),w
  1587  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0211  00AE               	movwf	?_sprintf+2
  1590  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1591  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1592  0214  0835               	movf	_main$966^(0+128),w
  1593  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0217  00AD               	movwf	?_sprintf+1
  1596  0218  30A5               	movlw	(low (main@bufferMsj| 0))& (0+255)
  1597  0219  120A  118A  2324  120A  118A  	fcall	_sprintf
  1598  021E                     l2992:	
  1599                           
  1600                           ;main.c: 62:             envioTX(bufferMsj);
  1601  021E  30A5               	movlw	(low (main@bufferMsj| 0))& (0+255)
  1602  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0221  00A2               	movwf	envioTX@mensaje
  1605  0222  3000               	movlw	0
  1606  0223  00A3               	movwf	envioTX@mensaje+1
  1607  0224  120A  158A  2609  120A  118A  	fcall	_envioTX
  1608  0229                     l2994:	
  1609                           
  1610                           ;main.c: 63:             adresult = 0;
  1611  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1612  022A  1303               	bcf	3,6	;RP1=0, select bank1
  1613  022B  01CA               	clrf	_adresult^(0+128)
  1614  022C  01CB               	clrf	(_adresult+1)^(0+128)
  1615  022D  297A               	goto	l2968
  1616  022E                     l97:	
  1617  022E  297A               	goto	l2968
  1618  022F  120A  118A  280E   	ljmp	start
  1619  0232                     __end_of_main:	
  1620                           
  1621                           	psect	text1
  1622  0EF3                     __ptext1:	
  1623 ;; *************** function _accionesPuertoSerial *****************
  1624 ;; Defined at:
  1625 ;;		line 25 in file "acciones.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0
  1641 ;;      Temps:          0       0       3       0       0
  1642 ;;      Totals:         0       0       3       0       0
  1643 ;;Total ram usage:        3 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    7
  1646 ;; This function calls:
  1647 ;;		_lecturaComando
  1648 ;;		_lecturaEtiqueta
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _accionesPuertoSerial
  1656  0EF3                     _accionesPuertoSerial:	
  1657  0EF3                     l2932:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1660                           
  1661                           
  1662                           ;acciones.c: 26:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codi
      +                          goEntrada[0] == '-')) {
  1663  0EF3  303F               	movlw	63
  1664  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0EF6  0663               	xorwf	_codigoEntrada,w
  1667  0EF7  1903               	btfsc	3,2
  1668  0EF8  2EFA               	goto	u3091
  1669  0EF9  2EFB               	goto	u3090
  1670  0EFA                     u3091:	
  1671  0EFA  2F07               	goto	l2938
  1672  0EFB                     u3090:	
  1673  0EFB                     l2934:	
  1674  0EFB  302B               	movlw	43
  1675  0EFC  0663               	xorwf	_codigoEntrada,w
  1676  0EFD  1903               	btfsc	3,2
  1677  0EFE  2F00               	goto	u3101
  1678  0EFF  2F01               	goto	u3100
  1679  0F00                     u3101:	
  1680  0F00  2F07               	goto	l2938
  1681  0F01                     u3100:	
  1682  0F01                     l2936:	
  1683  0F01  302D               	movlw	45
  1684  0F02  0663               	xorwf	_codigoEntrada,w
  1685  0F03  1D03               	btfss	3,2
  1686  0F04  2F06               	goto	u3111
  1687  0F05  2F07               	goto	u3110
  1688  0F06                     u3111:	
  1689  0F06  2F0D               	goto	l2940
  1690  0F07                     u3110:	
  1691  0F07                     l2938:	
  1692                           
  1693                           ;acciones.c: 27:         lecturaComando();
  1694  0F07  120A  158A  2503  120A  158A  	fcall	_lecturaComando
  1695                           
  1696                           ;acciones.c: 28:     }
  1697  0F0C  2F31               	goto	l349
  1698  0F0D                     l2940:	
  1699  0F0D  303A               	movlw	58
  1700  0F0E  0263               	subwf	_codigoEntrada,w
  1701  0F0F  1803               	skipnc
  1702  0F10  2F12               	goto	u3121
  1703  0F11  2F13               	goto	u3120
  1704  0F12                     u3121:	
  1705  0F12  2F1F               	goto	l347
  1706  0F13                     u3120:	
  1707  0F13                     l2942:	
  1708  0F13  3030               	movlw	48
  1709  0F14  0263               	subwf	_codigoEntrada,w
  1710  0F15  1C03               	skipc
  1711  0F16  2F18               	goto	u3131
  1712  0F17  2F19               	goto	u3130
  1713  0F18                     u3131:	
  1714  0F18  2F1F               	goto	l347
  1715  0F19                     u3130:	
  1716  0F19                     l2944:	
  1717                           
  1718                           ;acciones.c: 30:         lecturaEtiqueta();
  1719  0F19  120A  118A  2232  120A  158A  	fcall	_lecturaEtiqueta
  1720                           
  1721                           ;acciones.c: 31:     }
  1722  0F1E  2F31               	goto	l349
  1723  0F1F                     l347:	
  1724                           ;acciones.c: 32:     else{
  1725                           
  1726                           
  1727                           ;acciones.c: 34:         RA5 = 1;
  1728  0F1F  1685               	bsf	5,5	;volatile
  1729  0F20                     l2946:	
  1730                           
  1731                           ;acciones.c: 35:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1732  0F20  3006               	movlw	6
  1733  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  1734  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  1735  0F23  00A2               	movwf	(??_accionesPuertoSerial^(0+128)+2)
  1736  0F24  3013               	movlw	19
  1737  0F25  00A1               	movwf	(??_accionesPuertoSerial^(0+128)+1)
  1738  0F26  30AD               	movlw	173
  1739  0F27  00A0               	movwf	??_accionesPuertoSerial^(0+128)
  1740  0F28                     u3237:	
  1741  0F28  0BA0               	decfsz	??_accionesPuertoSerial^(0+128),f
  1742  0F29  2F28               	goto	u3237
  1743  0F2A  0BA1               	decfsz	(??_accionesPuertoSerial^(0+128)+1),f
  1744  0F2B  2F28               	goto	u3237
  1745  0F2C  0BA2               	decfsz	(??_accionesPuertoSerial^(0+128)+2),f
  1746  0F2D  2F28               	goto	u3237
  1747  0F2E                     l2948:	
  1748                           
  1749                           ;acciones.c: 36:         RA5 = 0;
  1750  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0F30  1285               	bcf	5,5	;volatile
  1753  0F31                     l349:	
  1754  0F31  0008               	return
  1755  0F32                     __end_of_accionesPuertoSerial:	
  1756                           
  1757                           	psect	text2
  1758  0232                     __ptext2:	
  1759 ;; *************** function _lecturaEtiqueta *****************
  1760 ;; Defined at:
  1761 ;;		line 17 in file "lectura.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  tp              1   34[BANK0 ] unsigned char 
  1766 ;;  i               2   32[BANK0 ] int 
  1767 ;;  Aux             2   35[BANK0 ] short 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0       0       0       0
  1778 ;;      Locals:         0       5       0       0       0
  1779 ;;      Temps:          0       3       0       0       0
  1780 ;;      Totals:         0       8       0       0       0
  1781 ;;Total ram usage:        8 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    5
  1784 ;; This function calls:
  1785 ;;		_EEPROM_search
  1786 ;;		___awmod
  1787 ;;		___bmul
  1788 ;;		_ingresoProd
  1789 ;;		_mostrarDigitos
  1790 ;; This function is called by:
  1791 ;;		_accionesPuertoSerial
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _lecturaEtiqueta
  1797  0232                     _lecturaEtiqueta:	
  1798  0232                     l2810:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1801                           
  1802                           
  1803                           ;lectura.c: 18:     short int Aux = 0;
  1804  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0234  01C3               	clrf	lecturaEtiqueta@Aux
  1807  0235  01C4               	clrf	lecturaEtiqueta@Aux+1
  1808                           
  1809                           ;lectura.c: 21:     for (int i = 0; i < 8; i++ ) {
  1810  0236  01C0               	clrf	lecturaEtiqueta@i
  1811  0237  01C1               	clrf	lecturaEtiqueta@i+1
  1812  0238                     l2816:	
  1813                           
  1814                           ;lectura.c: 22:         Aux += (codigoEntrada[i] - '0');
  1815  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1816  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1817  023A  0840               	movf	lecturaEtiqueta@i,w
  1818  023B  3E63               	addlw	(low (_codigoEntrada| 0))& (0+255)
  1819  023C  0084               	movwf	4
  1820  023D  1383               	bcf	3,7	;select IRP bank0
  1821  023E  0800               	movf	0,w
  1822  023F  3ED0               	addlw	208
  1823  0240  00BD               	movwf	??_lecturaEtiqueta
  1824  0241  30FF               	movlw	255
  1825  0242  1803               	skipnc
  1826  0243  3000               	movlw	0
  1827  0244  00BE               	movwf	??_lecturaEtiqueta+1
  1828  0245  083D               	movf	??_lecturaEtiqueta,w
  1829  0246  07C3               	addwf	lecturaEtiqueta@Aux,f
  1830  0247  1803               	skipnc
  1831  0248  0AC4               	incf	lecturaEtiqueta@Aux+1,f
  1832  0249  083E               	movf	??_lecturaEtiqueta+1,w
  1833  024A  07C4               	addwf	lecturaEtiqueta@Aux+1,f
  1834  024B                     l2818:	
  1835                           
  1836                           ;lectura.c: 23:     }
  1837  024B  3001               	movlw	1
  1838  024C  07C0               	addwf	lecturaEtiqueta@i,f
  1839  024D  1803               	skipnc
  1840  024E  0AC1               	incf	lecturaEtiqueta@i+1,f
  1841  024F  3000               	movlw	0
  1842  0250  07C1               	addwf	lecturaEtiqueta@i+1,f
  1843  0251                     l2820:	
  1844  0251  0841               	movf	lecturaEtiqueta@i+1,w
  1845  0252  3A80               	xorlw	128
  1846  0253  00FF               	movwf	btemp+1
  1847  0254  3080               	movlw	128
  1848  0255  027F               	subwf	btemp+1,w
  1849  0256  1D03               	skipz
  1850  0257  2A5A               	goto	u2985
  1851  0258  3008               	movlw	8
  1852  0259  0240               	subwf	lecturaEtiqueta@i,w
  1853  025A                     u2985:	
  1854  025A  1C03               	skipc
  1855  025B  2A5D               	goto	u2981
  1856  025C  2A5E               	goto	u2980
  1857  025D                     u2981:	
  1858  025D  2A38               	goto	l2816
  1859  025E                     u2980:	
  1860  025E                     l2822:	
  1861                           
  1862                           ;lectura.c: 25:     if ( (Aux%10) == (codigoEntrada[8] - '0')) {
  1863  025E  300A               	movlw	10
  1864  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0261  00A0               	movwf	___awmod@divisor
  1867  0262  3000               	movlw	0
  1868  0263  00A1               	movwf	___awmod@divisor+1
  1869  0264  0844               	movf	lecturaEtiqueta@Aux+1,w
  1870  0265  00A3               	movwf	___awmod@dividend+1
  1871  0266  0843               	movf	lecturaEtiqueta@Aux,w
  1872  0267  00A2               	movwf	___awmod@dividend
  1873  0268  120A  118A  2734  120A  118A  	fcall	___awmod
  1874  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1875  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1876  026F  086B               	movf	_codigoEntrada+8,w
  1877  0270  3ED0               	addlw	208
  1878  0271  00BD               	movwf	??_lecturaEtiqueta
  1879  0272  30FF               	movlw	255
  1880  0273  1803               	skipnc
  1881  0274  3000               	movlw	0
  1882  0275  00BE               	movwf	??_lecturaEtiqueta+1
  1883  0276  0821               	movf	?___awmod+1,w
  1884  0277  063E               	xorwf	??_lecturaEtiqueta+1,w
  1885  0278  1D03               	skipz
  1886  0279  2A7C               	goto	u2995
  1887  027A  0820               	movf	?___awmod,w
  1888  027B  063D               	xorwf	??_lecturaEtiqueta,w
  1889  027C                     u2995:	
  1890  027C  1D03               	skipz
  1891  027D  2A7F               	goto	u2991
  1892  027E  2A80               	goto	u2990
  1893  027F                     u2991:	
  1894  027F  2B11               	goto	l170
  1895  0280                     u2990:	
  1896  0280                     l2824:	
  1897                           
  1898                           ;lectura.c: 27:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1]
      +                           - '0');
  1899  0280  300A               	movlw	10
  1900  0281  00BD               	movwf	??_lecturaEtiqueta
  1901  0282  083D               	movf	??_lecturaEtiqueta,w
  1902  0283  00F4               	movwf	___bmul@multiplicand
  1903  0284  0863               	movf	_codigoEntrada,w
  1904  0285  120A  158A  24CF  120A  118A  	fcall	___bmul
  1905  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1906  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1907  028C  0764               	addwf	_codigoEntrada+1,w
  1908  028D  3EF0               	addlw	240
  1909  028E  00BE               	movwf	??_lecturaEtiqueta+1
  1910  028F  083E               	movf	??_lecturaEtiqueta+1,w
  1911  0290  00C2               	movwf	lecturaEtiqueta@tp
  1912  0291                     l2826:	
  1913                           
  1914                           ;lectura.c: 28:         Aux = EEPROM_search(tp);
  1915  0291  0842               	movf	lecturaEtiqueta@tp,w
  1916  0292  120A  118A  240E  120A  118A  	fcall	_EEPROM_search
  1917  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0299  0835               	movf	?_EEPROM_search+1,w
  1920  029A  00C4               	movwf	lecturaEtiqueta@Aux+1
  1921  029B  0834               	movf	?_EEPROM_search,w
  1922  029C  00C3               	movwf	lecturaEtiqueta@Aux
  1923  029D                     l2828:	
  1924                           
  1925                           ;lectura.c: 30:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  1926  029D  1683               	bsf	3,5	;RP0=1, select bank1
  1927  029E  1303               	bcf	3,6	;RP1=0, select bank1
  1928  029F  0848               	movf	_cuenta^(0+128),w
  1929  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1930  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1931  02A2  0743               	addwf	lecturaEtiqueta@Aux,w
  1932  02A3  00BD               	movwf	??_lecturaEtiqueta
  1933  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  1934  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  1935  02A6  0849               	movf	(_cuenta+1)^(0+128),w
  1936  02A7  1803               	skipnc
  1937  02A8  0A49               	incf	(_cuenta+1)^(0+128),w
  1938  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1939  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1940  02AB  0744               	addwf	lecturaEtiqueta@Aux+1,w
  1941  02AC  00BE               	movwf	??_lecturaEtiqueta+1
  1942  02AD  3003               	movlw	3
  1943  02AE  023E               	subwf	??_lecturaEtiqueta+1,w
  1944  02AF  30E8               	movlw	232
  1945  02B0  1903               	skipnz
  1946  02B1  023D               	subwf	??_lecturaEtiqueta,w
  1947  02B2  1803               	skipnc
  1948  02B3  2AB5               	goto	u3001
  1949  02B4  2AB6               	goto	u3000
  1950  02B5                     u3001:	
  1951  02B5  2B11               	goto	l170
  1952  02B6                     u3000:	
  1953  02B6                     l2830:	
  1954  02B6  0A43               	incf	lecturaEtiqueta@Aux,w
  1955  02B7  1D03               	skipz
  1956  02B8  2ABE               	goto	u3010
  1957  02B9  0A44               	incf	lecturaEtiqueta@Aux+1,w
  1958  02BA  1903               	btfsc	3,2
  1959  02BB  2ABD               	goto	u3011
  1960  02BC  2ABE               	goto	u3010
  1961  02BD                     u3011:	
  1962  02BD  2B11               	goto	l170
  1963  02BE                     u3010:	
  1964  02BE                     l2832:	
  1965                           
  1966                           ;lectura.c: 31:             tp--;
  1967  02BE  3001               	movlw	1
  1968  02BF  02C2               	subwf	lecturaEtiqueta@tp,f
  1969  02C0                     l2834:	
  1970                           
  1971                           ;lectura.c: 32:             ingresoProd(tp);
  1972  02C0  0842               	movf	lecturaEtiqueta@tp,w
  1973  02C1  00BD               	movwf	??_lecturaEtiqueta
  1974  02C2  01BE               	clrf	??_lecturaEtiqueta+1
  1975  02C3  083D               	movf	??_lecturaEtiqueta,w
  1976  02C4  00AC               	movwf	ingresoProd@tp
  1977  02C5  083E               	movf	??_lecturaEtiqueta+1,w
  1978  02C6  00AD               	movwf	ingresoProd@tp+1
  1979  02C7  120A  118A  2670  120A  118A  	fcall	_ingresoProd
  1980  02CC                     l2836:	
  1981                           
  1982                           ;lectura.c: 33:             productoIngresado = tp;
  1983  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1984  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1985  02CE  0842               	movf	lecturaEtiqueta@tp,w
  1986  02CF  00BD               	movwf	??_lecturaEtiqueta
  1987  02D0  01BE               	clrf	??_lecturaEtiqueta+1
  1988  02D1  083D               	movf	??_lecturaEtiqueta,w
  1989  02D2  00DE               	movwf	_productoIngresado
  1990  02D3  083E               	movf	??_lecturaEtiqueta+1,w
  1991  02D4  00DF               	movwf	_productoIngresado+1
  1992  02D5                     l2838:	
  1993                           
  1994                           ;lectura.c: 34:             auxCuenta = cuenta;
  1995  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  1996  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  1997  02D7  0849               	movf	(_cuenta+1)^(0+128),w
  1998  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1999  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2000  02DA  00E1               	movwf	_auxCuenta+1
  2001  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2002  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2003  02DD  0848               	movf	_cuenta^(0+128),w
  2004  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2005  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2006  02E0  00E0               	movwf	_auxCuenta
  2007  02E1                     l2840:	
  2008                           
  2009                           ;lectura.c: 35:             cuenta += Aux;
  2010  02E1  0843               	movf	lecturaEtiqueta@Aux,w
  2011  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2012  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2013  02E4  07C8               	addwf	_cuenta^(0+128),f
  2014  02E5  1803               	skipnc
  2015  02E6  0AC9               	incf	(_cuenta+1)^(0+128),f
  2016  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2017  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2018  02E9  0844               	movf	lecturaEtiqueta@Aux+1,w
  2019  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2020  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2021  02EC  07C9               	addwf	(_cuenta+1)^(0+128),f
  2022  02ED                     l2842:	
  2023                           
  2024                           ;lectura.c: 36:             mostrarDigitos(cuenta);
  2025  02ED  0849               	movf	(_cuenta+1)^(0+128),w
  2026  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2027  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2028  02F0  00AD               	movwf	mostrarDigitos@num+1
  2029  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2030  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2031  02F3  0848               	movf	_cuenta^(0+128),w
  2032  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2033  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2034  02F6  00AC               	movwf	mostrarDigitos@num
  2035  02F7  120A  118A  24E0  120A  118A  	fcall	_mostrarDigitos
  2036  02FC                     l2844:	
  2037                           
  2038                           ;lectura.c: 37:             RA3 = 1;
  2039  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2040  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2041  02FE  1585               	bsf	5,3	;volatile
  2042  02FF                     l2846:	
  2043                           
  2044                           ;lectura.c: 38:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2045  02FF  3006               	movlw	6
  2046  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0302  00BF               	movwf	??_lecturaEtiqueta+2
  2049  0303  3013               	movlw	19
  2050  0304  00BE               	movwf	??_lecturaEtiqueta+1
  2051  0305  30AD               	movlw	173
  2052  0306  00BD               	movwf	??_lecturaEtiqueta
  2053  0307                     u3247:	
  2054  0307  0BBD               	decfsz	??_lecturaEtiqueta,f
  2055  0308  2B07               	goto	u3247
  2056  0309  0BBE               	decfsz	??_lecturaEtiqueta+1,f
  2057  030A  2B07               	goto	u3247
  2058  030B  0BBF               	decfsz	??_lecturaEtiqueta+2,f
  2059  030C  2B07               	goto	u3247
  2060  030D                     l2848:	
  2061                           
  2062                           ;lectura.c: 39:             RA3 = 0;
  2063  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2064  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2065  030F  1185               	bcf	5,3	;volatile
  2066                           
  2067                           ;lectura.c: 41:         }
  2068  0310  2B23               	goto	l173
  2069  0311                     l170:	
  2070                           ;lectura.c: 42:         else {
  2071                           
  2072                           
  2073                           ;lectura.c: 44:             RA5 = 1;
  2074  0311  1685               	bsf	5,5	;volatile
  2075  0312                     l2850:	
  2076                           
  2077                           ;lectura.c: 45:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2078  0312  3006               	movlw	6
  2079  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0315  00BF               	movwf	??_lecturaEtiqueta+2
  2082  0316  3013               	movlw	19
  2083  0317  00BE               	movwf	??_lecturaEtiqueta+1
  2084  0318  30AD               	movlw	173
  2085  0319  00BD               	movwf	??_lecturaEtiqueta
  2086  031A                     u3257:	
  2087  031A  0BBD               	decfsz	??_lecturaEtiqueta,f
  2088  031B  2B1A               	goto	u3257
  2089  031C  0BBE               	decfsz	??_lecturaEtiqueta+1,f
  2090  031D  2B1A               	goto	u3257
  2091  031E  0BBF               	decfsz	??_lecturaEtiqueta+2,f
  2092  031F  2B1A               	goto	u3257
  2093  0320                     l2852:	
  2094                           
  2095                           ;lectura.c: 46:             RA5 = 0;
  2096  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0322  1285               	bcf	5,5	;volatile
  2099  0323                     l173:	
  2100  0323  0008               	return
  2101  0324                     __end_of_lecturaEtiqueta:	
  2102                           
  2103                           	psect	text3
  2104  0670                     __ptext3:	
  2105 ;; *************** function _ingresoProd *****************
  2106 ;; Defined at:
  2107 ;;		line 17 in file "manejoProductos.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  tp              2   12[BANK0 ] short 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  i               2   17[BANK0 ] short 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       2       0       0       0
  2122 ;;      Locals:         0       2       0       0       0
  2123 ;;      Temps:          0       3       0       0       0
  2124 ;;      Totals:         0       7       0       0       0
  2125 ;;Total ram usage:        7 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    3
  2128 ;; This function calls:
  2129 ;;		_pow
  2130 ;; This function is called by:
  2131 ;;		_lecturaEtiqueta
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _ingresoProd
  2137  0670                     _ingresoProd:	
  2138  0670                     l2710:	
  2139                           ;incstack = 0
  2140                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2141                           
  2142                           
  2143                           ;manejoProductos.c: 19:     for(short int i = 12; i>=0; i--) {
  2144  0670  300C               	movlw	12
  2145  0671  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0672  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0673  00B1               	movwf	ingresoProd@i
  2148  0674  3000               	movlw	0
  2149  0675  00B2               	movwf	ingresoProd@i+1
  2150  0676                     l2716:	
  2151                           
  2152                           ;manejoProductos.c: 20:         if( tp >= 8*i) {
  2153  0676  0832               	movf	ingresoProd@i+1,w
  2154  0677  00AF               	movwf	??_ingresoProd+1
  2155  0678  0831               	movf	ingresoProd@i,w
  2156  0679  00AE               	movwf	??_ingresoProd
  2157  067A  1003               	clrc
  2158  067B  0DAE               	rlf	??_ingresoProd,f
  2159  067C  0DAF               	rlf	??_ingresoProd+1,f
  2160  067D  1003               	clrc
  2161  067E  0DAE               	rlf	??_ingresoProd,f
  2162  067F  0DAF               	rlf	??_ingresoProd+1,f
  2163  0680  1003               	clrc
  2164  0681  0DAE               	rlf	??_ingresoProd,f
  2165  0682  0DAF               	rlf	??_ingresoProd+1,f
  2166  0683  082D               	movf	ingresoProd@tp+1,w
  2167  0684  3A80               	xorlw	128
  2168  0685  00B0               	movwf	??_ingresoProd+2
  2169  0686  082F               	movf	??_ingresoProd+1,w
  2170  0687  3A80               	xorlw	128
  2171  0688  0230               	subwf	??_ingresoProd+2,w
  2172  0689  1D03               	skipz
  2173  068A  2E8D               	goto	u2755
  2174  068B  082E               	movf	??_ingresoProd,w
  2175  068C  022C               	subwf	ingresoProd@tp,w
  2176  068D                     u2755:	
  2177  068D  1C03               	skipc
  2178  068E  2E90               	goto	u2751
  2179  068F  2E91               	goto	u2750
  2180  0690                     u2751:	
  2181  0690  2EC5               	goto	l2724
  2182  0691                     u2750:	
  2183  0691                     l2718:	
  2184                           
  2185                           ;manejoProductos.c: 22:             tp = tp - 8*i;
  2186  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0693  0832               	movf	ingresoProd@i+1,w
  2189  0694  00AF               	movwf	??_ingresoProd+1
  2190  0695  0831               	movf	ingresoProd@i,w
  2191  0696  00AE               	movwf	??_ingresoProd
  2192  0697  1003               	clrc
  2193  0698  0DAE               	rlf	??_ingresoProd,f
  2194  0699  0DAF               	rlf	??_ingresoProd+1,f
  2195  069A  1003               	clrc
  2196  069B  0DAE               	rlf	??_ingresoProd,f
  2197  069C  0DAF               	rlf	??_ingresoProd+1,f
  2198  069D  1003               	clrc
  2199  069E  0DAE               	rlf	??_ingresoProd,f
  2200  069F  0DAF               	rlf	??_ingresoProd+1,f
  2201  06A0  082E               	movf	??_ingresoProd,w
  2202  06A1  022C               	subwf	ingresoProd@tp,w
  2203  06A2  00AC               	movwf	ingresoProd@tp
  2204  06A3  082F               	movf	??_ingresoProd+1,w
  2205  06A4  1C03               	skipc
  2206  06A5  0A2F               	incf	??_ingresoProd+1,w
  2207  06A6  022D               	subwf	ingresoProd@tp+1,w
  2208  06A7  00AD               	movwf	ingresoProd@tp+1
  2209  06A8                     l2720:	
  2210                           
  2211                           ;manejoProductos.c: 23:             prodIngresados[i] = prodIngresados[i] | pow(2,tp);
  2212  06A8  0831               	movf	ingresoProd@i,w
  2213  06A9  3EB7               	addlw	(low (_prodIngresados| 0))& (0+255)
  2214  06AA  0084               	movwf	4
  2215  06AB  3002               	movlw	2
  2216  06AC  00A4               	movwf	pow@numero
  2217  06AD  3000               	movlw	0
  2218  06AE  00A5               	movwf	pow@numero+1
  2219  06AF  082D               	movf	ingresoProd@tp+1,w
  2220  06B0  00A7               	movwf	pow@potencia+1
  2221  06B1  082C               	movf	ingresoProd@tp,w
  2222  06B2  00A6               	movwf	pow@potencia
  2223  06B3  120A  158A  2642  120A  118A  	fcall	_pow
  2224  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  2225  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  2226  06BA  0824               	movf	?_pow,w
  2227  06BB  1383               	bcf	3,7	;select IRP bank1
  2228  06BC  0400               	iorwf	0,w
  2229  06BD  00AE               	movwf	??_ingresoProd
  2230  06BE  0831               	movf	ingresoProd@i,w
  2231  06BF  3EB7               	addlw	(low (_prodIngresados| 0))& (0+255)
  2232  06C0  0084               	movwf	4
  2233  06C1  082E               	movf	??_ingresoProd,w
  2234  06C2  0080               	movwf	0
  2235  06C3                     l2722:	
  2236                           
  2237                           ;manejoProductos.c: 24:             i = 0;
  2238  06C3  01B1               	clrf	ingresoProd@i
  2239  06C4  01B2               	clrf	ingresoProd@i+1
  2240  06C5                     l2724:	
  2241                           
  2242                           ;manejoProductos.c: 27:     }
  2243  06C5  30FF               	movlw	255
  2244  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2245  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2246  06C8  07B1               	addwf	ingresoProd@i,f
  2247  06C9  1803               	skipnc
  2248  06CA  0AB2               	incf	ingresoProd@i+1,f
  2249  06CB  30FF               	movlw	255
  2250  06CC  07B2               	addwf	ingresoProd@i+1,f
  2251  06CD                     l2726:	
  2252  06CD  1FB2               	btfss	ingresoProd@i+1,7
  2253  06CE  2ED0               	goto	u2761
  2254  06CF  2ED1               	goto	u2760
  2255  06D0                     u2761:	
  2256  06D0  2E76               	goto	l2716
  2257  06D1                     u2760:	
  2258  06D1                     l253:	
  2259  06D1  0008               	return
  2260  06D2                     __end_of_ingresoProd:	
  2261                           
  2262                           	psect	text4
  2263  0734                     __ptext4:	
  2264 ;; *************** function ___awmod *****************
  2265 ;; Defined at:
  2266 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  divisor         2    0[BANK0 ] int 
  2269 ;;  dividend        2    2[BANK0 ] int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  sign            1    5[BANK0 ] unsigned char 
  2272 ;;  counter         1    4[BANK0 ] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  2    0[BANK0 ] int 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         0       4       0       0       0
  2283 ;;      Locals:         0       2       0       0       0
  2284 ;;      Temps:          1       0       0       0       0
  2285 ;;      Totals:         1       6       0       0       0
  2286 ;;Total ram usage:        7 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_lecturaEtiqueta
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function ___awmod
  2298  0734                     ___awmod:	
  2299  0734                     l2772:	
  2300                           ;incstack = 0
  2301                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2302                           
  2303  0734  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0735  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0736  01A5               	clrf	___awmod@sign
  2306  0737                     l2774:	
  2307  0737  1FA3               	btfss	___awmod@dividend+1,7
  2308  0738  2F3A               	goto	u2891
  2309  0739  2F3B               	goto	u2890
  2310  073A                     u2891:	
  2311  073A  2F42               	goto	l2780
  2312  073B                     u2890:	
  2313  073B                     l2776:	
  2314  073B  09A2               	comf	___awmod@dividend,f
  2315  073C  09A3               	comf	___awmod@dividend+1,f
  2316  073D  0AA2               	incf	___awmod@dividend,f
  2317  073E  1903               	skipnz
  2318  073F  0AA3               	incf	___awmod@dividend+1,f
  2319  0740                     l2778:	
  2320  0740  01A5               	clrf	___awmod@sign
  2321  0741  0AA5               	incf	___awmod@sign,f
  2322  0742                     l2780:	
  2323  0742  1FA1               	btfss	___awmod@divisor+1,7
  2324  0743  2F45               	goto	u2901
  2325  0744  2F46               	goto	u2900
  2326  0745                     u2901:	
  2327  0745  2F4B               	goto	l2784
  2328  0746                     u2900:	
  2329  0746                     l2782:	
  2330  0746  09A0               	comf	___awmod@divisor,f
  2331  0747  09A1               	comf	___awmod@divisor+1,f
  2332  0748  0AA0               	incf	___awmod@divisor,f
  2333  0749  1903               	skipnz
  2334  074A  0AA1               	incf	___awmod@divisor+1,f
  2335  074B                     l2784:	
  2336  074B  0820               	movf	___awmod@divisor,w
  2337  074C  0421               	iorwf	___awmod@divisor+1,w
  2338  074D  1903               	btfsc	3,2
  2339  074E  2F50               	goto	u2911
  2340  074F  2F51               	goto	u2910
  2341  0750                     u2911:	
  2342  0750  2F80               	goto	l2802
  2343  0751                     u2910:	
  2344  0751                     l2786:	
  2345  0751  01A4               	clrf	___awmod@counter
  2346  0752  0AA4               	incf	___awmod@counter,f
  2347  0753  2F5F               	goto	l2792
  2348  0754                     l2788:	
  2349  0754  3001               	movlw	1
  2350  0755                     u2925:	
  2351  0755  1003               	clrc
  2352  0756  0DA0               	rlf	___awmod@divisor,f
  2353  0757  0DA1               	rlf	___awmod@divisor+1,f
  2354  0758  3EFF               	addlw	-1
  2355  0759  1D03               	skipz
  2356  075A  2F55               	goto	u2925
  2357  075B                     l2790:	
  2358  075B  3001               	movlw	1
  2359  075C  00F4               	movwf	??___awmod
  2360  075D  0874               	movf	??___awmod,w
  2361  075E  07A4               	addwf	___awmod@counter,f
  2362  075F                     l2792:	
  2363  075F  1FA1               	btfss	___awmod@divisor+1,7
  2364  0760  2F62               	goto	u2931
  2365  0761  2F63               	goto	u2930
  2366  0762                     u2931:	
  2367  0762  2F54               	goto	l2788
  2368  0763                     u2930:	
  2369  0763                     l2794:	
  2370  0763  0821               	movf	___awmod@divisor+1,w
  2371  0764  0223               	subwf	___awmod@dividend+1,w
  2372  0765  1D03               	skipz
  2373  0766  2F69               	goto	u2945
  2374  0767  0820               	movf	___awmod@divisor,w
  2375  0768  0222               	subwf	___awmod@dividend,w
  2376  0769                     u2945:	
  2377  0769  1C03               	skipc
  2378  076A  2F6C               	goto	u2941
  2379  076B  2F6D               	goto	u2940
  2380  076C                     u2941:	
  2381  076C  2F73               	goto	l2798
  2382  076D                     u2940:	
  2383  076D                     l2796:	
  2384  076D  0820               	movf	___awmod@divisor,w
  2385  076E  02A2               	subwf	___awmod@dividend,f
  2386  076F  0821               	movf	___awmod@divisor+1,w
  2387  0770  1C03               	skipc
  2388  0771  03A3               	decf	___awmod@dividend+1,f
  2389  0772  02A3               	subwf	___awmod@dividend+1,f
  2390  0773                     l2798:	
  2391  0773  3001               	movlw	1
  2392  0774                     u2955:	
  2393  0774  1003               	clrc
  2394  0775  0CA1               	rrf	___awmod@divisor+1,f
  2395  0776  0CA0               	rrf	___awmod@divisor,f
  2396  0777  3EFF               	addlw	-1
  2397  0778  1D03               	skipz
  2398  0779  2F74               	goto	u2955
  2399  077A                     l2800:	
  2400  077A  3001               	movlw	1
  2401  077B  02A4               	subwf	___awmod@counter,f
  2402  077C  1D03               	btfss	3,2
  2403  077D  2F7F               	goto	u2961
  2404  077E  2F80               	goto	u2960
  2405  077F                     u2961:	
  2406  077F  2F63               	goto	l2794
  2407  0780                     u2960:	
  2408  0780                     l2802:	
  2409  0780  0825               	movf	___awmod@sign,w
  2410  0781  1903               	btfsc	3,2
  2411  0782  2F84               	goto	u2971
  2412  0783  2F85               	goto	u2970
  2413  0784                     u2971:	
  2414  0784  2F8A               	goto	l2806
  2415  0785                     u2970:	
  2416  0785                     l2804:	
  2417  0785  09A2               	comf	___awmod@dividend,f
  2418  0786  09A3               	comf	___awmod@dividend+1,f
  2419  0787  0AA2               	incf	___awmod@dividend,f
  2420  0788  1903               	skipnz
  2421  0789  0AA3               	incf	___awmod@dividend+1,f
  2422  078A                     l2806:	
  2423  078A  0823               	movf	___awmod@dividend+1,w
  2424  078B  00A1               	movwf	?___awmod+1
  2425  078C  0822               	movf	___awmod@dividend,w
  2426  078D  00A0               	movwf	?___awmod
  2427  078E                     l666:	
  2428  078E  0008               	return
  2429  078F                     __end_of___awmod:	
  2430                           
  2431                           	psect	text5
  2432  040E                     __ptext5:	
  2433 ;; *************** function _EEPROM_search *****************
  2434 ;; Defined at:
  2435 ;;		line 3 in file "lectura.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  tp              1    wreg     unsigned char 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  tp              1   28[BANK0 ] unsigned char 
  2440 ;;  precio          2   26[BANK0 ] short 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2   20[BANK0 ] short 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       2       0       0       0
  2451 ;;      Locals:         0       3       0       0       0
  2452 ;;      Temps:          0       4       0       0       0
  2453 ;;      Totals:         0       9       0       0       0
  2454 ;;Total ram usage:        9 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    4
  2457 ;; This function calls:
  2458 ;;		___awdiv
  2459 ;;		_eeprom_read
  2460 ;;		_verificarProd
  2461 ;; This function is called by:
  2462 ;;		_lecturaEtiqueta
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _EEPROM_search
  2468  040E                     _EEPROM_search:	
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2472                           ;EEPROM_search@tp stored from wreg
  2473  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2474  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0410  00BC               	movwf	EEPROM_search@tp
  2476  0411                     l2694:	
  2477                           
  2478                           ;lectura.c: 5:     short int precio;;lectura.c: 6:     tp--;
  2479  0411  3001               	movlw	1
  2480  0412  02BC               	subwf	EEPROM_search@tp,f
  2481  0413                     l2696:	
  2482                           
  2483                           ;lectura.c: 7:     tp = tp*2;
  2484  0413  083C               	movf	EEPROM_search@tp,w
  2485  0414  00B6               	movwf	??_EEPROM_search
  2486  0415  0736               	addwf	??_EEPROM_search,w
  2487  0416  00B7               	movwf	??_EEPROM_search+1
  2488  0417  0837               	movf	??_EEPROM_search+1,w
  2489  0418  00BC               	movwf	EEPROM_search@tp
  2490  0419                     l2698:	
  2491                           
  2492                           ;lectura.c: 8:     precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  2493  0419  083C               	movf	EEPROM_search@tp,w
  2494  041A  3E01               	addlw	1
  2495  041B  120A  158A  24B8  120A  118A  	fcall	_eeprom_read
  2496  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0421  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0422  00B6               	movwf	??_EEPROM_search
  2499  0423  01B7               	clrf	??_EEPROM_search+1
  2500  0424  083C               	movf	EEPROM_search@tp,w
  2501  0425  120A  158A  24B8  120A  118A  	fcall	_eeprom_read
  2502  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2503  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2504  042C  00B8               	movwf	??_EEPROM_search+2
  2505  042D  01B9               	clrf	??_EEPROM_search+3
  2506  042E  0838               	movf	??_EEPROM_search+2,w
  2507  042F  00B9               	movwf	??_EEPROM_search+3
  2508  0430  01B8               	clrf	??_EEPROM_search+2
  2509  0431  0836               	movf	??_EEPROM_search,w
  2510  0432  0438               	iorwf	??_EEPROM_search+2,w
  2511  0433  00BA               	movwf	EEPROM_search@precio
  2512  0434  0837               	movf	??_EEPROM_search+1,w
  2513  0435  0439               	iorwf	??_EEPROM_search+3,w
  2514  0436  00BB               	movwf	EEPROM_search@precio+1
  2515  0437                     l2700:	
  2516                           
  2517                           ;lectura.c: 10:     if( (precio < 0 || precio > 999) || verificarProd(tp/2)) {
  2518  0437  1BBB               	btfsc	EEPROM_search@precio+1,7
  2519  0438  2C3A               	goto	u2721
  2520  0439  2C3B               	goto	u2720
  2521  043A                     u2721:	
  2522  043A  2C6A               	goto	l2706
  2523  043B                     u2720:	
  2524  043B                     l2702:	
  2525  043B  083B               	movf	EEPROM_search@precio+1,w
  2526  043C  3A80               	xorlw	128
  2527  043D  00FF               	movwf	btemp+1
  2528  043E  3083               	movlw	131
  2529  043F  027F               	subwf	btemp+1,w
  2530  0440  1D03               	skipz
  2531  0441  2C44               	goto	u2735
  2532  0442  30E8               	movlw	232
  2533  0443  023A               	subwf	EEPROM_search@precio,w
  2534  0444                     u2735:	
  2535  0444  1803               	skipnc
  2536  0445  2C47               	goto	u2731
  2537  0446  2C48               	goto	u2730
  2538  0447                     u2731:	
  2539  0447  2C6A               	goto	l2706
  2540  0448                     u2730:	
  2541  0448                     l2704:	
  2542  0448  3002               	movlw	2
  2543  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2544  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2545  044B  00A0               	movwf	___awdiv@divisor
  2546  044C  3000               	movlw	0
  2547  044D  00A1               	movwf	___awdiv@divisor+1
  2548  044E  083C               	movf	EEPROM_search@tp,w
  2549  044F  00B6               	movwf	??_EEPROM_search
  2550  0450  01B7               	clrf	??_EEPROM_search+1
  2551  0451  0836               	movf	??_EEPROM_search,w
  2552  0452  00A2               	movwf	___awdiv@dividend
  2553  0453  0837               	movf	??_EEPROM_search+1,w
  2554  0454  00A3               	movwf	___awdiv@dividend+1
  2555  0455  120A  118A  2477  120A  118A  	fcall	___awdiv
  2556  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2557  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2558  045C  0821               	movf	?___awdiv+1,w
  2559  045D  00AD               	movwf	verificarProd@tp+1
  2560  045E  0820               	movf	?___awdiv,w
  2561  045F  00AC               	movwf	verificarProd@tp
  2562  0460  120A  118A  2547  120A  118A  	fcall	_verificarProd
  2563  0465  3A00               	xorlw	0
  2564  0466  1903               	skipnz
  2565  0467  2C69               	goto	u2741
  2566  0468  2C6A               	goto	u2740
  2567  0469                     u2741:	
  2568  0469  2C70               	goto	l161
  2569  046A                     u2740:	
  2570  046A                     l2706:	
  2571                           
  2572                           ;lectura.c: 11:         precio = -1;
  2573  046A  30FF               	movlw	255
  2574  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2575  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2576  046D  00BA               	movwf	EEPROM_search@precio
  2577  046E  30FF               	movlw	255
  2578  046F  00BB               	movwf	EEPROM_search@precio+1
  2579  0470                     l161:	
  2580                           ;lectura.c: 12:     }
  2581                           
  2582                           
  2583                           ;lectura.c: 14:     return precio;
  2584  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0472  083B               	movf	EEPROM_search@precio+1,w
  2587  0473  00B5               	movwf	?_EEPROM_search+1
  2588  0474  083A               	movf	EEPROM_search@precio,w
  2589  0475  00B4               	movwf	?_EEPROM_search
  2590  0476                     l164:	
  2591  0476  0008               	return
  2592  0477                     __end_of_EEPROM_search:	
  2593                           
  2594                           	psect	text6
  2595  0547                     __ptext6:	
  2596 ;; *************** function _verificarProd *****************
  2597 ;; Defined at:
  2598 ;;		line 30 in file "manejoProductos.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  tp              2   12[BANK0 ] short 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  i               2   18[BANK0 ] short 
  2603 ;;  ret             1   17[BANK0 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      unsigned char 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         0       2       0       0       0
  2614 ;;      Locals:         0       3       0       0       0
  2615 ;;      Temps:          0       3       0       0       0
  2616 ;;      Totals:         0       8       0       0       0
  2617 ;;Total ram usage:        8 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    3
  2620 ;; This function calls:
  2621 ;;		_pow
  2622 ;; This function is called by:
  2623 ;;		_EEPROM_search
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _verificarProd
  2629  0547                     _verificarProd:	
  2630  0547                     l2550:	
  2631                           ;incstack = 0
  2632                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2633                           
  2634                           
  2635                           ;manejoProductos.c: 31:     char ret = 0;
  2636  0547  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0548  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0549  01B1               	clrf	verificarProd@ret
  2639  054A                     l2552:	
  2640                           
  2641                           ;manejoProductos.c: 32:     for(short int i = 12; i>=0; i--) {
  2642  054A  300C               	movlw	12
  2643  054B  00B2               	movwf	verificarProd@i
  2644  054C  3000               	movlw	0
  2645  054D  00B3               	movwf	verificarProd@i+1
  2646  054E                     l2558:	
  2647                           
  2648                           ;manejoProductos.c: 33:         if( tp >= 8*i) {
  2649  054E  0833               	movf	verificarProd@i+1,w
  2650  054F  00AF               	movwf	??_verificarProd+1
  2651  0550  0832               	movf	verificarProd@i,w
  2652  0551  00AE               	movwf	??_verificarProd
  2653  0552  1003               	clrc
  2654  0553  0DAE               	rlf	??_verificarProd,f
  2655  0554  0DAF               	rlf	??_verificarProd+1,f
  2656  0555  1003               	clrc
  2657  0556  0DAE               	rlf	??_verificarProd,f
  2658  0557  0DAF               	rlf	??_verificarProd+1,f
  2659  0558  1003               	clrc
  2660  0559  0DAE               	rlf	??_verificarProd,f
  2661  055A  0DAF               	rlf	??_verificarProd+1,f
  2662  055B  082D               	movf	verificarProd@tp+1,w
  2663  055C  3A80               	xorlw	128
  2664  055D  00B0               	movwf	??_verificarProd+2
  2665  055E  082F               	movf	??_verificarProd+1,w
  2666  055F  3A80               	xorlw	128
  2667  0560  0230               	subwf	??_verificarProd+2,w
  2668  0561  1D03               	skipz
  2669  0562  2D65               	goto	u2525
  2670  0563  082E               	movf	??_verificarProd,w
  2671  0564  022C               	subwf	verificarProd@tp,w
  2672  0565                     u2525:	
  2673  0565  1C03               	skipc
  2674  0566  2D68               	goto	u2521
  2675  0567  2D69               	goto	u2520
  2676  0568                     u2521:	
  2677  0568  2D9D               	goto	l2568
  2678  0569                     u2520:	
  2679  0569                     l2560:	
  2680                           
  2681                           ;manejoProductos.c: 35:             tp = tp - 8*i;
  2682  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2683  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2684  056B  0833               	movf	verificarProd@i+1,w
  2685  056C  00AF               	movwf	??_verificarProd+1
  2686  056D  0832               	movf	verificarProd@i,w
  2687  056E  00AE               	movwf	??_verificarProd
  2688  056F  1003               	clrc
  2689  0570  0DAE               	rlf	??_verificarProd,f
  2690  0571  0DAF               	rlf	??_verificarProd+1,f
  2691  0572  1003               	clrc
  2692  0573  0DAE               	rlf	??_verificarProd,f
  2693  0574  0DAF               	rlf	??_verificarProd+1,f
  2694  0575  1003               	clrc
  2695  0576  0DAE               	rlf	??_verificarProd,f
  2696  0577  0DAF               	rlf	??_verificarProd+1,f
  2697  0578  082E               	movf	??_verificarProd,w
  2698  0579  022C               	subwf	verificarProd@tp,w
  2699  057A  00AC               	movwf	verificarProd@tp
  2700  057B  082F               	movf	??_verificarProd+1,w
  2701  057C  1C03               	skipc
  2702  057D  0A2F               	incf	??_verificarProd+1,w
  2703  057E  022D               	subwf	verificarProd@tp+1,w
  2704  057F  00AD               	movwf	verificarProd@tp+1
  2705  0580                     l2562:	
  2706                           
  2707                           ;manejoProductos.c: 36:             if(prodIngresados[i] & pow(2,tp)) {
  2708  0580  0832               	movf	verificarProd@i,w
  2709  0581  3EB7               	addlw	(low (_prodIngresados| 0))& (0+255)
  2710  0582  0084               	movwf	4
  2711  0583  3002               	movlw	2
  2712  0584  00A4               	movwf	pow@numero
  2713  0585  3000               	movlw	0
  2714  0586  00A5               	movwf	pow@numero+1
  2715  0587  082D               	movf	verificarProd@tp+1,w
  2716  0588  00A7               	movwf	pow@potencia+1
  2717  0589  082C               	movf	verificarProd@tp,w
  2718  058A  00A6               	movwf	pow@potencia
  2719  058B  120A  158A  2642  120A  118A  	fcall	_pow
  2720  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2722  0592  0824               	movf	?_pow,w
  2723  0593  1383               	bcf	3,7	;select IRP bank1
  2724  0594  0500               	andwf	0,w
  2725  0595  1903               	btfsc	3,2
  2726  0596  2D98               	goto	u2531
  2727  0597  2D99               	goto	u2530
  2728  0598                     u2531:	
  2729  0598  2D9B               	goto	l2566
  2730  0599                     u2530:	
  2731  0599                     l2564:	
  2732                           
  2733                           ;manejoProductos.c: 37:                 ret = 1;
  2734  0599  01B1               	clrf	verificarProd@ret
  2735  059A  0AB1               	incf	verificarProd@ret,f
  2736  059B                     l2566:	
  2737                           
  2738                           ;manejoProductos.c: 39:             i = 0;
  2739  059B  01B2               	clrf	verificarProd@i
  2740  059C  01B3               	clrf	verificarProd@i+1
  2741  059D                     l2568:	
  2742                           
  2743                           ;manejoProductos.c: 42:     }
  2744  059D  30FF               	movlw	255
  2745  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2746  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2747  05A0  07B2               	addwf	verificarProd@i,f
  2748  05A1  1803               	skipnc
  2749  05A2  0AB3               	incf	verificarProd@i+1,f
  2750  05A3  30FF               	movlw	255
  2751  05A4  07B3               	addwf	verificarProd@i+1,f
  2752  05A5                     l2570:	
  2753  05A5  1FB3               	btfss	verificarProd@i+1,7
  2754  05A6  2DA8               	goto	u2541
  2755  05A7  2DA9               	goto	u2540
  2756  05A8                     u2541:	
  2757  05A8  2D4E               	goto	l2558
  2758  05A9                     u2540:	
  2759  05A9                     l2572:	
  2760                           
  2761                           ;manejoProductos.c: 44:     return ret;
  2762  05A9  0831               	movf	verificarProd@ret,w
  2763  05AA                     l260:	
  2764  05AA  0008               	return
  2765  05AB                     __end_of_verificarProd:	
  2766                           
  2767                           	psect	text7
  2768  0477                     __ptext7:	
  2769 ;; *************** function ___awdiv *****************
  2770 ;; Defined at:
  2771 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  divisor         2    0[BANK0 ] int 
  2774 ;;  dividend        2    2[BANK0 ] int 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  quotient        2    6[BANK0 ] int 
  2777 ;;  sign            1    5[BANK0 ] unsigned char 
  2778 ;;  counter         1    4[BANK0 ] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  2    0[BANK0 ] int 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       4       0       0       0
  2789 ;;      Locals:         0       4       0       0       0
  2790 ;;      Temps:          1       0       0       0       0
  2791 ;;      Totals:         1       8       0       0       0
  2792 ;;Total ram usage:        9 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_EEPROM_search
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function ___awdiv
  2804  0477                     ___awdiv:	
  2805  0477                     l2644:	
  2806                           ;incstack = 0
  2807                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2808                           
  2809  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0479  01A5               	clrf	___awdiv@sign
  2812  047A                     l2646:	
  2813  047A  1FA1               	btfss	___awdiv@divisor+1,7
  2814  047B  2C7D               	goto	u2621
  2815  047C  2C7E               	goto	u2620
  2816  047D                     u2621:	
  2817  047D  2C85               	goto	l2652
  2818  047E                     u2620:	
  2819  047E                     l2648:	
  2820  047E  09A0               	comf	___awdiv@divisor,f
  2821  047F  09A1               	comf	___awdiv@divisor+1,f
  2822  0480  0AA0               	incf	___awdiv@divisor,f
  2823  0481  1903               	skipnz
  2824  0482  0AA1               	incf	___awdiv@divisor+1,f
  2825  0483                     l2650:	
  2826  0483  01A5               	clrf	___awdiv@sign
  2827  0484  0AA5               	incf	___awdiv@sign,f
  2828  0485                     l2652:	
  2829  0485  1FA3               	btfss	___awdiv@dividend+1,7
  2830  0486  2C88               	goto	u2631
  2831  0487  2C89               	goto	u2630
  2832  0488                     u2631:	
  2833  0488  2C92               	goto	l2658
  2834  0489                     u2630:	
  2835  0489                     l2654:	
  2836  0489  09A2               	comf	___awdiv@dividend,f
  2837  048A  09A3               	comf	___awdiv@dividend+1,f
  2838  048B  0AA2               	incf	___awdiv@dividend,f
  2839  048C  1903               	skipnz
  2840  048D  0AA3               	incf	___awdiv@dividend+1,f
  2841  048E                     l2656:	
  2842  048E  3001               	movlw	1
  2843  048F  00F4               	movwf	??___awdiv
  2844  0490  0874               	movf	??___awdiv,w
  2845  0491  06A5               	xorwf	___awdiv@sign,f
  2846  0492                     l2658:	
  2847  0492  01A6               	clrf	___awdiv@quotient
  2848  0493  01A7               	clrf	___awdiv@quotient+1
  2849  0494                     l2660:	
  2850  0494  0820               	movf	___awdiv@divisor,w
  2851  0495  0421               	iorwf	___awdiv@divisor+1,w
  2852  0496  1903               	btfsc	3,2
  2853  0497  2C99               	goto	u2641
  2854  0498  2C9A               	goto	u2640
  2855  0499                     u2641:	
  2856  0499  2CD1               	goto	l2680
  2857  049A                     u2640:	
  2858  049A                     l2662:	
  2859  049A  01A4               	clrf	___awdiv@counter
  2860  049B  0AA4               	incf	___awdiv@counter,f
  2861  049C  2CA8               	goto	l2668
  2862  049D                     l2664:	
  2863  049D  3001               	movlw	1
  2864  049E                     u2655:	
  2865  049E  1003               	clrc
  2866  049F  0DA0               	rlf	___awdiv@divisor,f
  2867  04A0  0DA1               	rlf	___awdiv@divisor+1,f
  2868  04A1  3EFF               	addlw	-1
  2869  04A2  1D03               	skipz
  2870  04A3  2C9E               	goto	u2655
  2871  04A4                     l2666:	
  2872  04A4  3001               	movlw	1
  2873  04A5  00F4               	movwf	??___awdiv
  2874  04A6  0874               	movf	??___awdiv,w
  2875  04A7  07A4               	addwf	___awdiv@counter,f
  2876  04A8                     l2668:	
  2877  04A8  1FA1               	btfss	___awdiv@divisor+1,7
  2878  04A9  2CAB               	goto	u2661
  2879  04AA  2CAC               	goto	u2660
  2880  04AB                     u2661:	
  2881  04AB  2C9D               	goto	l2664
  2882  04AC                     u2660:	
  2883  04AC                     l2670:	
  2884  04AC  3001               	movlw	1
  2885  04AD                     u2675:	
  2886  04AD  1003               	clrc
  2887  04AE  0DA6               	rlf	___awdiv@quotient,f
  2888  04AF  0DA7               	rlf	___awdiv@quotient+1,f
  2889  04B0  3EFF               	addlw	-1
  2890  04B1  1D03               	skipz
  2891  04B2  2CAD               	goto	u2675
  2892  04B3  0821               	movf	___awdiv@divisor+1,w
  2893  04B4  0223               	subwf	___awdiv@dividend+1,w
  2894  04B5  1D03               	skipz
  2895  04B6  2CB9               	goto	u2685
  2896  04B7  0820               	movf	___awdiv@divisor,w
  2897  04B8  0222               	subwf	___awdiv@dividend,w
  2898  04B9                     u2685:	
  2899  04B9  1C03               	skipc
  2900  04BA  2CBC               	goto	u2681
  2901  04BB  2CBD               	goto	u2680
  2902  04BC                     u2681:	
  2903  04BC  2CC4               	goto	l2676
  2904  04BD                     u2680:	
  2905  04BD                     l2672:	
  2906  04BD  0820               	movf	___awdiv@divisor,w
  2907  04BE  02A2               	subwf	___awdiv@dividend,f
  2908  04BF  0821               	movf	___awdiv@divisor+1,w
  2909  04C0  1C03               	skipc
  2910  04C1  03A3               	decf	___awdiv@dividend+1,f
  2911  04C2  02A3               	subwf	___awdiv@dividend+1,f
  2912  04C3                     l2674:	
  2913  04C3  1426               	bsf	___awdiv@quotient,0
  2914  04C4                     l2676:	
  2915  04C4  3001               	movlw	1
  2916  04C5                     u2695:	
  2917  04C5  1003               	clrc
  2918  04C6  0CA1               	rrf	___awdiv@divisor+1,f
  2919  04C7  0CA0               	rrf	___awdiv@divisor,f
  2920  04C8  3EFF               	addlw	-1
  2921  04C9  1D03               	skipz
  2922  04CA  2CC5               	goto	u2695
  2923  04CB                     l2678:	
  2924  04CB  3001               	movlw	1
  2925  04CC  02A4               	subwf	___awdiv@counter,f
  2926  04CD  1D03               	btfss	3,2
  2927  04CE  2CD0               	goto	u2701
  2928  04CF  2CD1               	goto	u2700
  2929  04D0                     u2701:	
  2930  04D0  2CAC               	goto	l2670
  2931  04D1                     u2700:	
  2932  04D1                     l2680:	
  2933  04D1  0825               	movf	___awdiv@sign,w
  2934  04D2  1903               	btfsc	3,2
  2935  04D3  2CD5               	goto	u2711
  2936  04D4  2CD6               	goto	u2710
  2937  04D5                     u2711:	
  2938  04D5  2CDB               	goto	l2684
  2939  04D6                     u2710:	
  2940  04D6                     l2682:	
  2941  04D6  09A6               	comf	___awdiv@quotient,f
  2942  04D7  09A7               	comf	___awdiv@quotient+1,f
  2943  04D8  0AA6               	incf	___awdiv@quotient,f
  2944  04D9  1903               	skipnz
  2945  04DA  0AA7               	incf	___awdiv@quotient+1,f
  2946  04DB                     l2684:	
  2947  04DB  0827               	movf	___awdiv@quotient+1,w
  2948  04DC  00A1               	movwf	?___awdiv+1
  2949  04DD  0826               	movf	___awdiv@quotient,w
  2950  04DE  00A0               	movwf	?___awdiv
  2951  04DF                     l653:	
  2952  04DF  0008               	return
  2953  04E0                     __end_of___awdiv:	
  2954                           
  2955                           	psect	text8
  2956  0D03                     __ptext8:	
  2957 ;; *************** function _lecturaComando *****************
  2958 ;; Defined at:
  2959 ;;		line 155 in file "lectura.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         0       0       0       0       0
  2977 ;;Total ram usage:        0 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    6
  2980 ;; This function calls:
  2981 ;;		_lecturaConsulta
  2982 ;;		_lecturaMas
  2983 ;;		_lecturaMenos
  2984 ;; This function is called by:
  2985 ;;		_accionesPuertoSerial
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function _lecturaComando
  2991  0D03                     _lecturaComando:	
  2992  0D03                     l2858:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2995                           
  2996                           
  2997                           ;lectura.c: 156:     if(codigoEntrada[0] == '?') {
  2998  0D03  303F               	movlw	63
  2999  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0D06  0663               	xorwf	_codigoEntrada,w
  3002  0D07  1D03               	btfss	3,2
  3003  0D08  2D0A               	goto	u3021
  3004  0D09  2D0B               	goto	u3020
  3005  0D0A                     u3021:	
  3006  0D0A  2D11               	goto	l2862
  3007  0D0B                     u3020:	
  3008  0D0B                     l2860:	
  3009                           
  3010                           ;lectura.c: 157:         lecturaConsulta();
  3011  0D0B  120A  118A  25AB  120A  158A  	fcall	_lecturaConsulta
  3012                           
  3013                           ;lectura.c: 158:     }
  3014  0D10  2D22               	goto	l231
  3015  0D11                     l2862:	
  3016  0D11  302B               	movlw	43
  3017  0D12  0663               	xorwf	_codigoEntrada,w
  3018  0D13  1D03               	btfss	3,2
  3019  0D14  2D16               	goto	u3031
  3020  0D15  2D17               	goto	u3030
  3021  0D16                     u3031:	
  3022  0D16  2D1D               	goto	l2866
  3023  0D17                     u3030:	
  3024  0D17                     l2864:	
  3025                           
  3026                           ;lectura.c: 160:         lecturaMas();
  3027  0D17  120A  158A  254A  120A  158A  	fcall	_lecturaMas
  3028                           
  3029                           ;lectura.c: 161:     }
  3030  0D1C  2D22               	goto	l231
  3031  0D1D                     l2866:	
  3032                           
  3033                           ;lectura.c: 163:         lecturaMenos();
  3034  0D1D  120A  158A  24A4  120A  158A  	fcall	_lecturaMenos
  3035  0D22                     l231:	
  3036  0D22  0008               	return
  3037  0D23                     __end_of_lecturaComando:	
  3038                           
  3039                           	psect	text9
  3040  0CA4                     __ptext9:	
  3041 ;; *************** function _lecturaMenos *****************
  3042 ;; Defined at:
  3043 ;;		line 98 in file "lectura.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0
  3060 ;;      Totals:         0       0       0       0       0
  3061 ;;Total ram usage:        0 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    4
  3064 ;; This function calls:
  3065 ;;		_envioTX
  3066 ;; This function is called by:
  3067 ;;		_lecturaComando
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function _lecturaMenos
  3073  0CA4                     _lecturaMenos:	
  3074  0CA4                     l2740:	
  3075                           ;incstack = 0
  3076                           ; Regs used in _lecturaMenos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3077                           
  3078                           
  3079                           ;lectura.c: 99:     if(codigoEntrada[1] == 'D') {
  3080  0CA4  3044               	movlw	68
  3081  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0CA7  0664               	xorwf	_codigoEntrada+1,w
  3084  0CA8  1D03               	btfss	3,2
  3085  0CA9  2CAB               	goto	u2801
  3086  0CAA  2CAC               	goto	u2800
  3087  0CAB                     u2801:	
  3088  0CAB  2CAE               	goto	l2744
  3089  0CAC                     u2800:	
  3090  0CAC                     l2742:	
  3091                           
  3092                           ;lectura.c: 100:         modoDebug = 0;
  3093  0CAC  01F6               	clrf	_modoDebug
  3094                           
  3095                           ;lectura.c: 102:     }
  3096  0CAD  2CB7               	goto	l203
  3097  0CAE                     l2744:	
  3098                           
  3099                           ;lectura.c: 104:         envioTX("Ocurrio un error en la interpretacion.\n");
  3100  0CAE  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3101  0CAF  00A2               	movwf	envioTX@mensaje
  3102  0CB0  3080               	movlw	128
  3103  0CB1  00A3               	movwf	envioTX@mensaje+1
  3104  0CB2  120A  158A  2609  120A  158A  	fcall	_envioTX
  3105  0CB7                     l203:	
  3106  0CB7  0008               	return
  3107  0CB8                     __end_of_lecturaMenos:	
  3108                           
  3109                           	psect	text10
  3110  0D4A                     __ptext10:	
  3111 ;; *************** function _lecturaMas *****************
  3112 ;; Defined at:
  3113 ;;		line 83 in file "lectura.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3127 ;;      Params:         0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    5
  3134 ;; This function calls:
  3135 ;;		_agregarModificarPrecio
  3136 ;;		_cierreDeLote
  3137 ;;		_verificacionEntrada
  3138 ;; This function is called by:
  3139 ;;		_lecturaComando
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _lecturaMas
  3145  0D4A                     _lecturaMas:	
  3146  0D4A                     l2728:	
  3147                           ;incstack = 0
  3148                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3149                           
  3150                           
  3151                           ;lectura.c: 84:     if (codigoEntrada[1] == 'L') {
  3152  0D4A  304C               	movlw	76
  3153  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0D4D  0664               	xorwf	_codigoEntrada+1,w
  3156  0D4E  1D03               	btfss	3,2
  3157  0D4F  2D51               	goto	u2771
  3158  0D50  2D52               	goto	u2770
  3159  0D51                     u2771:	
  3160  0D51  2D58               	goto	l2732
  3161  0D52                     u2770:	
  3162  0D52                     l2730:	
  3163                           
  3164                           ;lectura.c: 85:         cierreDeLote();
  3165  0D52  120A  158A  25A5  120A  158A  	fcall	_cierreDeLote
  3166                           
  3167                           ;lectura.c: 86:     }
  3168  0D57  2D73               	goto	l198
  3169  0D58                     l2732:	
  3170  0D58  120A  158A  25D7  120A  158A  	fcall	_verificacionEntrada
  3171  0D5D  3A06               	xorlw	6
  3172  0D5E  1D03               	skipz
  3173  0D5F  2D61               	goto	u2781
  3174  0D60  2D62               	goto	u2780
  3175  0D61                     u2781:	
  3176  0D61  2D68               	goto	l2736
  3177  0D62                     u2780:	
  3178  0D62                     l2734:	
  3179                           
  3180                           ;lectura.c: 88:         agregarModificarPrecio();
  3181  0D62  120A  118A  2030  120A  158A  	fcall	_agregarModificarPrecio
  3182                           
  3183                           ;lectura.c: 89:     }
  3184  0D67  2D73               	goto	l198
  3185  0D68                     l2736:	
  3186  0D68  3044               	movlw	68
  3187  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0D6B  0664               	xorwf	_codigoEntrada+1,w
  3190  0D6C  1D03               	btfss	3,2
  3191  0D6D  2D6F               	goto	u2791
  3192  0D6E  2D70               	goto	u2790
  3193  0D6F                     u2791:	
  3194  0D6F  2D73               	goto	l195
  3195  0D70                     u2790:	
  3196  0D70                     l2738:	
  3197                           
  3198                           ;lectura.c: 91:         modoDebug = 1;
  3199  0D70  01F6               	clrf	_modoDebug
  3200  0D71  0AF6               	incf	_modoDebug,f
  3201                           
  3202                           ;lectura.c: 92:     }
  3203  0D72  2D73               	goto	l198
  3204  0D73                     l195:	
  3205  0D73                     l198:	
  3206  0D73  0008               	return
  3207  0D74                     __end_of_lecturaMas:	
  3208                           
  3209                           	psect	text11
  3210  0DD7                     __ptext11:	
  3211 ;; *************** function _verificacionEntrada *****************
  3212 ;; Defined at:
  3213 ;;		line 59 in file "lectura.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  i               1    1[BANK0 ] unsigned char 
  3218 ;;  ret             1    0[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      unsigned char 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         0       2       0       0       0
  3230 ;;      Temps:          1       0       0       0       0
  3231 ;;      Totals:         1       2       0       0       0
  3232 ;;Total ram usage:        3 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_lecturaMas
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function _verificacionEntrada
  3244  0DD7                     _verificacionEntrada:	
  3245  0DD7                     l2576:	
  3246                           ;incstack = 0
  3247                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  3248                           
  3249                           
  3250                           ;lectura.c: 60:     char i = 1;
  3251  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0DD9  01A1               	clrf	verificacionEntrada@i
  3254  0DDA  0AA1               	incf	verificacionEntrada@i,f
  3255  0DDB                     l2578:	
  3256                           
  3257                           ;lectura.c: 61:     char ret = 0;
  3258  0DDB  01A0               	clrf	verificacionEntrada@ret
  3259                           
  3260                           ;lectura.c: 62:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3261  0DDC  2DE5               	goto	l2582
  3262  0DDD                     l2580:	
  3263                           
  3264                           ;lectura.c: 63:         i++;
  3265  0DDD  3001               	movlw	1
  3266  0DDE  00F4               	movwf	??_verificacionEntrada
  3267  0DDF  0874               	movf	??_verificacionEntrada,w
  3268  0DE0  07A1               	addwf	verificacionEntrada@i,f
  3269                           
  3270                           ;lectura.c: 64:         ret++;
  3271  0DE1  3001               	movlw	1
  3272  0DE2  00F4               	movwf	??_verificacionEntrada
  3273  0DE3  0874               	movf	??_verificacionEntrada,w
  3274  0DE4  07A0               	addwf	verificacionEntrada@ret,f
  3275  0DE5                     l2582:	
  3276                           
  3277                           ;lectura.c: 62:     while( (((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || 
      +                          codigoEntrada[i] == '=') && (i<=6) ) {
  3278  0DE5  0821               	movf	verificacionEntrada@i,w
  3279  0DE6  3E63               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3280  0DE7  0084               	movwf	4
  3281  0DE8  303A               	movlw	58
  3282  0DE9  1383               	bcf	3,7	;select IRP bank0
  3283  0DEA  0200               	subwf	0,w
  3284  0DEB  1803               	skipnc
  3285  0DEC  2DEE               	goto	u2551
  3286  0DED  2DEF               	goto	u2550
  3287  0DEE                     u2551:	
  3288  0DEE  2DF8               	goto	l2586
  3289  0DEF                     u2550:	
  3290  0DEF                     l2584:	
  3291  0DEF  0821               	movf	verificacionEntrada@i,w
  3292  0DF0  3E63               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3293  0DF1  0084               	movwf	4
  3294  0DF2  3030               	movlw	48
  3295  0DF3  0200               	subwf	0,w
  3296  0DF4  1803               	skipnc
  3297  0DF5  2DF7               	goto	u2561
  3298  0DF6  2DF8               	goto	u2560
  3299  0DF7                     u2561:	
  3300  0DF7  2E01               	goto	l2588
  3301  0DF8                     u2560:	
  3302  0DF8                     l2586:	
  3303  0DF8  0821               	movf	verificacionEntrada@i,w
  3304  0DF9  3E63               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3305  0DFA  0084               	movwf	4
  3306  0DFB  303D               	movlw	61
  3307  0DFC  0600               	xorwf	0,w
  3308  0DFD  1D03               	btfss	3,2
  3309  0DFE  2E00               	goto	u2571
  3310  0DFF  2E01               	goto	u2570
  3311  0E00                     u2571:	
  3312  0E00  2E07               	goto	l2590
  3313  0E01                     u2570:	
  3314  0E01                     l2588:	
  3315  0E01  3007               	movlw	7
  3316  0E02  0221               	subwf	verificacionEntrada@i,w
  3317  0E03  1C03               	skipc
  3318  0E04  2E06               	goto	u2581
  3319  0E05  2E07               	goto	u2580
  3320  0E06                     u2581:	
  3321  0E06  2DDD               	goto	l2580
  3322  0E07                     u2580:	
  3323  0E07                     l2590:	
  3324                           
  3325                           ;lectura.c: 66:     return ret;
  3326  0E07  0820               	movf	verificacionEntrada@ret,w
  3327  0E08                     l185:	
  3328  0E08  0008               	return
  3329  0E09                     __end_of_verificacionEntrada:	
  3330                           
  3331                           	psect	text12
  3332  0DA5                     __ptext12:	
  3333 ;; *************** function _cierreDeLote *****************
  3334 ;; Defined at:
  3335 ;;		line 69 in file "lectura.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  strLote        32   30[BANK0 ] unsigned char [32]
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       0       0       0       0
  3350 ;;      Locals:         0      32       0       0       0
  3351 ;;      Temps:          0       4       0       0       0
  3352 ;;      Totals:         0      36       0       0       0
  3353 ;;Total ram usage:       36 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    4
  3356 ;; This function calls:
  3357 ;;		_envioTX
  3358 ;;		_sprintf
  3359 ;; This function is called by:
  3360 ;;		_lecturaMas
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _cierreDeLote
  3366  0DA5                     _cierreDeLote:	
  3367  0DA5                     l2594:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _cierreDeLote: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3370                           
  3371                           
  3372                           ;lectura.c: 71:     if (cierreLotePedido == 0) {
  3373  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0DA7  0862               	movf	_cierreLotePedido,w
  3376  0DA8  1D03               	btfss	3,2
  3377  0DA9  2DAB               	goto	u2591
  3378  0DAA  2DAC               	goto	u2590
  3379  0DAB                     u2591:	
  3380  0DAB  2DCD               	goto	l2598
  3381  0DAC                     u2590:	
  3382  0DAC                     l2596:	
  3383                           
  3384                           ;lectura.c: 72:         char strLote[32];;lectura.c: 74:         sprintf(strLote,"L:%d,N
      +                          :%d,T:%d\n",&nroLote,&ventasLote,&montosLote);
  3385  0DAC  303D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3386  0DAD  00BA               	movwf	??_cierreDeLote
  3387  0DAE  083A               	movf	??_cierreDeLote,w
  3388  0DAF  00AC               	movwf	sprintf@f
  3389  0DB0  306E               	movlw	(low (_nroLote| 0))& (0+255)
  3390  0DB1  00BB               	movwf	??_cierreDeLote+1
  3391  0DB2  083B               	movf	??_cierreDeLote+1,w
  3392  0DB3  00AD               	movwf	low ((?_sprintf| 0+1))
  3393  0DB4  306D               	movlw	(low (_ventasLote| 0))& (0+255)
  3394  0DB5  00BC               	movwf	??_cierreDeLote+2
  3395  0DB6  083C               	movf	??_cierreDeLote+2,w
  3396  0DB7  00AE               	movwf	low ((?_sprintf| 0+2))
  3397  0DB8  3078               	movlw	(low (_montosLote| 0))& (0+255)
  3398  0DB9  00BD               	movwf	??_cierreDeLote+3
  3399  0DBA  083D               	movf	??_cierreDeLote+3,w
  3400  0DBB  00AF               	movwf	low ((?_sprintf| 0+3))
  3401  0DBC  303E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3402  0DBD  120A  118A  2324  120A  158A  	fcall	_sprintf
  3403                           
  3404                           ;lectura.c: 75:         envioTX(strLote);
  3405  0DC2  303E               	movlw	(low (cierreDeLote@strLote| 0))& (0+255)
  3406  0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0DC5  00A2               	movwf	envioTX@mensaje
  3409  0DC6  3000               	movlw	0
  3410  0DC7  00A3               	movwf	envioTX@mensaje+1
  3411  0DC8  120A  158A  2609  120A  158A  	fcall	_envioTX
  3412  0DCD                     l2598:	
  3413                           
  3414                           ;lectura.c: 78:     nroLote++;
  3415  0DCD  3001               	movlw	1
  3416  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0DD0  00BA               	movwf	??_cierreDeLote
  3419  0DD1  083A               	movf	??_cierreDeLote,w
  3420  0DD2  07EE               	addwf	_nroLote,f
  3421  0DD3                     l2600:	
  3422                           
  3423                           ;lectura.c: 79:     ventasLote=0;
  3424  0DD3  01ED               	clrf	_ventasLote
  3425  0DD4                     l2602:	
  3426                           
  3427                           ;lectura.c: 80:     montosLote=0;
  3428  0DD4  01F8               	clrf	_montosLote
  3429  0DD5  01F9               	clrf	_montosLote+1
  3430  0DD6                     l189:	
  3431  0DD6  0008               	return
  3432  0DD7                     __end_of_cierreDeLote:	
  3433                           
  3434                           	psect	text13
  3435  0324                     __ptext13:	
  3436 ;; *************** function _sprintf *****************
  3437 ;; Defined at:
  3438 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  sp              1    wreg     PTR unsigned char 
  3441 ;;		 -> cierreDeLote@strLote(32), main@bufferMsj(16), 
  3442 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  3443 ;;		 -> STR_2(16), STR_1(6), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  sp              1   24[BANK0 ] PTR unsigned char 
  3446 ;;		 -> cierreDeLote@strLote(32), main@bufferMsj(16), 
  3447 ;;  tmpval          4    0        struct .
  3448 ;;  val             2   22[BANK0 ] unsigned int 
  3449 ;;  cp              2    0        PTR const unsigned char 
  3450 ;;  len             2    0        unsigned int 
  3451 ;;  c               1   25[BANK0 ] unsigned char 
  3452 ;;  prec            1   21[BANK0 ] char 
  3453 ;;  flag            1   20[BANK0 ] unsigned char 
  3454 ;;  ap              1   19[BANK0 ] PTR void [1]
  3455 ;;		 -> ?_sprintf(2), 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2   12[BANK0 ] int 
  3458 ;; Registers used:
  3459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3465 ;;      Params:         0       4       0       0       0
  3466 ;;      Locals:         0       7       0       0       0
  3467 ;;      Temps:          0       3       0       0       0
  3468 ;;      Totals:         0      14       0       0       0
  3469 ;;Total ram usage:       14 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    2
  3472 ;; This function calls:
  3473 ;;		___lwdiv
  3474 ;;		___lwmod
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;;		_cierreDeLote
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           
  3482                           ;psect for function _sprintf
  3483  0324                     _sprintf:	
  3484                           
  3485                           ;incstack = 0
  3486                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3487                           ;sprintf@sp stored from wreg
  3488  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0325  1303               	bcf	3,6	;RP1=0, select bank0
  3490  0326  00B8               	movwf	sprintf@sp
  3491  0327                     l2426:	
  3492                           
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  3494  0327  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3495  0328  00B0               	movwf	??_sprintf
  3496  0329  0830               	movf	??_sprintf,w
  3497  032A  00B3               	movwf	sprintf@ap
  3498                           
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3500  032B  2BF7               	goto	l2478
  3501  032C                     l2428:	
  3502                           
  3503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  3504  032C  3025               	movlw	37
  3505  032D  0639               	xorwf	sprintf@c,w
  3506  032E  1903               	btfsc	3,2
  3507  032F  2B31               	goto	u2351
  3508  0330  2B32               	goto	u2350
  3509  0331                     u2351:	
  3510  0331  2B3E               	goto	l2434
  3511  0332                     u2350:	
  3512  0332                     l2430:	
  3513                           
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  3515  0332  0839               	movf	sprintf@c,w
  3516  0333  00B0               	movwf	??_sprintf
  3517  0334  0838               	movf	sprintf@sp,w
  3518  0335  0084               	movwf	4
  3519  0336  0830               	movf	??_sprintf,w
  3520  0337  1383               	bcf	3,7	;select IRP bank0
  3521  0338  0080               	movwf	0
  3522  0339                     l2432:	
  3523  0339  3001               	movlw	1
  3524  033A  00B0               	movwf	??_sprintf
  3525  033B  0830               	movf	??_sprintf,w
  3526  033C  07B8               	addwf	sprintf@sp,f
  3527                           
  3528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  3529  033D  2BF7               	goto	l2478
  3530  033E                     l2434:	
  3531                           
  3532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  3533  033E  01B4               	clrf	sprintf@flag
  3534  033F                     l2438:	
  3535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  3536                           
  3537  033F  3001               	movlw	1
  3538  0340  07AC               	addwf	sprintf@f,f
  3539  0341  30FF               	movlw	-1
  3540  0342  072C               	addwf	sprintf@f,w
  3541  0343  0084               	movwf	4
  3542  0344  120A  118A  2618  120A  118A  	fcall	stringdir
  3543  0349  00B9               	movwf	sprintf@c
  3544  034A  00B0               	movwf	??_sprintf
  3545  034B  01B1               	clrf	??_sprintf+1
  3546                           
  3547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3548                           ; Switch size 1, requested type "simple"
  3549                           ; Number of cases is 1, Range of values is 0 to 0
  3550                           ; switch strategies available:
  3551                           ; Name         Instructions Cycles
  3552                           ; simple_byte            4     3 (average)
  3553                           ; direct_byte           11     8 (fixed)
  3554                           ; jumptable            260     6 (fixed)
  3555                           ;	Chosen strategy is simple_byte
  3556  034C  0831               	movf	??_sprintf+1,w
  3557  034D  3A00               	xorlw	0	; case 0
  3558  034E  1903               	skipnz
  3559  034F  2B51               	goto	l3016
  3560  0350  2BF7               	goto	l2478
  3561  0351                     l3016:	
  3562                           
  3563                           ; Switch size 1, requested type "simple"
  3564                           ; Number of cases is 3, Range of values is 0 to 105
  3565                           ; switch strategies available:
  3566                           ; Name         Instructions Cycles
  3567                           ; simple_byte           10     6 (average)
  3568                           ; jumptable            260     6 (fixed)
  3569                           ;	Chosen strategy is simple_byte
  3570  0351  0830               	movf	??_sprintf,w
  3571  0352  3A00               	xorlw	0	; case 0
  3572  0353  1903               	skipnz
  3573  0354  2C09               	goto	l2480
  3574  0355  3A64               	xorlw	100	; case 100
  3575  0356  1903               	skipnz
  3576  0357  2B5C               	goto	l2440
  3577  0358  3A0D               	xorlw	13	; case 105
  3578  0359  1903               	skipnz
  3579  035A  2B5C               	goto	l2440
  3580  035B  2BF7               	goto	l2478
  3581  035C                     l2440:	
  3582                           
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3584  035C  0833               	movf	sprintf@ap,w
  3585  035D  0084               	movwf	4
  3586  035E  1383               	bcf	3,7	;select IRP bank0
  3587  035F  0800               	movf	0,w
  3588  0360  00B6               	movwf	sprintf@val
  3589  0361  0A84               	incf	4,f
  3590  0362  0800               	movf	0,w
  3591  0363  00B7               	movwf	sprintf@val+1
  3592  0364                     l2442:	
  3593  0364  3002               	movlw	2
  3594  0365  00B0               	movwf	??_sprintf
  3595  0366  0830               	movf	??_sprintf,w
  3596  0367  07B3               	addwf	sprintf@ap,f
  3597  0368                     l2444:	
  3598                           
  3599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  3600  0368  1FB7               	btfss	sprintf@val+1,7
  3601  0369  2B6B               	goto	u2361
  3602  036A  2B6C               	goto	u2360
  3603  036B                     u2361:	
  3604  036B  2B75               	goto	l2450
  3605  036C                     u2360:	
  3606  036C                     l2446:	
  3607                           
  3608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  3609  036C  3003               	movlw	3
  3610  036D  00B0               	movwf	??_sprintf
  3611  036E  0830               	movf	??_sprintf,w
  3612  036F  04B4               	iorwf	sprintf@flag,f
  3613  0370                     l2448:	
  3614                           
  3615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  3616  0370  09B6               	comf	sprintf@val,f
  3617  0371  09B7               	comf	sprintf@val+1,f
  3618  0372  0AB6               	incf	sprintf@val,f
  3619  0373  1903               	skipnz
  3620  0374  0AB7               	incf	sprintf@val+1,f
  3621  0375                     l2450:	
  3622                           
  3623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3624  0375  01B9               	clrf	sprintf@c
  3625  0376  0AB9               	incf	sprintf@c,f
  3626  0377                     l2456:	
  3627                           
  3628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  3629  0377  0839               	movf	sprintf@c,w
  3630  0378  00B0               	movwf	??_sprintf
  3631  0379  0730               	addwf	??_sprintf,w
  3632  037A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3633  037B  0084               	movwf	4
  3634  037C  120A  118A  2618  120A  118A  	fcall	stringdir
  3635  0381  00B1               	movwf	??_sprintf+1
  3636  0382  120A  118A  2618  120A  118A  	fcall	stringdir
  3637  0387  00B2               	movwf	??_sprintf+2
  3638  0388  0832               	movf	??_sprintf+2,w
  3639  0389  0237               	subwf	sprintf@val+1,w
  3640  038A  1D03               	skipz
  3641  038B  2B8E               	goto	u2375
  3642  038C  0831               	movf	??_sprintf+1,w
  3643  038D  0236               	subwf	sprintf@val,w
  3644  038E                     u2375:	
  3645  038E  1803               	skipnc
  3646  038F  2B91               	goto	u2371
  3647  0390  2B92               	goto	u2370
  3648  0391                     u2371:	
  3649  0391  2B93               	goto	l2460
  3650  0392                     u2370:	
  3651  0392  2B9D               	goto	l2462
  3652  0393                     l2460:	
  3653  0393  3001               	movlw	1
  3654  0394  00B0               	movwf	??_sprintf
  3655  0395  0830               	movf	??_sprintf,w
  3656  0396  07B9               	addwf	sprintf@c,f
  3657  0397  3005               	movlw	5
  3658  0398  0639               	xorwf	sprintf@c,w
  3659  0399  1D03               	btfss	3,2
  3660  039A  2B9C               	goto	u2381
  3661  039B  2B9D               	goto	u2380
  3662  039C                     u2381:	
  3663  039C  2B77               	goto	l2456
  3664  039D                     u2380:	
  3665  039D                     l2462:	
  3666                           
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3668  039D  0834               	movf	sprintf@flag,w
  3669  039E  3903               	andlw	3
  3670  039F  1903               	btfsc	3,2
  3671  03A0  2BA2               	goto	u2391
  3672  03A1  2BA3               	goto	u2390
  3673  03A2                     u2391:	
  3674  03A2  2BAE               	goto	l2468
  3675  03A3                     u2390:	
  3676  03A3                     l2464:	
  3677                           
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3679  03A3  302D               	movlw	45
  3680  03A4  00B0               	movwf	??_sprintf
  3681  03A5  0838               	movf	sprintf@sp,w
  3682  03A6  0084               	movwf	4
  3683  03A7  0830               	movf	??_sprintf,w
  3684  03A8  1383               	bcf	3,7	;select IRP bank0
  3685  03A9  0080               	movwf	0
  3686  03AA                     l2466:	
  3687  03AA  3001               	movlw	1
  3688  03AB  00B0               	movwf	??_sprintf
  3689  03AC  0830               	movf	??_sprintf,w
  3690  03AD  07B8               	addwf	sprintf@sp,f
  3691  03AE                     l2468:	
  3692                           
  3693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  3694  03AE  0839               	movf	sprintf@c,w
  3695  03AF  00B0               	movwf	??_sprintf
  3696  03B0  0830               	movf	??_sprintf,w
  3697  03B1  00B5               	movwf	sprintf@prec
  3698                           
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  3700  03B2  2BEE               	goto	l2476
  3701  03B3                     l2470:	
  3702                           
  3703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3704  03B3  300A               	movlw	10
  3705  03B4  00A7               	movwf	___lwmod@divisor
  3706  03B5  3000               	movlw	0
  3707  03B6  00A8               	movwf	___lwmod@divisor+1
  3708  03B7  0835               	movf	sprintf@prec,w
  3709  03B8  00B0               	movwf	??_sprintf
  3710  03B9  0730               	addwf	??_sprintf,w
  3711  03BA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3712  03BB  0084               	movwf	4
  3713  03BC  120A  118A  2618  120A  118A  	fcall	stringdir
  3714  03C1  00A0               	movwf	___lwdiv@divisor
  3715  03C2  120A  118A  2618  120A  118A  	fcall	stringdir
  3716  03C7  00A1               	movwf	___lwdiv@divisor+1
  3717  03C8  0837               	movf	sprintf@val+1,w
  3718  03C9  00A3               	movwf	___lwdiv@dividend+1
  3719  03CA  0836               	movf	sprintf@val,w
  3720  03CB  00A2               	movwf	___lwdiv@dividend
  3721  03CC  120A  158A  2773  120A  118A  	fcall	___lwdiv
  3722  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3723  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3724  03D3  0821               	movf	?___lwdiv+1,w
  3725  03D4  00AA               	movwf	___lwmod@dividend+1
  3726  03D5  0820               	movf	?___lwdiv,w
  3727  03D6  00A9               	movwf	___lwmod@dividend
  3728  03D7  120A  158A  26B7  120A  118A  	fcall	___lwmod
  3729  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3730  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  3731  03DE  0827               	movf	?___lwmod,w
  3732  03DF  3E30               	addlw	48
  3733  03E0  00B1               	movwf	??_sprintf+1
  3734  03E1  0831               	movf	??_sprintf+1,w
  3735  03E2  00B9               	movwf	sprintf@c
  3736  03E3                     l2472:	
  3737                           
  3738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  3739  03E3  0839               	movf	sprintf@c,w
  3740  03E4  00B0               	movwf	??_sprintf
  3741  03E5  0838               	movf	sprintf@sp,w
  3742  03E6  0084               	movwf	4
  3743  03E7  0830               	movf	??_sprintf,w
  3744  03E8  1383               	bcf	3,7	;select IRP bank0
  3745  03E9  0080               	movwf	0
  3746  03EA                     l2474:	
  3747  03EA  3001               	movlw	1
  3748  03EB  00B0               	movwf	??_sprintf
  3749  03EC  0830               	movf	??_sprintf,w
  3750  03ED  07B8               	addwf	sprintf@sp,f
  3751  03EE                     l2476:	
  3752                           
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  3754  03EE  30FF               	movlw	255
  3755  03EF  00B0               	movwf	??_sprintf
  3756  03F0  0830               	movf	??_sprintf,w
  3757  03F1  07B5               	addwf	sprintf@prec,f
  3758  03F2  0A35               	incf	sprintf@prec,w
  3759  03F3  1D03               	btfss	3,2
  3760  03F4  2BF6               	goto	u2401
  3761  03F5  2BF7               	goto	u2400
  3762  03F6                     u2401:	
  3763  03F6  2BB3               	goto	l2470
  3764  03F7                     u2400:	
  3765  03F7                     l2478:	
  3766                           
  3767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3768  03F7  3001               	movlw	1
  3769  03F8  07AC               	addwf	sprintf@f,f
  3770  03F9  30FF               	movlw	-1
  3771  03FA  072C               	addwf	sprintf@f,w
  3772  03FB  0084               	movwf	4
  3773  03FC  120A  118A  2618  120A  118A  	fcall	stringdir
  3774  0401  00B0               	movwf	??_sprintf
  3775  0402  0830               	movf	??_sprintf,w
  3776  0403  00B9               	movwf	sprintf@c
  3777  0404  0839               	movf	sprintf@c,w
  3778  0405  1D03               	btfss	3,2
  3779  0406  2C08               	goto	u2411
  3780  0407  2C09               	goto	u2410
  3781  0408                     u2411:	
  3782  0408  2B2C               	goto	l2428
  3783  0409                     u2410:	
  3784  0409                     l2480:	
  3785                           
  3786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3787  0409  0838               	movf	sprintf@sp,w
  3788  040A  0084               	movwf	4
  3789  040B  1383               	bcf	3,7	;select IRP bank0
  3790  040C  0180               	clrf	0
  3791  040D                     l496:	
  3792  040D  0008               	return
  3793  040E                     __end_of_sprintf:	
  3794                           
  3795                           	psect	text14
  3796  0E09                     __ptext14:	
  3797 ;; *************** function _envioTX *****************
  3798 ;; Defined at:
  3799 ;;		line 39 in file "mostrarInicializar.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  mensaje         2    2[BANK0 ] PTR unsigned char 
  3802 ;;		 -> STR_3(40), cierreDeLote@strLote(32), main@bufferMsj(16), 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  i               2    7[BANK0 ] int 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3814 ;;      Params:         0       2       0       0       0
  3815 ;;      Locals:         0       2       0       0       0
  3816 ;;      Temps:          0       3       0       0       0
  3817 ;;      Totals:         0       7       0       0       0
  3818 ;;Total ram usage:        7 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    3
  3821 ;; This function calls:
  3822 ;;		_strlen
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;;		_cierreDeLote
  3826 ;;		_lecturaMenos
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function _envioTX
  3832  0E09                     _envioTX:	
  3833  0E09                     l2488:	
  3834                           ;incstack = 0
  3835                           ; Regs used in _envioTX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3836                           
  3837                           
  3838                           ;mostrarInicializar.c: 40:     int i = 0;
  3839  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0E0B  01A7               	clrf	envioTX@i
  3842  0E0C  01A8               	clrf	envioTX@i+1
  3843                           
  3844                           ;mostrarInicializar.c: 41:     while(i < strlen((const char *)mensaje)) {
  3845  0E0D  2E2C               	goto	l2494
  3846  0E0E                     l2490:	
  3847                           
  3848                           ;mostrarInicializar.c: 42:         TXREG = mensaje[i];
  3849  0E0E  0827               	movf	envioTX@i,w
  3850  0E0F  0722               	addwf	envioTX@mensaje,w
  3851  0E10  00A5               	movwf	??_envioTX+1
  3852  0E11  0823               	movf	envioTX@mensaje+1,w
  3853  0E12  00A4               	movwf	??_envioTX
  3854  0E13  1803               	skipnc
  3855  0E14  0AA4               	incf	??_envioTX,f
  3856  0E15  1FA7               	btfss	envioTX@i,7
  3857  0E16  2E18               	goto	u2420
  3858  0E17  03A4               	decf	??_envioTX,f
  3859  0E18                     u2420:	
  3860  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0E1A  0824               	movf	??_envioTX,w
  3863  0E1B  00A6               	movwf	??_envioTX+2
  3864  0E1C  0826               	movf	??_envioTX+2,w
  3865  0E1D  00FF               	movwf	btemp+1
  3866  0E1E  0825               	movf	??_envioTX+1,w
  3867  0E1F  0084               	movwf	4
  3868  0E20  120A  118A  260E  120A  158A  	fcall	stringtab
  3869  0E25  0099               	movwf	25	;volatile
  3870  0E26                     l2492:	
  3871                           
  3872                           ;mostrarInicializar.c: 43:         i++;
  3873  0E26  3001               	movlw	1
  3874  0E27  07A7               	addwf	envioTX@i,f
  3875  0E28  1803               	skipnc
  3876  0E29  0AA8               	incf	envioTX@i+1,f
  3877  0E2A  3000               	movlw	0
  3878  0E2B  07A8               	addwf	envioTX@i+1,f
  3879  0E2C                     l2494:	
  3880                           
  3881                           ;mostrarInicializar.c: 41:     while(i < strlen((const char *)mensaje)) {
  3882  0E2C  0822               	movf	envioTX@mensaje,w
  3883  0E2D  00F4               	movwf	strlen@s
  3884  0E2E  0823               	movf	envioTX@mensaje+1,w
  3885  0E2F  00F5               	movwf	strlen@s+1
  3886  0E30  120A  118A  27DA  120A  158A  	fcall	_strlen
  3887  0E35  0875               	movf	?_strlen+1,w
  3888  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0E38  0228               	subwf	envioTX@i+1,w
  3891  0E39  1D03               	skipz
  3892  0E3A  2E3D               	goto	u2435
  3893  0E3B  0874               	movf	?_strlen,w
  3894  0E3C  0227               	subwf	envioTX@i,w
  3895  0E3D                     u2435:	
  3896  0E3D  1C03               	skipc
  3897  0E3E  2E40               	goto	u2431
  3898  0E3F  2E41               	goto	u2430
  3899  0E40                     u2431:	
  3900  0E40  2E0E               	goto	l2490
  3901  0E41                     u2430:	
  3902  0E41                     l303:	
  3903  0E41  0008               	return
  3904  0E42                     __end_of_envioTX:	
  3905                           
  3906                           	psect	text15
  3907  07DA                     __ptext15:	
  3908 ;; *************** function _strlen *****************
  3909 ;; Defined at:
  3910 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  s               2    4[COMMON] PTR const unsigned char 
  3913 ;;		 -> STR_3(40), cierreDeLote@strLote(32), main@bufferMsj(16), 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  cp              2    0[BANK0 ] PTR const unsigned char 
  3916 ;;		 -> STR_3(40), cierreDeLote@strLote(32), main@bufferMsj(16), 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  2    4[COMMON] unsigned int 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3926 ;;      Params:         2       0       0       0       0
  3927 ;;      Locals:         0       2       0       0       0
  3928 ;;      Temps:          0       0       0       0       0
  3929 ;;      Totals:         2       2       0       0       0
  3930 ;;Total ram usage:        4 bytes
  3931 ;; Hardware stack levels used:    2
  3932 ;; Hardware stack levels required when called:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_envioTX
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           
  3941                           ;psect for function _strlen
  3942  07DA                     _strlen:	
  3943  07DA                     l2376:	
  3944                           ;incstack = 0
  3945                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3946                           
  3947  07DA  0874               	movf	strlen@s,w
  3948  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  3949  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  3950  07DD  00A0               	movwf	strlen@cp
  3951  07DE  0875               	movf	strlen@s+1,w
  3952  07DF  00A1               	movwf	strlen@cp+1
  3953  07E0  2FE7               	goto	l2380
  3954  07E1                     l2378:	
  3955  07E1  3001               	movlw	1
  3956  07E2  07A0               	addwf	strlen@cp,f
  3957  07E3  1803               	skipnc
  3958  07E4  0AA1               	incf	strlen@cp+1,f
  3959  07E5  3000               	movlw	0
  3960  07E6  07A1               	addwf	strlen@cp+1,f
  3961  07E7                     l2380:	
  3962  07E7  0821               	movf	strlen@cp+1,w
  3963  07E8  00FF               	movwf	btemp+1
  3964  07E9  0820               	movf	strlen@cp,w
  3965  07EA  0084               	movwf	4
  3966  07EB  120A  118A  260E  120A  118A  	fcall	stringtab
  3967  07F0  3A00               	xorlw	0
  3968  07F1  1D03               	skipz
  3969  07F2  2FF4               	goto	u2231
  3970  07F3  2FF5               	goto	u2230
  3971  07F4                     u2231:	
  3972  07F4  2FE1               	goto	l2378
  3973  07F5                     u2230:	
  3974  07F5                     l2382:	
  3975  07F5  0874               	movf	strlen@s,w
  3976  07F6  0220               	subwf	strlen@cp,w
  3977  07F7  00F4               	movwf	?_strlen
  3978  07F8  0875               	movf	strlen@s+1,w
  3979  07F9  1C03               	skipc
  3980  07FA  0A75               	incf	strlen@s+1,w
  3981  07FB  0221               	subwf	strlen@cp+1,w
  3982  07FC  00F5               	movwf	?_strlen+1
  3983  07FD                     l948:	
  3984  07FD  0008               	return
  3985  07FE                     __end_of_strlen:	
  3986                           
  3987                           	psect	text16
  3988  0030                     __ptext16:	
  3989 ;; *************** function _agregarModificarPrecio *****************
  3990 ;; Defined at:
  3991 ;;		line 61 in file "manejoProductos.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  precio          2   16[BANK0 ] short 
  3996 ;;  tp              1   18[BANK0 ] unsigned char 
  3997 ;;  upper_8bits     1   15[BANK0 ] unsigned char 
  3998 ;;  lower_8bits     1   14[BANK0 ] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         0       5       0       0       0
  4010 ;;      Temps:          0      10       0       0       0
  4011 ;;      Totals:         0      15       0       0       0
  4012 ;;Total ram usage:       15 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    2
  4015 ;; This function calls:
  4016 ;;		___bmul
  4017 ;;		___wmul
  4018 ;;		_eeprom_read
  4019 ;;		_eeprom_write
  4020 ;; This function is called by:
  4021 ;;		_lecturaMas
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function _agregarModificarPrecio
  4027  0030                     _agregarModificarPrecio:	
  4028  0030                     l2604:	
  4029                           ;incstack = 0
  4030                           ; Regs used in _agregarModificarPrecio: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4031                           
  4032                           
  4033                           ;manejoProductos.c: 62:     unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrad
      +                          a[1] - '0');
  4034  0030  300A               	movlw	10
  4035  0031  1283               	bcf	3,5	;RP0=0, select bank0
  4036  0032  1303               	bcf	3,6	;RP1=0, select bank0
  4037  0033  00A4               	movwf	??_agregarModificarPrecio
  4038  0034  0824               	movf	??_agregarModificarPrecio,w
  4039  0035  00F4               	movwf	___bmul@multiplicand
  4040  0036  0863               	movf	_codigoEntrada,w
  4041  0037  120A  158A  24CF  120A  118A  	fcall	___bmul
  4042  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4043  003D  1303               	bcf	3,6	;RP1=0, select bank0
  4044  003E  0764               	addwf	_codigoEntrada+1,w
  4045  003F  3EF0               	addlw	240
  4046  0040  00A5               	movwf	??_agregarModificarPrecio+1
  4047  0041  0825               	movf	??_agregarModificarPrecio+1,w
  4048  0042  00B2               	movwf	agregarModificarPrecio@tp
  4049  0043                     l2606:	
  4050                           
  4051                           ;manejoProductos.c: 63:     char lower_8bits;;manejoProductos.c: 64:     char upper_8bit
      +                          s;;manejoProductos.c: 65:     tp--;
  4052  0043  3001               	movlw	1
  4053  0044  02B2               	subwf	agregarModificarPrecio@tp,f
  4054  0045                     l2608:	
  4055                           
  4056                           ;manejoProductos.c: 66:     tp = tp * 2;
  4057  0045  0832               	movf	agregarModificarPrecio@tp,w
  4058  0046  00A4               	movwf	??_agregarModificarPrecio
  4059  0047  0724               	addwf	??_agregarModificarPrecio,w
  4060  0048  00A5               	movwf	??_agregarModificarPrecio+1
  4061  0049  0825               	movf	??_agregarModificarPrecio+1,w
  4062  004A  00B2               	movwf	agregarModificarPrecio@tp
  4063  004B                     l2610:	
  4064                           
  4065                           ;manejoProductos.c: 67:     short int precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+
      +                          1));
  4066  004B  0832               	movf	agregarModificarPrecio@tp,w
  4067  004C  3E01               	addlw	1
  4068  004D  120A  158A  24B8  120A  118A  	fcall	_eeprom_read
  4069  0052  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0053  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0054  00A4               	movwf	??_agregarModificarPrecio
  4072  0055  01A5               	clrf	??_agregarModificarPrecio+1
  4073  0056  0832               	movf	agregarModificarPrecio@tp,w
  4074  0057  120A  158A  24B8  120A  118A  	fcall	_eeprom_read
  4075  005C  1283               	bcf	3,5	;RP0=0, select bank0
  4076  005D  1303               	bcf	3,6	;RP1=0, select bank0
  4077  005E  00A6               	movwf	??_agregarModificarPrecio+2
  4078  005F  01A7               	clrf	??_agregarModificarPrecio+3
  4079  0060  0826               	movf	??_agregarModificarPrecio+2,w
  4080  0061  00A7               	movwf	??_agregarModificarPrecio+3
  4081  0062  01A6               	clrf	??_agregarModificarPrecio+2
  4082  0063  0824               	movf	??_agregarModificarPrecio,w
  4083  0064  0426               	iorwf	??_agregarModificarPrecio+2,w
  4084  0065  00B0               	movwf	agregarModificarPrecio@precio
  4085  0066  0825               	movf	??_agregarModificarPrecio+1,w
  4086  0067  0427               	iorwf	??_agregarModificarPrecio+3,w
  4087  0068  00B1               	movwf	agregarModificarPrecio@precio+1
  4088  0069                     l2612:	
  4089                           
  4090                           ;manejoProductos.c: 69:     if( (precio < 0 || precio > 999) ) {
  4091  0069  1BB1               	btfsc	agregarModificarPrecio@precio+1,7
  4092  006A  286C               	goto	u2601
  4093  006B  286D               	goto	u2600
  4094  006C                     u2601:	
  4095  006C  287A               	goto	l2616
  4096  006D                     u2600:	
  4097  006D                     l2614:	
  4098  006D  0831               	movf	agregarModificarPrecio@precio+1,w
  4099  006E  3A80               	xorlw	128
  4100  006F  00FF               	movwf	btemp+1
  4101  0070  3083               	movlw	131
  4102  0071  027F               	subwf	btemp+1,w
  4103  0072  1D03               	skipz
  4104  0073  2876               	goto	u2615
  4105  0074  30E8               	movlw	232
  4106  0075  0230               	subwf	agregarModificarPrecio@precio,w
  4107  0076                     u2615:	
  4108  0076  1C03               	skipc
  4109  0077  2879               	goto	u2611
  4110  0078  287A               	goto	u2610
  4111  0079                     u2611:	
  4112  0079  28DC               	goto	l2626
  4113  007A                     u2610:	
  4114  007A                     l2616:	
  4115                           
  4116                           ;manejoProductos.c: 70:         precio = 100 * (codigoEntrada[3] - '0')+ 10 * (codigoEnt
      +                          rada[4] - '0') + (codigoEntrada[5] - '0');
  4117  007A  1283               	bcf	3,5	;RP0=0, select bank0
  4118  007B  1303               	bcf	3,6	;RP1=0, select bank0
  4119  007C  0866               	movf	_codigoEntrada+3,w
  4120  007D  00A4               	movwf	??_agregarModificarPrecio
  4121  007E  01A5               	clrf	??_agregarModificarPrecio+1
  4122  007F  0824               	movf	??_agregarModificarPrecio,w
  4123  0080  00A0               	movwf	___wmul@multiplier
  4124  0081  0825               	movf	??_agregarModificarPrecio+1,w
  4125  0082  00A1               	movwf	___wmul@multiplier+1
  4126  0083  3064               	movlw	100
  4127  0084  00A2               	movwf	___wmul@multiplicand
  4128  0085  3000               	movlw	0
  4129  0086  00A3               	movwf	___wmul@multiplicand+1
  4130  0087  120A  158A  2523  120A  118A  	fcall	___wmul
  4131  008C  1283               	bcf	3,5	;RP0=0, select bank0
  4132  008D  1303               	bcf	3,6	;RP1=0, select bank0
  4133  008E  0820               	movf	?___wmul,w
  4134  008F  00A6               	movwf	??_agregarModificarPrecio+2
  4135  0090  0821               	movf	?___wmul+1,w
  4136  0091  00A7               	movwf	??_agregarModificarPrecio+3
  4137  0092  0867               	movf	_codigoEntrada+4,w
  4138  0093  00A8               	movwf	??_agregarModificarPrecio+4
  4139  0094  01A9               	clrf	??_agregarModificarPrecio+5
  4140  0095  0828               	movf	??_agregarModificarPrecio+4,w
  4141  0096  00A0               	movwf	___wmul@multiplier
  4142  0097  0829               	movf	??_agregarModificarPrecio+5,w
  4143  0098  00A1               	movwf	___wmul@multiplier+1
  4144  0099  300A               	movlw	10
  4145  009A  00A2               	movwf	___wmul@multiplicand
  4146  009B  3000               	movlw	0
  4147  009C  00A3               	movwf	___wmul@multiplicand+1
  4148  009D  120A  158A  2523  120A  118A  	fcall	___wmul
  4149  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  4150  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  4151  00A4  0820               	movf	?___wmul,w
  4152  00A5  0726               	addwf	??_agregarModificarPrecio+2,w
  4153  00A6  00AA               	movwf	??_agregarModificarPrecio+6
  4154  00A7  0821               	movf	?___wmul+1,w
  4155  00A8  1803               	skipnc
  4156  00A9  0A21               	incf	?___wmul+1,w
  4157  00AA  0727               	addwf	??_agregarModificarPrecio+3,w
  4158  00AB  00AB               	movwf	??_agregarModificarPrecio+7
  4159  00AC  0868               	movf	_codigoEntrada+5,w
  4160  00AD  072A               	addwf	??_agregarModificarPrecio+6,w
  4161  00AE  00AC               	movwf	??_agregarModificarPrecio+8
  4162  00AF  3000               	movlw	0
  4163  00B0  1803               	skipnc
  4164  00B1  3001               	movlw	1
  4165  00B2  072B               	addwf	??_agregarModificarPrecio+7,w
  4166  00B3  00AD               	movwf	??_agregarModificarPrecio+9
  4167  00B4  082C               	movf	??_agregarModificarPrecio+8,w
  4168  00B5  3E30               	addlw	48
  4169  00B6  00B0               	movwf	agregarModificarPrecio@precio
  4170  00B7  082D               	movf	??_agregarModificarPrecio+9,w
  4171  00B8  1803               	skipnc
  4172  00B9  3E01               	addlw	1
  4173  00BA  3EEB               	addlw	235
  4174  00BB  00B1               	movwf	agregarModificarPrecio@precio+1
  4175  00BC                     l2618:	
  4176                           
  4177                           ;manejoProductos.c: 71:         lower_8bits = precio & 0xff;
  4178  00BC  0830               	movf	agregarModificarPrecio@precio,w
  4179  00BD  00A4               	movwf	??_agregarModificarPrecio
  4180  00BE  0824               	movf	??_agregarModificarPrecio,w
  4181  00BF  00AE               	movwf	agregarModificarPrecio@lower_8bits
  4182  00C0                     l2620:	
  4183                           
  4184                           ;manejoProductos.c: 72:         upper_8bits = (precio >> 8) & 0xff;
  4185  00C0  0831               	movf	agregarModificarPrecio@precio+1,w
  4186  00C1  00A4               	movwf	??_agregarModificarPrecio
  4187  00C2  0824               	movf	??_agregarModificarPrecio,w
  4188  00C3  00AF               	movwf	agregarModificarPrecio@upper_8bits
  4189  00C4                     l2622:	
  4190                           
  4191                           ;manejoProductos.c: 73:         eeprom_write(tp ,upper_8bits);
  4192  00C4  082F               	movf	agregarModificarPrecio@upper_8bits,w
  4193  00C5  00A4               	movwf	??_agregarModificarPrecio
  4194  00C6  0824               	movf	??_agregarModificarPrecio,w
  4195  00C7  00F4               	movwf	eeprom_write@value
  4196  00C8  0832               	movf	agregarModificarPrecio@tp,w
  4197  00C9  120A  158A  2574  120A  118A  	fcall	_eeprom_write
  4198  00CE                     l2624:	
  4199                           
  4200                           ;manejoProductos.c: 74:         eeprom_write(tp + 1,lower_8bits);
  4201  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  4202  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  4203  00D0  082E               	movf	agregarModificarPrecio@lower_8bits,w
  4204  00D1  00A4               	movwf	??_agregarModificarPrecio
  4205  00D2  0824               	movf	??_agregarModificarPrecio,w
  4206  00D3  00F4               	movwf	eeprom_write@value
  4207  00D4  0832               	movf	agregarModificarPrecio@tp,w
  4208  00D5  3E01               	addlw	1
  4209  00D6  120A  158A  2574  120A  118A  	fcall	_eeprom_write
  4210                           
  4211                           ;manejoProductos.c: 76:     }
  4212  00DB  293D               	goto	l273
  4213  00DC                     l2626:	
  4214                           
  4215                           ;manejoProductos.c: 78:         precio = 100 * (codigoEntrada[3] - '0')+ 10 * (codigoEnt
      +                          rada[4] - '0') + (codigoEntrada[5] - '0');
  4216  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  4217  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  4218  00DE  0866               	movf	_codigoEntrada+3,w
  4219  00DF  00A4               	movwf	??_agregarModificarPrecio
  4220  00E0  01A5               	clrf	??_agregarModificarPrecio+1
  4221  00E1  0824               	movf	??_agregarModificarPrecio,w
  4222  00E2  00A0               	movwf	___wmul@multiplier
  4223  00E3  0825               	movf	??_agregarModificarPrecio+1,w
  4224  00E4  00A1               	movwf	___wmul@multiplier+1
  4225  00E5  3064               	movlw	100
  4226  00E6  00A2               	movwf	___wmul@multiplicand
  4227  00E7  3000               	movlw	0
  4228  00E8  00A3               	movwf	___wmul@multiplicand+1
  4229  00E9  120A  158A  2523  120A  118A  	fcall	___wmul
  4230  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  4231  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  4232  00F0  0820               	movf	?___wmul,w
  4233  00F1  00A6               	movwf	??_agregarModificarPrecio+2
  4234  00F2  0821               	movf	?___wmul+1,w
  4235  00F3  00A7               	movwf	??_agregarModificarPrecio+3
  4236  00F4  0867               	movf	_codigoEntrada+4,w
  4237  00F5  00A8               	movwf	??_agregarModificarPrecio+4
  4238  00F6  01A9               	clrf	??_agregarModificarPrecio+5
  4239  00F7  0828               	movf	??_agregarModificarPrecio+4,w
  4240  00F8  00A0               	movwf	___wmul@multiplier
  4241  00F9  0829               	movf	??_agregarModificarPrecio+5,w
  4242  00FA  00A1               	movwf	___wmul@multiplier+1
  4243  00FB  300A               	movlw	10
  4244  00FC  00A2               	movwf	___wmul@multiplicand
  4245  00FD  3000               	movlw	0
  4246  00FE  00A3               	movwf	___wmul@multiplicand+1
  4247  00FF  120A  158A  2523  120A  118A  	fcall	___wmul
  4248  0104  1283               	bcf	3,5	;RP0=0, select bank0
  4249  0105  1303               	bcf	3,6	;RP1=0, select bank0
  4250  0106  0820               	movf	?___wmul,w
  4251  0107  0726               	addwf	??_agregarModificarPrecio+2,w
  4252  0108  00AA               	movwf	??_agregarModificarPrecio+6
  4253  0109  0821               	movf	?___wmul+1,w
  4254  010A  1803               	skipnc
  4255  010B  0A21               	incf	?___wmul+1,w
  4256  010C  0727               	addwf	??_agregarModificarPrecio+3,w
  4257  010D  00AB               	movwf	??_agregarModificarPrecio+7
  4258  010E  0868               	movf	_codigoEntrada+5,w
  4259  010F  072A               	addwf	??_agregarModificarPrecio+6,w
  4260  0110  00AC               	movwf	??_agregarModificarPrecio+8
  4261  0111  3000               	movlw	0
  4262  0112  1803               	skipnc
  4263  0113  3001               	movlw	1
  4264  0114  072B               	addwf	??_agregarModificarPrecio+7,w
  4265  0115  00AD               	movwf	??_agregarModificarPrecio+9
  4266  0116  082C               	movf	??_agregarModificarPrecio+8,w
  4267  0117  3E30               	addlw	48
  4268  0118  00B0               	movwf	agregarModificarPrecio@precio
  4269  0119  082D               	movf	??_agregarModificarPrecio+9,w
  4270  011A  1803               	skipnc
  4271  011B  3E01               	addlw	1
  4272  011C  3EEB               	addlw	235
  4273  011D  00B1               	movwf	agregarModificarPrecio@precio+1
  4274  011E                     l2628:	
  4275                           
  4276                           ;manejoProductos.c: 79:         lower_8bits = precio & 0xff;
  4277  011E  0830               	movf	agregarModificarPrecio@precio,w
  4278  011F  00A4               	movwf	??_agregarModificarPrecio
  4279  0120  0824               	movf	??_agregarModificarPrecio,w
  4280  0121  00AE               	movwf	agregarModificarPrecio@lower_8bits
  4281  0122                     l2630:	
  4282                           
  4283                           ;manejoProductos.c: 80:         upper_8bits = (precio >> 8) & 0xff;
  4284  0122  0831               	movf	agregarModificarPrecio@precio+1,w
  4285  0123  00A4               	movwf	??_agregarModificarPrecio
  4286  0124  0824               	movf	??_agregarModificarPrecio,w
  4287  0125  00AF               	movwf	agregarModificarPrecio@upper_8bits
  4288  0126                     l2632:	
  4289                           
  4290                           ;manejoProductos.c: 81:         eeprom_write(tp ,upper_8bits);
  4291  0126  082F               	movf	agregarModificarPrecio@upper_8bits,w
  4292  0127  00A4               	movwf	??_agregarModificarPrecio
  4293  0128  0824               	movf	??_agregarModificarPrecio,w
  4294  0129  00F4               	movwf	eeprom_write@value
  4295  012A  0832               	movf	agregarModificarPrecio@tp,w
  4296  012B  120A  158A  2574  120A  118A  	fcall	_eeprom_write
  4297  0130                     l2634:	
  4298                           
  4299                           ;manejoProductos.c: 82:         eeprom_write(tp + 1,lower_8bits);
  4300  0130  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0131  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0132  082E               	movf	agregarModificarPrecio@lower_8bits,w
  4303  0133  00A4               	movwf	??_agregarModificarPrecio
  4304  0134  0824               	movf	??_agregarModificarPrecio,w
  4305  0135  00F4               	movwf	eeprom_write@value
  4306  0136  0832               	movf	agregarModificarPrecio@tp,w
  4307  0137  3E01               	addlw	1
  4308  0138  120A  158A  2574  120A  118A  	fcall	_eeprom_write
  4309  013D                     l273:	
  4310  013D  0008               	return
  4311  013E                     __end_of_agregarModificarPrecio:	
  4312                           
  4313                           	psect	text17
  4314  0D74                     __ptext17:	
  4315 ;; *************** function _eeprom_write *****************
  4316 ;; Defined at:
  4317 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  addr            1    wreg     unsigned char 
  4320 ;;  value           1    4[COMMON] unsigned char 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  addr            1    0[BANK0 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4332 ;;      Params:         1       0       0       0       0
  4333 ;;      Locals:         0       1       0       0       0
  4334 ;;      Temps:          1       0       0       0       0
  4335 ;;      Totals:         2       1       0       0       0
  4336 ;;Total ram usage:        3 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    1
  4339 ;; This function calls:
  4340 ;;		Nothing
  4341 ;; This function is called by:
  4342 ;;		_agregarModificarPrecio
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           
  4347                           ;psect for function _eeprom_write
  4348  0D74                     _eeprom_write:	
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4352                           ;eeprom_write@addr stored from wreg
  4353  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0D76  00A0               	movwf	eeprom_write@addr
  4356  0D77                     l461:	
  4357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.10
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  4358                           
  4359  0D77                     l462:	
  4360  0D77  1683               	bsf	3,5	;RP0=1, select bank3
  4361  0D78  1703               	bsf	3,6	;RP1=1, select bank3
  4362  0D79  188C               	btfsc	12,1	;volsfr
  4363  0D7A  2D7C               	goto	u2471
  4364  0D7B  2D7D               	goto	u2470
  4365  0D7C                     u2471:	
  4366  0D7C  2D77               	goto	l462
  4367  0D7D                     u2470:	
  4368  0D7D                     l2516:	
  4369  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  4370  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  4371  0D7F  0820               	movf	eeprom_write@addr,w
  4372  0D80  1283               	bcf	3,5	;RP0=0, select bank2
  4373  0D81  1703               	bsf	3,6	;RP1=1, select bank2
  4374  0D82  008D               	movwf	13	;volatile
  4375  0D83  0874               	movf	eeprom_write@value,w
  4376  0D84  008C               	movwf	12	;volatile
  4377  0D85                     l2518:	
  4378  0D85  303F               	movlw	63
  4379  0D86  00F5               	movwf	??_eeprom_write
  4380  0D87  0875               	movf	??_eeprom_write,w
  4381  0D88  1683               	bsf	3,5	;RP0=1, select bank3
  4382  0D89  1703               	bsf	3,6	;RP1=1, select bank3
  4383  0D8A  058C               	andwf	12,f	;volsfr
  4384  0D8B                     l2520:	
  4385  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0D8D  1003               	bcf	3,0	;volatile
  4388  0D8E                     l2522:	
  4389  0D8E  1F8B               	btfss	11,7	;volatile
  4390  0D8F  2D91               	goto	u2481
  4391  0D90  2D92               	goto	u2480
  4392  0D91                     u2481:	
  4393  0D91  2D93               	goto	l465
  4394  0D92                     u2480:	
  4395  0D92                     l2524:	
  4396  0D92  1403               	bsf	3,0	;volatile
  4397  0D93                     l465:	
  4398  0D93  138B               	bcf	11,7	;volatile
  4399  0D94  1683               	bsf	3,5	;RP0=1, select bank3
  4400  0D95  1703               	bsf	3,6	;RP1=1, select bank3
  4401  0D96  150C               	bsf	12,2	;volsfr
  4402  0D97                     l2526:	
  4403  0D97  3055               	movlw	85
  4404  0D98  008D               	movwf	13	;volsfr
  4405  0D99  30AA               	movlw	170
  4406  0D9A  008D               	movwf	13	;volsfr
  4407  0D9B                     l2528:	
  4408  0D9B  148C               	bsf	12,1	;volsfr
  4409  0D9C                     l2530:	
  4410  0D9C  110C               	bcf	12,2	;volsfr
  4411  0D9D                     l2532:	
  4412  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0D9F  1C03               	btfss	3,0	;volatile
  4415  0DA0  2DA2               	goto	u2491
  4416  0DA1  2DA3               	goto	u2490
  4417  0DA2                     u2491:	
  4418  0DA2  2DA4               	goto	l468
  4419  0DA3                     u2490:	
  4420  0DA3                     l2534:	
  4421  0DA3  178B               	bsf	11,7	;volatile
  4422  0DA4                     l468:	
  4423  0DA4  0008               	return
  4424  0DA5                     __end_of_eeprom_write:	
  4425                           
  4426                           	psect	text18
  4427  0CCF                     __ptext18:	
  4428 ;; *************** function ___bmul *****************
  4429 ;; Defined at:
  4430 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  multiplier      1    wreg     unsigned char 
  4433 ;;  multiplicand    1    4[COMMON] unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  multiplier      1    1[BANK0 ] unsigned char 
  4436 ;;  product         1    0[BANK0 ] unsigned char 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      unsigned char 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4446 ;;      Params:         1       0       0       0       0
  4447 ;;      Locals:         0       2       0       0       0
  4448 ;;      Temps:          1       0       0       0       0
  4449 ;;      Totals:         2       2       0       0       0
  4450 ;;Total ram usage:        4 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    1
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_lecturaEtiqueta
  4457 ;;		_agregarModificarPrecio
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function ___bmul
  4463  0CCF                     ___bmul:	
  4464                           
  4465                           ;incstack = 0
  4466                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4467                           ;___bmul@multiplier stored from wreg
  4468  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  4469  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  4470  0CD1  00A1               	movwf	___bmul@multiplier
  4471  0CD2                     l2536:	
  4472  0CD2  01A0               	clrf	___bmul@product
  4473  0CD3                     l2538:	
  4474  0CD3  1C21               	btfss	___bmul@multiplier,0
  4475  0CD4  2CD6               	goto	u2501
  4476  0CD5  2CD7               	goto	u2500
  4477  0CD6                     u2501:	
  4478  0CD6  2CDB               	goto	l2542
  4479  0CD7                     u2500:	
  4480  0CD7                     l2540:	
  4481  0CD7  0874               	movf	___bmul@multiplicand,w
  4482  0CD8  00F5               	movwf	??___bmul
  4483  0CD9  0875               	movf	??___bmul,w
  4484  0CDA  07A0               	addwf	___bmul@product,f
  4485  0CDB                     l2542:	
  4486  0CDB  1003               	clrc
  4487  0CDC  0DF4               	rlf	___bmul@multiplicand,f
  4488  0CDD                     l2544:	
  4489  0CDD  1003               	clrc
  4490  0CDE  0CA1               	rrf	___bmul@multiplier,f
  4491  0CDF  0821               	movf	___bmul@multiplier,w
  4492  0CE0  1D03               	btfss	3,2
  4493  0CE1  2CE3               	goto	u2511
  4494  0CE2  2CE4               	goto	u2510
  4495  0CE3                     u2511:	
  4496  0CE3  2CD3               	goto	l2538
  4497  0CE4                     u2510:	
  4498  0CE4                     l2546:	
  4499  0CE4  0820               	movf	___bmul@product,w
  4500  0CE5                     l526:	
  4501  0CE5  0008               	return
  4502  0CE6                     __end_of___bmul:	
  4503                           
  4504                           	psect	text19
  4505  05AB                     __ptext19:	
  4506 ;; *************** function _lecturaConsulta *****************
  4507 ;; Defined at:
  4508 ;;		line 121 in file "lectura.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  articulo        2    8[BANK0 ] unsigned short 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, pclath, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       0       0       0       0
  4523 ;;      Locals:         0       2       0       0       0
  4524 ;;      Temps:          0       4       0       0       0
  4525 ;;      Totals:         0       6       0       0       0
  4526 ;;Total ram usage:        6 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    3
  4529 ;; This function calls:
  4530 ;;		___wmul
  4531 ;;		_consultaPrecio
  4532 ;; This function is called by:
  4533 ;;		_lecturaComando
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function _lecturaConsulta
  4539  05AB                     _lecturaConsulta:	
  4540  05AB                     l2746:	
  4541                           ;incstack = 0
  4542                           ; Regs used in _lecturaConsulta: [wreg+status,2+status,0+pclath+cstack]
  4543                           
  4544                           
  4545                           ;lectura.c: 123:     if (codigoEntrada[1] == 0x0D || codigoEntrada[1] == 0x0A) {
  4546  05AB  300D               	movlw	13
  4547  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  4548  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  4549  05AE  0664               	xorwf	_codigoEntrada+1,w
  4550  05AF  1903               	btfsc	3,2
  4551  05B0  2DB2               	goto	u2811
  4552  05B1  2DB3               	goto	u2810
  4553  05B2                     u2811:	
  4554  05B2  2DBA               	goto	l2750
  4555  05B3                     u2810:	
  4556  05B3                     l2748:	
  4557  05B3  300A               	movlw	10
  4558  05B4  0664               	xorwf	_codigoEntrada+1,w
  4559  05B5  1D03               	btfss	3,2
  4560  05B6  2DB8               	goto	u2821
  4561  05B7  2DB9               	goto	u2820
  4562  05B8                     u2821:	
  4563  05B8  2DBB               	goto	l2754
  4564  05B9                     u2820:	
  4565  05B9  2E0D               	goto	l224
  4566  05BA                     l2750:	
  4567  05BA  2E0D               	goto	l224
  4568  05BB                     l2754:	
  4569  05BB  304C               	movlw	76
  4570  05BC  0664               	xorwf	_codigoEntrada+1,w
  4571  05BD  1D03               	btfss	3,2
  4572  05BE  2DC0               	goto	u2831
  4573  05BF  2DC1               	goto	u2830
  4574  05C0                     u2831:	
  4575  05C0  2DC2               	goto	l2758
  4576  05C1                     u2830:	
  4577  05C1  2E0D               	goto	l224
  4578  05C2                     l2758:	
  4579  05C2  3056               	movlw	86
  4580  05C3  0664               	xorwf	_codigoEntrada+1,w
  4581  05C4  1D03               	btfss	3,2
  4582  05C5  2DC7               	goto	u2841
  4583  05C6  2DC8               	goto	u2840
  4584  05C7                     u2841:	
  4585  05C7  2DCA               	goto	l2762
  4586  05C8                     u2840:	
  4587  05C8                     l2760:	
  4588                           
  4589                           ;lectura.c: 140:         GO_nDONE = 1;
  4590  05C8  151F               	bsf	31,2	;volatile
  4591                           
  4592                           ;lectura.c: 141:     }
  4593  05C9  2E0D               	goto	l224
  4594  05CA                     l2762:	
  4595  05CA  303A               	movlw	58
  4596  05CB  0264               	subwf	_codigoEntrada+1,w
  4597  05CC  1803               	skipnc
  4598  05CD  2DCF               	goto	u2851
  4599  05CE  2DD0               	goto	u2850
  4600  05CF                     u2851:	
  4601  05CF  2E0D               	goto	l224
  4602  05D0                     u2850:	
  4603  05D0                     l2764:	
  4604  05D0  3030               	movlw	48
  4605  05D1  0264               	subwf	_codigoEntrada+1,w
  4606  05D2  1C03               	skipc
  4607  05D3  2DD5               	goto	u2861
  4608  05D4  2DD6               	goto	u2860
  4609  05D5                     u2861:	
  4610  05D5  2E0D               	goto	l224
  4611  05D6                     u2860:	
  4612  05D6                     l2766:	
  4613  05D6  303A               	movlw	58
  4614  05D7  0265               	subwf	_codigoEntrada+2,w
  4615  05D8  1803               	skipnc
  4616  05D9  2DDB               	goto	u2871
  4617  05DA  2DDC               	goto	u2870
  4618  05DB                     u2871:	
  4619  05DB  2E0D               	goto	l224
  4620  05DC                     u2870:	
  4621  05DC                     l2768:	
  4622  05DC  3030               	movlw	48
  4623  05DD  0265               	subwf	_codigoEntrada+2,w
  4624  05DE  1C03               	skipc
  4625  05DF  2DE1               	goto	u2881
  4626  05E0  2DE2               	goto	u2880
  4627  05E1                     u2881:	
  4628  05E1  2E0D               	goto	l224
  4629  05E2                     u2880:	
  4630  05E2                     l2770:	
  4631                           
  4632                           ;lectura.c: 145:         unsigned short int articulo = 10*(codigoEntrada[1] - '0') + (co
      +                          digoEntrada[2] - '0');
  4633  05E2  0864               	movf	_codigoEntrada+1,w
  4634  05E3  00A4               	movwf	??_lecturaConsulta
  4635  05E4  01A5               	clrf	??_lecturaConsulta+1
  4636  05E5  0824               	movf	??_lecturaConsulta,w
  4637  05E6  00A0               	movwf	___wmul@multiplier
  4638  05E7  0825               	movf	??_lecturaConsulta+1,w
  4639  05E8  00A1               	movwf	___wmul@multiplier+1
  4640  05E9  300A               	movlw	10
  4641  05EA  00A2               	movwf	___wmul@multiplicand
  4642  05EB  3000               	movlw	0
  4643  05EC  00A3               	movwf	___wmul@multiplicand+1
  4644  05ED  120A  158A  2523  120A  118A  	fcall	___wmul
  4645  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  4646  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  4647  05F4  0865               	movf	_codigoEntrada+2,w
  4648  05F5  0720               	addwf	?___wmul,w
  4649  05F6  00A6               	movwf	??_lecturaConsulta+2
  4650  05F7  3000               	movlw	0
  4651  05F8  1803               	skipnc
  4652  05F9  3001               	movlw	1
  4653  05FA  0721               	addwf	?___wmul+1,w
  4654  05FB  00A7               	movwf	??_lecturaConsulta+3
  4655  05FC  0826               	movf	??_lecturaConsulta+2,w
  4656  05FD  3EF0               	addlw	240
  4657  05FE  00A8               	movwf	lecturaConsulta@articulo
  4658  05FF  0827               	movf	??_lecturaConsulta+3,w
  4659  0600  1803               	skipnc
  4660  0601  3E01               	addlw	1
  4661  0602  3EFD               	addlw	253
  4662  0603  00A9               	movwf	lecturaConsulta@articulo+1
  4663                           
  4664                           ;lectura.c: 147:         consultaPrecio(articulo);
  4665  0604  0829               	movf	lecturaConsulta@articulo+1,w
  4666  0605  00A1               	movwf	consultaPrecio@articulo+1
  4667  0606  0828               	movf	lecturaConsulta@articulo,w
  4668  0607  00A0               	movwf	consultaPrecio@articulo
  4669  0608  120A  158A  24E6  120A  118A  	fcall	_consultaPrecio
  4670  060D                     l224:	
  4671  060D  0008               	return
  4672  060E                     __end_of_lecturaConsulta:	
  4673                           
  4674                           	psect	text20
  4675  0CE6                     __ptext20:	
  4676 ;; *************** function _consultaPrecio *****************
  4677 ;; Defined at:
  4678 ;;		line 108 in file "lectura.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  articulo        2    0[BANK0 ] short 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  precio          2    0        short 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0, pclath, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4692 ;;      Params:         0       2       0       0       0
  4693 ;;      Locals:         0       2       0       0       0
  4694 ;;      Temps:          0       0       0       0       0
  4695 ;;      Totals:         0       4       0       0       0
  4696 ;;Total ram usage:        4 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    2
  4699 ;; This function calls:
  4700 ;;		_eeprom_read
  4701 ;; This function is called by:
  4702 ;;		_lecturaConsulta
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _consultaPrecio
  4708  0CE6                     _consultaPrecio:	
  4709  0CE6                     l2636:	
  4710                           ;incstack = 0
  4711                           ; Regs used in _consultaPrecio: [wreg+status,2+status,0+pclath+cstack]
  4712                           
  4713                           
  4714                           ;lectura.c: 109:     articulo--;
  4715  0CE6  30FF               	movlw	255
  4716  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  4717  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  4718  0CE9  07A0               	addwf	consultaPrecio@articulo,f
  4719  0CEA  1803               	skipnc
  4720  0CEB  0AA1               	incf	consultaPrecio@articulo+1,f
  4721  0CEC  30FF               	movlw	255
  4722  0CED  07A1               	addwf	consultaPrecio@articulo+1,f
  4723                           
  4724                           ;lectura.c: 110:     articulo = articulo * 2;
  4725  0CEE  1003               	clrc
  4726  0CEF  0D20               	rlf	consultaPrecio@articulo,w
  4727  0CF0  00A0               	movwf	consultaPrecio@articulo
  4728  0CF1  0D21               	rlf	consultaPrecio@articulo+1,w
  4729  0CF2  00A1               	movwf	consultaPrecio@articulo+1
  4730  0CF3                     l2638:	
  4731  0CF3  0820               	movf	consultaPrecio@articulo,w
  4732  0CF4  120A  158A  24B8  120A  158A  	fcall	_eeprom_read
  4733  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  4734  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  4735  0CFB  0820               	movf	consultaPrecio@articulo,w
  4736  0CFC  3E01               	addlw	1
  4737  0CFD  120A  158A  24B8  120A  158A  	fcall	_eeprom_read
  4738  0D02                     l210:	
  4739  0D02  0008               	return
  4740  0D03                     __end_of_consultaPrecio:	
  4741                           
  4742                           	psect	text21
  4743  0CB8                     __ptext21:	
  4744 ;; *************** function _eeprom_read *****************
  4745 ;; Defined at:
  4746 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  addr            1    wreg     unsigned char 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  addr            1    5[COMMON] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      unsigned char 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4760 ;;      Params:         0       0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0
  4762 ;;      Temps:          1       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_EEPROM_search
  4771 ;;		_consultaPrecio
  4772 ;;		_agregarModificarPrecio
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function _eeprom_read
  4778  0CB8                     _eeprom_read:	
  4779                           
  4780                           ;incstack = 0
  4781                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4782                           ;eeprom_read@addr stored from wreg
  4783  0CB8  00F5               	movwf	eeprom_read@addr
  4784  0CB9                     l442:	
  4785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  4786                           
  4787  0CB9  0064               	clrwdt	;# 
  4788  0CBA  1683               	bsf	3,5	;RP0=1, select bank3
  4789  0CBB  1703               	bsf	3,6	;RP1=1, select bank3
  4790  0CBC  188C               	btfsc	12,1	;volsfr
  4791  0CBD  2CBF               	goto	u2441
  4792  0CBE  2CC0               	goto	u2440
  4793  0CBF                     u2441:	
  4794  0CBF  2CB9               	goto	l442
  4795  0CC0                     u2440:	
  4796  0CC0                     l2496:	
  4797                           
  4798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4799  0CC0  0875               	movf	eeprom_read@addr,w
  4800  0CC1  1283               	bcf	3,5	;RP0=0, select bank2
  4801  0CC2  1703               	bsf	3,6	;RP1=1, select bank2
  4802  0CC3  008D               	movwf	13	;volatile
  4803  0CC4  303F               	movlw	63
  4804  0CC5  00F4               	movwf	??_eeprom_read
  4805  0CC6  0874               	movf	??_eeprom_read,w
  4806  0CC7  1683               	bsf	3,5	;RP0=1, select bank3
  4807  0CC8  1703               	bsf	3,6	;RP1=1, select bank3
  4808  0CC9  058C               	andwf	12,f	;volsfr
  4809  0CCA  140C               	bsf	12,0	;volsfr
  4810  0CCB  1283               	bcf	3,5	;RP0=0, select bank2
  4811  0CCC  1703               	bsf	3,6	;RP1=1, select bank2
  4812  0CCD  080C               	movf	12,w	;volatile
  4813  0CCE                     l444:	
  4814  0CCE  0008               	return
  4815  0CCF                     __end_of_eeprom_read:	
  4816                           
  4817                           	psect	text22
  4818  0E7C                     __ptext22:	
  4819 ;; *************** function _accionesDeshacer *****************
  4820 ;; Defined at:
  4821 ;;		line 16 in file "acciones.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4835 ;;      Params:         0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0
  4838 ;;      Totals:         0       0       0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    4
  4842 ;; This function calls:
  4843 ;;		_eliminarProd
  4844 ;;		_mostrarDigitos
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _accionesDeshacer
  4852  0E7C                     _accionesDeshacer:	
  4853  0E7C                     l2924:	
  4854                           ;incstack = 0
  4855                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4856                           
  4857                           
  4858                           ;acciones.c: 17:     if (cuenta != auxCuenta) {
  4859  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  4861  0E7E  0861               	movf	_auxCuenta+1,w
  4862  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  4863  0E80  1303               	bcf	3,6	;RP1=0, select bank1
  4864  0E81  0649               	xorwf	(_cuenta+1)^(0+128),w
  4865  0E82  1D03               	skipz
  4866  0E83  2E8A               	goto	u3085
  4867  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  4869  0E86  0860               	movf	_auxCuenta,w
  4870  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0E89  0648               	xorwf	_cuenta^(0+128),w
  4873  0E8A                     u3085:	
  4874  0E8A  1903               	skipnz
  4875  0E8B  2E8D               	goto	u3081
  4876  0E8C  2E8E               	goto	u3080
  4877  0E8D                     u3081:	
  4878  0E8D  2EB6               	goto	l340
  4879  0E8E                     u3080:	
  4880  0E8E                     l2926:	
  4881                           
  4882                           ;acciones.c: 18:         cuenta = auxCuenta;
  4883  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  4884  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  4885  0E90  0861               	movf	_auxCuenta+1,w
  4886  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  4887  0E92  1303               	bcf	3,6	;RP1=0, select bank1
  4888  0E93  00C9               	movwf	(_cuenta+1)^(0+128)
  4889  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  4890  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  4891  0E96  0860               	movf	_auxCuenta,w
  4892  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0E99  00C8               	movwf	_cuenta^(0+128)
  4895  0E9A                     l2928:	
  4896                           
  4897                           ;acciones.c: 20:         eliminarProd(productoIngresado);
  4898  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  4900  0E9C  085F               	movf	_productoIngresado+1,w
  4901  0E9D  00AD               	movwf	eliminarProd@tp+1
  4902  0E9E  085E               	movf	_productoIngresado,w
  4903  0E9F  00AC               	movwf	eliminarProd@tp
  4904  0EA0  120A  118A  26D2  120A  158A  	fcall	_eliminarProd
  4905  0EA5                     l2930:	
  4906                           
  4907                           ;acciones.c: 21:         mostrarDigitos(cuenta);
  4908  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  4909  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  4910  0EA7  0849               	movf	(_cuenta+1)^(0+128),w
  4911  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  4912  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  4913  0EAA  00AD               	movwf	mostrarDigitos@num+1
  4914  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  4915  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  4916  0EAD  0848               	movf	_cuenta^(0+128),w
  4917  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  4918  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  4919  0EB0  00AC               	movwf	mostrarDigitos@num
  4920  0EB1  120A  118A  24E0  120A  158A  	fcall	_mostrarDigitos
  4921  0EB6                     l340:	
  4922  0EB6  0008               	return
  4923  0EB7                     __end_of_accionesDeshacer:	
  4924                           
  4925                           	psect	text23
  4926  06D2                     __ptext23:	
  4927 ;; *************** function _eliminarProd *****************
  4928 ;; Defined at:
  4929 ;;		line 47 in file "manejoProductos.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  tp              2   12[BANK0 ] short 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  i               2   17[BANK0 ] short 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4943 ;;      Params:         0       2       0       0       0
  4944 ;;      Locals:         0       2       0       0       0
  4945 ;;      Temps:          0       3       0       0       0
  4946 ;;      Totals:         0       7       0       0       0
  4947 ;;Total ram usage:        7 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    3
  4950 ;; This function calls:
  4951 ;;		_pow
  4952 ;; This function is called by:
  4953 ;;		_accionesDeshacer
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           
  4958                           ;psect for function _eliminarProd
  4959  06D2                     _eliminarProd:	
  4960  06D2                     l2868:	
  4961                           ;incstack = 0
  4962                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4963                           
  4964                           
  4965                           ;manejoProductos.c: 48:         for(short int i = 12; i>=0; i--) {
  4966  06D2  300C               	movlw	12
  4967  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  4968  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  4969  06D5  00B1               	movwf	eliminarProd@i
  4970  06D6  3000               	movlw	0
  4971  06D7  00B2               	movwf	eliminarProd@i+1
  4972  06D8                     l2874:	
  4973                           
  4974                           ;manejoProductos.c: 49:         if( tp >= 8*i) {
  4975  06D8  0832               	movf	eliminarProd@i+1,w
  4976  06D9  00AF               	movwf	??_eliminarProd+1
  4977  06DA  0831               	movf	eliminarProd@i,w
  4978  06DB  00AE               	movwf	??_eliminarProd
  4979  06DC  1003               	clrc
  4980  06DD  0DAE               	rlf	??_eliminarProd,f
  4981  06DE  0DAF               	rlf	??_eliminarProd+1,f
  4982  06DF  1003               	clrc
  4983  06E0  0DAE               	rlf	??_eliminarProd,f
  4984  06E1  0DAF               	rlf	??_eliminarProd+1,f
  4985  06E2  1003               	clrc
  4986  06E3  0DAE               	rlf	??_eliminarProd,f
  4987  06E4  0DAF               	rlf	??_eliminarProd+1,f
  4988  06E5  082D               	movf	eliminarProd@tp+1,w
  4989  06E6  3A80               	xorlw	128
  4990  06E7  00B0               	movwf	??_eliminarProd+2
  4991  06E8  082F               	movf	??_eliminarProd+1,w
  4992  06E9  3A80               	xorlw	128
  4993  06EA  0230               	subwf	??_eliminarProd+2,w
  4994  06EB  1D03               	skipz
  4995  06EC  2EEF               	goto	u3045
  4996  06ED  082E               	movf	??_eliminarProd,w
  4997  06EE  022C               	subwf	eliminarProd@tp,w
  4998  06EF                     u3045:	
  4999  06EF  1C03               	skipc
  5000  06F0  2EF2               	goto	u3041
  5001  06F1  2EF3               	goto	u3040
  5002  06F2                     u3041:	
  5003  06F2  2F27               	goto	l2882
  5004  06F3                     u3040:	
  5005  06F3                     l2876:	
  5006                           
  5007                           ;manejoProductos.c: 51:             tp = tp - 8*i;
  5008  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  5009  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  5010  06F5  0832               	movf	eliminarProd@i+1,w
  5011  06F6  00AF               	movwf	??_eliminarProd+1
  5012  06F7  0831               	movf	eliminarProd@i,w
  5013  06F8  00AE               	movwf	??_eliminarProd
  5014  06F9  1003               	clrc
  5015  06FA  0DAE               	rlf	??_eliminarProd,f
  5016  06FB  0DAF               	rlf	??_eliminarProd+1,f
  5017  06FC  1003               	clrc
  5018  06FD  0DAE               	rlf	??_eliminarProd,f
  5019  06FE  0DAF               	rlf	??_eliminarProd+1,f
  5020  06FF  1003               	clrc
  5021  0700  0DAE               	rlf	??_eliminarProd,f
  5022  0701  0DAF               	rlf	??_eliminarProd+1,f
  5023  0702  082E               	movf	??_eliminarProd,w
  5024  0703  022C               	subwf	eliminarProd@tp,w
  5025  0704  00AC               	movwf	eliminarProd@tp
  5026  0705  082F               	movf	??_eliminarProd+1,w
  5027  0706  1C03               	skipc
  5028  0707  0A2F               	incf	??_eliminarProd+1,w
  5029  0708  022D               	subwf	eliminarProd@tp+1,w
  5030  0709  00AD               	movwf	eliminarProd@tp+1
  5031  070A                     l2878:	
  5032                           
  5033                           ;manejoProductos.c: 52:             prodIngresados[i] = prodIngresados[i] ^ pow(2,tp);
  5034  070A  0831               	movf	eliminarProd@i,w
  5035  070B  3EB7               	addlw	(low (_prodIngresados| 0))& (0+255)
  5036  070C  0084               	movwf	4
  5037  070D  3002               	movlw	2
  5038  070E  00A4               	movwf	pow@numero
  5039  070F  3000               	movlw	0
  5040  0710  00A5               	movwf	pow@numero+1
  5041  0711  082D               	movf	eliminarProd@tp+1,w
  5042  0712  00A7               	movwf	pow@potencia+1
  5043  0713  082C               	movf	eliminarProd@tp,w
  5044  0714  00A6               	movwf	pow@potencia
  5045  0715  120A  158A  2642  120A  118A  	fcall	_pow
  5046  071A  1283               	bcf	3,5	;RP0=0, select bank0
  5047  071B  1303               	bcf	3,6	;RP1=0, select bank0
  5048  071C  0824               	movf	?_pow,w
  5049  071D  1383               	bcf	3,7	;select IRP bank1
  5050  071E  0600               	xorwf	0,w
  5051  071F  00AE               	movwf	??_eliminarProd
  5052  0720  0831               	movf	eliminarProd@i,w
  5053  0721  3EB7               	addlw	(low (_prodIngresados| 0))& (0+255)
  5054  0722  0084               	movwf	4
  5055  0723  082E               	movf	??_eliminarProd,w
  5056  0724  0080               	movwf	0
  5057  0725                     l2880:	
  5058                           
  5059                           ;manejoProductos.c: 53:             i = 0;
  5060  0725  01B1               	clrf	eliminarProd@i
  5061  0726  01B2               	clrf	eliminarProd@i+1
  5062  0727                     l2882:	
  5063                           
  5064                           ;manejoProductos.c: 56:     }
  5065  0727  30FF               	movlw	255
  5066  0728  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0729  1303               	bcf	3,6	;RP1=0, select bank0
  5068  072A  07B1               	addwf	eliminarProd@i,f
  5069  072B  1803               	skipnc
  5070  072C  0AB2               	incf	eliminarProd@i+1,f
  5071  072D  30FF               	movlw	255
  5072  072E  07B2               	addwf	eliminarProd@i+1,f
  5073  072F                     l2884:	
  5074  072F  1FB2               	btfss	eliminarProd@i+1,7
  5075  0730  2F32               	goto	u3051
  5076  0731  2F33               	goto	u3050
  5077  0732                     u3051:	
  5078  0732  2ED8               	goto	l2874
  5079  0733                     u3050:	
  5080  0733                     l266:	
  5081  0733  0008               	return
  5082  0734                     __end_of_eliminarProd:	
  5083                           
  5084                           	psect	text24
  5085  0E42                     __ptext24:	
  5086 ;; *************** function _pow *****************
  5087 ;; Defined at:
  5088 ;;		line 3 in file "manejoProductos.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  numero          2    4[BANK0 ] unsigned int 
  5091 ;;  potencia        2    6[BANK0 ] unsigned int 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  i               2    8[BANK0 ] int 
  5094 ;;  resultado       2   10[BANK0 ] unsigned int 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  2    4[BANK0 ] unsigned int 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5104 ;;      Params:         0       4       0       0       0
  5105 ;;      Locals:         0       4       0       0       0
  5106 ;;      Temps:          0       0       0       0       0
  5107 ;;      Totals:         0       8       0       0       0
  5108 ;;Total ram usage:        8 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    2
  5111 ;; This function calls:
  5112 ;;		___wmul
  5113 ;; This function is called by:
  5114 ;;		_ingresoProd
  5115 ;;		_verificarProd
  5116 ;;		_eliminarProd
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _pow
  5122  0E42                     _pow:	
  5123  0E42                     l2500:	
  5124                           ;incstack = 0
  5125                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  5126                           
  5127                           
  5128                           ;manejoProductos.c: 4:     unsigned int resultado = 0;
  5129  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0E44  01AA               	clrf	pow@resultado
  5132  0E45  01AB               	clrf	pow@resultado+1
  5133                           
  5134                           ;manejoProductos.c: 6:     for (int i = 0; i <= potencia; i++){
  5135  0E46  01A8               	clrf	pow@i
  5136  0E47  01A9               	clrf	pow@i+1
  5137  0E48  2E6D               	goto	l2510
  5138  0E49                     l2502:	
  5139                           
  5140                           ;manejoProductos.c: 7:         if (i == 0){
  5141  0E49  0828               	movf	pow@i,w
  5142  0E4A  0429               	iorwf	pow@i+1,w
  5143  0E4B  1D03               	btfss	3,2
  5144  0E4C  2E4E               	goto	u2451
  5145  0E4D  2E4F               	goto	u2450
  5146  0E4E                     u2451:	
  5147  0E4E  2E54               	goto	l2506
  5148  0E4F                     u2450:	
  5149  0E4F                     l2504:	
  5150                           
  5151                           ;manejoProductos.c: 8:         resultado = 1;
  5152  0E4F  3001               	movlw	1
  5153  0E50  00AA               	movwf	pow@resultado
  5154  0E51  3000               	movlw	0
  5155  0E52  00AB               	movwf	pow@resultado+1
  5156                           
  5157                           ;manejoProductos.c: 9:         }
  5158  0E53  2E67               	goto	l2508
  5159  0E54                     l2506:	
  5160                           
  5161                           ;manejoProductos.c: 11:             resultado = resultado * numero;
  5162  0E54  082B               	movf	pow@resultado+1,w
  5163  0E55  00A1               	movwf	___wmul@multiplier+1
  5164  0E56  082A               	movf	pow@resultado,w
  5165  0E57  00A0               	movwf	___wmul@multiplier
  5166  0E58  0825               	movf	pow@numero+1,w
  5167  0E59  00A3               	movwf	___wmul@multiplicand+1
  5168  0E5A  0824               	movf	pow@numero,w
  5169  0E5B  00A2               	movwf	___wmul@multiplicand
  5170  0E5C  120A  158A  2523  120A  158A  	fcall	___wmul
  5171  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0E63  0821               	movf	?___wmul+1,w
  5174  0E64  00AB               	movwf	pow@resultado+1
  5175  0E65  0820               	movf	?___wmul,w
  5176  0E66  00AA               	movwf	pow@resultado
  5177  0E67                     l2508:	
  5178                           
  5179                           ;manejoProductos.c: 13:     }
  5180  0E67  3001               	movlw	1
  5181  0E68  07A8               	addwf	pow@i,f
  5182  0E69  1803               	skipnc
  5183  0E6A  0AA9               	incf	pow@i+1,f
  5184  0E6B  3000               	movlw	0
  5185  0E6C  07A9               	addwf	pow@i+1,f
  5186  0E6D                     l2510:	
  5187  0E6D  0829               	movf	pow@i+1,w
  5188  0E6E  0227               	subwf	pow@potencia+1,w
  5189  0E6F  1D03               	skipz
  5190  0E70  2E73               	goto	u2465
  5191  0E71  0828               	movf	pow@i,w
  5192  0E72  0226               	subwf	pow@potencia,w
  5193  0E73                     u2465:	
  5194  0E73  1803               	skipnc
  5195  0E74  2E76               	goto	u2461
  5196  0E75  2E77               	goto	u2460
  5197  0E76                     u2461:	
  5198  0E76  2E49               	goto	l2502
  5199  0E77                     u2460:	
  5200  0E77                     l2512:	
  5201                           
  5202                           ;manejoProductos.c: 14:     return resultado;
  5203  0E77  082B               	movf	pow@resultado+1,w
  5204  0E78  00A5               	movwf	?_pow+1
  5205  0E79  082A               	movf	pow@resultado,w
  5206  0E7A  00A4               	movwf	?_pow
  5207  0E7B                     l247:	
  5208  0E7B  0008               	return
  5209  0E7C                     __end_of_pow:	
  5210                           
  5211                           	psect	text25
  5212  0D23                     __ptext25:	
  5213 ;; *************** function ___wmul *****************
  5214 ;; Defined at:
  5215 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5218 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  product         2    4[COMMON] unsigned int 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  2    0[BANK0 ] unsigned int 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         0       4       0       0       0
  5231 ;;      Locals:         2       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0
  5233 ;;      Totals:         2       4       0       0       0
  5234 ;;Total ram usage:        6 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_main
  5241 ;;		_lecturaConsulta
  5242 ;;		_pow
  5243 ;;		_agregarModificarPrecio
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function ___wmul
  5249  0D23                     ___wmul:	
  5250  0D23                     l2386:	
  5251                           ;incstack = 0
  5252                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5253                           
  5254  0D23  01F4               	clrf	___wmul@product
  5255  0D24  01F5               	clrf	___wmul@product+1
  5256  0D25                     l2388:	
  5257  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0D27  1C20               	btfss	___wmul@multiplier,0
  5260  0D28  2D2A               	goto	u2241
  5261  0D29  2D2B               	goto	u2240
  5262  0D2A                     u2241:	
  5263  0D2A  2D31               	goto	l500
  5264  0D2B                     u2240:	
  5265  0D2B                     l2390:	
  5266  0D2B  0822               	movf	___wmul@multiplicand,w
  5267  0D2C  07F4               	addwf	___wmul@product,f
  5268  0D2D  1803               	skipnc
  5269  0D2E  0AF5               	incf	___wmul@product+1,f
  5270  0D2F  0823               	movf	___wmul@multiplicand+1,w
  5271  0D30  07F5               	addwf	___wmul@product+1,f
  5272  0D31                     l500:	
  5273  0D31  3001               	movlw	1
  5274  0D32                     u2255:	
  5275  0D32  1003               	clrc
  5276  0D33  0DA2               	rlf	___wmul@multiplicand,f
  5277  0D34  0DA3               	rlf	___wmul@multiplicand+1,f
  5278  0D35  3EFF               	addlw	-1
  5279  0D36  1D03               	skipz
  5280  0D37  2D32               	goto	u2255
  5281  0D38                     l2392:	
  5282  0D38  3001               	movlw	1
  5283  0D39                     u2265:	
  5284  0D39  1003               	clrc
  5285  0D3A  0CA1               	rrf	___wmul@multiplier+1,f
  5286  0D3B  0CA0               	rrf	___wmul@multiplier,f
  5287  0D3C  3EFF               	addlw	-1
  5288  0D3D  1D03               	skipz
  5289  0D3E  2D39               	goto	u2265
  5290  0D3F                     l2394:	
  5291  0D3F  0820               	movf	___wmul@multiplier,w
  5292  0D40  0421               	iorwf	___wmul@multiplier+1,w
  5293  0D41  1D03               	btfss	3,2
  5294  0D42  2D44               	goto	u2271
  5295  0D43  2D45               	goto	u2270
  5296  0D44                     u2271:	
  5297  0D44  2D25               	goto	l2388
  5298  0D45                     u2270:	
  5299  0D45                     l2396:	
  5300  0D45  0875               	movf	___wmul@product+1,w
  5301  0D46  00A1               	movwf	?___wmul+1
  5302  0D47  0874               	movf	___wmul@product,w
  5303  0D48  00A0               	movwf	?___wmul
  5304  0D49                     l502:	
  5305  0D49  0008               	return
  5306  0D4A                     __end_of___wmul:	
  5307                           
  5308                           	psect	text26
  5309  0FB9                     __ptext26:	
  5310 ;; *************** function _accionesAceptar *****************
  5311 ;; Defined at:
  5312 ;;		line 3 in file "acciones.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  i               2   17[BANK0 ] short 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5326 ;;      Params:         0       0       0       0       0
  5327 ;;      Locals:         0       2       0       0       0
  5328 ;;      Temps:          0       1       0       0       0
  5329 ;;      Totals:         0       3       0       0       0
  5330 ;;Total ram usage:        3 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    3
  5333 ;; This function calls:
  5334 ;;		_bailenLeds
  5335 ;;		_mostrarDigitos
  5336 ;; This function is called by:
  5337 ;;		_main
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function _accionesAceptar
  5343  0FB9                     _accionesAceptar:	
  5344  0FB9                     l2900:	
  5345                           ;incstack = 0
  5346                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5347                           
  5348                           
  5349                           ;acciones.c: 5:     ventasLote++;
  5350  0FB9  3001               	movlw	1
  5351  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0FBC  00B0               	movwf	??_accionesAceptar
  5354  0FBD  0830               	movf	??_accionesAceptar,w
  5355  0FBE  07ED               	addwf	_ventasLote,f
  5356  0FBF                     l2902:	
  5357                           
  5358                           ;acciones.c: 6:     montosLote+=cuenta;
  5359  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  5360  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  5361  0FC1  0848               	movf	_cuenta^(0+128),w
  5362  0FC2  07F8               	addwf	_montosLote,f
  5363  0FC3  1803               	skipnc
  5364  0FC4  0AF9               	incf	_montosLote+1,f
  5365  0FC5  0849               	movf	(_cuenta+1)^(0+128),w
  5366  0FC6  07F9               	addwf	_montosLote+1,f
  5367  0FC7                     l2904:	
  5368                           
  5369                           ;acciones.c: 7:     cuenta = 0;
  5370  0FC7  01C8               	clrf	_cuenta^(0+128)
  5371  0FC8  01C9               	clrf	(_cuenta+1)^(0+128)
  5372  0FC9                     l2906:	
  5373                           
  5374                           ;acciones.c: 8:     auxCuenta = 0;
  5375  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0FCB  01E0               	clrf	_auxCuenta
  5378  0FCC  01E1               	clrf	_auxCuenta+1
  5379  0FCD                     l2908:	
  5380                           
  5381                           ;acciones.c: 9:     for(short int i = 0; i < 13; i++){
  5382  0FCD  01B1               	clrf	accionesAceptar@i
  5383  0FCE  01B2               	clrf	accionesAceptar@i+1
  5384  0FCF                     l2914:	
  5385                           
  5386                           ;acciones.c: 10:         prodIngresados[i] = 0;
  5387  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0FD1  0831               	movf	accionesAceptar@i,w
  5390  0FD2  3EB7               	addlw	(low (_prodIngresados| 0))& (0+255)
  5391  0FD3  0084               	movwf	4
  5392  0FD4  1383               	bcf	3,7	;select IRP bank1
  5393  0FD5  0180               	clrf	0
  5394  0FD6                     l2916:	
  5395                           
  5396                           ;acciones.c: 11:     }
  5397  0FD6  3001               	movlw	1
  5398  0FD7  07B1               	addwf	accionesAceptar@i,f
  5399  0FD8  1803               	skipnc
  5400  0FD9  0AB2               	incf	accionesAceptar@i+1,f
  5401  0FDA  3000               	movlw	0
  5402  0FDB  07B2               	addwf	accionesAceptar@i+1,f
  5403  0FDC                     l2918:	
  5404  0FDC  0832               	movf	accionesAceptar@i+1,w
  5405  0FDD  3A80               	xorlw	128
  5406  0FDE  00FF               	movwf	btemp+1
  5407  0FDF  3080               	movlw	128
  5408  0FE0  027F               	subwf	btemp+1,w
  5409  0FE1  1D03               	skipz
  5410  0FE2  2FE5               	goto	u3075
  5411  0FE3  300D               	movlw	13
  5412  0FE4  0231               	subwf	accionesAceptar@i,w
  5413  0FE5                     u3075:	
  5414  0FE5  1C03               	skipc
  5415  0FE6  2FE8               	goto	u3071
  5416  0FE7  2FE9               	goto	u3070
  5417  0FE8                     u3071:	
  5418  0FE8  2FCF               	goto	l2914
  5419  0FE9                     u3070:	
  5420  0FE9                     l2920:	
  5421                           
  5422                           ;acciones.c: 12:     mostrarDigitos(cuenta);
  5423  0FE9  1683               	bsf	3,5	;RP0=1, select bank1
  5424  0FEA  1303               	bcf	3,6	;RP1=0, select bank1
  5425  0FEB  0849               	movf	(_cuenta+1)^(0+128),w
  5426  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0FEE  00AD               	movwf	mostrarDigitos@num+1
  5429  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  5430  0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  5431  0FF1  0848               	movf	_cuenta^(0+128),w
  5432  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0FF4  00AC               	movwf	mostrarDigitos@num
  5435  0FF5  120A  118A  24E0  120A  158A  	fcall	_mostrarDigitos
  5436  0FFA                     l2922:	
  5437                           
  5438                           ;acciones.c: 13:     bailenLeds();
  5439  0FFA  120A  118A  278F  120A  158A  	fcall	_bailenLeds
  5440  0FFF                     l336:	
  5441  0FFF  0008               	return
  5442  1000                     __end_of_accionesAceptar:	
  5443                           
  5444                           	psect	text27
  5445  04E0                     __ptext27:	
  5446 ;; *************** function _mostrarDigitos *****************
  5447 ;; Defined at:
  5448 ;;		line 17 in file "mostrarInicializar.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  num             2   12[BANK0 ] unsigned int 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5462 ;;      Params:         0       2       0       0       0
  5463 ;;      Locals:         0       2       0       0       0
  5464 ;;      Temps:          0       0       0       0       0
  5465 ;;      Totals:         0       4       0       0       0
  5466 ;;Total ram usage:        4 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    2
  5469 ;; This function calls:
  5470 ;;		___lwdiv
  5471 ;;		___lwmod
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;;		_lecturaEtiqueta
  5475 ;;		_accionesAceptar
  5476 ;;		_accionesDeshacer
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function _mostrarDigitos
  5482  04E0                     _mostrarDigitos:	
  5483  04E0                     l2688:	
  5484                           ;incstack = 0
  5485                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5486                           
  5487                           
  5488                           ;mostrarInicializar.c: 19:     PORTB = BMS[num/100];
  5489  04E0  3064               	movlw	100
  5490  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  5491  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  5492  04E3  00A0               	movwf	___lwdiv@divisor
  5493  04E4  3000               	movlw	0
  5494  04E5  00A1               	movwf	___lwdiv@divisor+1
  5495  04E6  082D               	movf	mostrarDigitos@num+1,w
  5496  04E7  00A3               	movwf	___lwdiv@dividend+1
  5497  04E8  082C               	movf	mostrarDigitos@num,w
  5498  04E9  00A2               	movwf	___lwdiv@dividend
  5499  04EA  120A  158A  2773  120A  118A  	fcall	___lwdiv
  5500  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  5501  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  5502  04F1  0820               	movf	?___lwdiv,w
  5503  04F2  3E0B               	addlw	low ((_BMS-__stringbase)| (0+32768))
  5504  04F3  0084               	movwf	4
  5505  04F4  120A  118A  2618  120A  118A  	fcall	stringdir
  5506  04F9  0086               	movwf	6	;volatile
  5507  04FA                     l2690:	
  5508                           
  5509                           ;mostrarInicializar.c: 20:     PORTB = PORTB | ((num%100)/10);
  5510  04FA  300A               	movlw	10
  5511  04FB  00A0               	movwf	___lwdiv@divisor
  5512  04FC  3000               	movlw	0
  5513  04FD  00A1               	movwf	___lwdiv@divisor+1
  5514  04FE  082D               	movf	mostrarDigitos@num+1,w
  5515  04FF  00AA               	movwf	___lwmod@dividend+1
  5516  0500  082C               	movf	mostrarDigitos@num,w
  5517  0501  00A9               	movwf	___lwmod@dividend
  5518  0502  3064               	movlw	100
  5519  0503  00A7               	movwf	___lwmod@divisor
  5520  0504  3000               	movlw	0
  5521  0505  00A8               	movwf	___lwmod@divisor+1
  5522  0506  120A  158A  26B7  120A  118A  	fcall	___lwmod
  5523  050B  1283               	bcf	3,5	;RP0=0, select bank0
  5524  050C  1303               	bcf	3,6	;RP1=0, select bank0
  5525  050D  0828               	movf	?___lwmod+1,w
  5526  050E  00A3               	movwf	___lwdiv@dividend+1
  5527  050F  0827               	movf	?___lwmod,w
  5528  0510  00A2               	movwf	___lwdiv@dividend
  5529  0511  120A  158A  2773  120A  118A  	fcall	___lwdiv
  5530  0516  1283               	bcf	3,5	;RP0=0, select bank0
  5531  0517  1303               	bcf	3,6	;RP1=0, select bank0
  5532  0518  0820               	movf	?___lwdiv,w
  5533  0519  0406               	iorwf	6,w
  5534  051A  0086               	movwf	6	;volatile
  5535  051B                     l2692:	
  5536                           
  5537                           ;mostrarInicializar.c: 21:     PORTD = BMS[(num%100)%10];
  5538  051B  082D               	movf	mostrarDigitos@num+1,w
  5539  051C  00AA               	movwf	___lwmod@dividend+1
  5540  051D  082C               	movf	mostrarDigitos@num,w
  5541  051E  00A9               	movwf	___lwmod@dividend
  5542  051F  3064               	movlw	100
  5543  0520  00A7               	movwf	___lwmod@divisor
  5544  0521  3000               	movlw	0
  5545  0522  00A8               	movwf	___lwmod@divisor+1
  5546  0523  120A  158A  26B7  120A  118A  	fcall	___lwmod
  5547  0528  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0529  1303               	bcf	3,6	;RP1=0, select bank0
  5549  052A  0828               	movf	?___lwmod+1,w
  5550  052B  00AF               	movwf	_mostrarDigitos$967+1
  5551  052C  0827               	movf	?___lwmod,w
  5552  052D  00AE               	movwf	_mostrarDigitos$967
  5553                           
  5554                           ;mostrarInicializar.c: 21:     PORTD = BMS[(num%100)%10];
  5555  052E  300A               	movlw	10
  5556  052F  00A7               	movwf	___lwmod@divisor
  5557  0530  3000               	movlw	0
  5558  0531  00A8               	movwf	___lwmod@divisor+1
  5559  0532  082F               	movf	_mostrarDigitos$967+1,w
  5560  0533  00AA               	movwf	___lwmod@dividend+1
  5561  0534  082E               	movf	_mostrarDigitos$967,w
  5562  0535  00A9               	movwf	___lwmod@dividend
  5563  0536  120A  158A  26B7  120A  118A  	fcall	___lwmod
  5564  053B  1283               	bcf	3,5	;RP0=0, select bank0
  5565  053C  1303               	bcf	3,6	;RP1=0, select bank0
  5566  053D  0827               	movf	?___lwmod,w
  5567  053E  3E0B               	addlw	low ((_BMS-__stringbase)| (0+32768))
  5568  053F  0084               	movwf	4
  5569  0540  120A  118A  2618  120A  118A  	fcall	stringdir
  5570  0545  0088               	movwf	8	;volatile
  5571  0546                     l292:	
  5572  0546  0008               	return
  5573  0547                     __end_of_mostrarDigitos:	
  5574                           
  5575                           	psect	text28
  5576  0EB7                     __ptext28:	
  5577 ;; *************** function ___lwmod *****************
  5578 ;; Defined at:
  5579 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  divisor         2    7[BANK0 ] unsigned int 
  5582 ;;  dividend        2    9[BANK0 ] unsigned int 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  counter         1   11[BANK0 ] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  2    7[BANK0 ] unsigned int 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5594 ;;      Params:         0       4       0       0       0
  5595 ;;      Locals:         0       1       0       0       0
  5596 ;;      Temps:          1       0       0       0       0
  5597 ;;      Totals:         1       5       0       0       0
  5598 ;;Total ram usage:        6 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    1
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_main
  5605 ;;		_mostrarDigitos
  5606 ;;		_sprintf
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           
  5611                           ;psect for function ___lwmod
  5612  0EB7                     ___lwmod:	
  5613  0EB7                     l1744:	
  5614                           ;incstack = 0
  5615                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5616                           
  5617  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0EB9  0827               	movf	___lwmod@divisor,w
  5620  0EBA  0428               	iorwf	___lwmod@divisor+1,w
  5621  0EBB  1903               	btfsc	3,2
  5622  0EBC  2EBE               	goto	u1241
  5623  0EBD  2EBF               	goto	u1240
  5624  0EBE                     u1241:	
  5625  0EBE  2EEE               	goto	l1762
  5626  0EBF                     u1240:	
  5627  0EBF                     l1746:	
  5628  0EBF  01AB               	clrf	___lwmod@counter
  5629  0EC0  0AAB               	incf	___lwmod@counter,f
  5630  0EC1  2ECD               	goto	l1752
  5631  0EC2                     l1748:	
  5632  0EC2  3001               	movlw	1
  5633  0EC3                     u1255:	
  5634  0EC3  1003               	clrc
  5635  0EC4  0DA7               	rlf	___lwmod@divisor,f
  5636  0EC5  0DA8               	rlf	___lwmod@divisor+1,f
  5637  0EC6  3EFF               	addlw	-1
  5638  0EC7  1D03               	skipz
  5639  0EC8  2EC3               	goto	u1255
  5640  0EC9                     l1750:	
  5641  0EC9  3001               	movlw	1
  5642  0ECA  00F5               	movwf	??___lwmod
  5643  0ECB  0875               	movf	??___lwmod,w
  5644  0ECC  07AB               	addwf	___lwmod@counter,f
  5645  0ECD                     l1752:	
  5646  0ECD  1FA8               	btfss	___lwmod@divisor+1,7
  5647  0ECE  2ED0               	goto	u1261
  5648  0ECF  2ED1               	goto	u1260
  5649  0ED0                     u1261:	
  5650  0ED0  2EC2               	goto	l1748
  5651  0ED1                     u1260:	
  5652  0ED1                     l1754:	
  5653  0ED1  0828               	movf	___lwmod@divisor+1,w
  5654  0ED2  022A               	subwf	___lwmod@dividend+1,w
  5655  0ED3  1D03               	skipz
  5656  0ED4  2ED7               	goto	u1275
  5657  0ED5  0827               	movf	___lwmod@divisor,w
  5658  0ED6  0229               	subwf	___lwmod@dividend,w
  5659  0ED7                     u1275:	
  5660  0ED7  1C03               	skipc
  5661  0ED8  2EDA               	goto	u1271
  5662  0ED9  2EDB               	goto	u1270
  5663  0EDA                     u1271:	
  5664  0EDA  2EE1               	goto	l1758
  5665  0EDB                     u1270:	
  5666  0EDB                     l1756:	
  5667  0EDB  0827               	movf	___lwmod@divisor,w
  5668  0EDC  02A9               	subwf	___lwmod@dividend,f
  5669  0EDD  0828               	movf	___lwmod@divisor+1,w
  5670  0EDE  1C03               	skipc
  5671  0EDF  03AA               	decf	___lwmod@dividend+1,f
  5672  0EE0  02AA               	subwf	___lwmod@dividend+1,f
  5673  0EE1                     l1758:	
  5674  0EE1  3001               	movlw	1
  5675  0EE2                     u1285:	
  5676  0EE2  1003               	clrc
  5677  0EE3  0CA8               	rrf	___lwmod@divisor+1,f
  5678  0EE4  0CA7               	rrf	___lwmod@divisor,f
  5679  0EE5  3EFF               	addlw	-1
  5680  0EE6  1D03               	skipz
  5681  0EE7  2EE2               	goto	u1285
  5682  0EE8                     l1760:	
  5683  0EE8  3001               	movlw	1
  5684  0EE9  02AB               	subwf	___lwmod@counter,f
  5685  0EEA  1D03               	btfss	3,2
  5686  0EEB  2EED               	goto	u1291
  5687  0EEC  2EEE               	goto	u1290
  5688  0EED                     u1291:	
  5689  0EED  2ED1               	goto	l1754
  5690  0EEE                     u1290:	
  5691  0EEE                     l1762:	
  5692  0EEE  082A               	movf	___lwmod@dividend+1,w
  5693  0EEF  00A8               	movwf	?___lwmod+1
  5694  0EF0  0829               	movf	___lwmod@dividend,w
  5695  0EF1  00A7               	movwf	?___lwmod
  5696  0EF2                     l782:	
  5697  0EF2  0008               	return
  5698  0EF3                     __end_of___lwmod:	
  5699                           
  5700                           	psect	text29
  5701  0F73                     __ptext29:	
  5702 ;; *************** function ___lwdiv *****************
  5703 ;; Defined at:
  5704 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  divisor         2    0[BANK0 ] unsigned int 
  5707 ;;  dividend        2    2[BANK0 ] unsigned int 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  quotient        2    5[BANK0 ] unsigned int 
  5710 ;;  counter         1    4[BANK0 ] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  2    0[BANK0 ] unsigned int 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5720 ;;      Params:         0       4       0       0       0
  5721 ;;      Locals:         0       3       0       0       0
  5722 ;;      Temps:          1       0       0       0       0
  5723 ;;      Totals:         1       7       0       0       0
  5724 ;;Total ram usage:        8 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_mostrarDigitos
  5731 ;;		_sprintf
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function ___lwdiv
  5737  0F73                     ___lwdiv:	
  5738  0F73                     l2400:	
  5739                           ;incstack = 0
  5740                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5741                           
  5742  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  5743  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  5744  0F75  01A5               	clrf	___lwdiv@quotient
  5745  0F76  01A6               	clrf	___lwdiv@quotient+1
  5746  0F77                     l2402:	
  5747  0F77  0820               	movf	___lwdiv@divisor,w
  5748  0F78  0421               	iorwf	___lwdiv@divisor+1,w
  5749  0F79  1903               	btfsc	3,2
  5750  0F7A  2F7C               	goto	u2281
  5751  0F7B  2F7D               	goto	u2280
  5752  0F7C                     u2281:	
  5753  0F7C  2FB4               	goto	l2422
  5754  0F7D                     u2280:	
  5755  0F7D                     l2404:	
  5756  0F7D  01A4               	clrf	___lwdiv@counter
  5757  0F7E  0AA4               	incf	___lwdiv@counter,f
  5758  0F7F  2F8B               	goto	l2410
  5759  0F80                     l2406:	
  5760  0F80  3001               	movlw	1
  5761  0F81                     u2295:	
  5762  0F81  1003               	clrc
  5763  0F82  0DA0               	rlf	___lwdiv@divisor,f
  5764  0F83  0DA1               	rlf	___lwdiv@divisor+1,f
  5765  0F84  3EFF               	addlw	-1
  5766  0F85  1D03               	skipz
  5767  0F86  2F81               	goto	u2295
  5768  0F87                     l2408:	
  5769  0F87  3001               	movlw	1
  5770  0F88  00F4               	movwf	??___lwdiv
  5771  0F89  0874               	movf	??___lwdiv,w
  5772  0F8A  07A4               	addwf	___lwdiv@counter,f
  5773  0F8B                     l2410:	
  5774  0F8B  1FA1               	btfss	___lwdiv@divisor+1,7
  5775  0F8C  2F8E               	goto	u2301
  5776  0F8D  2F8F               	goto	u2300
  5777  0F8E                     u2301:	
  5778  0F8E  2F80               	goto	l2406
  5779  0F8F                     u2300:	
  5780  0F8F                     l2412:	
  5781  0F8F  3001               	movlw	1
  5782  0F90                     u2315:	
  5783  0F90  1003               	clrc
  5784  0F91  0DA5               	rlf	___lwdiv@quotient,f
  5785  0F92  0DA6               	rlf	___lwdiv@quotient+1,f
  5786  0F93  3EFF               	addlw	-1
  5787  0F94  1D03               	skipz
  5788  0F95  2F90               	goto	u2315
  5789  0F96  0821               	movf	___lwdiv@divisor+1,w
  5790  0F97  0223               	subwf	___lwdiv@dividend+1,w
  5791  0F98  1D03               	skipz
  5792  0F99  2F9C               	goto	u2325
  5793  0F9A  0820               	movf	___lwdiv@divisor,w
  5794  0F9B  0222               	subwf	___lwdiv@dividend,w
  5795  0F9C                     u2325:	
  5796  0F9C  1C03               	skipc
  5797  0F9D  2F9F               	goto	u2321
  5798  0F9E  2FA0               	goto	u2320
  5799  0F9F                     u2321:	
  5800  0F9F  2FA7               	goto	l2418
  5801  0FA0                     u2320:	
  5802  0FA0                     l2414:	
  5803  0FA0  0820               	movf	___lwdiv@divisor,w
  5804  0FA1  02A2               	subwf	___lwdiv@dividend,f
  5805  0FA2  0821               	movf	___lwdiv@divisor+1,w
  5806  0FA3  1C03               	skipc
  5807  0FA4  03A3               	decf	___lwdiv@dividend+1,f
  5808  0FA5  02A3               	subwf	___lwdiv@dividend+1,f
  5809  0FA6                     l2416:	
  5810  0FA6  1425               	bsf	___lwdiv@quotient,0
  5811  0FA7                     l2418:	
  5812  0FA7  3001               	movlw	1
  5813  0FA8                     u2335:	
  5814  0FA8  1003               	clrc
  5815  0FA9  0CA1               	rrf	___lwdiv@divisor+1,f
  5816  0FAA  0CA0               	rrf	___lwdiv@divisor,f
  5817  0FAB  3EFF               	addlw	-1
  5818  0FAC  1D03               	skipz
  5819  0FAD  2FA8               	goto	u2335
  5820  0FAE                     l2420:	
  5821  0FAE  3001               	movlw	1
  5822  0FAF  02A4               	subwf	___lwdiv@counter,f
  5823  0FB0  1D03               	btfss	3,2
  5824  0FB1  2FB3               	goto	u2341
  5825  0FB2  2FB4               	goto	u2340
  5826  0FB3                     u2341:	
  5827  0FB3  2F8F               	goto	l2412
  5828  0FB4                     u2340:	
  5829  0FB4                     l2422:	
  5830  0FB4  0826               	movf	___lwdiv@quotient+1,w
  5831  0FB5  00A1               	movwf	?___lwdiv+1
  5832  0FB6  0825               	movf	___lwdiv@quotient,w
  5833  0FB7  00A0               	movwf	?___lwdiv
  5834  0FB8                     l772:	
  5835  0FB8  0008               	return
  5836  0FB9                     __end_of___lwdiv:	
  5837                           
  5838                           	psect	text30
  5839  078F                     __ptext30:	
  5840 ;; *************** function _bailenLeds *****************
  5841 ;; Defined at:
  5842 ;;		line 25 in file "mostrarInicializar.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;		None
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  i               2    4[COMMON] unsigned short 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      void 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5856 ;;      Params:         0       0       0       0       0
  5857 ;;      Locals:         2       0       0       0       0
  5858 ;;      Temps:          0       3       0       0       0
  5859 ;;      Totals:         2       3       0       0       0
  5860 ;;Total ram usage:        5 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_accionesAceptar
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           
  5871                           ;psect for function _bailenLeds
  5872  078F                     _bailenLeds:	
  5873  078F                     l2886:	
  5874                           ;incstack = 0
  5875                           ; Regs used in _bailenLeds: [wreg+status,2]
  5876                           
  5877                           
  5878                           ;mostrarInicializar.c: 27:     unsigned short int i;;mostrarInicializar.c: 28:     for (
      +                          i = 0; i < 3; i++) {
  5879  078F  01F4               	clrf	bailenLeds@i
  5880  0790  01F5               	clrf	bailenLeds@i+1
  5881  0791                     l295:	
  5882                           
  5883                           ;mostrarInicializar.c: 29:         RA3 = 1;
  5884  0791  1283               	bcf	3,5	;RP0=0, select bank0
  5885  0792  1303               	bcf	3,6	;RP1=0, select bank0
  5886  0793  1585               	bsf	5,3	;volatile
  5887  0794                     l2892:	
  5888                           
  5889                           ;mostrarInicializar.c: 30:         _delay((unsigned long)((200)*(4000000/4000.0)));
  5890  0794  3002               	movlw	2
  5891  0795  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0796  1303               	bcf	3,6	;RP1=0, select bank0
  5893  0797  00A2               	movwf	??_bailenLeds+2
  5894  0798  3004               	movlw	4
  5895  0799  00A1               	movwf	??_bailenLeds+1
  5896  079A  30B9               	movlw	185
  5897  079B  00A0               	movwf	??_bailenLeds
  5898  079C                     u3267:	
  5899  079C  0BA0               	decfsz	??_bailenLeds,f
  5900  079D  2F9C               	goto	u3267
  5901  079E  0BA1               	decfsz	??_bailenLeds+1,f
  5902  079F  2F9C               	goto	u3267
  5903  07A0  0BA2               	decfsz	??_bailenLeds+2,f
  5904  07A1  2F9C               	goto	u3267
  5905  07A2  2FA3               	nop2
  5906  07A3                     l2894:	
  5907                           
  5908                           ;mostrarInicializar.c: 31:         RA5 = 1;
  5909  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  5910  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  5911  07A5  1685               	bsf	5,5	;volatile
  5912                           
  5913                           ;mostrarInicializar.c: 32:         _delay((unsigned long)((200)*(4000000/4000.0)));
  5914  07A6  3002               	movlw	2
  5915  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  5916  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  5917  07A9  00A2               	movwf	??_bailenLeds+2
  5918  07AA  3004               	movlw	4
  5919  07AB  00A1               	movwf	??_bailenLeds+1
  5920  07AC  30B9               	movlw	185
  5921  07AD  00A0               	movwf	??_bailenLeds
  5922  07AE                     u3277:	
  5923  07AE  0BA0               	decfsz	??_bailenLeds,f
  5924  07AF  2FAE               	goto	u3277
  5925  07B0  0BA1               	decfsz	??_bailenLeds+1,f
  5926  07B1  2FAE               	goto	u3277
  5927  07B2  0BA2               	decfsz	??_bailenLeds+2,f
  5928  07B3  2FAE               	goto	u3277
  5929  07B4  2FB5               	nop2
  5930  07B5                     l2896:	
  5931                           
  5932                           ;mostrarInicializar.c: 33:         RA3 = 0;
  5933  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  5934  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  5935  07B7  1185               	bcf	5,3	;volatile
  5936                           
  5937                           ;mostrarInicializar.c: 34:         _delay((unsigned long)((200)*(4000000/4000.0)));
  5938  07B8  3002               	movlw	2
  5939  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  5940  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  5941  07BB  00A2               	movwf	??_bailenLeds+2
  5942  07BC  3004               	movlw	4
  5943  07BD  00A1               	movwf	??_bailenLeds+1
  5944  07BE  30B9               	movlw	185
  5945  07BF  00A0               	movwf	??_bailenLeds
  5946  07C0                     u3287:	
  5947  07C0  0BA0               	decfsz	??_bailenLeds,f
  5948  07C1  2FC0               	goto	u3287
  5949  07C2  0BA1               	decfsz	??_bailenLeds+1,f
  5950  07C3  2FC0               	goto	u3287
  5951  07C4  0BA2               	decfsz	??_bailenLeds+2,f
  5952  07C5  2FC0               	goto	u3287
  5953  07C6  2FC7               	nop2
  5954  07C7                     l2898:	
  5955                           
  5956                           ;mostrarInicializar.c: 35:         RA5 = 0;
  5957  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  5958  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  5959  07C9  1285               	bcf	5,5	;volatile
  5960                           
  5961                           ;mostrarInicializar.c: 36:     }
  5962  07CA  3001               	movlw	1
  5963  07CB  07F4               	addwf	bailenLeds@i,f
  5964  07CC  1803               	skipnc
  5965  07CD  0AF5               	incf	bailenLeds@i+1,f
  5966  07CE  3000               	movlw	0
  5967  07CF  07F5               	addwf	bailenLeds@i+1,f
  5968  07D0  3000               	movlw	0
  5969  07D1  0275               	subwf	bailenLeds@i+1,w
  5970  07D2  3003               	movlw	3
  5971  07D3  1903               	skipnz
  5972  07D4  0274               	subwf	bailenLeds@i,w
  5973  07D5  1C03               	skipc
  5974  07D6  2FD8               	goto	u3061
  5975  07D7  2FD9               	goto	u3060
  5976  07D8                     u3061:	
  5977  07D8  2F91               	goto	l295
  5978  07D9                     u3060:	
  5979  07D9                     l297:	
  5980  07D9  0008               	return
  5981  07DA                     __end_of_bailenLeds:	
  5982                           
  5983                           	psect	text31
  5984  0F32                     __ptext31:	
  5985 ;; *************** function _int_usart *****************
  5986 ;; Defined at:
  5987 ;;		line 72 in file "main.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6001 ;;      Params:         0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0
  6003 ;;      Temps:          4       0       0       0       0
  6004 ;;      Totals:         4       0       0       0       0
  6005 ;;Total ram usage:        4 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		Interrupt level 1
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _int_usart
  6016  0F32                     _int_usart:	
  6017  0F32                     i1l2336:	
  6018                           
  6019                           ;main.c: 74:     if(RCIF) {
  6020  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  6021  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  6022  0F34  1E8C               	btfss	12,5	;volatile
  6023  0F35  2F37               	goto	u218_21
  6024  0F36  2F38               	goto	u218_20
  6025  0F37                     u218_21:	
  6026  0F37  2F5F               	goto	i1l113
  6027  0F38                     u218_20:	
  6028  0F38                     i1l2338:	
  6029                           
  6030                           ;main.c: 75:         if(RCREG != 0x0D && RCREG != 0x0A && serial < (10 -1)) {
  6031  0F38  300D               	movlw	13
  6032  0F39  061A               	xorwf	26,w	;volatile
  6033  0F3A  1903               	btfsc	3,2
  6034  0F3B  2F3D               	goto	u219_21
  6035  0F3C  2F3E               	goto	u219_20
  6036  0F3D                     u219_21:	
  6037  0F3D  2F57               	goto	i1l2348
  6038  0F3E                     u219_20:	
  6039  0F3E                     i1l2340:	
  6040  0F3E  300A               	movlw	10
  6041  0F3F  061A               	xorwf	26,w	;volatile
  6042  0F40  1903               	btfsc	3,2
  6043  0F41  2F43               	goto	u220_21
  6044  0F42  2F44               	goto	u220_20
  6045  0F43                     u220_21:	
  6046  0F43  2F57               	goto	i1l2348
  6047  0F44                     u220_20:	
  6048  0F44                     i1l2342:	
  6049  0F44  3009               	movlw	9
  6050  0F45  0277               	subwf	_serial,w
  6051  0F46  1803               	skipnc
  6052  0F47  2F49               	goto	u221_21
  6053  0F48  2F4A               	goto	u221_20
  6054  0F49                     u221_21:	
  6055  0F49  2F57               	goto	i1l2348
  6056  0F4A                     u221_20:	
  6057  0F4A                     i1l2344:	
  6058                           
  6059                           ;main.c: 76:             codigoEntrada[serial] = RCREG;
  6060  0F4A  081A               	movf	26,w	;volatile
  6061  0F4B  00F0               	movwf	??_int_usart
  6062  0F4C  0877               	movf	_serial,w
  6063  0F4D  3E63               	addlw	(low (_codigoEntrada| 0))& (0+255)
  6064  0F4E  0084               	movwf	4
  6065  0F4F  0870               	movf	??_int_usart,w
  6066  0F50  1383               	bcf	3,7	;select IRP bank0
  6067  0F51  0080               	movwf	0
  6068  0F52                     i1l2346:	
  6069                           
  6070                           ;main.c: 77:             serial++;
  6071  0F52  3001               	movlw	1
  6072  0F53  00F0               	movwf	??_int_usart
  6073  0F54  0870               	movf	??_int_usart,w
  6074  0F55  07F7               	addwf	_serial,f
  6075                           
  6076                           ;main.c: 78:         }
  6077  0F56  2F6A               	goto	i1l118
  6078  0F57                     i1l2348:	
  6079                           
  6080                           ;main.c: 80:             serial = 0;
  6081  0F57  01F7               	clrf	_serial
  6082  0F58                     i1l2350:	
  6083                           
  6084                           ;main.c: 81:             huboInt = 1;
  6085  0F58  3001               	movlw	1
  6086  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  6087  0F5A  1303               	bcf	3,6	;RP1=0, select bank1
  6088  0F5B  00C6               	movwf	_huboInt^(0+128)
  6089  0F5C  3000               	movlw	0
  6090  0F5D  00C7               	movwf	(_huboInt^(0+128)+1)
  6091  0F5E  2F6A               	goto	i1l118
  6092  0F5F                     i1l113:	
  6093                           ;main.c: 88:     else if(ADIF) {
  6094                           
  6095  0F5F  1F0C               	btfss	12,6	;volatile
  6096  0F60  2F62               	goto	u222_21
  6097  0F61  2F63               	goto	u222_20
  6098  0F62                     u222_21:	
  6099  0F62  2F6A               	goto	i1l118
  6100  0F63                     u222_20:	
  6101  0F63                     i1l2352:	
  6102                           
  6103                           ;main.c: 89:         ADIF = 0;
  6104  0F63  130C               	bcf	12,6	;volatile
  6105  0F64                     i1l2354:	
  6106                           
  6107                           ;main.c: 90:         adresult = (ADRESH<<8)+ADRESL;
  6108  0F64  081E               	movf	30,w	;volatile
  6109  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  6110  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  6111  0F67  00CB               	movwf	(_adresult+1)^(0+128)
  6112  0F68  081E               	movf	30,w	;volatile
  6113  0F69  00CA               	movwf	_adresult^(0+128)
  6114  0F6A                     i1l118:	
  6115  0F6A  0873               	movf	??_int_usart+3,w
  6116  0F6B  008A               	movwf	10
  6117  0F6C  0872               	movf	??_int_usart+2,w
  6118  0F6D  0084               	movwf	4
  6119  0F6E  0E71               	swapf	(??_int_usart+1)^(0+4294967168),w
  6120  0F6F  0083               	movwf	3
  6121  0F70  0EFE               	swapf	btemp,f
  6122  0F71  0E7E               	swapf	btemp,w
  6123  0F72  0009               	retfie
  6124  0F73                     __end_of_int_usart:	
  6125  007E                     btemp	set	126	;btemp
  6126  007E                     wtemp0	set	126
  6127                           
  6128                           	psect	intentry
  6129  0004                     __pintentry:	
  6130                           ;incstack = 0
  6131                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  6132                           
  6133  0004                     interrupt_function:	
  6134  007E                     saved_w	set	btemp
  6135  0004  00FE               	movwf	btemp
  6136  0005  0E03               	swapf	3,w
  6137  0006  00F1               	movwf	??_int_usart+1
  6138  0007  0804               	movf	4,w
  6139  0008  00F2               	movwf	??_int_usart+2
  6140  0009  080A               	movf	10,w
  6141  000A  00F3               	movwf	??_int_usart+3
  6142  000B  120A  158A  2F32   	ljmp	_int_usart


Data Sizes:
    Strings     62
    Constant    20
    Data        1
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     62      79
    BANK1            80     23      44
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_3(CODE[40]), cierreDeLote@strLote(BANK0[32]), main@bufferMsj(BANK1[16]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_3(CODE[40]), cierreDeLote@strLote(BANK0[32]), main@bufferMsj(BANK1[16]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> cierreDeLote@strLote(BANK0[32]), main@bufferMsj(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envioTX@mensaje	PTR unsigned char  size(2) Largest target is 40
		 -> STR_3(CODE[40]), cierreDeLote@strLote(BANK0[32]), main@bufferMsj(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___lwmod
    _main->___wmul
    _lecturaEtiqueta->___bmul
    _EEPROM_search->_eeprom_read
    _sprintf->___lwmod
    _envioTX->_strlen
    _agregarModificarPrecio->___bmul
    _agregarModificarPrecio->___wmul
    _agregarModificarPrecio->_eeprom_read
    _agregarModificarPrecio->_eeprom_write
    _lecturaConsulta->___wmul
    _consultaPrecio->_eeprom_read
    _pow->___wmul
    _accionesAceptar->_bailenLeds
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaMenos->_envioTX
    _lecturaMas->_cierreDeLote
    _cierreDeLote->_sprintf
    _sprintf->___lwmod
    _envioTX->_strlen
    _agregarModificarPrecio->___wmul
    _lecturaConsulta->___wmul
    _lecturaConsulta->_consultaPrecio
    _accionesDeshacer->_eliminarProd
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_mostrarDigitos
    _mostrarDigitos->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_accionesPuertoSerial

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   32913
                                              3 BANK1     20    20      0
                            ___lwmod
                             ___wmul
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                            _envioTX
                     _mostrarDigitos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                 3     3      0   17958
                                              0 BANK1      3     3      0
                     _lecturaComando
                    _lecturaEtiqueta
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      8     8      0    9374
                                             29 BANK0      8     8      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    2518
                                             12 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    3409
                                             20 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    2524
                                             12 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0    8584
                    _lecturaConsulta
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0     620
                            _envioTX
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0    6249
             _agregarModificarPrecio
                       _cierreDeLote
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  3     3      0     167
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _cierreDeLote                                        36    36      0    3360
                                             26 BANK0     36    36      0
                            _envioTX
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    18      4    2648
                                             12 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _envioTX                                              7     5      2     620
                                              2 BANK0      7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     220
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _agregarModificarPrecio                              15    15      0    2722
                                              4 BANK0     15    15      0
                             ___bmul
                             ___wmul
                        _eeprom_read
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (5) _eeprom_write                                         3     2      1     422
                                              4 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lecturaConsulta                                      6     6      0    1715
                                              4 BANK0      6     6      0
                             ___wmul
                     _consultaPrecio
 ---------------------------------------------------------------------------------
 (4) _consultaPrecio                                       4     2      2     285
                                              0 BANK0      4     2      2
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    4705
                       _eliminarProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    2518
                                             12 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    2137
                                              4 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1396
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                      3     3      0    2354
                                             16 BANK0      3     3      0
                         _bailenLeds
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    2187
                                             12 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     781
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _int_usart                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwmod
     ___lwdiv (ARG)
   ___wmul
   _accionesAceptar
     _bailenLeds
     _mostrarDigitos
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _mostrarDigitos
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _accionesPuertoSerial
     _lecturaComando
       _lecturaConsulta
         ___wmul
         _consultaPrecio
           _eeprom_read
       _lecturaMas
         _agregarModificarPrecio
           ___bmul
           ___wmul
           _eeprom_read
           _eeprom_write
         _cierreDeLote
           _envioTX
             _strlen
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
         _verificacionEntrada
       _lecturaMenos
         _envioTX
           _strlen
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _envioTX
     _strlen
   _mostrarDigitos
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      2C       7       55.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      85      12        0.0%
ABS                  0      0      85       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed May 27 18:57:15 2020

                 ?_lecturaConsulta 0070                      ?_eliminarProd 002C  
                                pc 0002                     ___bmul@product 0020  
                 ?_lecturaEtiqueta 0070                        __CFG_CP$OFF 0000  
                               l93 0198                                 l94 018E  
                               l88 018A                                 l97 022E  
                               l89 0180                                 l99 019C  
                     ___awdiv@sign 0025                                 fsr 0004  
              ___wmul@multiplicand 0022            __size_of_consultaPrecio 001D  
                   ?_verificarProd 002C                                l101 01A0  
                              l210 0D02                                l203 0CB7  
                              l303 0E41                                l231 0D22  
                              l224 060D                                l161 0470  
                              l170 0311                                l500 0D31  
                              l340 0EB6                                l260 05AA  
                              l164 0476                                l253 06D1  
                              l173 0323                                l502 0D49  
                              l247 0E7B                                l336 0FFF  
                              l273 013D                                l185 0E08  
                              l266 0733                                l442 0CB9  
                              l195 0D73                                l347 0F1F  
                              l292 0546                                l444 0CCE  
                              l461 0D77                                l189 0DD6  
                              l349 0F31                                l526 0CE5  
                              l462 0D77                                l198 0D73  
                              l295 0791                                l297 07D9  
                              l465 0D93                                l468 0DA4  
                              l653 04DF                                l496 040D  
                              l666 078E                                l772 0FB8  
                              l782 0EF2                                l948 07FD  
                              _BMS 0628                                _RA3 002B  
                              _RA5 002D                                _RE0 0048  
                              _RE1 0049                                _RE2 004A  
                     __CFG_CPD$OFF 0000                                _pow 0E42  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0025  agregarModificarPrecio@upper_8bits 002F  
                     __CFG_FOSC$XT 0000                       __CFG_LVP$OFF 0000  
                 ??_mostrarDigitos 0076                               l2400 0F73  
                             l3016 0351                               l2410 0F8B  
                             l2402 0F77                               l2420 0FAE  
                             l2412 0F8F                               l2404 0F7D  
                             l2500 0E42                               l2414 0FA0  
                             l2406 0F80                               l2422 0FB4  
                             l2502 0E49                               l2510 0E6D  
                             l2430 0332                               l2416 0FA6  
                             l2408 0F87                               l2512 0E77  
                             l2504 0E4F                               l2520 0D8B  
                             l2440 035C                               l2432 0339  
                             l2600 0DD3                               l2418 0FA7  
                             l2506 0E54                               l2530 0D9C  
                             l2522 0D8E                               l2610 004B  
                             l2450 0375                               l2442 0364  
                             l2434 033E                               l2426 0327  
                             l2602 0DD4                               l2508 0E67  
                             l2540 0CD7                               l2532 0D9D  
                             l2524 0D92                               l2516 0D7D  
                             l2620 00C0                               l2612 0069  
                             l2604 0030                               l2380 07E7  
                             l2460 0393                               l2444 0368  
                             l2428 032C                               l2700 0437  
                             l1750 0EC9                               l2390 0D2B  
                             l2542 0CDB                               l2534 0DA3  
                             l2526 0D97                               l2518 0D85  
                             l2630 0122                               l2622 00C4  
                             l2614 006D                               l2606 0043  
                             l2382 07F5                               l2470 03B3  
                             l2462 039D                               l2446 036C  
                             l2438 033F                               l2550 0547  
                             l2702 043B                               l2710 0670  
                             l1760 0EE8                               l1752 0ECD  
                             l1744 0EB7                               l2392 0D38  
                             l2544 0CDD                               l2536 0CD2  
                             l2528 0D9B                               l2632 0126  
                             l2624 00CE                               l2616 007A  
                             l2608 0045                               l2376 07DA  
                             l2472 03E3                               l2464 03A3  
                             l2456 0377                               l2448 0370  
                             l2480 0409                               l2560 0569  
                             l2552 054A                               l2704 0448  
                             l2800 077A                               l2720 06A8  
                             l1754 0ED1                               l1746 0EBF  
                             l1762 0EEE                               l2394 0D3F  
                             l2386 0D23                               l2546 0CE4  
                             l2538 0CD3                               l2634 0130  
                             l2618 00BC                               l2626 00DC  
                             l2378 07E1                               l2490 0E0E  
                             l2474 03EA                               l2466 03AA  
                             l2730 0D52                               l2650 0483  
                             l2570 05A5                               l2562 0580  
                             l2706 046A                               l2802 0780  
                             l2722 06C3                               l2810 0232  
                             l1756 0EDB                               l1748 0EC2  
                             l2900 0FB9                               l2396 0D45  
                             l2388 0D25                               l2636 0CE6  
                             l2628 011E                               l2492 0E26  
                             l2476 03EE                               l2468 03AE  
                             l2580 0DDD                               l2732 0D58  
                             l2740 0CA4                               l2660 0494  
                             l2652 0485                               l2644 0477  
                             l2572 05A9                               l2564 0599  
                             l2804 0785                               l2724 06C5  
                             l2716 0676                               l2820 0251  
                             l1758 0EE1                               l2902 0FBF  
                             l2638 0CF3                               l2750 05BA  
                             l2494 0E2C                               l2478 03F7  
                             l2590 0E07                               l2582 0DE5  
                             l2734 0D62                               l2742 0CAC  
                             l2670 04AC                               l2662 049A  
                             l2654 0489                               l2646 047A  
                             l2566 059B                               l2558 054E  
                             l2806 078A                               l2726 06CD  
                             l2718 0691                               l2830 02B6  
                             l2822 025E                               l2920 0FE9  
                             l2904 0FC7                               l2496 0CC0  
                             l2760 05C8                               l2488 0E09  
                             l2584 0DEF                               l2576 0DD7  
                             l2736 0D68                               l2728 0D4A  
                             l2744 0CAE                               l2672 04BD  
                             l2664 049D                               l2680 04D1  
                             l2656 048E                               l2648 047E  
                             l2568 059D                               l2840 02E1  
                             l2832 02BE                               l2824 0280  
                             l2816 0238                               l2690 04FA  
                             l2922 0FFA                               l2914 0FCF  
                             l2906 0FC9                               l2930 0EA5  
                             l2770 05E2                               l2762 05CA  
                             l2754 05BB                               l2746 05AB  
                             l2594 0DA5                               l2586 0DF8  
                             l2578 0DDB                               l2738 0D70  
                             l2682 04D6                               l2674 04C3  
                             l2666 04A4                               l2658 0492  
                             l2850 0312                               l2842 02ED  
                             l2834 02C0                               l2826 0291  
                             l2818 024B                               l2692 051B  
                             l2916 0FD6                               l2908 0FCD  
                             l2924 0E7C                               l2764 05D0  
                             l2748 05B3                               l2596 0DAC  
                             l2588 0E01                               l2860 0D0B  
                             l2684 04DB                               l2676 04C4  
                             l2668 04A8                               l2780 0742  
                             l2772 0734                               l2852 0320  
                             l2844 02FC                               l2836 02CC  
                             l2828 029D                               l2940 0F0D  
                             l2932 0EF3                               l2918 0FDC  
                             l2926 0E8E                               l2766 05D6  
                             l2758 05C2                               l2598 0DCD  
                             l2862 0D11                               l2678 04CB  
                             l2694 0411                               l2790 075B  
                             l2782 0746                               l2774 0737  
                             l2846 02FF                               l2838 02D5  
                             l2942 0F13                               l2934 0EFB  
                             l2950 013E                               l2688 04E0  
                             l2880 0725                               l2928 0E9A  
                             l2768 05DC                               l2864 0D17  
                             l2696 0413                               l2792 075F  
                             l2784 074B                               l2776 073B  
                             l2848 030D                               l2944 0F19  
                             l2936 0F01                               l2960 0162  
                             l2952 0144                               l2882 0727  
                             l2874 06D8                               l2866 0D1D  
                             l2858 0D03                               l2698 0419  
                             l2794 0763                               l2786 0751  
                             l2778 0740                               l2946 0F20  
                             l2938 0F07                               l2962 0163  
                             l2954 0145                               l2892 0794  
                             l2884 072F                               l2876 06F3  
                             l2868 06D2                               l2796 076D  
                             l2788 0754                               l2948 0F2E  
                             l2980 01A3                               l2972 0184  
                             l2964 0165                               l2956 015C  
                             l2894 07A3                               l2886 078F  
                             l2878 070A                               l2798 0773  
                             l2990 0206                               l2982 01AB  
                             l2966 0169                               l2958 015F  
                             l2896 07B5                               l2992 021E  
                             l2984 01AD                               l2976 0192  
                             l2968 017A                               l2898 07C7  
                             l2994 0229                               l2986 01B3  
                             l2988 01B9                               _ADIE 0466  
                             _ADIF 0066                               ?_pow 0024  
                             STR_1 066A                               STR_2 065A  
                             STR_3 0632                               u1240 0EBF  
                             u3000 02B6                               u1241 0EBE  
                             u3001 02B5                               u3010 02BE  
                             u3011 02BD                               u2300 0F8F  
                             u1260 0ED1                               u3020 0D0B  
                             u3100 0F01                               u2301 0F8E  
                             u1261 0ED0                               u3021 0D0A  
                             u3101 0F00                               u1270 0EDB  
                             u2230 07F5                               u3030 0D17  
                             u3110 0F07                               u1271 0EDA  
                             u1255 0EC3                               u2231 07F4  
                             u3031 0D16                               u3111 0F06  
                             u2320 0FA0                               u2240 0D2B  
                             u3040 06F3                               u2400 03F7  
                             u3120 0F13                               u3200 01AB  
                             u2321 0F9F                               u2241 0D2A  
                             u3041 06F2                               u2401 03F6  
                             u3121 0F12                               u3201 01AA  
                             u1290 0EEE                               u3050 0733  
                             u2410 0409                               u3130 0F19  
                             u3210 01B9                               u2315 0F90  
                             u1291 0EED                               u1275 0ED7  
                             u3051 0732                               u2411 0408  
                             u3131 0F18                               u3211 01B8  
                             u3060 07D9                               u2340 0FB4  
                             u2500 0CD7                               u2420 0E18  
                             u3140 0180                               u3061 07D8  
                             u2341 0FB3                               u2325 0F9C  
                             u1285 0EE2                               u3045 06EF  
                             u2501 0CD6                               u3141 017F  
                             u3070 0FE9                               u2270 0D45  
                             u2510 0CE4                               u2430 0E41  
                             u2350 0332                               u3150 0184  
                             u2335 0FA8                               u3071 0FE8  
                             u2271 0D44                               u2255 0D32  
                             u2511 0CE3                               u2431 0E40  
                             u2351 0331                               u3151 0183  
                             u2280 0F7D                               u3080 0E8E  
                             u2440 0CC0                               u2600 006D  
                             u2360 036C                               u2520 0569  
                             u3160 018E                               u2281 0F7C  
                             u2265 0D39                               u3081 0E8D  
                             u2441 0CBF                               u2601 006C  
                             u2361 036B                               u2521 0568  
                             u3225 01D9                               u3161 018D  
                             u2450 0E4F                               u2610 007A  
                             u2370 0392                               u2530 0599  
                             u3090 0EFB                               u3170 0192  
                             u3075 0FE5                               u2451 0E4E  
                             u2611 0079                               u2435 0E3D  
                             u2371 0391                               u2531 0598  
                             u3091 0EFA                               u3171 0191  
                             u2460 0E77                               u2380 039D  
                             u2700 04D1                               u2620 047E  
                             u2540 05A9                               u3180 019C  
                             u2461 0E76                               u3085 0E8A  
                             u2381 039C                               u2701 04D0  
                             u2621 047D                               u2541 05A8  
                             u2525 0565                               u3237 0F28  
                             u3181 019B                               u2470 0D7D  
                             u2390 03A3                               u2550 0DEF  
                             u2710 04D6                               u2630 0489  
                             u3190 01A0                               u2295 0F81  
                             u2471 0D7C                               u2615 0076  
                             u2391 03A2                               u2375 038E  
                             u2551 0DEE                               u2711 04D5  
                             u2631 0488                               u3247 0307  
                             u3191 019F                               u2480 0D92  
                             u2560 0DF8                               u2800 0CAC  
                             u2640 049A                               u2720 043B  
                             u2465 0E73                               u2481 0D91  
                             u2561 0DF7                               u2801 0CAB  
                             u2641 0499                               u2721 043A  
                             u3257 031A                               u2810 05B3  
                             u2490 0DA3                               u2570 0E01  
                             u2730 0448                               u3267 079C  
                             u2811 05B2                               u2491 0DA2  
                             u2571 0E00                               u2731 0447  
                             u2820 05B9                               u2580 0E07  
                             u2660 04AC                               u2740 046A  
                             u2900 0746                               u3277 07AE  
                             u2821 05B8                               u2581 0E06  
                             u2661 04AB                               u2741 0469  
                             u2901 0745                               u2830 05C1  
                             u2590 0DAC                               u2910 0751  
                             u2750 0691                               u3287 07C0  
                             u2831 05C0                               u2591 0DAB  
                             u2655 049E                               u2735 0444  
                             u2911 0750                               u2751 0690  
                             u2840 05C8                               u2680 04BD  
                             u2760 06D1                               u2841 05C7  
                             u2681 04BC                               u2761 06D0  
                             u2850 05D0                               u2770 0D52  
                             u2930 0763                               u2851 05CF  
                             u2771 0D51                               u2675 04AD  
                             u2931 0762                               u2755 068D  
                             u2860 05D6                               u2780 0D62  
                             u2940 076D                               u2861 05D5  
                             u2781 0D61                               u2685 04B9  
                             u2941 076C                               u2925 0755  
                             u2870 05DC                               u2790 0D70  
                             u2871 05DB                               u2791 0D6F  
                             u2695 04C5                               u2880 05E2  
                             u2960 0780                               u2881 05E1  
                             u2961 077F                               u2945 0769  
                             u2970 0785                               u2890 073B  
                             u2971 0784                               u2955 0774  
                             u2891 073A                               _RCIE 0465  
                             u2980 025E                               _RCIF 0065  
                             u2981 025D                               u2990 0280  
                             u2991 027F                               u2985 025A  
                             u2995 027C                     ??_eeprom_write 0075  
                     __CFG_WRT$OFF 0000                               _main 013E  
                  _accionesAceptar 0FB9                               btemp 007E  
                    __CFG_BOREN$ON 0000                               pow@i 0028  
                             start 000E                  ___bmul@multiplier 0021  
                   ??_eliminarProd 002E                              ??_pow 0076  
    __size_of_accionesPuertoSerial 003F                              ?_main 0070  
                  __end_of___awdiv 04E0                              _EEADR 010D  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 078F  
                  ___awdiv@divisor 0020                       ?_ingresoProd 002C  
                  __end_of___lwdiv 0FB9                              i1l113 0F5F  
                            i1l118 0F6A                    __end_of___lwmod 0EF3  
                  ___awdiv@counter 0024                              _RCREG 001A  
                            _RCSTA 0018                              _SPBRG 0099  
                            _PORTB 0006                              _PORTD 0008  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _TRISE 0089                              _TXREG 0019  
                            _TXSTA 0098               __end_of_cierreDeLote 0DD7  
                  __end_of_envioTX 0E42                    __end_of_dpowers 0628  
                            pclath 000A                   _accionesDeshacer 0E7C  
                            status 0003                     envioTX@mensaje 0022  
                            wtemp0 007E                    __end_of_sprintf 040E  
                    ?_lecturaMenos 0070                    __initialization 0011  
                     __end_of_main 0232                    ??_verificarProd 002E  
                  EEPROM_search@tp 003C                             ??_main 00A3  
            __end_of_EEPROM_search 0477                      main@bufferMsj 00A5  
         ??_agregarModificarPrecio 0024                      eliminarProd@i 0031  
          __end_of_accionesAceptar 1000                             _ADCON0 001F  
                           _ADCON1 009F                             _ADRESH 001E  
                           _ADRESL 009E                             _EEDATA 010C  
                           _EECON1 018C                             _EECON2 018D  
                 ___awdiv@dividend 0022            __size_of_lecturaComando 0020  
                           i1l2340 0F3E                             i1l2350 0F58  
                           i1l2342 0F44                             i1l2352 0F63  
                           i1l2344 0F4A                             i1l2336 0F32  
                           i1l2354 0F64                             i1l2346 0F52  
                           i1l2338 0F38                             i1l2348 0F57  
                           u220_20 0F44                             u220_21 0F43  
                           u221_20 0F4A                             u221_21 0F49  
                           u222_20 0F63                             u222_21 0F62  
                           _INTCON 000B                             u218_20 0F38  
                           u218_21 0F37                             u219_20 0F3E  
                           u219_21 0F3D                     ??_lecturaMenos 0076  
                 lecturaEtiqueta@i 0040                     __CFG_PWRTE$OFF 0000  
             __size_of_eeprom_read 0017                             ___bmul 0CCF  
                           ___wmul 0D23                          ??___awdiv 0074  
                        ??___awmod 0074                          ??___lwdiv 0074  
                        ??___lwmod 0075                             _cuenta 00C8  
              _verificacionEntrada 0DD7                   ___awdiv@quotient 0026  
                  ___awmod@divisor 0020                             _serial 0077  
             __end_of_eeprom_write 0DA5                     _consultaPrecio 0CE6  
                  ___awmod@counter 0024                             _strlen 07DA  
                        ??_envioTX 0024                             saved_w 007E  
             __end_of_eliminarProd 0734                          ??_sprintf 0030  
             ?_verificacionEntrada 0070            __end_of__initialization 002C  
                  eeprom_read@addr 0075                ___bmul@multiplicand 0074  
                   __pcstackCOMMON 0070                       __pidataBANK0 07FE  
           __end_of_consultaPrecio 0D03              __size_of_cierreDeLote 0032  
                       _bailenLeds 078F               __size_of_ingresoProd 0062  
                eeprom_write@value 0074    __size_of_agregarModificarPrecio 010E  
                 ?_accionesAceptar 0070              ??_verificacionEntrada 0074  
                       __pbssBANK0 005E                         __pbssBANK1 00B7  
               __size_of_int_usart 0041                         __pmaintext 013E  
                     _cierreDeLote 0DA5           agregarModificarPrecio@tp 0032  
                          ?___bmul 0074                     eliminarProd@tp 002C  
                          ?___wmul 0020                         __pintentry 0004  
                  ?_consultaPrecio 0020                EEPROM_search@precio 003A  
         __end_of_accionesDeshacer 0EB7                            ?_strlen 0074  
         __size_of_lecturaConsulta 0063               __end_of_lecturaMenos 0CB8  
         __size_of_lecturaEtiqueta 00F2                     verificarProd@i 0032  
                   _lecturaComando 0D03                   accionesAceptar@i 0031  
                       __stringtab 060E       __end_of_accionesPuertoSerial 0F32  
                lecturaEtiqueta@tp 0042                         _lecturaMas 0D4A  
           _agregarModificarPrecio 0030              __size_of_eeprom_write 0031  
                  __size_of___bmul 0017                            ___awdiv 0477  
                          ___awmod 0734                    __size_of___wmul 0027  
                          ___lwdiv 0F73                            ___lwmod 0EB7  
                          __ptext1 0EF3                            __ptext2 0232  
                          __ptext3 0670                            __ptext4 0734  
                      pow@potencia 0026                            __ptext5 040E  
                          __ptext6 0547                            __ptext7 0477  
                          __ptext8 0D03                            __ptext9 0CA4  
                  __size_of_strlen 0024                        ?_bailenLeds 0070  
                          _envioTX 0E09                            _dpowers 061E  
                          _huboInt 00C6              __size_of_eliminarProd 0062  
                     __size_of_pow 003A               verificacionEntrada@i 0021  
                 ___awmod@dividend 0022                       ingresoProd@i 0031  
           __end_of_lecturaComando 0D23                            _nroLote 006E  
                          _numProd 00C4                  __end_of_int_usart 0F73  
                          _sprintf 0324                            clrloop0 0C9D  
     agregarModificarPrecio@precio 0030               end_of_initialization 002C  
                     _eeprom_write 0D74            __size_of_mostrarDigitos 0067  
                       _montosLote 0078                       _eliminarProd 06D2  
                _productoIngresado 005E                   verificarProd@ret 0031  
                          strlen@s 0074              __end_of_verificarProd 05AB  
                       _ventasLote 006D                    ?_lecturaComando 0070  
          lecturaConsulta@articulo 0028                  ??_lecturaConsulta 0024  
                 _cierreLotePedido 0062                  ??_lecturaEtiqueta 003D  
                    ??_eeprom_read 0074                __size_of_bailenLeds 004B  
                      ?_lecturaMas 0070             __size_of_EEPROM_search 0069  
                   __end_of___bmul 0CE6              __size_of_lecturaMenos 0014  
                   __end_of___wmul 0D4A               _accionesPuertoSerial 0EF3  
                   __end_of_strlen 07FE                start_initialization 0011  
                      __end_of_BMS 0632                        __end_of_pow 0E7C  
                     _lecturaMenos 0CA4                   ??_consultaPrecio 0076  
                   _prodIngresados 00B7                           ??___bmul 0075  
               _mostrarDigitos$967 002E                           ??___wmul 0074  
              __end_of_eeprom_read 0CCF                        __pdataBANK0 006E  
            ?_accionesPuertoSerial 0070                           ??_strlen 0076  
                    ??_ingresoProd 002E                  ?_accionesDeshacer 0070  
                      __pbssCOMMON 0076        __end_of_verificacionEntrada 0E09  
                        ___latbits 0002                 ??_accionesDeshacer 0076  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                    _EEPROM_search 040E                __size_of_lecturaMas 002A  
                 eeprom_write@addr 0020                        sprintf@flag 0034  
                      sprintf@prec 0035            ?_agregarModificarPrecio 0070  
         __size_of_accionesAceptar 0047                     _mostrarDigitos 04E0  
                 ___lwdiv@dividend 0022                           ?___awdiv 0020  
                         ?___awmod 0020                           ?___lwdiv 0020  
                         ?___lwmod 0027                          _auxCuenta 0060  
                        __pstrings 060E                       ??_bailenLeds 0020  
                         ?_envioTX 0022             consultaPrecio@articulo 0020  
                   ?_EEPROM_search 0034                   ___lwdiv@quotient 0025  
              __end_of_ingresoProd 06D2                           ?_sprintf 002C  
                        _modoDebug 0076                          _int_usart 0F32  
           verificacionEntrada@ret 0020     __end_of_agregarModificarPrecio 013E  
                interrupt_function 0004                     ___wmul@product 0074  
           __end_of_mostrarDigitos 0547                          clear_ram0 0C9C  
                      _eeprom_read 0CB8                        bailenLeds@i 0074  
               __end_of_bailenLeds 07DA                           _GO_nDONE 00FA  
                  verificarProd@tp 002C             ??_accionesPuertoSerial 00A0  
                 ??_lecturaComando 0076                    _lecturaConsulta 05AB  
                      __stringbase 061D                  ___wmul@multiplier 0020  
                  _lecturaEtiqueta 0232                 lecturaEtiqueta@Aux 0043  
                    _codigoEntrada 0063                cierreDeLote@strLote 003E  
                       ?_int_usart 0070                    ?_mostrarDigitos 002C  
                       _EECON1bits 018C                       ??_lecturaMas 0076  
                ??_accionesAceptar 0030                   __size_of___awdiv 0069  
                 __size_of___awmod 005B                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                 __end_of__stringtab 061E  
                  ??_EEPROM_search 0036                        _ingresoProd 0670  
                       sprintf@val 0036                   __size_of_envioTX 0039  
                         _adresult 00CA                           _main$966 00B5  
                  ___lwdiv@divisor 0020                       pow@resultado 002A  
                  ___lwdiv@counter 0024                           __ptext10 0D4A  
                         __ptext11 0DD7                           __ptext20 0CE6  
                         __ptext12 0DA5                           __ptext21 0CB8  
                         __ptext13 0324                           __ptext30 078F  
                         __ptext22 0E7C                           __ptext14 0E09  
                         __ptext31 0F32                           __ptext23 06D2  
                         __ptext15 07DA                           __ptext24 0E42  
                         __ptext16 0030                           __ptext25 0D23  
                         __ptext17 0D74                           __ptext26 0FB9  
                         __ptext18 0CCF                           __ptext27 04E0  
                         __ptext19 05AB                           __ptext28 0EB7  
                         __ptext29 0F73                 __end_of_lecturaMas 0D74  
                 __size_of_sprintf 00EA                      __size_of_main 00F4  
                        pow@numero 0024             __size_of_verificarProd 0064  
                    ingresoProd@tp 002C                      ?_cierreDeLote 0070  
          __end_of_lecturaConsulta 060E            __end_of_lecturaEtiqueta 0324  
                         envioTX@i 0027                         _INTCONbits 000B  
agregarModificarPrecio@lower_8bits 002E                           intlevel1 0000  
                        sprintf@ap 0033                        ??_int_usart 0070  
                        sprintf@sp 0038                   ___lwmod@dividend 0029  
        __size_of_accionesDeshacer 003B                     ??_cierreDeLote 003A  
                        stringcode 0618                  mostrarDigitos@num 002C  
                         sprintf@c 0039                           sprintf@f 002C  
                    _verificarProd 0547                    ___lwmod@divisor 0027  
                         strlen@cp 0020                    ___lwmod@counter 002B  
                         stringdir 0618                           stringtab 060E  
     __size_of_verificacionEntrada 0032                      ?_eeprom_write 0074  
                       _STATUSbits 0003                       ?_eeprom_read 0070  
