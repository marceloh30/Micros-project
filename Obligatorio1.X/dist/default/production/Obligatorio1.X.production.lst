

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 26 16:44:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.10
    42                           ; Generated 31/07/2019 GMT
    43                           ; 
    44                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  0087                     	;# 
   234  0088                     	;# 
   235  0089                     	;# 
   236  008C                     	;# 
   237  008D                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  010F                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255                           
   256                           	psect	idataCOMMON
   257  06D4                     __pidataCOMMON:	
   258                           
   259                           ;initializer for _nroLote
   260  06D4  3401               	retlw	1
   261                           
   262                           	psect	strings
   263  06A3                     __pstrings:	
   264  06A3                     stringtab:	
   265  06A3                     __stringtab:	
   266  06A3                     stringcode:	
   267                           ;	String table - string pointers are 1 byte each
   268                           
   269  06A3                     stringdir:	
   270  06A3  3006               	movlw	high stringdir
   271  06A4  008A               	movwf	10
   272  06A5  0804               	movf	4,w
   273  06A6  0A84               	incf	4,f
   274  06A7  0782               	addwf	2,f
   275  06A8                     __stringbase:	
   276  06A8  3400               	retlw	0
   277  06A9                     __end_of__stringtab:	
   278  06A9                     _BMS:	
   279  06A9  3400               	retlw	0
   280  06AA  3410               	retlw	16
   281  06AB  3420               	retlw	32
   282  06AC  3430               	retlw	48
   283  06AD  3440               	retlw	64
   284  06AE  3450               	retlw	80
   285  06AF  3460               	retlw	96
   286  06B0  3470               	retlw	112
   287  06B1  3480               	retlw	128
   288  06B2  3490               	retlw	144
   289  06B3                     __end_of_BMS:	
   290  001A                     _RCREG	set	26
   291  000B                     _INTCON	set	11
   292  0018                     _RCSTA	set	24
   293  0008                     _PORTD	set	8
   294  0006                     _PORTB	set	6
   295  0065                     _RCIF	set	101
   296  002A                     _RA2	set	42
   297  0029                     _RA1	set	41
   298  002D                     _RA5	set	45
   299  002B                     _RA3	set	43
   300  0088                     _TRISD	set	136
   301  0086                     _TRISB	set	134
   302  0085                     _TRISA	set	133
   303  009F                     _ADCON1	set	159
   304  0099                     _SPBRG	set	153
   305  0098                     _TXSTA	set	152
   306  0087                     _TRISC	set	135
   307  0465                     _RCIE	set	1125
   308  010C                     _EEDATA	set	268
   309  010D                     _EEADR	set	269
   310  018C                     _EECON1	set	396
   311  018C                     _EECON1bits	set	396
   312                           
   313                           ; #config settings
   314  0000                     
   315                           	psect	cinit
   316  0011                     start_initialization:	
   317  0011                     __initialization:	
   318                           
   319                           ; Initialize objects allocated to COMMON
   320  0011  120A  118A  26D4  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   321  0016  00F9               	movwf	__pdataCOMMON& (0+127)
   322                           
   323                           ; Clear objects allocated to BANK0
   324  0017  1383               	bcf	3,7	;select IRP bank0
   325  0018  3048               	movlw	low __pbssBANK0
   326  0019  0084               	movwf	4
   327  001A  306C               	movlw	low (__pbssBANK0+36)
   328  001B  120A  118A  26CC  120A  118A  	fcall	clear_ram0
   329                           
   330                           ; Clear objects allocated to COMMON
   331  0020  01F7               	clrf	__pbssCOMMON& (0+127)
   332  0021  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   333  0022                     end_of_initialization:	
   334                           ;End of C runtime variable initialization code
   335                           
   336  0022                     __end_of__initialization:	
   337  0022  0183               	clrf	3
   338  0023  120A  118A  2BB8   	ljmp	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMMON
   341  0077                     __pbssCOMMON:	
   342  0077                     _modoDebug:	
   343  0077                     	ds	1
   344  0078                     _serial:	
   345  0078                     	ds	1
   346                           
   347                           	psect	dataCOMMON
   348  0079                     __pdataCOMMON:	
   349  0079                     _nroLote:	
   350  0079                     	ds	1
   351                           
   352                           	psect	bssBANK0
   353  0048                     __pbssBANK0:	
   354  0048                     _prodIngresados:	
   355  0048                     	ds	13
   356  0055                     _montosLote:	
   357  0055                     	ds	2
   358  0057                     _numProd:	
   359  0057                     	ds	2
   360  0059                     _productoIngresado:	
   361  0059                     	ds	2
   362  005B                     _huboInt:	
   363  005B                     	ds	2
   364  005D                     _auxCuenta:	
   365  005D                     	ds	2
   366  005F                     _cuenta:	
   367  005F                     	ds	2
   368  0061                     _ventasLote:	
   369  0061                     	ds	1
   370  0062                     _codigoEntrada:	
   371  0062                     	ds	10
   372                           
   373                           	psect	clrtext
   374  06CC                     clear_ram0:	
   375                           ;	Called with FSR containing the base address, and
   376                           ;	W with the last address+1
   377                           
   378  06CC  0064               	clrwdt	;clear the watchdog before getting into this loop
   379  06CD                     clrloop0:	
   380  06CD  0180               	clrf	0	;clear RAM location pointed to by FSR
   381  06CE  0A84               	incf	4,f	;increment pointer
   382  06CF  0604               	xorwf	4,w	;XOR with final address
   383  06D0  1903               	btfsc	3,2	;have we reached the end yet?
   384  06D1  3400               	retlw	0	;all done for this memory range, return
   385  06D2  0604               	xorwf	4,w	;XOR again to restore value
   386  06D3  2ECD               	goto	clrloop0	;do the next byte
   387                           
   388                           	psect	cstackCOMMON
   389  0070                     __pcstackCOMMON:	
   390  0070                     ?_eeprom_read:	
   391  0070                     ?_iniciar_usart:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_bailenLeds:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_accionesAceptar:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_accionesDeshacer:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_lecturaEtiqueta:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_lecturaMas:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_lecturaMenos:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_lecturaComando:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_accionesPuertoSerial:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_main:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_int_usart:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_int_usart:	
   425                           ; 1 bytes @ 0x0
   426                           
   427                           
   428                           ; 1 bytes @ 0x0
   429  0070                     	ds	4
   430  0074                     ??_eeprom_read:	
   431  0074                     ??_iniciar_usart:	
   432                           ; 1 bytes @ 0x4
   433                           
   434  0074                     ??_bailenLeds:	
   435                           ; 1 bytes @ 0x4
   436                           
   437  0074                     ??_lecturaMenos:	
   438                           ; 1 bytes @ 0x4
   439                           
   440  0074                     ??___wmul:	
   441                           ; 1 bytes @ 0x4
   442                           
   443  0074                     ?___bmul:	
   444                           ; 1 bytes @ 0x4
   445                           
   446  0074                     ??___awdiv:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     ??___awmod:	
   450                           ; 1 bytes @ 0x4
   451                           
   452  0074                     ??___lwmod:	
   453                           ; 1 bytes @ 0x4
   454                           
   455  0074                     ?_verificacionEntrada:	
   456                           ; 1 bytes @ 0x4
   457                           
   458  0074                     ___bmul@multiplicand:	
   459                           ; 2 bytes @ 0x4
   460                           
   461  0074                     ___wmul@product:	
   462                           ; 1 bytes @ 0x4
   463                           
   464                           
   465                           ; 2 bytes @ 0x4
   466  0074                     	ds	1
   467  0075                     ??___bmul:	
   468  0075                     eeprom_read@addr:	
   469                           ; 1 bytes @ 0x5
   470                           
   471  0075                     ___awmod@counter:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     ___lwmod@counter:	
   475                           ; 1 bytes @ 0x5
   476                           
   477                           
   478                           ; 1 bytes @ 0x5
   479  0075                     	ds	1
   480  0076                     ??_pow:	
   481  0076                     ??_verificacionEntrada:	
   482                           ; 1 bytes @ 0x6
   483                           
   484  0076                     ??_lecturaMas:	
   485                           ; 1 bytes @ 0x6
   486                           
   487  0076                     ??_lecturaComando:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ??___lwdiv:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     ___awmod@sign:	
   494                           ; 1 bytes @ 0x6
   495                           
   496                           
   497                           ; 1 bytes @ 0x6
   498  0076                     	ds	1
   499  0077                     ??_mostrarDigitos:	
   500  0077                     ??_accionesDeshacer:	
   501                           ; 1 bytes @ 0x7
   502                           
   503  0077                     ??_main:	
   504                           ; 1 bytes @ 0x7
   505                           
   506                           
   507                           	psect	cstackBANK0
   508  0020                     __pcstackBANK0:	
   509                           ; 1 bytes @ 0x7
   510                           
   511  0020                     ?___wmul:	
   512  0020                     ?___awdiv:	
   513                           ; 2 bytes @ 0x0
   514                           
   515  0020                     ?___awmod:	
   516                           ; 2 bytes @ 0x0
   517                           
   518  0020                     ?___lwmod:	
   519                           ; 2 bytes @ 0x0
   520                           
   521  0020                     ___bmul@product:	
   522                           ; 2 bytes @ 0x0
   523                           
   524  0020                     bailenLeds@i:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0020                     verificacionEntrada@ret:	
   528                           ; 2 bytes @ 0x0
   529                           
   530  0020                     ___wmul@multiplier:	
   531                           ; 2 bytes @ 0x0
   532                           
   533  0020                     ___awdiv@divisor:	
   534                           ; 2 bytes @ 0x0
   535                           
   536  0020                     ___awmod@divisor:	
   537                           ; 2 bytes @ 0x0
   538                           
   539  0020                     ___lwmod@divisor:	
   540                           ; 2 bytes @ 0x0
   541                           
   542                           
   543                           ; 2 bytes @ 0x0
   544  0020                     	ds	1
   545  0021                     ___bmul@multiplier:	
   546                           
   547                           ; 1 bytes @ 0x1
   548  0021                     	ds	1
   549  0022                     verificacionEntrada@i:	
   550  0022                     ___wmul@multiplicand:	
   551                           ; 2 bytes @ 0x2
   552                           
   553  0022                     ___awdiv@dividend:	
   554                           ; 2 bytes @ 0x2
   555                           
   556  0022                     ___awmod@dividend:	
   557                           ; 2 bytes @ 0x2
   558                           
   559  0022                     ___lwmod@dividend:	
   560                           ; 2 bytes @ 0x2
   561                           
   562                           
   563                           ; 2 bytes @ 0x2
   564  0022                     	ds	2
   565  0024                     ?_pow:	
   566  0024                     ?___lwdiv:	
   567                           ; 2 bytes @ 0x4
   568                           
   569  0024                     ___awdiv@counter:	
   570                           ; 2 bytes @ 0x4
   571                           
   572  0024                     pow@numero:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     ___lwdiv@divisor:	
   576                           ; 2 bytes @ 0x4
   577                           
   578                           
   579                           ; 2 bytes @ 0x4
   580  0024                     	ds	1
   581  0025                     ___awdiv@sign:	
   582                           
   583                           ; 1 bytes @ 0x5
   584  0025                     	ds	1
   585  0026                     pow@potencia:	
   586  0026                     ___awdiv@quotient:	
   587                           ; 2 bytes @ 0x6
   588                           
   589  0026                     ___lwdiv@dividend:	
   590                           ; 2 bytes @ 0x6
   591                           
   592                           
   593                           ; 2 bytes @ 0x6
   594  0026                     	ds	2
   595  0028                     ___lwdiv@counter:	
   596  0028                     pow@i:	
   597                           ; 1 bytes @ 0x8
   598                           
   599                           
   600                           ; 2 bytes @ 0x8
   601  0028                     	ds	1
   602  0029                     ___lwdiv@quotient:	
   603                           
   604                           ; 2 bytes @ 0x9
   605  0029                     	ds	1
   606  002A                     pow@resultado:	
   607                           
   608                           ; 2 bytes @ 0xA
   609  002A                     	ds	1
   610  002B                     ?_mostrarDigitos:	
   611  002B                     mostrarDigitos@num:	
   612                           ; 1 bytes @ 0xB
   613                           
   614                           
   615                           ; 2 bytes @ 0xB
   616  002B                     	ds	1
   617  002C                     ?_ingresoProd:	
   618  002C                     ?_verificarProd:	
   619                           ; 1 bytes @ 0xC
   620                           
   621  002C                     ?_eliminarProd:	
   622                           ; 1 bytes @ 0xC
   623                           
   624  002C                     ingresoProd@tp:	
   625                           ; 1 bytes @ 0xC
   626                           
   627  002C                     verificarProd@tp:	
   628                           ; 2 bytes @ 0xC
   629                           
   630  002C                     eliminarProd@tp:	
   631                           ; 2 bytes @ 0xC
   632                           
   633                           
   634                           ; 2 bytes @ 0xC
   635  002C                     	ds	1
   636  002D                     _mostrarDigitos$777:	
   637                           
   638                           ; 2 bytes @ 0xD
   639  002D                     	ds	1
   640  002E                     ??_ingresoProd:	
   641  002E                     ??_verificarProd:	
   642                           ; 1 bytes @ 0xE
   643                           
   644  002E                     ??_eliminarProd:	
   645                           ; 1 bytes @ 0xE
   646                           
   647                           
   648                           ; 1 bytes @ 0xE
   649  002E                     	ds	1
   650  002F                     ??_accionesAceptar:	
   651                           
   652                           ; 1 bytes @ 0xF
   653  002F                     	ds	1
   654  0030                     accionesAceptar@i:	
   655                           
   656                           ; 2 bytes @ 0x10
   657  0030                     	ds	1
   658  0031                     verificarProd@ret:	
   659  0031                     ingresoProd@i:	
   660                           ; 1 bytes @ 0x11
   661                           
   662  0031                     eliminarProd@i:	
   663                           ; 2 bytes @ 0x11
   664                           
   665                           
   666                           ; 2 bytes @ 0x11
   667  0031                     	ds	1
   668  0032                     verificarProd@i:	
   669                           
   670                           ; 2 bytes @ 0x12
   671  0032                     	ds	2
   672  0034                     ?_EEPROM_search:	
   673                           
   674                           ; 2 bytes @ 0x14
   675  0034                     	ds	2
   676  0036                     ??_EEPROM_search:	
   677                           
   678                           ; 1 bytes @ 0x16
   679  0036                     	ds	4
   680  003A                     EEPROM_search@precio:	
   681                           
   682                           ; 2 bytes @ 0x1A
   683  003A                     	ds	2
   684  003C                     EEPROM_search@tp:	
   685                           
   686                           ; 1 bytes @ 0x1C
   687  003C                     	ds	1
   688  003D                     ??_lecturaEtiqueta:	
   689                           
   690                           ; 1 bytes @ 0x1D
   691  003D                     	ds	3
   692  0040                     lecturaEtiqueta@i:	
   693                           
   694                           ; 2 bytes @ 0x20
   695  0040                     	ds	2
   696  0042                     lecturaEtiqueta@tp:	
   697                           
   698                           ; 1 bytes @ 0x22
   699  0042                     	ds	1
   700  0043                     lecturaEtiqueta@Aux:	
   701                           
   702                           ; 2 bytes @ 0x23
   703  0043                     	ds	2
   704  0045                     ??_accionesPuertoSerial:	
   705                           
   706                           ; 1 bytes @ 0x25
   707  0045                     	ds	3
   708                           
   709                           	psect	maintext
   710  03B8                     __pmaintext:	
   711 ;;
   712 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   713 ;;
   714 ;; *************** function _main *****************
   715 ;; Defined at:
   716 ;;		line 283 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : B00/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0
   733 ;;      Totals:         0       0       0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels required when called:    7
   736 ;; This function calls:
   737 ;;		_accionesAceptar
   738 ;;		_accionesDeshacer
   739 ;;		_accionesPuertoSerial
   740 ;;		_iniciar_usart
   741 ;;		_mostrarDigitos
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _main
   749  03B8                     _main:	
   750  03B8                     l2138:	
   751                           ;incstack = 0
   752                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   753                           
   754                           
   755                           ;main.c: 286:     ADCON1 = 0b00000111;
   756  03B8  3007               	movlw	7
   757  03B9  1683               	bsf	3,5	;RP0=1, select bank1
   758  03BA  1303               	bcf	3,6	;RP1=0, select bank1
   759  03BB  009F               	movwf	31	;volatile
   760                           
   761                           ;main.c: 287:     TRISA = 0x06;
   762  03BC  3006               	movlw	6
   763  03BD  0085               	movwf	5	;volatile
   764  03BE                     l2140:	
   765                           
   766                           ;main.c: 288:     TRISB = 0x00;
   767  03BE  0186               	clrf	6	;volatile
   768  03BF                     l2142:	
   769                           
   770                           ;main.c: 289:     TRISD = 0x00;
   771  03BF  0188               	clrf	8	;volatile
   772                           
   773                           ;main.c: 290:     INTCON = 0b11000000;
   774  03C0  30C0               	movlw	192
   775  03C1  008B               	movwf	11	;volatile
   776  03C2                     l2144:	
   777                           
   778                           ;main.c: 291:     RCIE = 1;
   779  03C2  168C               	bsf	12,5	;volatile
   780  03C3                     l2146:	
   781                           
   782                           ;main.c: 292:     iniciar_usart();
   783  03C3  120A  118A  26B3  120A  118A  	fcall	_iniciar_usart
   784  03C8                     l2148:	
   785                           
   786                           ;main.c: 293:     cuenta = 0;
   787  03C8  1283               	bcf	3,5	;RP0=0, select bank0
   788  03C9  1303               	bcf	3,6	;RP1=0, select bank0
   789  03CA  01DF               	clrf	_cuenta
   790  03CB  01E0               	clrf	_cuenta+1
   791  03CC                     l2150:	
   792                           
   793                           ;main.c: 294:     auxCuenta = 0;
   794  03CC  01DD               	clrf	_auxCuenta
   795  03CD  01DE               	clrf	_auxCuenta+1
   796  03CE                     l2152:	
   797                           
   798                           ;main.c: 295:     mostrarDigitos(cuenta);
   799  03CE  0860               	movf	_cuenta+1,w
   800  03CF  00AC               	movwf	mostrarDigitos@num+1
   801  03D0  085F               	movf	_cuenta,w
   802  03D1  00AB               	movwf	mostrarDigitos@num
   803  03D2  120A  118A  21CE  120A  118A  	fcall	_mostrarDigitos
   804  03D7                     l2154:	
   805                           
   806                           ;main.c: 301:         if(RA1) {
   807  03D7  1283               	bcf	3,5	;RP0=0, select bank0
   808  03D8  1303               	bcf	3,6	;RP1=0, select bank0
   809  03D9  1C85               	btfss	5,1	;volatile
   810  03DA  2BDC               	goto	u2331
   811  03DB  2BDD               	goto	u2330
   812  03DC                     u2331:	
   813  03DC  2BE7               	goto	l172
   814  03DD                     u2330:	
   815  03DD                     l173:	
   816  03DD  1885               	btfsc	5,1	;volatile
   817  03DE  2BE0               	goto	u2341
   818  03DF  2BE1               	goto	u2340
   819  03E0                     u2341:	
   820  03E0  2BDD               	goto	l173
   821  03E1                     u2340:	
   822  03E1                     l2158:	
   823                           
   824                           ;main.c: 303:             accionesAceptar();
   825  03E1  120A  118A  24D1  120A  118A  	fcall	_accionesAceptar
   826                           
   827                           ;main.c: 304:         }
   828  03E6  2BD7               	goto	l2154
   829  03E7                     l172:	
   830                           ;main.c: 305:         else if(RA2) {
   831                           
   832  03E7  1D05               	btfss	5,2	;volatile
   833  03E8  2BEA               	goto	u2351
   834  03E9  2BEB               	goto	u2350
   835  03EA                     u2351:	
   836  03EA  2BF5               	goto	l2164
   837  03EB                     u2350:	
   838  03EB                     l178:	
   839  03EB  1905               	btfsc	5,2	;volatile
   840  03EC  2BEE               	goto	u2361
   841  03ED  2BEF               	goto	u2360
   842  03EE                     u2361:	
   843  03EE  2BEB               	goto	l178
   844  03EF                     u2360:	
   845  03EF                     l2162:	
   846                           
   847                           ;main.c: 307:             accionesDeshacer();
   848  03EF  120A  118A  2614  120A  118A  	fcall	_accionesDeshacer
   849                           
   850                           ;main.c: 308:         }
   851  03F4  2BD7               	goto	l2154
   852  03F5                     l2164:	
   853  03F5  085B               	movf	_huboInt,w
   854  03F6  045C               	iorwf	_huboInt+1,w
   855  03F7  1903               	btfsc	3,2
   856  03F8  2BFA               	goto	u2371
   857  03F9  2BFB               	goto	u2370
   858  03FA                     u2371:	
   859  03FA  2C03               	goto	l176
   860  03FB                     u2370:	
   861  03FB                     l2166:	
   862                           
   863                           ;main.c: 310:             huboInt = 0;
   864  03FB  01DB               	clrf	_huboInt
   865  03FC  01DC               	clrf	_huboInt+1
   866  03FD                     l2168:	
   867                           
   868                           ;main.c: 311:             accionesPuertoSerial();
   869  03FD  120A  118A  2492  120A  118A  	fcall	_accionesPuertoSerial
   870  0402  2BD7               	goto	l2154
   871  0403                     l176:	
   872  0403  2BD7               	goto	l2154
   873  0404  120A  118A  280E   	ljmp	start
   874  0407                     __end_of_main:	
   875                           
   876                           	psect	text1
   877  06B3                     __ptext1:	
   878 ;; *************** function _iniciar_usart *****************
   879 ;; Defined at:
   880 ;;		line 120 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _iniciar_usart
   910  06B3                     _iniciar_usart:	
   911  06B3                     l1630:	
   912                           ;incstack = 0
   913                           ; Regs used in _iniciar_usart: [wreg]
   914                           
   915                           
   916                           ;main.c: 121:      TRISC = 0b10000000;
   917  06B3  3080               	movlw	128
   918  06B4  1683               	bsf	3,5	;RP0=1, select bank1
   919  06B5  1303               	bcf	3,6	;RP1=0, select bank1
   920  06B6  0087               	movwf	7	;volatile
   921                           
   922                           ;main.c: 122:      TXSTA = 0b00100110;
   923  06B7  3026               	movlw	38
   924  06B8  0098               	movwf	24	;volatile
   925                           
   926                           ;main.c: 123:      RCSTA = 0b10010000;
   927  06B9  3090               	movlw	144
   928  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   929  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   930  06BC  0098               	movwf	24	;volatile
   931                           
   932                           ;main.c: 124:      SPBRG = 25;
   933  06BD  3019               	movlw	25
   934  06BE  1683               	bsf	3,5	;RP0=1, select bank1
   935  06BF  1303               	bcf	3,6	;RP1=0, select bank1
   936  06C0  0099               	movwf	25	;volatile
   937  06C1                     l99:	
   938  06C1  0008               	return
   939  06C2                     __end_of_iniciar_usart:	
   940                           
   941                           	psect	text2
   942  0492                     __ptext2:	
   943 ;; *************** function _accionesPuertoSerial *****************
   944 ;; Defined at:
   945 ;;		line 267 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0
   961 ;;      Temps:          0       3       0       0       0
   962 ;;      Totals:         0       3       0       0       0
   963 ;;Total ram usage:        3 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    6
   966 ;; This function calls:
   967 ;;		_lecturaComando
   968 ;;		_lecturaEtiqueta
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _accionesPuertoSerial
   976  0492                     _accionesPuertoSerial:	
   977  0492                     l2120:	
   978                           ;incstack = 0
   979                           ; Regs used in _accionesPuertoSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
   980                           
   981                           
   982                           ;main.c: 268:     if ((codigoEntrada[0] == '?') || (codigoEntrada[0] == '+') || (codigoE
      +                          ntrada[0] == '-')){
   983  0492  303F               	movlw	63
   984  0493  1283               	bcf	3,5	;RP0=0, select bank0
   985  0494  1303               	bcf	3,6	;RP1=0, select bank0
   986  0495  0662               	xorwf	_codigoEntrada,w
   987  0496  1903               	btfsc	3,2
   988  0497  2C99               	goto	u2281
   989  0498  2C9A               	goto	u2280
   990  0499                     u2281:	
   991  0499  2CA6               	goto	l2126
   992  049A                     u2280:	
   993  049A                     l2122:	
   994  049A  302B               	movlw	43
   995  049B  0662               	xorwf	_codigoEntrada,w
   996  049C  1903               	btfsc	3,2
   997  049D  2C9F               	goto	u2291
   998  049E  2CA0               	goto	u2290
   999  049F                     u2291:	
  1000  049F  2CA6               	goto	l2126
  1001  04A0                     u2290:	
  1002  04A0                     l2124:	
  1003  04A0  302D               	movlw	45
  1004  04A1  0662               	xorwf	_codigoEntrada,w
  1005  04A2  1D03               	btfss	3,2
  1006  04A3  2CA5               	goto	u2301
  1007  04A4  2CA6               	goto	u2300
  1008  04A5                     u2301:	
  1009  04A5  2CAC               	goto	l2128
  1010  04A6                     u2300:	
  1011  04A6                     l2126:	
  1012                           
  1013                           ;main.c: 269:         lecturaComando();
  1014  04A6  120A  118A  265A  120A  118A  	fcall	_lecturaComando
  1015                           
  1016                           ;main.c: 270:     }
  1017  04AB  2CD0               	goto	l166
  1018  04AC                     l2128:	
  1019  04AC  303A               	movlw	58
  1020  04AD  0262               	subwf	_codigoEntrada,w
  1021  04AE  1803               	skipnc
  1022  04AF  2CB1               	goto	u2311
  1023  04B0  2CB2               	goto	u2310
  1024  04B1                     u2311:	
  1025  04B1  2CBE               	goto	l164
  1026  04B2                     u2310:	
  1027  04B2                     l2130:	
  1028  04B2  3030               	movlw	48
  1029  04B3  0262               	subwf	_codigoEntrada,w
  1030  04B4  1C03               	skipc
  1031  04B5  2CB7               	goto	u2321
  1032  04B6  2CB8               	goto	u2320
  1033  04B7                     u2321:	
  1034  04B7  2CBE               	goto	l164
  1035  04B8                     u2320:	
  1036  04B8                     l2132:	
  1037                           
  1038                           ;main.c: 272:         lecturaEtiqueta();
  1039  04B8  120A  118A  2026  120A  118A  	fcall	_lecturaEtiqueta
  1040                           
  1041                           ;main.c: 273:     }
  1042  04BD  2CD0               	goto	l166
  1043  04BE                     l164:	
  1044                           ;main.c: 274:     else{
  1045                           
  1046                           
  1047                           ;main.c: 276:         RA5 = 1;
  1048  04BE  1685               	bsf	5,5	;volatile
  1049  04BF                     l2134:	
  1050                           
  1051                           ;main.c: 277:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1052  04BF  3006               	movlw	6
  1053  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1054  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1055  04C2  00C7               	movwf	??_accionesPuertoSerial+2
  1056  04C3  3013               	movlw	19
  1057  04C4  00C6               	movwf	??_accionesPuertoSerial+1
  1058  04C5  30AD               	movlw	173
  1059  04C6  00C5               	movwf	??_accionesPuertoSerial
  1060  04C7                     u2387:	
  1061  04C7  0BC5               	decfsz	??_accionesPuertoSerial,f
  1062  04C8  2CC7               	goto	u2387
  1063  04C9  0BC6               	decfsz	??_accionesPuertoSerial+1,f
  1064  04CA  2CC7               	goto	u2387
  1065  04CB  0BC7               	decfsz	??_accionesPuertoSerial+2,f
  1066  04CC  2CC7               	goto	u2387
  1067  04CD                     l2136:	
  1068                           
  1069                           ;main.c: 278:         RA5 = 0;
  1070  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1071  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1072  04CF  1285               	bcf	5,5	;volatile
  1073  04D0                     l166:	
  1074  04D0  0008               	return
  1075  04D1                     __end_of_accionesPuertoSerial:	
  1076                           
  1077                           	psect	text3
  1078  0026                     __ptext3:	
  1079 ;; *************** function _lecturaEtiqueta *****************
  1080 ;; Defined at:
  1081 ;;		line 178 in file "main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  tp              1   34[BANK0 ] unsigned char 
  1086 ;;  i               2   32[BANK0 ] int 
  1087 ;;  Aux             2   35[BANK0 ] short 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       5       0       0       0
  1099 ;;      Temps:          0       3       0       0       0
  1100 ;;      Totals:         0       8       0       0       0
  1101 ;;Total ram usage:        8 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    5
  1104 ;; This function calls:
  1105 ;;		_EEPROM_search
  1106 ;;		___awmod
  1107 ;;		___bmul
  1108 ;;		_ingresoProd
  1109 ;;		_mostrarDigitos
  1110 ;; This function is called by:
  1111 ;;		_accionesPuertoSerial
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function _lecturaEtiqueta
  1117  0026                     _lecturaEtiqueta:	
  1118  0026                     l2030:	
  1119                           ;incstack = 0
  1120                           ; Regs used in _lecturaEtiqueta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1121                           
  1122                           
  1123                           ;main.c: 179:     short int Aux = 0;
  1124  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0028  01C3               	clrf	lecturaEtiqueta@Aux
  1127  0029  01C4               	clrf	lecturaEtiqueta@Aux+1
  1128                           
  1129                           ;main.c: 182:     for (int i = 0; i < 8; i++ ) {
  1130  002A  01C0               	clrf	lecturaEtiqueta@i
  1131  002B  01C1               	clrf	lecturaEtiqueta@i+1
  1132  002C                     l2036:	
  1133                           
  1134                           ;main.c: 183:         Aux += (codigoEntrada[i] - '0');
  1135  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1136  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1137  002E  0840               	movf	lecturaEtiqueta@i,w
  1138  002F  3E62               	addlw	(low (_codigoEntrada| 0))& (0+255)
  1139  0030  0084               	movwf	4
  1140  0031  1383               	bcf	3,7	;select IRP bank0
  1141  0032  0800               	movf	0,w
  1142  0033  3ED0               	addlw	208
  1143  0034  00BD               	movwf	??_lecturaEtiqueta
  1144  0035  30FF               	movlw	255
  1145  0036  1803               	skipnc
  1146  0037  3000               	movlw	0
  1147  0038  00BE               	movwf	??_lecturaEtiqueta+1
  1148  0039  083D               	movf	??_lecturaEtiqueta,w
  1149  003A  07C3               	addwf	lecturaEtiqueta@Aux,f
  1150  003B  1803               	skipnc
  1151  003C  0AC4               	incf	lecturaEtiqueta@Aux+1,f
  1152  003D  083E               	movf	??_lecturaEtiqueta+1,w
  1153  003E  07C4               	addwf	lecturaEtiqueta@Aux+1,f
  1154  003F                     l2038:	
  1155                           
  1156                           ;main.c: 184:     }
  1157  003F  3001               	movlw	1
  1158  0040  07C0               	addwf	lecturaEtiqueta@i,f
  1159  0041  1803               	skipnc
  1160  0042  0AC1               	incf	lecturaEtiqueta@i+1,f
  1161  0043  3000               	movlw	0
  1162  0044  07C1               	addwf	lecturaEtiqueta@i+1,f
  1163  0045                     l2040:	
  1164  0045  0841               	movf	lecturaEtiqueta@i+1,w
  1165  0046  3A80               	xorlw	128
  1166  0047  00FF               	movwf	btemp+1
  1167  0048  3080               	movlw	128
  1168  0049  027F               	subwf	btemp+1,w
  1169  004A  1D03               	skipz
  1170  004B  284E               	goto	u2205
  1171  004C  3008               	movlw	8
  1172  004D  0240               	subwf	lecturaEtiqueta@i,w
  1173  004E                     u2205:	
  1174  004E  1C03               	skipc
  1175  004F  2851               	goto	u2201
  1176  0050  2852               	goto	u2200
  1177  0051                     u2201:	
  1178  0051  282C               	goto	l2036
  1179  0052                     u2200:	
  1180  0052                     l2042:	
  1181                           
  1182                           ;main.c: 186:     if ( (Aux%10) == (codigoEntrada[8] - '0')) {
  1183  0052  300A               	movlw	10
  1184  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0055  00A0               	movwf	___awmod@divisor
  1187  0056  3000               	movlw	0
  1188  0057  00A1               	movwf	___awmod@divisor+1
  1189  0058  0844               	movf	lecturaEtiqueta@Aux+1,w
  1190  0059  00A3               	movwf	___awmod@dividend+1
  1191  005A  0843               	movf	lecturaEtiqueta@Aux,w
  1192  005B  00A2               	movwf	___awmod@dividend
  1193  005C  120A  118A  235D  120A  118A  	fcall	___awmod
  1194  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0063  086A               	movf	_codigoEntrada+8,w
  1197  0064  3ED0               	addlw	208
  1198  0065  00BD               	movwf	??_lecturaEtiqueta
  1199  0066  30FF               	movlw	255
  1200  0067  1803               	skipnc
  1201  0068  3000               	movlw	0
  1202  0069  00BE               	movwf	??_lecturaEtiqueta+1
  1203  006A  0821               	movf	?___awmod+1,w
  1204  006B  063E               	xorwf	??_lecturaEtiqueta+1,w
  1205  006C  1D03               	skipz
  1206  006D  2870               	goto	u2215
  1207  006E  0820               	movf	?___awmod,w
  1208  006F  063D               	xorwf	??_lecturaEtiqueta,w
  1209  0070                     u2215:	
  1210  0070  1D03               	skipz
  1211  0071  2873               	goto	u2211
  1212  0072  2874               	goto	u2210
  1213  0073                     u2211:	
  1214  0073  28E9               	goto	l125
  1215  0074                     u2210:	
  1216  0074                     l2044:	
  1217                           
  1218                           ;main.c: 188:         unsigned char tp = 10*(codigoEntrada[0]-'0') + (codigoEntrada[1] -
      +                           '0');
  1219  0074  300A               	movlw	10
  1220  0075  00BD               	movwf	??_lecturaEtiqueta
  1221  0076  083D               	movf	??_lecturaEtiqueta,w
  1222  0077  00F4               	movwf	___bmul@multiplicand
  1223  0078  0862               	movf	_codigoEntrada,w
  1224  0079  120A  118A  2675  120A  118A  	fcall	___bmul
  1225  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1226  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0080  0763               	addwf	_codigoEntrada+1,w
  1228  0081  3EF0               	addlw	240
  1229  0082  00BE               	movwf	??_lecturaEtiqueta+1
  1230  0083  083E               	movf	??_lecturaEtiqueta+1,w
  1231  0084  00C2               	movwf	lecturaEtiqueta@tp
  1232  0085                     l2046:	
  1233                           
  1234                           ;main.c: 189:         Aux = EEPROM_search(tp);
  1235  0085  0842               	movf	lecturaEtiqueta@tp,w
  1236  0086  120A  118A  20FC  120A  118A  	fcall	_EEPROM_search
  1237  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1238  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1239  008D  0835               	movf	?_EEPROM_search+1,w
  1240  008E  00C4               	movwf	lecturaEtiqueta@Aux+1
  1241  008F  0834               	movf	?_EEPROM_search,w
  1242  0090  00C3               	movwf	lecturaEtiqueta@Aux
  1243  0091                     l2048:	
  1244                           
  1245                           ;main.c: 191:         if ((cuenta + Aux) <= 999 && Aux != -1) {
  1246  0091  085F               	movf	_cuenta,w
  1247  0092  0743               	addwf	lecturaEtiqueta@Aux,w
  1248  0093  00BD               	movwf	??_lecturaEtiqueta
  1249  0094  0860               	movf	_cuenta+1,w
  1250  0095  1803               	skipnc
  1251  0096  0A60               	incf	_cuenta+1,w
  1252  0097  0744               	addwf	lecturaEtiqueta@Aux+1,w
  1253  0098  00BE               	movwf	??_lecturaEtiqueta+1
  1254  0099  3003               	movlw	3
  1255  009A  023E               	subwf	??_lecturaEtiqueta+1,w
  1256  009B  30E8               	movlw	232
  1257  009C  1903               	skipnz
  1258  009D  023D               	subwf	??_lecturaEtiqueta,w
  1259  009E  1803               	skipnc
  1260  009F  28A1               	goto	u2221
  1261  00A0  28A2               	goto	u2220
  1262  00A1                     u2221:	
  1263  00A1  28E9               	goto	l125
  1264  00A2                     u2220:	
  1265  00A2                     l2050:	
  1266  00A2  0A43               	incf	lecturaEtiqueta@Aux,w
  1267  00A3  1D03               	skipz
  1268  00A4  28AA               	goto	u2230
  1269  00A5  0A44               	incf	lecturaEtiqueta@Aux+1,w
  1270  00A6  1903               	btfsc	3,2
  1271  00A7  28A9               	goto	u2231
  1272  00A8  28AA               	goto	u2230
  1273  00A9                     u2231:	
  1274  00A9  28E9               	goto	l125
  1275  00AA                     u2230:	
  1276  00AA                     l2052:	
  1277                           
  1278                           ;main.c: 192:             tp--;
  1279  00AA  3001               	movlw	1
  1280  00AB  02C2               	subwf	lecturaEtiqueta@tp,f
  1281  00AC                     l2054:	
  1282                           
  1283                           ;main.c: 193:             ingresoProd(tp);
  1284  00AC  0842               	movf	lecturaEtiqueta@tp,w
  1285  00AD  00BD               	movwf	??_lecturaEtiqueta
  1286  00AE  01BE               	clrf	??_lecturaEtiqueta+1
  1287  00AF  083D               	movf	??_lecturaEtiqueta,w
  1288  00B0  00AC               	movwf	ingresoProd@tp
  1289  00B1  083E               	movf	??_lecturaEtiqueta+1,w
  1290  00B2  00AD               	movwf	ingresoProd@tp+1
  1291  00B3  120A  118A  2299  120A  118A  	fcall	_ingresoProd
  1292  00B8                     l2056:	
  1293                           
  1294                           ;main.c: 194:             productoIngresado = tp;
  1295  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1296  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1297  00BA  0842               	movf	lecturaEtiqueta@tp,w
  1298  00BB  00BD               	movwf	??_lecturaEtiqueta
  1299  00BC  01BE               	clrf	??_lecturaEtiqueta+1
  1300  00BD  083D               	movf	??_lecturaEtiqueta,w
  1301  00BE  00D9               	movwf	_productoIngresado
  1302  00BF  083E               	movf	??_lecturaEtiqueta+1,w
  1303  00C0  00DA               	movwf	_productoIngresado+1
  1304  00C1                     l2058:	
  1305                           
  1306                           ;main.c: 195:             auxCuenta = cuenta;
  1307  00C1  0860               	movf	_cuenta+1,w
  1308  00C2  00DE               	movwf	_auxCuenta+1
  1309  00C3  085F               	movf	_cuenta,w
  1310  00C4  00DD               	movwf	_auxCuenta
  1311  00C5                     l2060:	
  1312                           
  1313                           ;main.c: 196:             cuenta += Aux;
  1314  00C5  0843               	movf	lecturaEtiqueta@Aux,w
  1315  00C6  07DF               	addwf	_cuenta,f
  1316  00C7  1803               	skipnc
  1317  00C8  0AE0               	incf	_cuenta+1,f
  1318  00C9  0844               	movf	lecturaEtiqueta@Aux+1,w
  1319  00CA  07E0               	addwf	_cuenta+1,f
  1320  00CB                     l2062:	
  1321                           
  1322                           ;main.c: 197:             mostrarDigitos(cuenta);
  1323  00CB  0860               	movf	_cuenta+1,w
  1324  00CC  00AC               	movwf	mostrarDigitos@num+1
  1325  00CD  085F               	movf	_cuenta,w
  1326  00CE  00AB               	movwf	mostrarDigitos@num
  1327  00CF  120A  118A  21CE  120A  118A  	fcall	_mostrarDigitos
  1328  00D4                     l2064:	
  1329                           
  1330                           ;main.c: 198:             RA3 = 1;
  1331  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1332  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1333  00D6  1585               	bsf	5,3	;volatile
  1334  00D7                     l2066:	
  1335                           
  1336                           ;main.c: 199:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  1337  00D7  3006               	movlw	6
  1338  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1339  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1340  00DA  00BF               	movwf	??_lecturaEtiqueta+2
  1341  00DB  3013               	movlw	19
  1342  00DC  00BE               	movwf	??_lecturaEtiqueta+1
  1343  00DD  30AD               	movlw	173
  1344  00DE  00BD               	movwf	??_lecturaEtiqueta
  1345  00DF                     u2397:	
  1346  00DF  0BBD               	decfsz	??_lecturaEtiqueta,f
  1347  00E0  28DF               	goto	u2397
  1348  00E1  0BBE               	decfsz	??_lecturaEtiqueta+1,f
  1349  00E2  28DF               	goto	u2397
  1350  00E3  0BBF               	decfsz	??_lecturaEtiqueta+2,f
  1351  00E4  28DF               	goto	u2397
  1352  00E5                     l2068:	
  1353                           
  1354                           ;main.c: 200:             RA3 = 0;
  1355  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1356  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1357  00E7  1185               	bcf	5,3	;volatile
  1358                           
  1359                           ;main.c: 202:         }
  1360  00E8  28FB               	goto	l128
  1361  00E9                     l125:	
  1362                           ;main.c: 203:         else {
  1363                           
  1364                           
  1365                           ;main.c: 205:             RA5 = 1;
  1366  00E9  1685               	bsf	5,5	;volatile
  1367  00EA                     l2070:	
  1368                           
  1369                           ;main.c: 206:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  1370  00EA  3006               	movlw	6
  1371  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1372  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1373  00ED  00BF               	movwf	??_lecturaEtiqueta+2
  1374  00EE  3013               	movlw	19
  1375  00EF  00BE               	movwf	??_lecturaEtiqueta+1
  1376  00F0  30AD               	movlw	173
  1377  00F1  00BD               	movwf	??_lecturaEtiqueta
  1378  00F2                     u2407:	
  1379  00F2  0BBD               	decfsz	??_lecturaEtiqueta,f
  1380  00F3  28F2               	goto	u2407
  1381  00F4  0BBE               	decfsz	??_lecturaEtiqueta+1,f
  1382  00F5  28F2               	goto	u2407
  1383  00F6  0BBF               	decfsz	??_lecturaEtiqueta+2,f
  1384  00F7  28F2               	goto	u2407
  1385  00F8                     l2072:	
  1386                           
  1387                           ;main.c: 207:             RA5 = 0;
  1388  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1389  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1390  00FA  1285               	bcf	5,5	;volatile
  1391  00FB                     l128:	
  1392  00FB  0008               	return
  1393  00FC                     __end_of_lecturaEtiqueta:	
  1394                           
  1395                           	psect	text4
  1396  0299                     __ptext4:	
  1397 ;; *************** function _ingresoProd *****************
  1398 ;; Defined at:
  1399 ;;		line 66 in file "main.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  tp              2   12[BANK0 ] short 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  i               2   17[BANK0 ] short 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       2       0       0       0
  1414 ;;      Locals:         0       2       0       0       0
  1415 ;;      Temps:          0       3       0       0       0
  1416 ;;      Totals:         0       7       0       0       0
  1417 ;;Total ram usage:        7 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    3
  1420 ;; This function calls:
  1421 ;;		_pow
  1422 ;; This function is called by:
  1423 ;;		_lecturaEtiqueta
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _ingresoProd
  1429  0299                     _ingresoProd:	
  1430  0299                     l1894:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _ingresoProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1433                           
  1434                           
  1435                           ;main.c: 68:     for(short int i = 12; i>=0; i--) {
  1436  0299  300C               	movlw	12
  1437  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1438  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1439  029C  00B1               	movwf	ingresoProd@i
  1440  029D  3000               	movlw	0
  1441  029E  00B2               	movwf	ingresoProd@i+1
  1442  029F                     l1900:	
  1443                           
  1444                           ;main.c: 69:         if( tp >= 8*i) {
  1445  029F  0832               	movf	ingresoProd@i+1,w
  1446  02A0  00AF               	movwf	??_ingresoProd+1
  1447  02A1  0831               	movf	ingresoProd@i,w
  1448  02A2  00AE               	movwf	??_ingresoProd
  1449  02A3  1003               	clrc
  1450  02A4  0DAE               	rlf	??_ingresoProd,f
  1451  02A5  0DAF               	rlf	??_ingresoProd+1,f
  1452  02A6  1003               	clrc
  1453  02A7  0DAE               	rlf	??_ingresoProd,f
  1454  02A8  0DAF               	rlf	??_ingresoProd+1,f
  1455  02A9  1003               	clrc
  1456  02AA  0DAE               	rlf	??_ingresoProd,f
  1457  02AB  0DAF               	rlf	??_ingresoProd+1,f
  1458  02AC  082D               	movf	ingresoProd@tp+1,w
  1459  02AD  3A80               	xorlw	128
  1460  02AE  00B0               	movwf	??_ingresoProd+2
  1461  02AF  082F               	movf	??_ingresoProd+1,w
  1462  02B0  3A80               	xorlw	128
  1463  02B1  0230               	subwf	??_ingresoProd+2,w
  1464  02B2  1D03               	skipz
  1465  02B3  2AB6               	goto	u1985
  1466  02B4  082E               	movf	??_ingresoProd,w
  1467  02B5  022C               	subwf	ingresoProd@tp,w
  1468  02B6                     u1985:	
  1469  02B6  1C03               	skipc
  1470  02B7  2AB9               	goto	u1981
  1471  02B8  2ABA               	goto	u1980
  1472  02B9                     u1981:	
  1473  02B9  2AEE               	goto	l1908
  1474  02BA                     u1980:	
  1475  02BA                     l1902:	
  1476                           
  1477                           ;main.c: 71:             tp = tp - 8*i;
  1478  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1479  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1480  02BC  0832               	movf	ingresoProd@i+1,w
  1481  02BD  00AF               	movwf	??_ingresoProd+1
  1482  02BE  0831               	movf	ingresoProd@i,w
  1483  02BF  00AE               	movwf	??_ingresoProd
  1484  02C0  1003               	clrc
  1485  02C1  0DAE               	rlf	??_ingresoProd,f
  1486  02C2  0DAF               	rlf	??_ingresoProd+1,f
  1487  02C3  1003               	clrc
  1488  02C4  0DAE               	rlf	??_ingresoProd,f
  1489  02C5  0DAF               	rlf	??_ingresoProd+1,f
  1490  02C6  1003               	clrc
  1491  02C7  0DAE               	rlf	??_ingresoProd,f
  1492  02C8  0DAF               	rlf	??_ingresoProd+1,f
  1493  02C9  082E               	movf	??_ingresoProd,w
  1494  02CA  022C               	subwf	ingresoProd@tp,w
  1495  02CB  00AC               	movwf	ingresoProd@tp
  1496  02CC  082F               	movf	??_ingresoProd+1,w
  1497  02CD  1C03               	skipc
  1498  02CE  0A2F               	incf	??_ingresoProd+1,w
  1499  02CF  022D               	subwf	ingresoProd@tp+1,w
  1500  02D0  00AD               	movwf	ingresoProd@tp+1
  1501  02D1                     l1904:	
  1502                           
  1503                           ;main.c: 72:             prodIngresados[i] = prodIngresados[i] | ((unsigned int)pow(2,tp
      +                          ));
  1504  02D1  0831               	movf	ingresoProd@i,w
  1505  02D2  3E48               	addlw	(low (_prodIngresados| 0))& (0+255)
  1506  02D3  0084               	movwf	4
  1507  02D4  3002               	movlw	2
  1508  02D5  00A4               	movwf	pow@numero
  1509  02D6  3000               	movlw	0
  1510  02D7  00A5               	movwf	pow@numero+1
  1511  02D8  082D               	movf	ingresoProd@tp+1,w
  1512  02D9  00A7               	movwf	pow@potencia+1
  1513  02DA  082C               	movf	ingresoProd@tp,w
  1514  02DB  00A6               	movwf	pow@potencia
  1515  02DC  120A  118A  254A  120A  118A  	fcall	_pow
  1516  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1517  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1518  02E3  0824               	movf	?_pow,w
  1519  02E4  1383               	bcf	3,7	;select IRP bank0
  1520  02E5  0400               	iorwf	0,w
  1521  02E6  00AE               	movwf	??_ingresoProd
  1522  02E7  0831               	movf	ingresoProd@i,w
  1523  02E8  3E48               	addlw	(low (_prodIngresados| 0))& (0+255)
  1524  02E9  0084               	movwf	4
  1525  02EA  082E               	movf	??_ingresoProd,w
  1526  02EB  0080               	movwf	0
  1527  02EC                     l1906:	
  1528                           
  1529                           ;main.c: 73:             i = 0;
  1530  02EC  01B1               	clrf	ingresoProd@i
  1531  02ED  01B2               	clrf	ingresoProd@i+1
  1532  02EE                     l1908:	
  1533                           
  1534                           ;main.c: 76:     }
  1535  02EE  30FF               	movlw	255
  1536  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1537  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1538  02F1  07B1               	addwf	ingresoProd@i,f
  1539  02F2  1803               	skipnc
  1540  02F3  0AB2               	incf	ingresoProd@i+1,f
  1541  02F4  30FF               	movlw	255
  1542  02F5  07B2               	addwf	ingresoProd@i+1,f
  1543  02F6                     l1910:	
  1544  02F6  1FB2               	btfss	ingresoProd@i+1,7
  1545  02F7  2AF9               	goto	u1991
  1546  02F8  2AFA               	goto	u1990
  1547  02F9                     u1991:	
  1548  02F9  2A9F               	goto	l1900
  1549  02FA                     u1990:	
  1550  02FA                     l80:	
  1551  02FA  0008               	return
  1552  02FB                     __end_of_ingresoProd:	
  1553                           
  1554                           	psect	text5
  1555  0675                     __ptext5:	
  1556 ;; *************** function ___bmul *****************
  1557 ;; Defined at:
  1558 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  multiplier      1    wreg     unsigned char 
  1561 ;;  multiplicand    1    4[COMMON] unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  multiplier      1    1[BANK0 ] unsigned char 
  1564 ;;  product         1    0[BANK0 ] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      unsigned char 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         1       0       0       0       0
  1575 ;;      Locals:         0       2       0       0       0
  1576 ;;      Temps:          1       0       0       0       0
  1577 ;;      Totals:         2       2       0       0       0
  1578 ;;Total ram usage:        4 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_lecturaEtiqueta
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function ___bmul
  1590  0675                     ___bmul:	
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1594                           ;___bmul@multiplier stored from wreg
  1595  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0677  00A1               	movwf	___bmul@multiplier
  1598  0678                     l1946:	
  1599  0678  01A0               	clrf	___bmul@product
  1600  0679                     l1948:	
  1601  0679  1C21               	btfss	___bmul@multiplier,0
  1602  067A  2E7C               	goto	u2061
  1603  067B  2E7D               	goto	u2060
  1604  067C                     u2061:	
  1605  067C  2E81               	goto	l1952
  1606  067D                     u2060:	
  1607  067D                     l1950:	
  1608  067D  0874               	movf	___bmul@multiplicand,w
  1609  067E  00F5               	movwf	??___bmul
  1610  067F  0875               	movf	??___bmul,w
  1611  0680  07A0               	addwf	___bmul@product,f
  1612  0681                     l1952:	
  1613  0681  1003               	clrc
  1614  0682  0DF4               	rlf	___bmul@multiplicand,f
  1615  0683                     l1954:	
  1616  0683  1003               	clrc
  1617  0684  0CA1               	rrf	___bmul@multiplier,f
  1618  0685  0821               	movf	___bmul@multiplier,w
  1619  0686  1D03               	btfss	3,2
  1620  0687  2E89               	goto	u2071
  1621  0688  2E8A               	goto	u2070
  1622  0689                     u2071:	
  1623  0689  2E79               	goto	l1948
  1624  068A                     u2070:	
  1625  068A                     l1956:	
  1626  068A  0820               	movf	___bmul@product,w
  1627  068B                     l318:	
  1628  068B  0008               	return
  1629  068C                     __end_of___bmul:	
  1630                           
  1631                           	psect	text6
  1632  035D                     __ptext6:	
  1633 ;; *************** function ___awmod *****************
  1634 ;; Defined at:
  1635 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  divisor         2    0[BANK0 ] int 
  1638 ;;  dividend        2    2[BANK0 ] int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  sign            1    6[COMMON] unsigned char 
  1641 ;;  counter         1    5[COMMON] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2    0[BANK0 ] int 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       4       0       0       0
  1652 ;;      Locals:         2       0       0       0       0
  1653 ;;      Temps:          1       0       0       0       0
  1654 ;;      Totals:         3       4       0       0       0
  1655 ;;Total ram usage:        7 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_lecturaEtiqueta
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function ___awmod
  1667  035D                     ___awmod:	
  1668  035D                     l1960:	
  1669                           ;incstack = 0
  1670                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1671                           
  1672  035D  01F6               	clrf	___awmod@sign
  1673  035E                     l1962:	
  1674  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1675  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0360  1FA3               	btfss	___awmod@dividend+1,7
  1677  0361  2B63               	goto	u2081
  1678  0362  2B64               	goto	u2080
  1679  0363                     u2081:	
  1680  0363  2B6B               	goto	l1968
  1681  0364                     u2080:	
  1682  0364                     l1964:	
  1683  0364  09A2               	comf	___awmod@dividend,f
  1684  0365  09A3               	comf	___awmod@dividend+1,f
  1685  0366  0AA2               	incf	___awmod@dividend,f
  1686  0367  1903               	skipnz
  1687  0368  0AA3               	incf	___awmod@dividend+1,f
  1688  0369                     l1966:	
  1689  0369  01F6               	clrf	___awmod@sign
  1690  036A  0AF6               	incf	___awmod@sign,f
  1691  036B                     l1968:	
  1692  036B  1FA1               	btfss	___awmod@divisor+1,7
  1693  036C  2B6E               	goto	u2091
  1694  036D  2B6F               	goto	u2090
  1695  036E                     u2091:	
  1696  036E  2B74               	goto	l1972
  1697  036F                     u2090:	
  1698  036F                     l1970:	
  1699  036F  09A0               	comf	___awmod@divisor,f
  1700  0370  09A1               	comf	___awmod@divisor+1,f
  1701  0371  0AA0               	incf	___awmod@divisor,f
  1702  0372  1903               	skipnz
  1703  0373  0AA1               	incf	___awmod@divisor+1,f
  1704  0374                     l1972:	
  1705  0374  0820               	movf	___awmod@divisor,w
  1706  0375  0421               	iorwf	___awmod@divisor+1,w
  1707  0376  1903               	btfsc	3,2
  1708  0377  2B79               	goto	u2101
  1709  0378  2B7A               	goto	u2100
  1710  0379                     u2101:	
  1711  0379  2BA9               	goto	l1990
  1712  037A                     u2100:	
  1713  037A                     l1974:	
  1714  037A  01F5               	clrf	___awmod@counter
  1715  037B  0AF5               	incf	___awmod@counter,f
  1716  037C  2B88               	goto	l1980
  1717  037D                     l1976:	
  1718  037D  3001               	movlw	1
  1719  037E                     u2115:	
  1720  037E  1003               	clrc
  1721  037F  0DA0               	rlf	___awmod@divisor,f
  1722  0380  0DA1               	rlf	___awmod@divisor+1,f
  1723  0381  3EFF               	addlw	-1
  1724  0382  1D03               	skipz
  1725  0383  2B7E               	goto	u2115
  1726  0384                     l1978:	
  1727  0384  3001               	movlw	1
  1728  0385  00F4               	movwf	??___awmod
  1729  0386  0874               	movf	??___awmod,w
  1730  0387  07F5               	addwf	___awmod@counter,f
  1731  0388                     l1980:	
  1732  0388  1FA1               	btfss	___awmod@divisor+1,7
  1733  0389  2B8B               	goto	u2121
  1734  038A  2B8C               	goto	u2120
  1735  038B                     u2121:	
  1736  038B  2B7D               	goto	l1976
  1737  038C                     u2120:	
  1738  038C                     l1982:	
  1739  038C  0821               	movf	___awmod@divisor+1,w
  1740  038D  0223               	subwf	___awmod@dividend+1,w
  1741  038E  1D03               	skipz
  1742  038F  2B92               	goto	u2135
  1743  0390  0820               	movf	___awmod@divisor,w
  1744  0391  0222               	subwf	___awmod@dividend,w
  1745  0392                     u2135:	
  1746  0392  1C03               	skipc
  1747  0393  2B95               	goto	u2131
  1748  0394  2B96               	goto	u2130
  1749  0395                     u2131:	
  1750  0395  2B9C               	goto	l1986
  1751  0396                     u2130:	
  1752  0396                     l1984:	
  1753  0396  0820               	movf	___awmod@divisor,w
  1754  0397  02A2               	subwf	___awmod@dividend,f
  1755  0398  0821               	movf	___awmod@divisor+1,w
  1756  0399  1C03               	skipc
  1757  039A  03A3               	decf	___awmod@dividend+1,f
  1758  039B  02A3               	subwf	___awmod@dividend+1,f
  1759  039C                     l1986:	
  1760  039C  3001               	movlw	1
  1761  039D                     u2145:	
  1762  039D  1003               	clrc
  1763  039E  0CA1               	rrf	___awmod@divisor+1,f
  1764  039F  0CA0               	rrf	___awmod@divisor,f
  1765  03A0  3EFF               	addlw	-1
  1766  03A1  1D03               	skipz
  1767  03A2  2B9D               	goto	u2145
  1768  03A3                     l1988:	
  1769  03A3  3001               	movlw	1
  1770  03A4  02F5               	subwf	___awmod@counter,f
  1771  03A5  1D03               	btfss	3,2
  1772  03A6  2BA8               	goto	u2151
  1773  03A7  2BA9               	goto	u2150
  1774  03A8                     u2151:	
  1775  03A8  2B8C               	goto	l1982
  1776  03A9                     u2150:	
  1777  03A9                     l1990:	
  1778  03A9  0876               	movf	___awmod@sign,w
  1779  03AA  1903               	btfsc	3,2
  1780  03AB  2BAD               	goto	u2161
  1781  03AC  2BAE               	goto	u2160
  1782  03AD                     u2161:	
  1783  03AD  2BB3               	goto	l1994
  1784  03AE                     u2160:	
  1785  03AE                     l1992:	
  1786  03AE  09A2               	comf	___awmod@dividend,f
  1787  03AF  09A3               	comf	___awmod@dividend+1,f
  1788  03B0  0AA2               	incf	___awmod@dividend,f
  1789  03B1  1903               	skipnz
  1790  03B2  0AA3               	incf	___awmod@dividend+1,f
  1791  03B3                     l1994:	
  1792  03B3  0823               	movf	___awmod@dividend+1,w
  1793  03B4  00A1               	movwf	?___awmod+1
  1794  03B5  0822               	movf	___awmod@dividend,w
  1795  03B6  00A0               	movwf	?___awmod
  1796  03B7                     l458:	
  1797  03B7  0008               	return
  1798  03B8                     __end_of___awmod:	
  1799                           
  1800                           	psect	text7
  1801  00FC                     __ptext7:	
  1802 ;; *************** function _EEPROM_search *****************
  1803 ;; Defined at:
  1804 ;;		line 163 in file "main.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  tp              1    wreg     unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  tp              1   28[BANK0 ] unsigned char 
  1809 ;;  precio          2   26[BANK0 ] short 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2   20[BANK0 ] short 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       2       0       0       0
  1820 ;;      Locals:         0       3       0       0       0
  1821 ;;      Temps:          0       4       0       0       0
  1822 ;;      Totals:         0       9       0       0       0
  1823 ;;Total ram usage:        9 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    4
  1826 ;; This function calls:
  1827 ;;		___awdiv
  1828 ;;		_eeprom_read
  1829 ;;		_verificarProd
  1830 ;; This function is called by:
  1831 ;;		_lecturaEtiqueta
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _EEPROM_search
  1837  00FC                     _EEPROM_search:	
  1838                           
  1839                           ;incstack = 0
  1840                           ; Regs used in _EEPROM_search: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1841                           ;EEPROM_search@tp stored from wreg
  1842  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1843  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1844  00FE  00BC               	movwf	EEPROM_search@tp
  1845  00FF                     l1918:	
  1846                           
  1847                           ;main.c: 165:     short int precio;;main.c: 166:     tp--;
  1848  00FF  3001               	movlw	1
  1849  0100  02BC               	subwf	EEPROM_search@tp,f
  1850  0101                     l1920:	
  1851                           
  1852                           ;main.c: 167:     tp = tp*2;
  1853  0101  083C               	movf	EEPROM_search@tp,w
  1854  0102  00B6               	movwf	??_EEPROM_search
  1855  0103  0736               	addwf	??_EEPROM_search,w
  1856  0104  00B7               	movwf	??_EEPROM_search+1
  1857  0105  0837               	movf	??_EEPROM_search+1,w
  1858  0106  00BC               	movwf	EEPROM_search@tp
  1859  0107                     l1922:	
  1860                           
  1861                           ;main.c: 168:     precio = (eeprom_read(tp) << 8) | (eeprom_read(tp+1));
  1862  0107  083C               	movf	EEPROM_search@tp,w
  1863  0108  3E01               	addlw	1
  1864  0109  120A  118A  268C  120A  118A  	fcall	_eeprom_read
  1865  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1866  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0110  00B6               	movwf	??_EEPROM_search
  1868  0111  01B7               	clrf	??_EEPROM_search+1
  1869  0112  083C               	movf	EEPROM_search@tp,w
  1870  0113  120A  118A  268C  120A  118A  	fcall	_eeprom_read
  1871  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1873  011A  00B8               	movwf	??_EEPROM_search+2
  1874  011B  01B9               	clrf	??_EEPROM_search+3
  1875  011C  0838               	movf	??_EEPROM_search+2,w
  1876  011D  00B9               	movwf	??_EEPROM_search+3
  1877  011E  01B8               	clrf	??_EEPROM_search+2
  1878  011F  0836               	movf	??_EEPROM_search,w
  1879  0120  0438               	iorwf	??_EEPROM_search+2,w
  1880  0121  00BA               	movwf	EEPROM_search@precio
  1881  0122  0837               	movf	??_EEPROM_search+1,w
  1882  0123  0439               	iorwf	??_EEPROM_search+3,w
  1883  0124  00BB               	movwf	EEPROM_search@precio+1
  1884  0125                     l1924:	
  1885                           
  1886                           ;main.c: 170:     if( (precio < 0 || precio > 999) || verificarProd(tp/2)){
  1887  0125  1BBB               	btfsc	EEPROM_search@precio+1,7
  1888  0126  2928               	goto	u2001
  1889  0127  2929               	goto	u2000
  1890  0128                     u2001:	
  1891  0128  2958               	goto	l1930
  1892  0129                     u2000:	
  1893  0129                     l1926:	
  1894  0129  083B               	movf	EEPROM_search@precio+1,w
  1895  012A  3A80               	xorlw	128
  1896  012B  00FF               	movwf	btemp+1
  1897  012C  3083               	movlw	131
  1898  012D  027F               	subwf	btemp+1,w
  1899  012E  1D03               	skipz
  1900  012F  2932               	goto	u2015
  1901  0130  30E8               	movlw	232
  1902  0131  023A               	subwf	EEPROM_search@precio,w
  1903  0132                     u2015:	
  1904  0132  1803               	skipnc
  1905  0133  2935               	goto	u2011
  1906  0134  2936               	goto	u2010
  1907  0135                     u2011:	
  1908  0135  2958               	goto	l1930
  1909  0136                     u2010:	
  1910  0136                     l1928:	
  1911  0136  3002               	movlw	2
  1912  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0139  00A0               	movwf	___awdiv@divisor
  1915  013A  3000               	movlw	0
  1916  013B  00A1               	movwf	___awdiv@divisor+1
  1917  013C  083C               	movf	EEPROM_search@tp,w
  1918  013D  00B6               	movwf	??_EEPROM_search
  1919  013E  01B7               	clrf	??_EEPROM_search+1
  1920  013F  0836               	movf	??_EEPROM_search,w
  1921  0140  00A2               	movwf	___awdiv@dividend
  1922  0141  0837               	movf	??_EEPROM_search+1,w
  1923  0142  00A3               	movwf	___awdiv@dividend+1
  1924  0143  120A  118A  2165  120A  118A  	fcall	___awdiv
  1925  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1927  014A  0821               	movf	?___awdiv+1,w
  1928  014B  00AD               	movwf	verificarProd@tp+1
  1929  014C  0820               	movf	?___awdiv,w
  1930  014D  00AC               	movwf	verificarProd@tp
  1931  014E  120A  118A  2235  120A  118A  	fcall	_verificarProd
  1932  0153  3A00               	xorlw	0
  1933  0154  1903               	skipnz
  1934  0155  2957               	goto	u2021
  1935  0156  2958               	goto	u2020
  1936  0157                     u2021:	
  1937  0157  295E               	goto	l116
  1938  0158                     u2020:	
  1939  0158                     l1930:	
  1940                           
  1941                           ;main.c: 171:         precio = -1;
  1942  0158  30FF               	movlw	255
  1943  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1944  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1945  015B  00BA               	movwf	EEPROM_search@precio
  1946  015C  30FF               	movlw	255
  1947  015D  00BB               	movwf	EEPROM_search@precio+1
  1948  015E                     l116:	
  1949                           ;main.c: 172:     }
  1950                           
  1951                           
  1952                           ;main.c: 175:     return precio;
  1953  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1954  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0160  083B               	movf	EEPROM_search@precio+1,w
  1956  0161  00B5               	movwf	?_EEPROM_search+1
  1957  0162  083A               	movf	EEPROM_search@precio,w
  1958  0163  00B4               	movwf	?_EEPROM_search
  1959  0164                     l119:	
  1960  0164  0008               	return
  1961  0165                     __end_of_EEPROM_search:	
  1962                           
  1963                           	psect	text8
  1964  0235                     __ptext8:	
  1965 ;; *************** function _verificarProd *****************
  1966 ;; Defined at:
  1967 ;;		line 79 in file "main.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  tp              2   12[BANK0 ] short 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  i               2   18[BANK0 ] short 
  1972 ;;  ret             1   17[BANK0 ] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      unsigned char 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       2       0       0       0
  1983 ;;      Locals:         0       3       0       0       0
  1984 ;;      Temps:          0       3       0       0       0
  1985 ;;      Totals:         0       8       0       0       0
  1986 ;;Total ram usage:        8 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    3
  1989 ;; This function calls:
  1990 ;;		_pow
  1991 ;; This function is called by:
  1992 ;;		_EEPROM_search
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _verificarProd
  1998  0235                     _verificarProd:	
  1999  0235                     l1760:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _verificarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2002                           
  2003                           
  2004                           ;main.c: 80:     char ret = 0;
  2005  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0237  01B1               	clrf	verificarProd@ret
  2008  0238                     l1762:	
  2009                           
  2010                           ;main.c: 81:     for(short int i = 12; i>=0; i--) {
  2011  0238  300C               	movlw	12
  2012  0239  00B2               	movwf	verificarProd@i
  2013  023A  3000               	movlw	0
  2014  023B  00B3               	movwf	verificarProd@i+1
  2015  023C                     l1768:	
  2016                           
  2017                           ;main.c: 82:         if( tp >= 8*i) {
  2018  023C  0833               	movf	verificarProd@i+1,w
  2019  023D  00AF               	movwf	??_verificarProd+1
  2020  023E  0832               	movf	verificarProd@i,w
  2021  023F  00AE               	movwf	??_verificarProd
  2022  0240  1003               	clrc
  2023  0241  0DAE               	rlf	??_verificarProd,f
  2024  0242  0DAF               	rlf	??_verificarProd+1,f
  2025  0243  1003               	clrc
  2026  0244  0DAE               	rlf	??_verificarProd,f
  2027  0245  0DAF               	rlf	??_verificarProd+1,f
  2028  0246  1003               	clrc
  2029  0247  0DAE               	rlf	??_verificarProd,f
  2030  0248  0DAF               	rlf	??_verificarProd+1,f
  2031  0249  082D               	movf	verificarProd@tp+1,w
  2032  024A  3A80               	xorlw	128
  2033  024B  00B0               	movwf	??_verificarProd+2
  2034  024C  082F               	movf	??_verificarProd+1,w
  2035  024D  3A80               	xorlw	128
  2036  024E  0230               	subwf	??_verificarProd+2,w
  2037  024F  1D03               	skipz
  2038  0250  2A53               	goto	u1695
  2039  0251  082E               	movf	??_verificarProd,w
  2040  0252  022C               	subwf	verificarProd@tp,w
  2041  0253                     u1695:	
  2042  0253  1C03               	skipc
  2043  0254  2A56               	goto	u1691
  2044  0255  2A57               	goto	u1690
  2045  0256                     u1691:	
  2046  0256  2A8B               	goto	l1778
  2047  0257                     u1690:	
  2048  0257                     l1770:	
  2049                           
  2050                           ;main.c: 84:             tp = tp - 8*i;
  2051  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0259  0833               	movf	verificarProd@i+1,w
  2054  025A  00AF               	movwf	??_verificarProd+1
  2055  025B  0832               	movf	verificarProd@i,w
  2056  025C  00AE               	movwf	??_verificarProd
  2057  025D  1003               	clrc
  2058  025E  0DAE               	rlf	??_verificarProd,f
  2059  025F  0DAF               	rlf	??_verificarProd+1,f
  2060  0260  1003               	clrc
  2061  0261  0DAE               	rlf	??_verificarProd,f
  2062  0262  0DAF               	rlf	??_verificarProd+1,f
  2063  0263  1003               	clrc
  2064  0264  0DAE               	rlf	??_verificarProd,f
  2065  0265  0DAF               	rlf	??_verificarProd+1,f
  2066  0266  082E               	movf	??_verificarProd,w
  2067  0267  022C               	subwf	verificarProd@tp,w
  2068  0268  00AC               	movwf	verificarProd@tp
  2069  0269  082F               	movf	??_verificarProd+1,w
  2070  026A  1C03               	skipc
  2071  026B  0A2F               	incf	??_verificarProd+1,w
  2072  026C  022D               	subwf	verificarProd@tp+1,w
  2073  026D  00AD               	movwf	verificarProd@tp+1
  2074  026E                     l1772:	
  2075                           
  2076                           ;main.c: 85:             if(prodIngresados[i] & ((unsigned int)pow(2,tp))) {
  2077  026E  0832               	movf	verificarProd@i,w
  2078  026F  3E48               	addlw	(low (_prodIngresados| 0))& (0+255)
  2079  0270  0084               	movwf	4
  2080  0271  3002               	movlw	2
  2081  0272  00A4               	movwf	pow@numero
  2082  0273  3000               	movlw	0
  2083  0274  00A5               	movwf	pow@numero+1
  2084  0275  082D               	movf	verificarProd@tp+1,w
  2085  0276  00A7               	movwf	pow@potencia+1
  2086  0277  082C               	movf	verificarProd@tp,w
  2087  0278  00A6               	movwf	pow@potencia
  2088  0279  120A  118A  254A  120A  118A  	fcall	_pow
  2089  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2090  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0280  0824               	movf	?_pow,w
  2092  0281  1383               	bcf	3,7	;select IRP bank0
  2093  0282  0500               	andwf	0,w
  2094  0283  1903               	btfsc	3,2
  2095  0284  2A86               	goto	u1701
  2096  0285  2A87               	goto	u1700
  2097  0286                     u1701:	
  2098  0286  2A89               	goto	l1776
  2099  0287                     u1700:	
  2100  0287                     l1774:	
  2101                           
  2102                           ;main.c: 86:                 ret = 1;
  2103  0287  01B1               	clrf	verificarProd@ret
  2104  0288  0AB1               	incf	verificarProd@ret,f
  2105  0289                     l1776:	
  2106                           
  2107                           ;main.c: 88:             i = 0;
  2108  0289  01B2               	clrf	verificarProd@i
  2109  028A  01B3               	clrf	verificarProd@i+1
  2110  028B                     l1778:	
  2111                           
  2112                           ;main.c: 91:     }
  2113  028B  30FF               	movlw	255
  2114  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2115  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2116  028E  07B2               	addwf	verificarProd@i,f
  2117  028F  1803               	skipnc
  2118  0290  0AB3               	incf	verificarProd@i+1,f
  2119  0291  30FF               	movlw	255
  2120  0292  07B3               	addwf	verificarProd@i+1,f
  2121  0293                     l1780:	
  2122  0293  1FB3               	btfss	verificarProd@i+1,7
  2123  0294  2A96               	goto	u1711
  2124  0295  2A97               	goto	u1710
  2125  0296                     u1711:	
  2126  0296  2A3C               	goto	l1768
  2127  0297                     u1710:	
  2128  0297                     l1782:	
  2129                           
  2130                           ;main.c: 93:     return ret;
  2131  0297  0831               	movf	verificarProd@ret,w
  2132  0298                     l87:	
  2133  0298  0008               	return
  2134  0299                     __end_of_verificarProd:	
  2135                           
  2136                           	psect	text9
  2137  068C                     __ptext9:	
  2138 ;; *************** function _eeprom_read *****************
  2139 ;; Defined at:
  2140 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  addr            1    wreg     unsigned char 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  addr            1    5[COMMON] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      unsigned char 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         0       0       0       0       0
  2155 ;;      Locals:         1       0       0       0       0
  2156 ;;      Temps:          1       0       0       0       0
  2157 ;;      Totals:         2       0       0       0       0
  2158 ;;Total ram usage:        2 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_EEPROM_search
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           
  2169                           ;psect for function _eeprom_read
  2170  068C                     _eeprom_read:	
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  2174                           ;eeprom_read@addr stored from wreg
  2175  068C  00F5               	movwf	eeprom_read@addr
  2176  068D                     l286:	
  2177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  2178                           
  2179  068D  0064               	clrwdt	;# 
  2180  068E  1683               	bsf	3,5	;RP0=1, select bank3
  2181  068F  1703               	bsf	3,6	;RP1=1, select bank3
  2182  0690  188C               	btfsc	12,1	;volsfr
  2183  0691  2E93               	goto	u911
  2184  0692  2E94               	goto	u910
  2185  0693                     u911:	
  2186  0693  2E8D               	goto	l286
  2187  0694                     u910:	
  2188  0694                     l1320:	
  2189                           
  2190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  2191  0694  0875               	movf	eeprom_read@addr,w
  2192  0695  1283               	bcf	3,5	;RP0=0, select bank2
  2193  0696  1703               	bsf	3,6	;RP1=1, select bank2
  2194  0697  008D               	movwf	13	;volatile
  2195  0698  303F               	movlw	63
  2196  0699  00F4               	movwf	??_eeprom_read
  2197  069A  0874               	movf	??_eeprom_read,w
  2198  069B  1683               	bsf	3,5	;RP0=1, select bank3
  2199  069C  1703               	bsf	3,6	;RP1=1, select bank3
  2200  069D  058C               	andwf	12,f	;volsfr
  2201  069E  140C               	bsf	12,0	;volsfr
  2202  069F  1283               	bcf	3,5	;RP0=0, select bank2
  2203  06A0  1703               	bsf	3,6	;RP1=1, select bank2
  2204  06A1  080C               	movf	12,w	;volatile
  2205  06A2                     l288:	
  2206  06A2  0008               	return
  2207  06A3                     __end_of_eeprom_read:	
  2208                           
  2209                           	psect	text10
  2210  0165                     __ptext10:	
  2211 ;; *************** function ___awdiv *****************
  2212 ;; Defined at:
  2213 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  divisor         2    0[BANK0 ] int 
  2216 ;;  dividend        2    2[BANK0 ] int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  quotient        2    6[BANK0 ] int 
  2219 ;;  sign            1    5[BANK0 ] unsigned char 
  2220 ;;  counter         1    4[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  2    0[BANK0 ] int 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2230 ;;      Params:         0       4       0       0       0
  2231 ;;      Locals:         0       4       0       0       0
  2232 ;;      Temps:          1       0       0       0       0
  2233 ;;      Totals:         1       8       0       0       0
  2234 ;;Total ram usage:        9 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_EEPROM_search
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function ___awdiv
  2246  0165                     ___awdiv:	
  2247  0165                     l1802:	
  2248                           ;incstack = 0
  2249                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2250                           
  2251  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0167  01A5               	clrf	___awdiv@sign
  2254  0168                     l1804:	
  2255  0168  1FA1               	btfss	___awdiv@divisor+1,7
  2256  0169  296B               	goto	u1751
  2257  016A  296C               	goto	u1750
  2258  016B                     u1751:	
  2259  016B  2973               	goto	l1810
  2260  016C                     u1750:	
  2261  016C                     l1806:	
  2262  016C  09A0               	comf	___awdiv@divisor,f
  2263  016D  09A1               	comf	___awdiv@divisor+1,f
  2264  016E  0AA0               	incf	___awdiv@divisor,f
  2265  016F  1903               	skipnz
  2266  0170  0AA1               	incf	___awdiv@divisor+1,f
  2267  0171                     l1808:	
  2268  0171  01A5               	clrf	___awdiv@sign
  2269  0172  0AA5               	incf	___awdiv@sign,f
  2270  0173                     l1810:	
  2271  0173  1FA3               	btfss	___awdiv@dividend+1,7
  2272  0174  2976               	goto	u1761
  2273  0175  2977               	goto	u1760
  2274  0176                     u1761:	
  2275  0176  2980               	goto	l1816
  2276  0177                     u1760:	
  2277  0177                     l1812:	
  2278  0177  09A2               	comf	___awdiv@dividend,f
  2279  0178  09A3               	comf	___awdiv@dividend+1,f
  2280  0179  0AA2               	incf	___awdiv@dividend,f
  2281  017A  1903               	skipnz
  2282  017B  0AA3               	incf	___awdiv@dividend+1,f
  2283  017C                     l1814:	
  2284  017C  3001               	movlw	1
  2285  017D  00F4               	movwf	??___awdiv
  2286  017E  0874               	movf	??___awdiv,w
  2287  017F  06A5               	xorwf	___awdiv@sign,f
  2288  0180                     l1816:	
  2289  0180  01A6               	clrf	___awdiv@quotient
  2290  0181  01A7               	clrf	___awdiv@quotient+1
  2291  0182                     l1818:	
  2292  0182  0820               	movf	___awdiv@divisor,w
  2293  0183  0421               	iorwf	___awdiv@divisor+1,w
  2294  0184  1903               	btfsc	3,2
  2295  0185  2987               	goto	u1771
  2296  0186  2988               	goto	u1770
  2297  0187                     u1771:	
  2298  0187  29BF               	goto	l1838
  2299  0188                     u1770:	
  2300  0188                     l1820:	
  2301  0188  01A4               	clrf	___awdiv@counter
  2302  0189  0AA4               	incf	___awdiv@counter,f
  2303  018A  2996               	goto	l1826
  2304  018B                     l1822:	
  2305  018B  3001               	movlw	1
  2306  018C                     u1785:	
  2307  018C  1003               	clrc
  2308  018D  0DA0               	rlf	___awdiv@divisor,f
  2309  018E  0DA1               	rlf	___awdiv@divisor+1,f
  2310  018F  3EFF               	addlw	-1
  2311  0190  1D03               	skipz
  2312  0191  298C               	goto	u1785
  2313  0192                     l1824:	
  2314  0192  3001               	movlw	1
  2315  0193  00F4               	movwf	??___awdiv
  2316  0194  0874               	movf	??___awdiv,w
  2317  0195  07A4               	addwf	___awdiv@counter,f
  2318  0196                     l1826:	
  2319  0196  1FA1               	btfss	___awdiv@divisor+1,7
  2320  0197  2999               	goto	u1791
  2321  0198  299A               	goto	u1790
  2322  0199                     u1791:	
  2323  0199  298B               	goto	l1822
  2324  019A                     u1790:	
  2325  019A                     l1828:	
  2326  019A  3001               	movlw	1
  2327  019B                     u1805:	
  2328  019B  1003               	clrc
  2329  019C  0DA6               	rlf	___awdiv@quotient,f
  2330  019D  0DA7               	rlf	___awdiv@quotient+1,f
  2331  019E  3EFF               	addlw	-1
  2332  019F  1D03               	skipz
  2333  01A0  299B               	goto	u1805
  2334  01A1  0821               	movf	___awdiv@divisor+1,w
  2335  01A2  0223               	subwf	___awdiv@dividend+1,w
  2336  01A3  1D03               	skipz
  2337  01A4  29A7               	goto	u1815
  2338  01A5  0820               	movf	___awdiv@divisor,w
  2339  01A6  0222               	subwf	___awdiv@dividend,w
  2340  01A7                     u1815:	
  2341  01A7  1C03               	skipc
  2342  01A8  29AA               	goto	u1811
  2343  01A9  29AB               	goto	u1810
  2344  01AA                     u1811:	
  2345  01AA  29B2               	goto	l1834
  2346  01AB                     u1810:	
  2347  01AB                     l1830:	
  2348  01AB  0820               	movf	___awdiv@divisor,w
  2349  01AC  02A2               	subwf	___awdiv@dividend,f
  2350  01AD  0821               	movf	___awdiv@divisor+1,w
  2351  01AE  1C03               	skipc
  2352  01AF  03A3               	decf	___awdiv@dividend+1,f
  2353  01B0  02A3               	subwf	___awdiv@dividend+1,f
  2354  01B1                     l1832:	
  2355  01B1  1426               	bsf	___awdiv@quotient,0
  2356  01B2                     l1834:	
  2357  01B2  3001               	movlw	1
  2358  01B3                     u1825:	
  2359  01B3  1003               	clrc
  2360  01B4  0CA1               	rrf	___awdiv@divisor+1,f
  2361  01B5  0CA0               	rrf	___awdiv@divisor,f
  2362  01B6  3EFF               	addlw	-1
  2363  01B7  1D03               	skipz
  2364  01B8  29B3               	goto	u1825
  2365  01B9                     l1836:	
  2366  01B9  3001               	movlw	1
  2367  01BA  02A4               	subwf	___awdiv@counter,f
  2368  01BB  1D03               	btfss	3,2
  2369  01BC  29BE               	goto	u1831
  2370  01BD  29BF               	goto	u1830
  2371  01BE                     u1831:	
  2372  01BE  299A               	goto	l1828
  2373  01BF                     u1830:	
  2374  01BF                     l1838:	
  2375  01BF  0825               	movf	___awdiv@sign,w
  2376  01C0  1903               	btfsc	3,2
  2377  01C1  29C3               	goto	u1841
  2378  01C2  29C4               	goto	u1840
  2379  01C3                     u1841:	
  2380  01C3  29C9               	goto	l1842
  2381  01C4                     u1840:	
  2382  01C4                     l1840:	
  2383  01C4  09A6               	comf	___awdiv@quotient,f
  2384  01C5  09A7               	comf	___awdiv@quotient+1,f
  2385  01C6  0AA6               	incf	___awdiv@quotient,f
  2386  01C7  1903               	skipnz
  2387  01C8  0AA7               	incf	___awdiv@quotient+1,f
  2388  01C9                     l1842:	
  2389  01C9  0827               	movf	___awdiv@quotient+1,w
  2390  01CA  00A1               	movwf	?___awdiv+1
  2391  01CB  0826               	movf	___awdiv@quotient,w
  2392  01CC  00A0               	movwf	?___awdiv
  2393  01CD                     l445:	
  2394  01CD  0008               	return
  2395  01CE                     __end_of___awdiv:	
  2396                           
  2397                           	psect	text11
  2398  065A                     __ptext11:	
  2399 ;; *************** function _lecturaComando *****************
  2400 ;; Defined at:
  2401 ;;		line 255 in file "main.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    3
  2422 ;; This function calls:
  2423 ;;		_lecturaMas
  2424 ;;		_lecturaMenos
  2425 ;; This function is called by:
  2426 ;;		_accionesPuertoSerial
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function _lecturaComando
  2432  065A                     _lecturaComando:	
  2433  065A                     l2078:	
  2434                           ;incstack = 0
  2435                           ; Regs used in _lecturaComando: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2436                           
  2437                           
  2438                           ;main.c: 256:     if(codigoEntrada[0] == '?'){
  2439  065A  303F               	movlw	63
  2440  065B  1283               	bcf	3,5	;RP0=0, select bank0
  2441  065C  1303               	bcf	3,6	;RP1=0, select bank0
  2442  065D  0662               	xorwf	_codigoEntrada,w
  2443  065E  1D03               	btfss	3,2
  2444  065F  2E61               	goto	u2241
  2445  0660  2E62               	goto	u2240
  2446  0661                     u2241:	
  2447  0661  2E63               	goto	l2082
  2448  0662                     u2240:	
  2449  0662  2E74               	goto	l157
  2450  0663                     l2082:	
  2451  0663  302B               	movlw	43
  2452  0664  0662               	xorwf	_codigoEntrada,w
  2453  0665  1D03               	btfss	3,2
  2454  0666  2E68               	goto	u2251
  2455  0667  2E69               	goto	u2250
  2456  0668                     u2251:	
  2457  0668  2E6F               	goto	l2086
  2458  0669                     u2250:	
  2459  0669                     l2084:	
  2460                           
  2461                           ;main.c: 260:         lecturaMas();
  2462  0669  120A  118A  2639  120A  118A  	fcall	_lecturaMas
  2463                           
  2464                           ;main.c: 261:     }
  2465  066E  2E74               	goto	l157
  2466  066F                     l2086:	
  2467                           
  2468                           ;main.c: 263:         lecturaMenos();
  2469  066F  120A  118A  26C2  120A  118A  	fcall	_lecturaMenos
  2470  0674                     l157:	
  2471  0674  0008               	return
  2472  0675                     __end_of_lecturaComando:	
  2473                           
  2474                           	psect	text12
  2475  06C2                     __ptext12:	
  2476 ;; *************** function _lecturaMenos *****************
  2477 ;; Defined at:
  2478 ;;		line 245 in file "main.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         0       0       0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_lecturaComando
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _lecturaMenos
  2508  06C2                     _lecturaMenos:	
  2509  06C2                     l1484:	
  2510                           ;incstack = 0
  2511                           ; Regs used in _lecturaMenos: [wreg+status,2+status,0]
  2512                           
  2513                           
  2514                           ;main.c: 246:     if(codigoEntrada[1] == 'D'){
  2515  06C2  3044               	movlw	68
  2516  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2517  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2518  06C5  0663               	xorwf	_codigoEntrada+1,w
  2519  06C6  1D03               	btfss	3,2
  2520  06C7  2EC9               	goto	u1261
  2521  06C8  2ECA               	goto	u1260
  2522  06C9                     u1261:	
  2523  06C9  2ECB               	goto	l150
  2524  06CA                     u1260:	
  2525  06CA                     l1486:	
  2526                           
  2527                           ;main.c: 247:         modoDebug = 0;
  2528  06CA  01F7               	clrf	_modoDebug
  2529  06CB                     l150:	
  2530                           ;main.c: 249:     }
  2531                           
  2532  06CB  0008               	return
  2533  06CC                     __end_of_lecturaMenos:	
  2534                           
  2535                           	psect	text13
  2536  0639                     __ptext13:	
  2537 ;; *************** function _lecturaMas *****************
  2538 ;; Defined at:
  2539 ;;		line 230 in file "main.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    2
  2560 ;; This function calls:
  2561 ;;		_verificacionEntrada
  2562 ;; This function is called by:
  2563 ;;		_lecturaComando
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _lecturaMas
  2569  0639                     _lecturaMas:	
  2570  0639                     l1934:	
  2571                           ;incstack = 0
  2572                           ; Regs used in _lecturaMas: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2573                           
  2574                           
  2575                           ;main.c: 231:     if (codigoEntrada[1] == 'L'){
  2576  0639  304C               	movlw	76
  2577  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2578  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2579  063C  0663               	xorwf	_codigoEntrada+1,w
  2580  063D  1D03               	btfss	3,2
  2581  063E  2E40               	goto	u2031
  2582  063F  2E41               	goto	u2030
  2583  0640                     u2031:	
  2584  0640  2E42               	goto	l1938
  2585  0641                     u2030:	
  2586  0641  2E59               	goto	l145
  2587  0642                     l1938:	
  2588  0642  120A  118A  2584  120A  118A  	fcall	_verificacionEntrada
  2589  0647  3005               	movlw	5
  2590  0648  0674               	xorwf	?_verificacionEntrada,w
  2591  0649  0475               	iorwf	?_verificacionEntrada+1,w
  2592  064A  1D03               	btfss	3,2
  2593  064B  2E4D               	goto	u2041
  2594  064C  2E4E               	goto	u2040
  2595  064D                     u2041:	
  2596  064D  2E4F               	goto	l1942
  2597  064E                     u2040:	
  2598  064E  2E59               	goto	l145
  2599  064F                     l1942:	
  2600  064F  3044               	movlw	68
  2601  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0652  0663               	xorwf	_codigoEntrada+1,w
  2604  0653  1D03               	btfss	3,2
  2605  0654  2E56               	goto	u2051
  2606  0655  2E57               	goto	u2050
  2607  0656                     u2051:	
  2608  0656  2E59               	goto	l145
  2609  0657                     u2050:	
  2610  0657                     l1944:	
  2611                           
  2612                           ;main.c: 238:         modoDebug = 1;
  2613  0657  01F7               	clrf	_modoDebug
  2614  0658  0AF7               	incf	_modoDebug,f
  2615  0659                     l145:	
  2616                           ;main.c: 239:     }
  2617                           
  2618  0659  0008               	return
  2619  065A                     __end_of_lecturaMas:	
  2620                           
  2621                           	psect	text14
  2622  0584                     __ptext14:	
  2623 ;; *************** function _verificacionEntrada *****************
  2624 ;; Defined at:
  2625 ;;		line 220 in file "main.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  i               2    2[BANK0 ] int 
  2630 ;;  ret             2    0[BANK0 ] int 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  2    4[COMMON] int 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         2       0       0       0       0
  2641 ;;      Locals:         0       4       0       0       0
  2642 ;;      Temps:          0       0       0       0       0
  2643 ;;      Totals:         2       4       0       0       0
  2644 ;;Total ram usage:        6 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_lecturaMas
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _verificacionEntrada
  2656  0584                     _verificacionEntrada:	
  2657  0584                     l1786:	
  2658                           ;incstack = 0
  2659                           ; Regs used in _verificacionEntrada: [wreg-fsr0h+status,2+status,0]
  2660                           
  2661                           
  2662                           ;main.c: 221:     int i = 1;
  2663  0584  3001               	movlw	1
  2664  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0587  00A2               	movwf	verificacionEntrada@i
  2667  0588  3000               	movlw	0
  2668  0589  00A3               	movwf	verificacionEntrada@i+1
  2669  058A                     l1788:	
  2670                           
  2671                           ;main.c: 222:     int ret = 0;
  2672  058A  01A0               	clrf	verificacionEntrada@ret
  2673  058B  01A1               	clrf	verificacionEntrada@ret+1
  2674                           
  2675                           ;main.c: 223:     while(((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || codi
      +                          goEntrada[i] == '='){
  2676  058C  2D99               	goto	l1792
  2677  058D                     l1790:	
  2678                           
  2679                           ;main.c: 224:         i++;
  2680  058D  3001               	movlw	1
  2681  058E  07A2               	addwf	verificacionEntrada@i,f
  2682  058F  1803               	skipnc
  2683  0590  0AA3               	incf	verificacionEntrada@i+1,f
  2684  0591  3000               	movlw	0
  2685  0592  07A3               	addwf	verificacionEntrada@i+1,f
  2686                           
  2687                           ;main.c: 225:         ret++;
  2688  0593  3001               	movlw	1
  2689  0594  07A0               	addwf	verificacionEntrada@ret,f
  2690  0595  1803               	skipnc
  2691  0596  0AA1               	incf	verificacionEntrada@ret+1,f
  2692  0597  3000               	movlw	0
  2693  0598  07A1               	addwf	verificacionEntrada@ret+1,f
  2694  0599                     l1792:	
  2695                           
  2696                           ;main.c: 223:     while(((codigoEntrada[i] <= '9') && (codigoEntrada[i] >= '0')) || codi
      +                          goEntrada[i] == '='){
  2697  0599  0822               	movf	verificacionEntrada@i,w
  2698  059A  3E62               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2699  059B  0084               	movwf	4
  2700  059C  303A               	movlw	58
  2701  059D  1383               	bcf	3,7	;select IRP bank0
  2702  059E  0200               	subwf	0,w
  2703  059F  1803               	skipnc
  2704  05A0  2DA2               	goto	u1721
  2705  05A1  2DA3               	goto	u1720
  2706  05A2                     u1721:	
  2707  05A2  2DAC               	goto	l1796
  2708  05A3                     u1720:	
  2709  05A3                     l1794:	
  2710  05A3  0822               	movf	verificacionEntrada@i,w
  2711  05A4  3E62               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2712  05A5  0084               	movwf	4
  2713  05A6  3030               	movlw	48
  2714  05A7  0200               	subwf	0,w
  2715  05A8  1803               	skipnc
  2716  05A9  2DAB               	goto	u1731
  2717  05AA  2DAC               	goto	u1730
  2718  05AB                     u1731:	
  2719  05AB  2D8D               	goto	l1790
  2720  05AC                     u1730:	
  2721  05AC                     l1796:	
  2722  05AC  0822               	movf	verificacionEntrada@i,w
  2723  05AD  3E62               	addlw	(low (_codigoEntrada| 0))& (0+255)
  2724  05AE  0084               	movwf	4
  2725  05AF  303D               	movlw	61
  2726  05B0  0600               	xorwf	0,w
  2727  05B1  1903               	btfsc	3,2
  2728  05B2  2DB4               	goto	u1741
  2729  05B3  2DB5               	goto	u1740
  2730  05B4                     u1741:	
  2731  05B4  2D8D               	goto	l1790
  2732  05B5                     u1740:	
  2733  05B5                     l1798:	
  2734                           
  2735                           ;main.c: 227:     return ret;
  2736  05B5  0821               	movf	verificacionEntrada@ret+1,w
  2737  05B6  00F5               	movwf	?_verificacionEntrada+1
  2738  05B7  0820               	movf	verificacionEntrada@ret,w
  2739  05B8  00F4               	movwf	?_verificacionEntrada
  2740  05B9                     l136:	
  2741  05B9  0008               	return
  2742  05BA                     __end_of_verificacionEntrada:	
  2743                           
  2744                           	psect	text15
  2745  0614                     __ptext15:	
  2746 ;; *************** function _accionesDeshacer *****************
  2747 ;; Defined at:
  2748 ;;		line 154 in file "main.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    4
  2769 ;; This function calls:
  2770 ;;		_eliminarProd
  2771 ;;		_mostrarDigitos
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           
  2778                           ;psect for function _accionesDeshacer
  2779  0614                     _accionesDeshacer:	
  2780  0614                     l2112:	
  2781                           ;incstack = 0
  2782                           ; Regs used in _accionesDeshacer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2783                           
  2784                           
  2785                           ;main.c: 155:     if (cuenta != auxCuenta){
  2786  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0616  085E               	movf	_auxCuenta+1,w
  2789  0617  0660               	xorwf	_cuenta+1,w
  2790  0618  1D03               	skipz
  2791  0619  2E1C               	goto	u2275
  2792  061A  085D               	movf	_auxCuenta,w
  2793  061B  065F               	xorwf	_cuenta,w
  2794  061C                     u2275:	
  2795  061C  1903               	skipnz
  2796  061D  2E1F               	goto	u2271
  2797  061E  2E20               	goto	u2270
  2798  061F                     u2271:	
  2799  061F  2E38               	goto	l113
  2800  0620                     u2270:	
  2801  0620                     l2114:	
  2802                           
  2803                           ;main.c: 156:         cuenta = auxCuenta;
  2804  0620  085E               	movf	_auxCuenta+1,w
  2805  0621  00E0               	movwf	_cuenta+1
  2806  0622  085D               	movf	_auxCuenta,w
  2807  0623  00DF               	movwf	_cuenta
  2808  0624                     l2116:	
  2809                           
  2810                           ;main.c: 158:         eliminarProd(productoIngresado);
  2811  0624  085A               	movf	_productoIngresado+1,w
  2812  0625  00AD               	movwf	eliminarProd@tp+1
  2813  0626  0859               	movf	_productoIngresado,w
  2814  0627  00AC               	movwf	eliminarProd@tp
  2815  0628  120A  118A  22FB  120A  118A  	fcall	_eliminarProd
  2816  062D                     l2118:	
  2817                           
  2818                           ;main.c: 159:         mostrarDigitos(cuenta);
  2819  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2820  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2821  062F  0860               	movf	_cuenta+1,w
  2822  0630  00AC               	movwf	mostrarDigitos@num+1
  2823  0631  085F               	movf	_cuenta,w
  2824  0632  00AB               	movwf	mostrarDigitos@num
  2825  0633  120A  118A  21CE  120A  118A  	fcall	_mostrarDigitos
  2826  0638                     l113:	
  2827  0638  0008               	return
  2828  0639                     __end_of_accionesDeshacer:	
  2829                           
  2830                           	psect	text16
  2831  02FB                     __ptext16:	
  2832 ;; *************** function _eliminarProd *****************
  2833 ;; Defined at:
  2834 ;;		line 96 in file "main.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  tp              2   12[BANK0 ] short 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  i               2   17[BANK0 ] short 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2848 ;;      Params:         0       2       0       0       0
  2849 ;;      Locals:         0       2       0       0       0
  2850 ;;      Temps:          0       3       0       0       0
  2851 ;;      Totals:         0       7       0       0       0
  2852 ;;Total ram usage:        7 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    3
  2855 ;; This function calls:
  2856 ;;		_pow
  2857 ;; This function is called by:
  2858 ;;		_accionesDeshacer
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _eliminarProd
  2864  02FB                     _eliminarProd:	
  2865  02FB                     l1998:	
  2866                           ;incstack = 0
  2867                           ; Regs used in _eliminarProd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2868                           
  2869                           
  2870                           ;main.c: 97:         for(short int i = 12; i>=0; i--) {
  2871  02FB  300C               	movlw	12
  2872  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2873  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2874  02FE  00B1               	movwf	eliminarProd@i
  2875  02FF  3000               	movlw	0
  2876  0300  00B2               	movwf	eliminarProd@i+1
  2877  0301                     l2004:	
  2878                           
  2879                           ;main.c: 98:         if( tp >= 8*i) {
  2880  0301  0832               	movf	eliminarProd@i+1,w
  2881  0302  00AF               	movwf	??_eliminarProd+1
  2882  0303  0831               	movf	eliminarProd@i,w
  2883  0304  00AE               	movwf	??_eliminarProd
  2884  0305  1003               	clrc
  2885  0306  0DAE               	rlf	??_eliminarProd,f
  2886  0307  0DAF               	rlf	??_eliminarProd+1,f
  2887  0308  1003               	clrc
  2888  0309  0DAE               	rlf	??_eliminarProd,f
  2889  030A  0DAF               	rlf	??_eliminarProd+1,f
  2890  030B  1003               	clrc
  2891  030C  0DAE               	rlf	??_eliminarProd,f
  2892  030D  0DAF               	rlf	??_eliminarProd+1,f
  2893  030E  082D               	movf	eliminarProd@tp+1,w
  2894  030F  3A80               	xorlw	128
  2895  0310  00B0               	movwf	??_eliminarProd+2
  2896  0311  082F               	movf	??_eliminarProd+1,w
  2897  0312  3A80               	xorlw	128
  2898  0313  0230               	subwf	??_eliminarProd+2,w
  2899  0314  1D03               	skipz
  2900  0315  2B18               	goto	u2175
  2901  0316  082E               	movf	??_eliminarProd,w
  2902  0317  022C               	subwf	eliminarProd@tp,w
  2903  0318                     u2175:	
  2904  0318  1C03               	skipc
  2905  0319  2B1B               	goto	u2171
  2906  031A  2B1C               	goto	u2170
  2907  031B                     u2171:	
  2908  031B  2B50               	goto	l2012
  2909  031C                     u2170:	
  2910  031C                     l2006:	
  2911                           
  2912                           ;main.c: 100:             tp = tp - 8*i;
  2913  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2914  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2915  031E  0832               	movf	eliminarProd@i+1,w
  2916  031F  00AF               	movwf	??_eliminarProd+1
  2917  0320  0831               	movf	eliminarProd@i,w
  2918  0321  00AE               	movwf	??_eliminarProd
  2919  0322  1003               	clrc
  2920  0323  0DAE               	rlf	??_eliminarProd,f
  2921  0324  0DAF               	rlf	??_eliminarProd+1,f
  2922  0325  1003               	clrc
  2923  0326  0DAE               	rlf	??_eliminarProd,f
  2924  0327  0DAF               	rlf	??_eliminarProd+1,f
  2925  0328  1003               	clrc
  2926  0329  0DAE               	rlf	??_eliminarProd,f
  2927  032A  0DAF               	rlf	??_eliminarProd+1,f
  2928  032B  082E               	movf	??_eliminarProd,w
  2929  032C  022C               	subwf	eliminarProd@tp,w
  2930  032D  00AC               	movwf	eliminarProd@tp
  2931  032E  082F               	movf	??_eliminarProd+1,w
  2932  032F  1C03               	skipc
  2933  0330  0A2F               	incf	??_eliminarProd+1,w
  2934  0331  022D               	subwf	eliminarProd@tp+1,w
  2935  0332  00AD               	movwf	eliminarProd@tp+1
  2936  0333                     l2008:	
  2937                           
  2938                           ;main.c: 101:             prodIngresados[i] = prodIngresados[i] ^ ((unsigned int)pow(2,t
      +                          p));
  2939  0333  0831               	movf	eliminarProd@i,w
  2940  0334  3E48               	addlw	(low (_prodIngresados| 0))& (0+255)
  2941  0335  0084               	movwf	4
  2942  0336  3002               	movlw	2
  2943  0337  00A4               	movwf	pow@numero
  2944  0338  3000               	movlw	0
  2945  0339  00A5               	movwf	pow@numero+1
  2946  033A  082D               	movf	eliminarProd@tp+1,w
  2947  033B  00A7               	movwf	pow@potencia+1
  2948  033C  082C               	movf	eliminarProd@tp,w
  2949  033D  00A6               	movwf	pow@potencia
  2950  033E  120A  118A  254A  120A  118A  	fcall	_pow
  2951  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0345  0824               	movf	?_pow,w
  2954  0346  1383               	bcf	3,7	;select IRP bank0
  2955  0347  0600               	xorwf	0,w
  2956  0348  00AE               	movwf	??_eliminarProd
  2957  0349  0831               	movf	eliminarProd@i,w
  2958  034A  3E48               	addlw	(low (_prodIngresados| 0))& (0+255)
  2959  034B  0084               	movwf	4
  2960  034C  082E               	movf	??_eliminarProd,w
  2961  034D  0080               	movwf	0
  2962  034E                     l2010:	
  2963                           
  2964                           ;main.c: 102:             i = 0;
  2965  034E  01B1               	clrf	eliminarProd@i
  2966  034F  01B2               	clrf	eliminarProd@i+1
  2967  0350                     l2012:	
  2968                           
  2969                           ;main.c: 105:     }
  2970  0350  30FF               	movlw	255
  2971  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0353  07B1               	addwf	eliminarProd@i,f
  2974  0354  1803               	skipnc
  2975  0355  0AB2               	incf	eliminarProd@i+1,f
  2976  0356  30FF               	movlw	255
  2977  0357  07B2               	addwf	eliminarProd@i+1,f
  2978  0358                     l2014:	
  2979  0358  1FB2               	btfss	eliminarProd@i+1,7
  2980  0359  2B5B               	goto	u2181
  2981  035A  2B5C               	goto	u2180
  2982  035B                     u2181:	
  2983  035B  2B01               	goto	l2004
  2984  035C                     u2180:	
  2985  035C                     l93:	
  2986  035C  0008               	return
  2987  035D                     __end_of_eliminarProd:	
  2988                           
  2989                           	psect	text17
  2990  054A                     __ptext17:	
  2991 ;; *************** function _pow *****************
  2992 ;; Defined at:
  2993 ;;		line 52 in file "main.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  numero          2    4[BANK0 ] unsigned int 
  2996 ;;  potencia        2    6[BANK0 ] unsigned int 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  i               2    8[BANK0 ] int 
  2999 ;;  resultado       2   10[BANK0 ] unsigned int 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  2    4[BANK0 ] unsigned int 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3009 ;;      Params:         0       4       0       0       0
  3010 ;;      Locals:         0       4       0       0       0
  3011 ;;      Temps:          0       0       0       0       0
  3012 ;;      Totals:         0       8       0       0       0
  3013 ;;Total ram usage:        8 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    2
  3016 ;; This function calls:
  3017 ;;		___wmul
  3018 ;; This function is called by:
  3019 ;;		_ingresoProd
  3020 ;;		_verificarProd
  3021 ;;		_eliminarProd
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _pow
  3027  054A                     _pow:	
  3028  054A                     l1744:	
  3029                           ;incstack = 0
  3030                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  3031                           
  3032                           
  3033                           ;main.c: 53:     unsigned int resultado = 0;
  3034  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3035  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3036  054C  01AA               	clrf	pow@resultado
  3037  054D  01AB               	clrf	pow@resultado+1
  3038                           
  3039                           ;main.c: 55:     for (int i = 0; i <= potencia; i++){
  3040  054E  01A8               	clrf	pow@i
  3041  054F  01A9               	clrf	pow@i+1
  3042  0550  2D75               	goto	l1754
  3043  0551                     l1746:	
  3044                           
  3045                           ;main.c: 56:         if (i == 0){
  3046  0551  0828               	movf	pow@i,w
  3047  0552  0429               	iorwf	pow@i+1,w
  3048  0553  1D03               	btfss	3,2
  3049  0554  2D56               	goto	u1671
  3050  0555  2D57               	goto	u1670
  3051  0556                     u1671:	
  3052  0556  2D5C               	goto	l1750
  3053  0557                     u1670:	
  3054  0557                     l1748:	
  3055                           
  3056                           ;main.c: 57:         resultado = 1;
  3057  0557  3001               	movlw	1
  3058  0558  00AA               	movwf	pow@resultado
  3059  0559  3000               	movlw	0
  3060  055A  00AB               	movwf	pow@resultado+1
  3061                           
  3062                           ;main.c: 58:         }
  3063  055B  2D6F               	goto	l1752
  3064  055C                     l1750:	
  3065                           
  3066                           ;main.c: 60:             resultado = resultado * numero;
  3067  055C  082B               	movf	pow@resultado+1,w
  3068  055D  00A1               	movwf	___wmul@multiplier+1
  3069  055E  082A               	movf	pow@resultado,w
  3070  055F  00A0               	movwf	___wmul@multiplier
  3071  0560  0825               	movf	pow@numero+1,w
  3072  0561  00A3               	movwf	___wmul@multiplicand+1
  3073  0562  0824               	movf	pow@numero,w
  3074  0563  00A2               	movwf	___wmul@multiplicand
  3075  0564  120A  118A  25ED  120A  118A  	fcall	___wmul
  3076  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3077  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3078  056B  0821               	movf	?___wmul+1,w
  3079  056C  00AB               	movwf	pow@resultado+1
  3080  056D  0820               	movf	?___wmul,w
  3081  056E  00AA               	movwf	pow@resultado
  3082  056F                     l1752:	
  3083                           
  3084                           ;main.c: 62:     }
  3085  056F  3001               	movlw	1
  3086  0570  07A8               	addwf	pow@i,f
  3087  0571  1803               	skipnc
  3088  0572  0AA9               	incf	pow@i+1,f
  3089  0573  3000               	movlw	0
  3090  0574  07A9               	addwf	pow@i+1,f
  3091  0575                     l1754:	
  3092  0575  0829               	movf	pow@i+1,w
  3093  0576  0227               	subwf	pow@potencia+1,w
  3094  0577  1D03               	skipz
  3095  0578  2D7B               	goto	u1685
  3096  0579  0828               	movf	pow@i,w
  3097  057A  0226               	subwf	pow@potencia,w
  3098  057B                     u1685:	
  3099  057B  1803               	skipnc
  3100  057C  2D7E               	goto	u1681
  3101  057D  2D7F               	goto	u1680
  3102  057E                     u1681:	
  3103  057E  2D51               	goto	l1746
  3104  057F                     u1680:	
  3105  057F                     l1756:	
  3106                           
  3107                           ;main.c: 63:     return resultado;
  3108  057F  082B               	movf	pow@resultado+1,w
  3109  0580  00A5               	movwf	?_pow+1
  3110  0581  082A               	movf	pow@resultado,w
  3111  0582  00A4               	movwf	?_pow
  3112  0583                     l74:	
  3113  0583  0008               	return
  3114  0584                     __end_of_pow:	
  3115                           
  3116                           	psect	text18
  3117  05ED                     __ptext18:	
  3118 ;; *************** function ___wmul *****************
  3119 ;; Defined at:
  3120 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3123 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  product         2    4[COMMON] unsigned int 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  2    0[BANK0 ] unsigned int 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       4       0       0       0
  3136 ;;      Locals:         2       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0
  3138 ;;      Totals:         2       4       0       0       0
  3139 ;;Total ram usage:        6 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_pow
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function ___wmul
  3151  05ED                     ___wmul:	
  3152  05ED                     l1730:	
  3153                           ;incstack = 0
  3154                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3155                           
  3156  05ED  01F4               	clrf	___wmul@product
  3157  05EE  01F5               	clrf	___wmul@product+1
  3158  05EF                     l1732:	
  3159  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3160  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3161  05F1  1C20               	btfss	___wmul@multiplier,0
  3162  05F2  2DF4               	goto	u1631
  3163  05F3  2DF5               	goto	u1630
  3164  05F4                     u1631:	
  3165  05F4  2DFB               	goto	l292
  3166  05F5                     u1630:	
  3167  05F5                     l1734:	
  3168  05F5  0822               	movf	___wmul@multiplicand,w
  3169  05F6  07F4               	addwf	___wmul@product,f
  3170  05F7  1803               	skipnc
  3171  05F8  0AF5               	incf	___wmul@product+1,f
  3172  05F9  0823               	movf	___wmul@multiplicand+1,w
  3173  05FA  07F5               	addwf	___wmul@product+1,f
  3174  05FB                     l292:	
  3175  05FB  3001               	movlw	1
  3176  05FC                     u1645:	
  3177  05FC  1003               	clrc
  3178  05FD  0DA2               	rlf	___wmul@multiplicand,f
  3179  05FE  0DA3               	rlf	___wmul@multiplicand+1,f
  3180  05FF  3EFF               	addlw	-1
  3181  0600  1D03               	skipz
  3182  0601  2DFC               	goto	u1645
  3183  0602                     l1736:	
  3184  0602  3001               	movlw	1
  3185  0603                     u1655:	
  3186  0603  1003               	clrc
  3187  0604  0CA1               	rrf	___wmul@multiplier+1,f
  3188  0605  0CA0               	rrf	___wmul@multiplier,f
  3189  0606  3EFF               	addlw	-1
  3190  0607  1D03               	skipz
  3191  0608  2E03               	goto	u1655
  3192  0609                     l1738:	
  3193  0609  0820               	movf	___wmul@multiplier,w
  3194  060A  0421               	iorwf	___wmul@multiplier+1,w
  3195  060B  1D03               	btfss	3,2
  3196  060C  2E0E               	goto	u1661
  3197  060D  2E0F               	goto	u1660
  3198  060E                     u1661:	
  3199  060E  2DEF               	goto	l1732
  3200  060F                     u1660:	
  3201  060F                     l1740:	
  3202  060F  0875               	movf	___wmul@product+1,w
  3203  0610  00A1               	movwf	?___wmul+1
  3204  0611  0874               	movf	___wmul@product,w
  3205  0612  00A0               	movwf	?___wmul
  3206  0613                     l294:	
  3207  0613  0008               	return
  3208  0614                     __end_of___wmul:	
  3209                           
  3210                           	psect	text19
  3211  04D1                     __ptext19:	
  3212 ;; *************** function _accionesAceptar *****************
  3213 ;; Defined at:
  3214 ;;		line 141 in file "main.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  i               2   16[BANK0 ] short 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         0       2       0       0       0
  3230 ;;      Temps:          0       1       0       0       0
  3231 ;;      Totals:         0       3       0       0       0
  3232 ;;Total ram usage:        3 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    3
  3235 ;; This function calls:
  3236 ;;		_bailenLeds
  3237 ;;		_mostrarDigitos
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _accionesAceptar
  3245  04D1                     _accionesAceptar:	
  3246  04D1                     l2088:	
  3247                           ;incstack = 0
  3248                           ; Regs used in _accionesAceptar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3249                           
  3250                           
  3251                           ;main.c: 143:     ventasLote++;
  3252  04D1  3001               	movlw	1
  3253  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3254  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3255  04D4  00AF               	movwf	??_accionesAceptar
  3256  04D5  082F               	movf	??_accionesAceptar,w
  3257  04D6  07E1               	addwf	_ventasLote,f
  3258  04D7                     l2090:	
  3259                           
  3260                           ;main.c: 144:     montosLote+=cuenta;
  3261  04D7  085F               	movf	_cuenta,w
  3262  04D8  07D5               	addwf	_montosLote,f
  3263  04D9  1803               	skipnc
  3264  04DA  0AD6               	incf	_montosLote+1,f
  3265  04DB  0860               	movf	_cuenta+1,w
  3266  04DC  07D6               	addwf	_montosLote+1,f
  3267  04DD                     l2092:	
  3268                           
  3269                           ;main.c: 145:     cuenta = 0;
  3270  04DD  01DF               	clrf	_cuenta
  3271  04DE  01E0               	clrf	_cuenta+1
  3272  04DF                     l2094:	
  3273                           
  3274                           ;main.c: 146:     auxCuenta = 0;
  3275  04DF  01DD               	clrf	_auxCuenta
  3276  04E0  01DE               	clrf	_auxCuenta+1
  3277  04E1                     l2096:	
  3278                           
  3279                           ;main.c: 147:     for(short int i = 0; i < 13; i++){
  3280  04E1  01B0               	clrf	accionesAceptar@i
  3281  04E2  01B1               	clrf	accionesAceptar@i+1
  3282  04E3                     l2102:	
  3283                           
  3284                           ;main.c: 148:         prodIngresados[i] = 0;
  3285  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3286  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3287  04E5  0830               	movf	accionesAceptar@i,w
  3288  04E6  3E48               	addlw	(low (_prodIngresados| 0))& (0+255)
  3289  04E7  0084               	movwf	4
  3290  04E8  1383               	bcf	3,7	;select IRP bank0
  3291  04E9  0180               	clrf	0
  3292  04EA                     l2104:	
  3293                           
  3294                           ;main.c: 149:     }
  3295  04EA  3001               	movlw	1
  3296  04EB  07B0               	addwf	accionesAceptar@i,f
  3297  04EC  1803               	skipnc
  3298  04ED  0AB1               	incf	accionesAceptar@i+1,f
  3299  04EE  3000               	movlw	0
  3300  04EF  07B1               	addwf	accionesAceptar@i+1,f
  3301  04F0                     l2106:	
  3302  04F0  0831               	movf	accionesAceptar@i+1,w
  3303  04F1  3A80               	xorlw	128
  3304  04F2  00FF               	movwf	btemp+1
  3305  04F3  3080               	movlw	128
  3306  04F4  027F               	subwf	btemp+1,w
  3307  04F5  1D03               	skipz
  3308  04F6  2CF9               	goto	u2265
  3309  04F7  300D               	movlw	13
  3310  04F8  0230               	subwf	accionesAceptar@i,w
  3311  04F9                     u2265:	
  3312  04F9  1C03               	skipc
  3313  04FA  2CFC               	goto	u2261
  3314  04FB  2CFD               	goto	u2260
  3315  04FC                     u2261:	
  3316  04FC  2CE3               	goto	l2102
  3317  04FD                     u2260:	
  3318  04FD                     l2108:	
  3319                           
  3320                           ;main.c: 150:     mostrarDigitos(cuenta);
  3321  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3322  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3323  04FF  0860               	movf	_cuenta+1,w
  3324  0500  00AC               	movwf	mostrarDigitos@num+1
  3325  0501  085F               	movf	_cuenta,w
  3326  0502  00AB               	movwf	mostrarDigitos@num
  3327  0503  120A  118A  21CE  120A  118A  	fcall	_mostrarDigitos
  3328  0508                     l2110:	
  3329                           
  3330                           ;main.c: 151:     bailenLeds();
  3331  0508  120A  118A  244D  120A  118A  	fcall	_bailenLeds
  3332  050D                     l109:	
  3333  050D  0008               	return
  3334  050E                     __end_of_accionesAceptar:	
  3335                           
  3336                           	psect	text20
  3337  01CE                     __ptext20:	
  3338 ;; *************** function _mostrarDigitos *****************
  3339 ;; Defined at:
  3340 ;;		line 112 in file "main.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  num             2   11[BANK0 ] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       2       0       0       0
  3355 ;;      Locals:         0       2       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         0       4       0       0       0
  3358 ;;Total ram usage:        4 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    2
  3361 ;; This function calls:
  3362 ;;		___lwdiv
  3363 ;;		___lwmod
  3364 ;; This function is called by:
  3365 ;;		_accionesAceptar
  3366 ;;		_accionesDeshacer
  3367 ;;		_lecturaEtiqueta
  3368 ;;		_main
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           
  3373                           ;psect for function _mostrarDigitos
  3374  01CE                     _mostrarDigitos:	
  3375  01CE                     l1912:	
  3376                           ;incstack = 0
  3377                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3378                           
  3379                           
  3380                           ;main.c: 114:     PORTB = BMS[num/100];
  3381  01CE  3064               	movlw	100
  3382  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3383  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3384  01D1  00A4               	movwf	___lwdiv@divisor
  3385  01D2  3000               	movlw	0
  3386  01D3  00A5               	movwf	___lwdiv@divisor+1
  3387  01D4  082C               	movf	mostrarDigitos@num+1,w
  3388  01D5  00A7               	movwf	___lwdiv@dividend+1
  3389  01D6  082B               	movf	mostrarDigitos@num,w
  3390  01D7  00A6               	movwf	___lwdiv@dividend
  3391  01D8  120A  118A  2407  120A  118A  	fcall	___lwdiv
  3392  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3393  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  3394  01DF  0824               	movf	?___lwdiv,w
  3395  01E0  3E01               	addlw	low ((_BMS-__stringbase)| (0+32768))
  3396  01E1  0084               	movwf	4
  3397  01E2  120A  118A  26A3  120A  118A  	fcall	stringdir
  3398  01E7  0086               	movwf	6	;volatile
  3399  01E8                     l1914:	
  3400                           
  3401                           ;main.c: 115:     PORTB = PORTB | ((num%100)/10);
  3402  01E8  300A               	movlw	10
  3403  01E9  00A4               	movwf	___lwdiv@divisor
  3404  01EA  3000               	movlw	0
  3405  01EB  00A5               	movwf	___lwdiv@divisor+1
  3406  01EC  082C               	movf	mostrarDigitos@num+1,w
  3407  01ED  00A3               	movwf	___lwmod@dividend+1
  3408  01EE  082B               	movf	mostrarDigitos@num,w
  3409  01EF  00A2               	movwf	___lwmod@dividend
  3410  01F0  3064               	movlw	100
  3411  01F1  00A0               	movwf	___lwmod@divisor
  3412  01F2  3000               	movlw	0
  3413  01F3  00A1               	movwf	___lwmod@divisor+1
  3414  01F4  120A  118A  250E  120A  118A  	fcall	___lwmod
  3415  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3416  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3417  01FB  0821               	movf	?___lwmod+1,w
  3418  01FC  00A7               	movwf	___lwdiv@dividend+1
  3419  01FD  0820               	movf	?___lwmod,w
  3420  01FE  00A6               	movwf	___lwdiv@dividend
  3421  01FF  120A  118A  2407  120A  118A  	fcall	___lwdiv
  3422  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0206  0824               	movf	?___lwdiv,w
  3425  0207  0406               	iorwf	6,w
  3426  0208  0086               	movwf	6	;volatile
  3427  0209                     l1916:	
  3428                           
  3429                           ;main.c: 116:     PORTD = BMS[(num%100)%10];
  3430  0209  082C               	movf	mostrarDigitos@num+1,w
  3431  020A  00A3               	movwf	___lwmod@dividend+1
  3432  020B  082B               	movf	mostrarDigitos@num,w
  3433  020C  00A2               	movwf	___lwmod@dividend
  3434  020D  3064               	movlw	100
  3435  020E  00A0               	movwf	___lwmod@divisor
  3436  020F  3000               	movlw	0
  3437  0210  00A1               	movwf	___lwmod@divisor+1
  3438  0211  120A  118A  250E  120A  118A  	fcall	___lwmod
  3439  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0218  0821               	movf	?___lwmod+1,w
  3442  0219  00AE               	movwf	_mostrarDigitos$777+1
  3443  021A  0820               	movf	?___lwmod,w
  3444  021B  00AD               	movwf	_mostrarDigitos$777
  3445                           
  3446                           ;main.c: 116:     PORTD = BMS[(num%100)%10];
  3447  021C  300A               	movlw	10
  3448  021D  00A0               	movwf	___lwmod@divisor
  3449  021E  3000               	movlw	0
  3450  021F  00A1               	movwf	___lwmod@divisor+1
  3451  0220  082E               	movf	_mostrarDigitos$777+1,w
  3452  0221  00A3               	movwf	___lwmod@dividend+1
  3453  0222  082D               	movf	_mostrarDigitos$777,w
  3454  0223  00A2               	movwf	___lwmod@dividend
  3455  0224  120A  118A  250E  120A  118A  	fcall	___lwmod
  3456  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3457  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3458  022B  0820               	movf	?___lwmod,w
  3459  022C  3E01               	addlw	low ((_BMS-__stringbase)| (0+32768))
  3460  022D  0084               	movwf	4
  3461  022E  120A  118A  26A3  120A  118A  	fcall	stringdir
  3462  0233  0088               	movwf	8	;volatile
  3463  0234                     l96:	
  3464  0234  0008               	return
  3465  0235                     __end_of_mostrarDigitos:	
  3466                           
  3467                           	psect	text21
  3468  050E                     __ptext21:	
  3469 ;; *************** function ___lwmod *****************
  3470 ;; Defined at:
  3471 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  divisor         2    0[BANK0 ] unsigned int 
  3474 ;;  dividend        2    2[BANK0 ] unsigned int 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  counter         1    5[COMMON] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  2    0[BANK0 ] unsigned int 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3486 ;;      Params:         0       4       0       0       0
  3487 ;;      Locals:         1       0       0       0       0
  3488 ;;      Temps:          1       0       0       0       0
  3489 ;;      Totals:         2       4       0       0       0
  3490 ;;Total ram usage:        6 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_mostrarDigitos
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function ___lwmod
  3502  050E                     ___lwmod:	
  3503  050E                     l1872:	
  3504                           ;incstack = 0
  3505                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3506                           
  3507  050E  1283               	bcf	3,5	;RP0=0, select bank0
  3508  050F  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0510  0820               	movf	___lwmod@divisor,w
  3510  0511  0421               	iorwf	___lwmod@divisor+1,w
  3511  0512  1903               	btfsc	3,2
  3512  0513  2D15               	goto	u1921
  3513  0514  2D16               	goto	u1920
  3514  0515                     u1921:	
  3515  0515  2D45               	goto	l1890
  3516  0516                     u1920:	
  3517  0516                     l1874:	
  3518  0516  01F5               	clrf	___lwmod@counter
  3519  0517  0AF5               	incf	___lwmod@counter,f
  3520  0518  2D24               	goto	l1880
  3521  0519                     l1876:	
  3522  0519  3001               	movlw	1
  3523  051A                     u1935:	
  3524  051A  1003               	clrc
  3525  051B  0DA0               	rlf	___lwmod@divisor,f
  3526  051C  0DA1               	rlf	___lwmod@divisor+1,f
  3527  051D  3EFF               	addlw	-1
  3528  051E  1D03               	skipz
  3529  051F  2D1A               	goto	u1935
  3530  0520                     l1878:	
  3531  0520  3001               	movlw	1
  3532  0521  00F4               	movwf	??___lwmod
  3533  0522  0874               	movf	??___lwmod,w
  3534  0523  07F5               	addwf	___lwmod@counter,f
  3535  0524                     l1880:	
  3536  0524  1FA1               	btfss	___lwmod@divisor+1,7
  3537  0525  2D27               	goto	u1941
  3538  0526  2D28               	goto	u1940
  3539  0527                     u1941:	
  3540  0527  2D19               	goto	l1876
  3541  0528                     u1940:	
  3542  0528                     l1882:	
  3543  0528  0821               	movf	___lwmod@divisor+1,w
  3544  0529  0223               	subwf	___lwmod@dividend+1,w
  3545  052A  1D03               	skipz
  3546  052B  2D2E               	goto	u1955
  3547  052C  0820               	movf	___lwmod@divisor,w
  3548  052D  0222               	subwf	___lwmod@dividend,w
  3549  052E                     u1955:	
  3550  052E  1C03               	skipc
  3551  052F  2D31               	goto	u1951
  3552  0530  2D32               	goto	u1950
  3553  0531                     u1951:	
  3554  0531  2D38               	goto	l1886
  3555  0532                     u1950:	
  3556  0532                     l1884:	
  3557  0532  0820               	movf	___lwmod@divisor,w
  3558  0533  02A2               	subwf	___lwmod@dividend,f
  3559  0534  0821               	movf	___lwmod@divisor+1,w
  3560  0535  1C03               	skipc
  3561  0536  03A3               	decf	___lwmod@dividend+1,f
  3562  0537  02A3               	subwf	___lwmod@dividend+1,f
  3563  0538                     l1886:	
  3564  0538  3001               	movlw	1
  3565  0539                     u1965:	
  3566  0539  1003               	clrc
  3567  053A  0CA1               	rrf	___lwmod@divisor+1,f
  3568  053B  0CA0               	rrf	___lwmod@divisor,f
  3569  053C  3EFF               	addlw	-1
  3570  053D  1D03               	skipz
  3571  053E  2D39               	goto	u1965
  3572  053F                     l1888:	
  3573  053F  3001               	movlw	1
  3574  0540  02F5               	subwf	___lwmod@counter,f
  3575  0541  1D03               	btfss	3,2
  3576  0542  2D44               	goto	u1971
  3577  0543  2D45               	goto	u1970
  3578  0544                     u1971:	
  3579  0544  2D28               	goto	l1882
  3580  0545                     u1970:	
  3581  0545                     l1890:	
  3582  0545  0823               	movf	___lwmod@dividend+1,w
  3583  0546  00A1               	movwf	?___lwmod+1
  3584  0547  0822               	movf	___lwmod@dividend,w
  3585  0548  00A0               	movwf	?___lwmod
  3586  0549                     l574:	
  3587  0549  0008               	return
  3588  054A                     __end_of___lwmod:	
  3589                           
  3590                           	psect	text22
  3591  0407                     __ptext22:	
  3592 ;; *************** function ___lwdiv *****************
  3593 ;; Defined at:
  3594 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  divisor         2    4[BANK0 ] unsigned int 
  3597 ;;  dividend        2    6[BANK0 ] unsigned int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  quotient        2    9[BANK0 ] unsigned int 
  3600 ;;  counter         1    8[BANK0 ] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2    4[BANK0 ] unsigned int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3610 ;;      Params:         0       4       0       0       0
  3611 ;;      Locals:         0       3       0       0       0
  3612 ;;      Temps:          1       0       0       0       0
  3613 ;;      Totals:         1       7       0       0       0
  3614 ;;Total ram usage:        8 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    1
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_mostrarDigitos
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function ___lwdiv
  3626  0407                     ___lwdiv:	
  3627  0407                     l1846:	
  3628                           ;incstack = 0
  3629                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3630                           
  3631  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0408  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0409  01A9               	clrf	___lwdiv@quotient
  3634  040A  01AA               	clrf	___lwdiv@quotient+1
  3635  040B                     l1848:	
  3636  040B  0824               	movf	___lwdiv@divisor,w
  3637  040C  0425               	iorwf	___lwdiv@divisor+1,w
  3638  040D  1903               	btfsc	3,2
  3639  040E  2C10               	goto	u1851
  3640  040F  2C11               	goto	u1850
  3641  0410                     u1851:	
  3642  0410  2C48               	goto	l1868
  3643  0411                     u1850:	
  3644  0411                     l1850:	
  3645  0411  01A8               	clrf	___lwdiv@counter
  3646  0412  0AA8               	incf	___lwdiv@counter,f
  3647  0413  2C1F               	goto	l1856
  3648  0414                     l1852:	
  3649  0414  3001               	movlw	1
  3650  0415                     u1865:	
  3651  0415  1003               	clrc
  3652  0416  0DA4               	rlf	___lwdiv@divisor,f
  3653  0417  0DA5               	rlf	___lwdiv@divisor+1,f
  3654  0418  3EFF               	addlw	-1
  3655  0419  1D03               	skipz
  3656  041A  2C15               	goto	u1865
  3657  041B                     l1854:	
  3658  041B  3001               	movlw	1
  3659  041C  00F6               	movwf	??___lwdiv
  3660  041D  0876               	movf	??___lwdiv,w
  3661  041E  07A8               	addwf	___lwdiv@counter,f
  3662  041F                     l1856:	
  3663  041F  1FA5               	btfss	___lwdiv@divisor+1,7
  3664  0420  2C22               	goto	u1871
  3665  0421  2C23               	goto	u1870
  3666  0422                     u1871:	
  3667  0422  2C14               	goto	l1852
  3668  0423                     u1870:	
  3669  0423                     l1858:	
  3670  0423  3001               	movlw	1
  3671  0424                     u1885:	
  3672  0424  1003               	clrc
  3673  0425  0DA9               	rlf	___lwdiv@quotient,f
  3674  0426  0DAA               	rlf	___lwdiv@quotient+1,f
  3675  0427  3EFF               	addlw	-1
  3676  0428  1D03               	skipz
  3677  0429  2C24               	goto	u1885
  3678  042A  0825               	movf	___lwdiv@divisor+1,w
  3679  042B  0227               	subwf	___lwdiv@dividend+1,w
  3680  042C  1D03               	skipz
  3681  042D  2C30               	goto	u1895
  3682  042E  0824               	movf	___lwdiv@divisor,w
  3683  042F  0226               	subwf	___lwdiv@dividend,w
  3684  0430                     u1895:	
  3685  0430  1C03               	skipc
  3686  0431  2C33               	goto	u1891
  3687  0432  2C34               	goto	u1890
  3688  0433                     u1891:	
  3689  0433  2C3B               	goto	l1864
  3690  0434                     u1890:	
  3691  0434                     l1860:	
  3692  0434  0824               	movf	___lwdiv@divisor,w
  3693  0435  02A6               	subwf	___lwdiv@dividend,f
  3694  0436  0825               	movf	___lwdiv@divisor+1,w
  3695  0437  1C03               	skipc
  3696  0438  03A7               	decf	___lwdiv@dividend+1,f
  3697  0439  02A7               	subwf	___lwdiv@dividend+1,f
  3698  043A                     l1862:	
  3699  043A  1429               	bsf	___lwdiv@quotient,0
  3700  043B                     l1864:	
  3701  043B  3001               	movlw	1
  3702  043C                     u1905:	
  3703  043C  1003               	clrc
  3704  043D  0CA5               	rrf	___lwdiv@divisor+1,f
  3705  043E  0CA4               	rrf	___lwdiv@divisor,f
  3706  043F  3EFF               	addlw	-1
  3707  0440  1D03               	skipz
  3708  0441  2C3C               	goto	u1905
  3709  0442                     l1866:	
  3710  0442  3001               	movlw	1
  3711  0443  02A8               	subwf	___lwdiv@counter,f
  3712  0444  1D03               	btfss	3,2
  3713  0445  2C47               	goto	u1911
  3714  0446  2C48               	goto	u1910
  3715  0447                     u1911:	
  3716  0447  2C23               	goto	l1858
  3717  0448                     u1910:	
  3718  0448                     l1868:	
  3719  0448  082A               	movf	___lwdiv@quotient+1,w
  3720  0449  00A5               	movwf	?___lwdiv+1
  3721  044A  0829               	movf	___lwdiv@quotient,w
  3722  044B  00A4               	movwf	?___lwdiv
  3723  044C                     l564:	
  3724  044C  0008               	return
  3725  044D                     __end_of___lwdiv:	
  3726                           
  3727                           	psect	text23
  3728  044D                     __ptext23:	
  3729 ;; *************** function _bailenLeds *****************
  3730 ;; Defined at:
  3731 ;;		line 127 in file "main.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  i               2    0[BANK0 ] unsigned short 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3745 ;;      Params:         0       0       0       0       0
  3746 ;;      Locals:         0       2       0       0       0
  3747 ;;      Temps:          3       0       0       0       0
  3748 ;;      Totals:         3       2       0       0       0
  3749 ;;Total ram usage:        5 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    1
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_accionesAceptar
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           
  3760                           ;psect for function _bailenLeds
  3761  044D                     _bailenLeds:	
  3762  044D                     l2016:	
  3763                           ;incstack = 0
  3764                           ; Regs used in _bailenLeds: [wreg+status,2]
  3765                           
  3766                           
  3767                           ;main.c: 129:     unsigned short int i;;main.c: 130:     for (i = 0; i < 3; i++) {
  3768  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3769  044E  1303               	bcf	3,6	;RP1=0, select bank0
  3770  044F  01A0               	clrf	bailenLeds@i
  3771  0450  01A1               	clrf	bailenLeds@i+1
  3772  0451                     l102:	
  3773                           
  3774                           ;main.c: 131:         RA3 = 1;
  3775  0451  1585               	bsf	5,3	;volatile
  3776  0452                     l2022:	
  3777                           
  3778                           ;main.c: 132:         _delay((unsigned long)((200)*(4000000/4000.0)));
  3779  0452  3002               	movlw	2
  3780  0453  00F6               	movwf	??_bailenLeds+2
  3781  0454  3004               	movlw	4
  3782  0455  00F5               	movwf	??_bailenLeds+1
  3783  0456  30BA               	movlw	186
  3784  0457  00F4               	movwf	??_bailenLeds
  3785  0458                     u2417:	
  3786  0458  0BF4               	decfsz	??_bailenLeds,f
  3787  0459  2C58               	goto	u2417
  3788  045A  0BF5               	decfsz	??_bailenLeds+1,f
  3789  045B  2C58               	goto	u2417
  3790  045C  0BF6               	decfsz	??_bailenLeds+2,f
  3791  045D  2C58               	goto	u2417
  3792  045E  0000               	nop
  3793  045F                     l2024:	
  3794                           
  3795                           ;main.c: 133:         RA5 = 1;
  3796  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0461  1685               	bsf	5,5	;volatile
  3799                           
  3800                           ;main.c: 134:         _delay((unsigned long)((200)*(4000000/4000.0)));
  3801  0462  3002               	movlw	2
  3802  0463  00F6               	movwf	??_bailenLeds+2
  3803  0464  3004               	movlw	4
  3804  0465  00F5               	movwf	??_bailenLeds+1
  3805  0466  30BA               	movlw	186
  3806  0467  00F4               	movwf	??_bailenLeds
  3807  0468                     u2427:	
  3808  0468  0BF4               	decfsz	??_bailenLeds,f
  3809  0469  2C68               	goto	u2427
  3810  046A  0BF5               	decfsz	??_bailenLeds+1,f
  3811  046B  2C68               	goto	u2427
  3812  046C  0BF6               	decfsz	??_bailenLeds+2,f
  3813  046D  2C68               	goto	u2427
  3814  046E  0000               	nop
  3815  046F                     l2026:	
  3816                           
  3817                           ;main.c: 135:         RA3 = 0;
  3818  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0471  1185               	bcf	5,3	;volatile
  3821                           
  3822                           ;main.c: 136:         _delay((unsigned long)((200)*(4000000/4000.0)));
  3823  0472  3002               	movlw	2
  3824  0473  00F6               	movwf	??_bailenLeds+2
  3825  0474  3004               	movlw	4
  3826  0475  00F5               	movwf	??_bailenLeds+1
  3827  0476  30BA               	movlw	186
  3828  0477  00F4               	movwf	??_bailenLeds
  3829  0478                     u2437:	
  3830  0478  0BF4               	decfsz	??_bailenLeds,f
  3831  0479  2C78               	goto	u2437
  3832  047A  0BF5               	decfsz	??_bailenLeds+1,f
  3833  047B  2C78               	goto	u2437
  3834  047C  0BF6               	decfsz	??_bailenLeds+2,f
  3835  047D  2C78               	goto	u2437
  3836  047E  0000               	nop
  3837  047F                     l2028:	
  3838                           
  3839                           ;main.c: 137:         RA5 = 0;
  3840  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3842  0481  1285               	bcf	5,5	;volatile
  3843                           
  3844                           ;main.c: 138:     }
  3845  0482  3001               	movlw	1
  3846  0483  07A0               	addwf	bailenLeds@i,f
  3847  0484  1803               	skipnc
  3848  0485  0AA1               	incf	bailenLeds@i+1,f
  3849  0486  3000               	movlw	0
  3850  0487  07A1               	addwf	bailenLeds@i+1,f
  3851  0488  3000               	movlw	0
  3852  0489  0221               	subwf	bailenLeds@i+1,w
  3853  048A  3003               	movlw	3
  3854  048B  1903               	skipnz
  3855  048C  0220               	subwf	bailenLeds@i,w
  3856  048D  1C03               	skipc
  3857  048E  2C90               	goto	u2191
  3858  048F  2C91               	goto	u2190
  3859  0490                     u2191:	
  3860  0490  2C51               	goto	l102
  3861  0491                     u2190:	
  3862  0491                     l104:	
  3863  0491  0008               	return
  3864  0492                     __end_of_bailenLeds:	
  3865                           
  3866                           	psect	text24
  3867  05BA                     __ptext24:	
  3868 ;; *************** function _int_usart *****************
  3869 ;; Defined at:
  3870 ;;		line 318 in file "main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0
  3886 ;;      Temps:          4       0       0       0       0
  3887 ;;      Totals:         4       0       0       0       0
  3888 ;;Total ram usage:        4 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		Interrupt level 1
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function _int_usart
  3899  05BA                     _int_usart:	
  3900  05BA                     i1l1714:	
  3901                           
  3902                           ;main.c: 320:     if(RCIF == 1) {
  3903  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3904  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3905  05BC  1E8C               	btfss	12,5	;volatile
  3906  05BD  2DBF               	goto	u159_21
  3907  05BE  2DC0               	goto	u159_20
  3908  05BF                     u159_21:	
  3909  05BF  2DE4               	goto	i1l193
  3910  05C0                     u159_20:	
  3911  05C0                     i1l1716:	
  3912                           
  3913                           ;main.c: 321:         if(RCREG != 0x0D && RCREG != 0x0A && serial < 9) {
  3914  05C0  300D               	movlw	13
  3915  05C1  061A               	xorwf	26,w	;volatile
  3916  05C2  1903               	btfsc	3,2
  3917  05C3  2DC5               	goto	u160_21
  3918  05C4  2DC6               	goto	u160_20
  3919  05C5                     u160_21:	
  3920  05C5  2DDF               	goto	i1l1726
  3921  05C6                     u160_20:	
  3922  05C6                     i1l1718:	
  3923  05C6  300A               	movlw	10
  3924  05C7  061A               	xorwf	26,w	;volatile
  3925  05C8  1903               	btfsc	3,2
  3926  05C9  2DCB               	goto	u161_21
  3927  05CA  2DCC               	goto	u161_20
  3928  05CB                     u161_21:	
  3929  05CB  2DDF               	goto	i1l1726
  3930  05CC                     u161_20:	
  3931  05CC                     i1l1720:	
  3932  05CC  3009               	movlw	9
  3933  05CD  0278               	subwf	_serial,w
  3934  05CE  1803               	skipnc
  3935  05CF  2DD1               	goto	u162_21
  3936  05D0  2DD2               	goto	u162_20
  3937  05D1                     u162_21:	
  3938  05D1  2DDF               	goto	i1l1726
  3939  05D2                     u162_20:	
  3940  05D2                     i1l1722:	
  3941                           
  3942                           ;main.c: 322:             codigoEntrada[serial] = RCREG;
  3943  05D2  081A               	movf	26,w	;volatile
  3944  05D3  00F0               	movwf	??_int_usart
  3945  05D4  0878               	movf	_serial,w
  3946  05D5  3E62               	addlw	(low (_codigoEntrada| 0))& (0+255)
  3947  05D6  0084               	movwf	4
  3948  05D7  0870               	movf	??_int_usart,w
  3949  05D8  1383               	bcf	3,7	;select IRP bank0
  3950  05D9  0080               	movwf	0
  3951  05DA                     i1l1724:	
  3952                           
  3953                           ;main.c: 323:             serial++;
  3954  05DA  3001               	movlw	1
  3955  05DB  00F0               	movwf	??_int_usart
  3956  05DC  0870               	movf	??_int_usart,w
  3957  05DD  07F8               	addwf	_serial,f
  3958                           
  3959                           ;main.c: 324:         }
  3960  05DE  2DE4               	goto	i1l193
  3961  05DF                     i1l1726:	
  3962                           
  3963                           ;main.c: 326:             serial = 0;
  3964  05DF  01F8               	clrf	_serial
  3965  05E0                     i1l1728:	
  3966                           
  3967                           ;main.c: 327:             huboInt = 1;
  3968  05E0  3001               	movlw	1
  3969  05E1  00DB               	movwf	_huboInt
  3970  05E2  3000               	movlw	0
  3971  05E3  00DC               	movwf	_huboInt+1
  3972  05E4                     i1l193:	
  3973  05E4  0873               	movf	??_int_usart+3,w
  3974  05E5  008A               	movwf	10
  3975  05E6  0872               	movf	??_int_usart+2,w
  3976  05E7  0084               	movwf	4
  3977  05E8  0E71               	swapf	(??_int_usart+1)^(0+4294967168),w
  3978  05E9  0083               	movwf	3
  3979  05EA  0EFE               	swapf	btemp,f
  3980  05EB  0E7E               	swapf	btemp,w
  3981  05EC  0009               	retfie
  3982  05ED                     __end_of_int_usart:	
  3983  007E                     btemp	set	126	;btemp
  3984  007E                     wtemp0	set	126
  3985                           
  3986                           	psect	intentry
  3987  0004                     __pintentry:	
  3988                           ;incstack = 0
  3989                           ; Regs used in _int_usart: [wreg-fsr0h+status,2+status,0]
  3990                           
  3991  0004                     interrupt_function:	
  3992  007E                     saved_w	set	btemp
  3993  0004  00FE               	movwf	btemp
  3994  0005  0E03               	swapf	3,w
  3995  0006  00F1               	movwf	??_int_usart+1
  3996  0007  0804               	movf	4,w
  3997  0008  00F2               	movwf	??_int_usart+2
  3998  0009  080A               	movf	10,w
  3999  000A  00F3               	movwf	??_int_usart+3
  4000  000B  120A  118A  2DBA   	ljmp	_int_usart


Data Sizes:
    Strings     0
    Constant    10
    Data        1
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     40      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lecturaEtiqueta->___awmod
    _EEPROM_search->_eeprom_read
    _lecturaMas->_verificacionEntrada
    _pow->___wmul
    _accionesAceptar->_bailenLeds
    _mostrarDigitos->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _int_usart in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_accionesPuertoSerial
    _accionesPuertoSerial->_lecturaEtiqueta
    _lecturaEtiqueta->_EEPROM_search
    _ingresoProd->_pow
    _EEPROM_search->_verificarProd
    _verificarProd->_pow
    _lecturaMas->_verificacionEntrada
    _accionesDeshacer->_eliminarProd
    _eliminarProd->_pow
    _pow->___wmul
    _accionesAceptar->_mostrarDigitos
    _mostrarDigitos->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _int_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_usart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14109
                    _accionesAceptar
                   _accionesDeshacer
               _accionesPuertoSerial
                      _iniciar_usart
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (1) _iniciar_usart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _accionesPuertoSerial                                 3     3      0    6924
                                             37 BANK0      3     3      0
                     _lecturaComando
                    _lecturaEtiqueta
 ---------------------------------------------------------------------------------
 (2) _lecturaEtiqueta                                      8     8      0    6788
                                             29 BANK0      8     8      0
                      _EEPROM_search
                            ___awmod
                             ___bmul
                        _ingresoProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (3) _ingresoProd                                          7     5      2    1438
                                             12 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _EEPROM_search                                        9     7      2    2320
                                             20 BANK0      9     7      2
                            ___awdiv
                        _eeprom_read
                      _verificarProd
 ---------------------------------------------------------------------------------
 (4) _verificarProd                                        8     6      2    1444
                                             12 BANK0      8     6      2
                            ___awdiv (ARG)
                                _pow
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lecturaComando                                       0     0      0     136
                         _lecturaMas
                       _lecturaMenos
 ---------------------------------------------------------------------------------
 (3) _lecturaMenos                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lecturaMas                                           0     0      0     136
                _verificacionEntrada
 ---------------------------------------------------------------------------------
 (4) _verificacionEntrada                                  6     4      2     136
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _accionesDeshacer                                     0     0      0    3298
                       _eliminarProd
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (2) _eliminarProd                                         7     5      2    1438
                                             12 BANK0      7     5      2
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  8     4      4    1057
                                              4 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _accionesAceptar                                      3     3      0    2027
                                             15 BANK0      3     3      0
                         _bailenLeds
                     _mostrarDigitos
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       4     2      2    1860
                                             11 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     772
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              6 COMMON     1     1      0
                                              4 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _bailenLeds                                           5     5      0      68
                                              4 COMMON     3     3      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_usart                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _accionesAceptar
     _bailenLeds
     _mostrarDigitos
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   _accionesDeshacer
     _eliminarProd
       _pow
         ___wmul
     _mostrarDigitos
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   _accionesPuertoSerial
     _lecturaComando
       _lecturaMas
         _verificacionEntrada
       _lecturaMenos
     _lecturaEtiqueta
       _EEPROM_search
         ___awdiv
         _eeprom_read
         _verificarProd
           ___awdiv (ARG)
           _pow (ARG)
             ___wmul
       ___awmod
       ___bmul
       _ingresoProd
         _pow
           ___wmul
       _mostrarDigitos
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
   _iniciar_usart
   _mostrarDigitos
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _int_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      56      12        0.0%
ABS                  0      0      56       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 26 16:44:20 2020

                ?_eliminarProd 002C                              pc 0002                 ___bmul@product 0020  
             ?_lecturaEtiqueta 0070                    __CFG_CP$OFF 0000                             l80 02FA  
                           l74 0583                             l93 035C                             l87 0298  
                           l96 0234                             l99 06C1                   ___awdiv@sign 0025  
                           fsr 0004            ___wmul@multiplicand 0022                 ?_verificarProd 002C  
                          l102 0451                            l104 0491                            l113 0638  
                          l116 015E                            l109 050D                            l125 00E9  
                          l150 06CB                            l119 0164                            l136 05B9  
                          l128 00FB                            l145 0659                            l164 04BE  
                          l172 03E7                            l157 0674                            l173 03DD  
                          l318 068B                            l166 04D0                            l176 0403  
                          l178 03EB                            l292 05FB                            l445 01CD  
                          l294 0613                            l286 068D                            l288 06A2  
                          l458 03B7                            l564 044C                            l574 0549  
                          _BMS 06A9                            _RA1 0029                            _RA2 002A  
                          _RA3 002B                            _RA5 002D                   __CFG_CPD$OFF 0000  
                          u910 0694                            u911 0693                            _pow 054A  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0076  
                 __CFG_FOSC$XT 0000                   __CFG_LVP$OFF 0000               ??_mostrarDigitos 0077  
                         l2010 034E                           l2012 0350                           l2004 0301  
                         l2022 0452                           l2110 0508                           l2102 04E3  
                         l2014 0358                           l2006 031C                           l2030 0026  
                         l2024 045F                           l2016 044D                           l2104 04EA  
                         l2008 0333                           l2112 0614                           l1320 0694  
                         l2040 0045                           l2120 0492                           l2026 046F  
                         l2106 04F0                           l2114 0620                           l2050 00A2  
                         l2042 0052                           l2130 04B2                           l2122 049A  
                         l2028 047F                           l2108 04FD                           l2116 0624  
                         l2060 00C5                           l2052 00AA                           l2044 0074  
                         l2036 002C                           l2132 04B8                           l2124 04A0  
                         l2140 03BE                           l2118 062D                           l2070 00EA  
                         l2062 00CB                           l2054 00AC                           l2046 0085  
                         l2038 003F                           l2134 04BF                           l2126 04A6  
                         l2150 03CC                           l2142 03BF                           l2072 00F8  
                         l2064 00D4                           l2056 00B8                           l2048 0091  
                         l2136 04CD                           l2128 04AC                           l2152 03CE  
                         l2144 03C2                           l2090 04D7                           l2082 0663  
                         l2066 00D7                           l2058 00C1                           l2162 03EF  
                         l2154 03D7                           l2146 03C3                           l2138 03B8  
                         l2092 04DD                           l2084 0669                           l2068 00E5  
                         l2164 03F5                           l2148 03C8                           l2094 04DF  
                         l2086 066F                           l2078 065A                           l1630 06B3  
                         l2166 03FB                           l2158 03E1                           l2096 04E1  
                         l2088 04D1                           l2168 03FD                           l1730 05ED  
                         l1810 0173                           l1802 0165                           l1740 060F  
                         l1732 05EF                           l1484 06C2                           l1820 0188  
                         l1812 0177                           l1804 0168                           l1900 029F  
                         l1734 05F5                           l1750 055C                           l1486 06CA  
                         l1830 01AB                           l1822 018B                           l1814 017C  
                         l1806 016C                           l1910 02F6                           l1902 02BA  
                         l1912 01CE                           l1736 0602                           l1752 056F  
                         l1744 054A                           l1840 01C4                           l1832 01B1  
                         l1824 0192                           l1816 0180                           l1808 0171  
                         l1760 0235                           l1920 0101                           l1904 02D1  
                         l1850 0411                           l1914 01E8                           l1738 0609  
                         l1746 0551                           l1754 0575                           l1842 01C9  
                         l1834 01B2                           l1826 0196                           l1818 0182  
                         l1770 0257                           l1762 0238                           l1930 0158  
                         l1922 0107                           l1906 02EC                           l1860 0434  
                         l1852 0414                           l1916 0209                           l1756 057F  
                         l1748 0557                           l1836 01B9                           l1828 019A  
                         l1780 0293                           l1772 026E                           l1924 0125  
                         l1908 02EE                           l1862 043A                           l1854 041B  
                         l1846 0407                           l1790 058D                           l1942 064F  
                         l1934 0639                           l1838 01BF                           l1782 0297  
                         l1774 0287                           l1926 0129                           l1918 00FF  
                         l1950 067D                           l1864 043B                           l1856 041F  
                         l1848 040B                           l1880 0524                           l1872 050E  
                         l1792 0599                           l1944 0657                           l1776 0289  
                         l1768 023C                           l1928 0136                           l1960 035D  
                         l1952 0681                           l1866 0442                           l1858 0423  
                         l1882 0528                           l1874 0516                           l1890 0545  
                         l1794 05A3                           l1786 0584                           l1938 0642  
                         l1778 028B                           l1970 036F                           l1962 035E  
                         l1954 0683                           l1946 0678                           l1868 0448  
                         l1884 0532                           l1876 0519                           l1796 05AC  
                         l1788 058A                           l1980 0388                           l1972 0374  
                         l1964 0364                           l1956 068A                           l1948 0679  
                         l1886 0538                           l1878 0520                           l1798 05B5  
                         l1982 038C                           l1974 037A                           l1990 03A9  
                         l1966 0369                           l1894 0299                           l1888 053F  
                         l1992 03AE                           l1984 0396                           l1976 037D  
                         l1968 036B                           l1994 03B3                           l1986 039C  
                         l1978 0384                           l1988 03A3                           l1998 02FB  
                         ?_pow 0024                           u2000 0129                           u2001 0128  
                         u2010 0136                           u2011 0135                           u2020 0158  
                         u2100 037A                           u2021 0157                           u2101 0379  
                         u2030 0641                           u2031 0640                           u2015 0132  
                         u2040 064E                           u2120 038C                           u2200 0052  
                         u2041 064D                           u2121 038B                           u2201 0051  
                         u2050 0657                           u2130 0396                           u2210 0074  
                         u2051 0656                           u2131 0395                           u2115 037E  
                         u2211 0073                           u1260 06CA                           u2060 067D  
                         u2220 00A2                           u2300 04A6                           u1261 06C9  
                         u2061 067C                           u2221 00A1                           u2205 004E  
                         u2301 04A5                           u2150 03A9                           u2070 068A  
                         u2230 00AA                           u2310 04B2                           u2151 03A8  
                         u2135 0392                           u2071 0689                           u2231 00A9  
                         u2215 0070                           u2311 04B1                           u2240 0662  
                         u2160 03AE                           u2080 0364                           u2320 04B8  
                         u2241 0661                           u2161 03AD                           u2145 039D  
                         u2081 0363                           u2321 04B7                           u2170 031C  
                         u2250 0669                           u2090 036F                           u2330 03DD  
                         u2171 031B                           u2251 0668                           u2091 036E  
                         u2331 03DC                           u2260 04FD                           u2180 035C  
                         u1700 0287                           u2340 03E1                           u2261 04FC  
                         u2181 035B                           u1701 0286                           u2341 03E0  
                         u2190 0491                           u1630 05F5                           u2270 0620  
                         u1710 0297                           u2350 03EB                           u2191 0490  
                         u1631 05F4                           u2175 0318                           u2271 061F  
                         u1711 0296                           u2407 00F2                           u2351 03EA  
                         u1720 05A3                           u2280 049A                           u2360 03EF  
                         u2417 0458                           u2265 04F9                           u1721 05A2  
                         u2281 0499                           u2361 03EE                           u1730 05AC  
                         u1810 01AB                           u2290 04A0                           u2370 03FB  
                         u2427 0468                           u2275 061C                           u1731 05AB  
                         u1811 01AA                           u2291 049F                           u2371 03FA  
                         u1660 060F                           u1740 05B5                           u2437 0478  
                         u1661 060E                           u1645 05FC                           u1741 05B4  
                         u1805 019B                           u1910 0448                           u1670 0557  
                         u1830 01BF                           u1750 016C                           u1911 0447  
                         u1655 0603                           u1671 0556                           u1831 01BE  
                         u1815 01A7                           u1751 016B                           u1920 0516  
                         u1680 057F                           u1840 01C4                           u1760 0177  
                         u1905 043C                           u1921 0515                           u1681 057E  
                         u1841 01C3                           u1825 01B3                           u1761 0176  
                         u1850 0411                           u1770 0188                           u1690 0257  
                         u1851 0410                           u1771 0187                           u1691 0256  
                         u2387 04C7                           u1940 0528                           u1941 0527  
                         u1685 057B                           u2397 00DF                           u1870 0423  
                         u1950 0532                           u1790 019A                           u1871 0422  
                         u1951 0531                           u1935 051A                           u1791 0199  
                         u1695 0253                           u1865 0415                           u1785 018C  
                         u1890 0434                           u1970 0545                           u1891 0433  
                         u1971 0544                           u1955 052E                           u1980 02BA  
                         u1885 0424                           u1965 0539                           u1981 02B9  
                         u1990 02FA                           u1895 0430                           u1991 02F9  
                         u1985 02B6                           _RCIE 0465                           _RCIF 0065  
                 __CFG_WRT$OFF 0000                           _main 03B8                _accionesAceptar 04D1  
                         btemp 007E                  __CFG_BOREN$ON 0000                           pow@i 0028  
                         start 000E              ___bmul@multiplier 0021                 ??_eliminarProd 002E  
                        ??_pow 0076  __size_of_accionesPuertoSerial 003F                          ?_main 0070  
              __end_of___awdiv 01CE                          _EEADR 010D                  __CFG_WDTE$OFF 0000  
              __end_of___awmod 03B8                ___awdiv@divisor 0020                   ?_ingresoProd 002C  
              __end_of___lwdiv 044D                          i1l193 05E4                __end_of___lwmod 054A  
              ___awdiv@counter 0024                          _RCREG 001A                          _RCSTA 0018  
                        _SPBRG 0099                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TXSTA 0098         __size_of_iniciar_usart 000F  
                        pclath 000A               _accionesDeshacer 0614                          status 0003  
                        wtemp0 007E                  ?_lecturaMenos 0070                __initialization 0011  
                 __end_of_main 0407                ??_verificarProd 002E                EEPROM_search@tp 003C  
                       ??_main 0077          __end_of_EEPROM_search 0165                  eliminarProd@i 0031  
      __end_of_accionesAceptar 050E                         _ADCON1 009F                         _EEDATA 010C  
                       _EECON1 018C               ___awdiv@dividend 0022        __size_of_lecturaComando 001B  
                       i1l1720 05CC                         i1l1722 05D2                         i1l1714 05BA  
                       i1l1724 05DA                         i1l1716 05C0                         i1l1718 05C6  
                       i1l1726 05DF                         i1l1728 05E0                         u160_20 05C6  
                       u160_21 05C5                         u161_20 05CC                         _INTCON 000B  
                       u161_21 05CB                         u162_20 05D2                         u162_21 05D1  
                       u159_20 05C0                         u159_21 05BF                 ??_lecturaMenos 0074  
             lecturaEtiqueta@i 0040                  _iniciar_usart 06B3                 __CFG_PWRTE$OFF 0000  
         __size_of_eeprom_read 0017                         ___bmul 0675                         ___wmul 05ED  
                    ??___awdiv 0074                      ??___awmod 0074                      ??___lwdiv 0076  
                    ??___lwmod 0074                         _cuenta 005F            _verificacionEntrada 0584  
             ___awdiv@quotient 0026                ___awmod@divisor 0020                         _serial 0078  
              ___awmod@counter 0075                   __pdataCOMMON 0079                         saved_w 007E  
         __end_of_eliminarProd 035D           ?_verificacionEntrada 0074        __end_of__initialization 0022  
              eeprom_read@addr 0075                 ?_iniciar_usart 0070            ___bmul@multiplicand 0074  
               __pcstackCOMMON 0070                     _bailenLeds 044D           __size_of_ingresoProd 0062  
             ?_accionesAceptar 0070          ??_verificacionEntrada 0076                     __pbssBANK0 0048  
           __size_of_int_usart 0033                     __pmaintext 03B8                        ?___bmul 0074  
               eliminarProd@tp 002C                        ?___wmul 0020                     __pintentry 0004  
          EEPROM_search@precio 003A       __end_of_accionesDeshacer 0639           __end_of_lecturaMenos 06CC  
     __size_of_lecturaEtiqueta 00D6                 verificarProd@i 0032                 _lecturaComando 065A  
             accionesAceptar@i 0030                     __stringtab 06A3   __end_of_accionesPuertoSerial 04D1  
              ??_iniciar_usart 0074              lecturaEtiqueta@tp 0042                     _lecturaMas 0639  
              __size_of___bmul 0017                        ___awdiv 0165                        ___awmod 035D  
              __size_of___wmul 0027                        ___lwdiv 0407                        ___lwmod 050E  
                      __ptext1 06B3                        __ptext2 0492                        __ptext3 0026  
                      __ptext4 0299                    pow@potencia 0026                        __ptext5 0675  
                      __ptext6 035D                        __ptext7 00FC                        __ptext8 0235  
                      __ptext9 068C                    ?_bailenLeds 0070                        _huboInt 005B  
        __size_of_eliminarProd 0062                   __size_of_pow 003A           verificacionEntrada@i 0022  
             ___awmod@dividend 0022                   ingresoProd@i 0031         __end_of_lecturaComando 0675  
                      _nroLote 0079                        _numProd 0057              __end_of_int_usart 05ED  
                      clrloop0 06CD           end_of_initialization 0022        __size_of_mostrarDigitos 0067  
                   _montosLote 0055                   _eliminarProd 02FB              _productoIngresado 0059  
             verificarProd@ret 0031          __end_of_verificarProd 0299                     _ventasLote 0061  
              ?_lecturaComando 0070              ??_lecturaEtiqueta 003D                  ??_eeprom_read 0074  
          __size_of_bailenLeds 0045                    ?_lecturaMas 0070         __size_of_EEPROM_search 0069  
               __end_of___bmul 068C          __size_of_lecturaMenos 000A                 __end_of___wmul 0614  
                __pidataCOMMON 06D4           _accionesPuertoSerial 0492            start_initialization 0011  
                  __end_of_BMS 06B3                    __end_of_pow 0584                   _lecturaMenos 06C2  
               _prodIngresados 0048                       ??___bmul 0075             _mostrarDigitos$777 002D  
                     ??___wmul 0074            __end_of_eeprom_read 06A3          ?_accionesPuertoSerial 0070  
                ??_ingresoProd 002E              ?_accionesDeshacer 0070                    __pbssCOMMON 0077  
  __end_of_verificacionEntrada 05BA                      ___latbits 0002             ??_accionesDeshacer 0077  
                __pcstackBANK0 0020                  _EEPROM_search 00FC            __size_of_lecturaMas 0021  
     __size_of_accionesAceptar 003D                 _mostrarDigitos 01CE               ___lwdiv@dividend 0026  
                     ?___awdiv 0020                       ?___awmod 0020                       ?___lwdiv 0024  
                     ?___lwmod 0020                      _auxCuenta 005D                      __pstrings 06A3  
                 ??_bailenLeds 0074                 ?_EEPROM_search 0034               ___lwdiv@quotient 0029  
          __end_of_ingresoProd 02FB                      _modoDebug 0077                      _int_usart 05BA  
       verificacionEntrada@ret 0020              interrupt_function 0004                 ___wmul@product 0074  
       __end_of_mostrarDigitos 0235          __end_of_iniciar_usart 06C2                      clear_ram0 06CC  
                  _eeprom_read 068C                    bailenLeds@i 0020             __end_of_bailenLeds 0492  
              verificarProd@tp 002C         ??_accionesPuertoSerial 0045               ??_lecturaComando 0076  
                  __stringbase 06A8              ___wmul@multiplier 0020                _lecturaEtiqueta 0026  
           lecturaEtiqueta@Aux 0043                  _codigoEntrada 0062                     ?_int_usart 0070  
              ?_mostrarDigitos 002B                     _EECON1bits 018C                   ??_lecturaMas 0076  
            ??_accionesAceptar 002F               __size_of___awdiv 0069               __size_of___awmod 005B  
             __size_of___lwdiv 0046               __size_of___lwmod 003C             __end_of__stringtab 06A9  
              ??_EEPROM_search 0036                    _ingresoProd 0299                ___lwdiv@divisor 0024  
                 pow@resultado 002A                ___lwdiv@counter 0028                       __ptext10 0165  
                     __ptext11 065A                       __ptext20 01CE                       __ptext12 06C2  
                     __ptext21 050E                       __ptext13 0639                       __ptext22 0407  
                     __ptext14 0584                       __ptext23 044D                       __ptext15 0614  
                     __ptext24 05BA                       __ptext16 02FB                       __ptext17 054A  
                     __ptext18 05ED                       __ptext19 04D1             __end_of_lecturaMas 065A  
                __size_of_main 004F                      pow@numero 0024         __size_of_verificarProd 0064  
                ingresoProd@tp 002C        __end_of_lecturaEtiqueta 00FC                       intlevel1 0000  
                  ??_int_usart 0070               ___lwmod@dividend 0022      __size_of_accionesDeshacer 0025  
                    stringcode 06A3              mostrarDigitos@num 002B                  _verificarProd 0235  
              ___lwmod@divisor 0020                ___lwmod@counter 0075                       stringdir 06A3  
                     stringtab 06A3   __size_of_verificacionEntrada 0036                   ?_eeprom_read 0070  
